var UDOC = {};
UDOC.B = (function () {
  var h = new Uint8Array(4),
    F = h.buffer,
    d = new Int16Array(F),
    t = new Uint16Array(F),
    f = new Int32Array(F),
    N = new Uint32Array(F),
    L = new Float32Array(F);
  return {
    readShort: function (P, j) {
      h[0] = P[j];
      h[1] = P[j + 1];
      return d[0];
    },
    readUshort: function (P, j) {
      h[0] = P[j];
      h[1] = P[j + 1];
      return t[0];
    },
    readInt: function (P, j) {
      h[0] = P[j];
      h[1] = P[j + 1];
      h[2] = P[j + 2];
      h[3] = P[j + 3];
      return f[0];
    },
    readUint: function (P, j) {
      h[0] = P[j];
      h[1] = P[j + 1];
      h[2] = P[j + 2];
      h[3] = P[j + 3];
      return N[0];
    },
    readUintBE: function (P, j) {
      h[3] = P[j];
      h[2] = P[j + 1];
      h[1] = P[j + 2];
      h[0] = P[j + 3];
      return N[0];
    },
    readFloat: function (P, j) {
      h[0] = P[j];
      h[1] = P[j + 1];
      h[2] = P[j + 2];
      h[3] = P[j + 3];
      return L[0];
    },
    readASCII: function (P, j, v) {
      var l = "";
      for (var u = 0; u < v; u++) l += String.fromCharCode(P[j + u]);
      return l;
    },
  };
})();
UDOC.G = {
  concat: function (h, F) {
    for (var d = 0; d < F.cmds.length; d++) h.cmds.push(F.cmds[d]);
    for (var d = 0; d < F.crds.length; d++) h.crds.push(F.crds[d]);
  },
  getBB: function (h) {
    var F = 1e99,
      d = 1e99,
      t = -F,
      f = -d;
    for (var N = 0; N < h.length; N += 2) {
      var L = h[N],
        P = h[N + 1];
      if (L < F) F = L;
      if (L > t) t = L;
      if (P < d) d = P;
      if (P > f) f = P;
    }
    return [F, d, t, f];
  },
  rectToPath: function (h) {
    return {
      cmds: ["M", "L", "L", "L", "Z"],
      crds: [h[0], h[1], h[2], h[1], h[2], h[3], h[0], h[3]],
    };
  },
  insideBox: function (h, F) {
    return F[0] <= h[0] && F[1] <= h[1] && h[2] <= F[2] && h[3] <= F[3];
  },
  isBox: function (h, F) {
    var d = function (s, E) {
        for (var g = 0; g < 8; g += 2) {
          var $ = !0;
          for (var n = 0; n < 8; n++)
            if (Math.abs(E[n] - s[(n + g) & 7]) >= 2) {
              $ = !1;
              break;
            }
          if ($) return !0;
        }
        return !1;
      },
      N = !1;
    if (h.cmds.length > 10) return !1;
    var t = h.cmds.join(""),
      f = h.crds;
    if (
      (t == "MLLLZ" && f.length == 8) ||
      ((t == "MLLLLZ" || t == "MLLLL") && f.length == 10)
    ) {
      if (f.length == 10) f = f.slice(0, 8);
      if (F == null) {
        F = [f[0], f[1], f[0], f[1]];
        for (var L = 0; L < f.length; L += 2) {
          var P = f[L],
            v = f[L + 1];
          if (P < F[0]) F[0] = P;
          if (v < F[1]) F[1] = v;
          if (F[2] < P) F[2] = P;
          if (F[3] < v) F[3] = v;
        }
      }
      var l = F[0],
        p = F[1],
        u = F[2],
        w = F[3];
      if (!N) N = d(f, [l, p, u, p, u, w, l, w]);
      if (!N) N = d(f, [l, w, u, w, u, p, l, p]);
    }
    return N;
  },
  boxArea: function (h) {
    var F = h[2] - h[0],
      d = h[3] - h[1];
    return F * d;
  },
  newPath: function (h) {
    h.pth = { cmds: [], crds: [] };
  },
  moveTo: function (h, F, d) {
    var t = UDOC.M.multPoint(h.ctm, [F, d]),
      f = h.pth,
      N = f.cmds.length;
    if (N != 0 && f.cmds[N - 1] == "M") {
      f.cmds.pop();
      f.crds.pop();
      f.crds.pop();
    }
    h.pth.cmds.push("M");
    h.pth.crds.push(t[0], t[1]);
    h.cpos = t;
  },
  lineTo: function (h, F, d) {
    var t = UDOC.M.multPoint(h.ctm, [F, d]);
    if (h.cpos[0] == t[0] && h.cpos[1] == t[1]) return;
    h.pth.cmds.push("L");
    h.pth.crds.push(t[0], t[1]);
    h.cpos = t;
  },
  curveTo: function (h, F, d, t, f, N, L) {
    var P;
    if (h.pth.cmds.length == 0) UDOC.G.moveTo(h, 0, 0);
    P = UDOC.M.multPoint(h.ctm, [F, d]);
    F = P[0];
    d = P[1];
    P = UDOC.M.multPoint(h.ctm, [t, f]);
    t = P[0];
    f = P[1];
    P = UDOC.M.multPoint(h.ctm, [N, L]);
    N = P[0];
    L = P[1];
    h.cpos = P;
    h.pth.cmds.push("C");
    h.pth.crds.push(F, d, t, f, N, L);
  },
  quadCurveTo: function (h, F, d, t, f) {
    var N;
    if (h.pth.cmds.length == 0) UDOC.G.moveTo(h, 0, 0);
    N = UDOC.M.multPoint(h.ctm, [F, d]);
    F = N[0];
    d = N[1];
    N = UDOC.M.multPoint(h.ctm, [t, f]);
    t = N[0];
    f = N[1];
    h.cpos = N;
    h.pth.cmds.push("Q");
    h.pth.crds.push(F, d, t, f);
  },
  closePath: function (h) {
    h.pth.cmds.push("Z");
  },
  arc: function (h, F, d, t, f, N, L) {
    if (L) while (N > f) N -= 2 * Math.PI;
    else while (N < f) N += 2 * Math.PI;
    var P = (N - f) / 4,
      j = Math.cos(P / 2),
      v = -Math.sin(P / 2),
      l = (4 - j) / 3,
      p = v == 0 ? v : ((1 - j) * (3 - j)) / (3 * v),
      u = l,
      w = -p,
      s = j,
      i = -v,
      E = [j, v],
      $ = [l, p],
      n = [u, w],
      I = [s, i],
      a = { cmds: [h.pth.cmds.length == 0 ? "M" : "L"], crds: [j, v] },
      o = [1, 0, 0, 1, 0, 0];
    for (var Q = 0; Q < 4; Q++) {
      $ = UDOC.M.multPoint(o, $);
      n = UDOC.M.multPoint(o, n);
      I = UDOC.M.multPoint(o, I);
      a.crds.push($[0], $[1], n[0], n[1], I[0], I[1]);
      a.cmds.push("C");
      if (Q == 0) UDOC.M.rotate(o, -P);
    }
    var U = [t, 0, 0, t, F, d];
    UDOC.M.rotate(o, -f + P / 2);
    UDOC.M.concat(o, U);
    UDOC.M.multArray(o, a.crds);
    UDOC.M.multArray(h.ctm, a.crds);
    UDOC.G.concat(h.pth, a);
    var d = a.crds.pop();
    F = a.crds.pop();
    h.cpos = [F, d];
  },
  drawRect: function (h, F, d, t, f) {
    UDOC.G.moveTo(h, F, d);
    UDOC.G.lineTo(h, F + t, d);
    UDOC.G.lineTo(h, F + t, d + f);
    UDOC.G.lineTo(h, F, d + f);
    UDOC.G.closePath(h);
  },
  toPoly: function (h) {
    if (h.cmds[0] != "M" || h.cmds[h.cmds.length - 1] != "Z") return null;
    for (var F = 1; F < h.cmds.length - 1; F++)
      if (h.cmds[F] != "L") return null;
    var d = [],
      t = h.crds.length;
    if (h.crds[0] == h.crds[t - 2] && h.crds[1] == h.crds[t - 1]) t -= 2;
    for (var F = 0; F < t; F += 2) d.push([h.crds[F], h.crds[F + 1]]);
    if (UDOC.G.polyArea(h.crds) < 0) d.reverse();
    return d;
  },
  fromPoly: function (h) {
    var F = { cmds: [], crds: [] };
    for (var d = 0; d < h.length; d++) {
      F.crds.push(h[d][0], h[d][1]);
      F.cmds.push(d == 0 ? "M" : "L");
    }
    F.cmds.push("Z");
    return F;
  },
  polyArea: function (h) {
    if (h.length < 6) return 0;
    var F = h.length - 2,
      d = (h[0] - h[F]) * (h[F + 1] + h[1]);
    for (var t = 0; t < F; t += 2)
      d += (h[t + 2] - h[t]) * (h[t + 1] + h[t + 3]);
    return -d * 0.5;
  },
  polyClip: function (h, F) {
    var d,
      t,
      f,
      N,
      L = function (u) {
        return (t[0] - d[0]) * (u[1] - d[1]) > (t[1] - d[1]) * (u[0] - d[0]);
      },
      P = function () {
        var u = [d[0] - t[0], d[1] - t[1]],
          w = [f[0] - N[0], f[1] - N[1]],
          s = d[0] * t[1] - d[1] * t[0],
          i = f[0] * N[1] - f[1] * N[0],
          E = 1 / (u[0] * w[1] - u[1] * w[0]);
        return [(s * w[0] - i * u[0]) * E, (s * w[1] - i * u[1]) * E];
      },
      j = h,
      v,
      l;
    d = F[F.length - 1];
    for (l in F) {
      var t = F[l],
        p = j;
      j = [];
      f = p[p.length - 1];
      for (v in p) {
        var N = p[v];
        if (L(N)) {
          if (!L(f)) {
            j.push(P());
          }
          j.push(N);
        } else if (L(f)) {
          j.push(P());
        }
        f = N;
      }
      d = t;
    }
    return j;
  },
};
UDOC.M = {
  getScale: function (h) {
    return Math.sqrt(Math.abs(h[0] * h[3] - h[1] * h[2]));
  },
  translate: function (h, F, d) {
    UDOC.M.concat(h, [1, 0, 0, 1, F, d]);
  },
  rotate: function (h, F) {
    UDOC.M.concat(h, [
      Math.cos(F),
      -Math.sin(F),
      Math.sin(F),
      Math.cos(F),
      0,
      0,
    ]);
  },
  scale: function (h, F, d) {
    UDOC.M.concat(h, [F, 0, 0, d, 0, 0]);
  },
  concat: function (h, F) {
    var d = h[0],
      t = h[1],
      f = h[2],
      N = h[3],
      L = h[4],
      P = h[5];
    h[0] = d * F[0] + t * F[2];
    h[1] = d * F[1] + t * F[3];
    h[2] = f * F[0] + N * F[2];
    h[3] = f * F[1] + N * F[3];
    h[4] = L * F[0] + P * F[2] + F[4];
    h[5] = L * F[1] + P * F[3] + F[5];
  },
  invert: function (h) {
    var F = h[0],
      d = h[1],
      t = h[2],
      f = h[3],
      N = h[4],
      L = h[5],
      P = F * f - d * t;
    h[0] = f / P;
    h[1] = -d / P;
    h[2] = -t / P;
    h[3] = F / P;
    h[4] = (t * L - f * N) / P;
    h[5] = (d * N - F * L) / P;
  },
  multPoint: function (h, F) {
    var d = F[0],
      t = F[1];
    return [d * h[0] + t * h[2] + h[4], d * h[1] + t * h[3] + h[5]];
  },
  multArray: function (h, F) {
    for (var d = 0; d < F.length; d += 2) {
      var t = F[d],
        f = F[d + 1];
      F[d] = t * h[0] + f * h[2] + h[4];
      F[d + 1] = t * h[1] + f * h[3] + h[5];
    }
  },
};
UDOC.C = {
  srgbGamma: function (h) {
    return h < 0.0031308 ? 12.92 * h : 1.055 * Math.pow(h, 1 / 2.4) - 0.055;
  },
  cmykToRgb: function (h) {
    var F = h[0],
      t = h[1],
      f = h[2],
      N = h[3],
      L =
        255 +
        F *
          (-4.387332384609988 * F +
            54.48615194189176 * t +
            18.82290502165302 * f +
            212.25662451639585 * N +
            -285.2331026137004) +
        t *
          (1.7149763477362134 * t -
            5.6096736904047315 * f +
            -17.873870861415444 * N -
            5.497006427196366) +
        f *
          (-2.5217340131683033 * f -
            21.248923337353073 * N +
            17.5119270841813) +
        N * (-21.86122147463605 * N - 189.48180835922747),
      P =
        255 +
        F *
          (8.841041422036149 * F +
            60.118027045597366 * t +
            6.871425592049007 * f +
            31.159100130055922 * N +
            -79.2970844816548) +
        t *
          (-15.310361306967817 * t +
            17.575251261109482 * f +
            131.35250912493976 * N -
            190.9453302588951) +
        f * (4.444339102852739 * f + 9.8632861493405 * N - 24.86741582555878) +
        N * (-20.737325471181034 * N - 187.80453709719578),
      j =
        255 +
        F *
          (0.8842522430003296 * F +
            8.078677503112928 * t +
            30.89978309703729 * f -
            0.23883238689178934 * N +
            -14.183576799673286) +
        t *
          (10.49593273432072 * t +
            63.02378494754052 * f +
            50.606957656360734 * N -
            112.23884253719248) +
        f *
          (0.03296041114873217 * f +
            115.60384449646641 * N +
            -193.58209356861505) +
        N * (-22.33816807309886 * N - 180.12613974708367);
    return [
      Math.max(0, Math.min(1, L / 255)),
      Math.max(0, Math.min(1, P / 255)),
      Math.max(0, Math.min(1, j / 255)),
    ];
  },
  labToRgb: function (h) {
    var F = 903.3,
      d = 0.008856,
      t = h[0],
      N = h[1],
      L = h[2],
      P = (t + 16) / 116,
      j = P * P * P,
      v = P - L / 200,
      p = v * v * v,
      u = N / 500 + P,
      w = u * u * u,
      s = p > d ? p : (116 * v - 16) / F,
      i = j > d ? j : (116 * P - 16) / F,
      E = w > d ? w : (116 * u - 16) / F,
      g = E * 96.72,
      $ = i * 100,
      n = s * 81.427,
      I = [g / 100, $ / 100, n / 100],
      a = [
        3.1338561, -1.6168667, -0.4906146, -0.9787684, 1.9161415, 0.033454,
        0.0719453, -0.2289914, 1.4052427,
      ],
      o = [
        a[0] * I[0] + a[1] * I[1] + a[2] * I[2],
        a[3] * I[0] + a[4] * I[1] + a[5] * I[2],
        a[6] * I[0] + a[7] * I[1] + a[8] * I[2],
      ];
    for (var S = 0; S < 3; S++)
      o[S] = Math.max(0, Math.min(1, UDOC.C.srgbGamma(o[S])));
    return o;
  },
};
UDOC.getState = function (h) {
  return {
    font: UDOC.getFont(),
    dd: { flat: 1 },
    ca: 1,
    colr: [0, 0, 0],
    space: "/DeviceGray",
    CA: 1,
    COLR: [0, 0, 0],
    sspace: "/DeviceGray",
    bmode: "/Normal",
    SA: !1,
    OPM: 0,
    AIS: !1,
    OP: !1,
    op: !1,
    SMask: "/None",
    lwidth: 1,
    lcap: 0,
    ljoin: 0,
    mlimit: 10,
    SM: 0.1,
    doff: 0,
    dash: [],
    ctm: [1, 0, 0, 1, 0, 0],
    cpos: [0, 0],
    pth: { cmds: [], crds: [] },
    cpth: h ? UDOC.G.rectToPath(h) : null,
    cpstack: [],
  };
};
UDOC.getFont = function () {
  return {
    Tc: 0,
    Tw: 0,
    Th: 100,
    Tl: 0,
    Tf: "Helvetica-Bold",
    Tfs: 1,
    Tmode: 0,
    Trise: 0,
    Tk: 0,
    Tal: 0,
    Tun: 0,
    Tm: [1, 0, 0, 1, 0, 0],
    Tlm: [1, 0, 0, 1, 0, 0],
    Trm: [1, 0, 0, 1, 0, 0],
  };
};
function FromPS() {}
FromPS.Parse = function (h, F) {
  h = new Uint8Array(h);
  var d = 0,
    N = null,
    L = null,
    E = !0;
  while (!(h[d] == 37 && h[d + 1] == 33)) d++;
  var t = FromPS.B.readASCII(h, d, h.length - d),
    f = t.split(/[\n\r]+/);
  for (var P = 0; P < f.length; P++) {
    var j = f[P].trim();
    if (j.charAt(0) == "%") {
      j = j.slice(1);
      while (j.charAt(0) == "%") j = j.slice(1);
      var v = j.split(":");
      if (v[0] == "BoundingBox") {
        N = v[1].trim().split(/[ ]+/).map(parseFloat);
      }
      if (j.indexOf("!PS-Adobe-3.0 EPSF-3.0") != -1) L = j;
      if (j.indexOf("!PS-Adobe-2.0 EPSF-1.2") != -1) L = j;
    }
  }
  if (L == null || N == null) N = [0, 0, 595, 842];
  var l = [],
    p = FromPS._getDictStack([], {}),
    u = [{ typ: "file", val: { buff: h, off: d } }],
    w = [],
    s = FromPS._getEnv(N),
    i = Date.now();
  while (E) E = FromPS.step(l, p, u, w, s, F);
  if (s.pgOpen) F.ShowPage();
  F.Done();
  console.log(Date.now() - i);
};
FromPS._getDictStack = function (h, F) {
  var d =
      "def undef known begin end currentfile currentdict currentpacking setpacking currentoverprint setoverprint currentglobal setglobal gcheck currentsystemparams setsystemparams currentuserparams setuserparams currentpagedevice setpagedevice currentflat currentlinewidth currentdash currentpoint currentscreen setscreen currenthalftone currentblackgeneration currentundercolorremoval currentcolortransfer internaldict dict string readstring readhexstring readline getinterval putinterval token array aload astore length maxlength matrix count mark counttomark cleartomark dictstack countdictstack makepattern makefont scalefont stringwidth setfont currentcolorspace setcolorspace setcolor _setHSB_ currentgray currentrgbcolor currentcmykcolor setlinewidth setstrokeadjust setflat setlinecap setlinejoin setmiterlimit setdash clip eoclip clippath pathbbox newpath stroke fill eofill shfill closepath flattenpath showpage print _drawRect_ moveto lineto curveto arc arcn show ashow xshow yshow xyshow widthshow awidthshow charpath cshow rmoveto rlineto rcurveto translate rotate scale concat concatmatrix invertmatrix currentmatrix defaultmatrix setmatrix limitcheck save restore clipsave cliprestore gsave grestore grestorePDF grestoreall usertime readtime flush flushfile readonly executeonly findresource resourcestatus defineresource undefineresource resourceforall image imagemask colorimage xcheck status cachestatus setcachelimit type if ifelse exec stopped stop dup exch copy roll index anchorsearch pop put get load where store repeat for forall pathforall loop exit bind cvi cvr cvs cvx cvn cvlit add sub mul div idiv bitshift mod exp atan neg abs floor ceiling round truncate sqrt ln sin cos srand rand == transform itransform dtransform idtransform eq ge gt le lt ne and or not filter begincmap endcmap begincodespacerange endcodespacerange beginbfrange endbfrange beginbfchar endbfchar"
        .split(" ")
        .concat(h),
    t = "image colorimage repeat for forall loop".split(" ");
  for (var f = 0; f < t.length; f++) d.push(t[f] + "---");
  FromPS._myOps = FromPS.makeProcs({
    CIDSystemInfo: "/CIDSystemInfo",
    findfont: "/Font findresource",
    definefont: "/Font defineresource",
    undefinefont: "/Font undefineresource",
    selectfont: "exch findfont exch scalefont setfont",
    rectfill: "gsave newpath _drawRect_  fill   grestore",
    rectstroke: "gsave newpath _drawRect_  stroke grestore",
    rectclip: "newpath _drawRect_  clip newpath",
    setgray: "/DeviceGray setcolorspace setcolor",
    setrgbcolor: "/DeviceRGB  setcolorspace setcolor",
    sethsbcolor: "/DeviceRGB  setcolorspace _setHSB_",
    setcmykcolor: "/DeviceCMYK setcolorspace setcolor",
    setpattern: "/Pattern    setcolorspace setcolor",
  });
  for (var N in FromPS._myOps) d.push(N);
  var L = F,
    P = {},
    v = {},
    l = {},
    p = {};
  P.systemdict = { typ: "dict", val: P };
  P.globaldict = { typ: "dict", val: v };
  P.userdict = { typ: "dict", val: l };
  P.statusdict = { typ: "dict", val: p };
  P.GlobalFontDirectory = P.SharedFontDirectory = { typ: "dict", val: {} };
  P.FontDirectory = { typ: "dict", val: {} };
  P.$error = { typ: "dict", val: {} };
  P.errordict = { typ: "dict", val: FromPS.makeProcs({ handleerror: "" }) };
  P.null = { typ: "null", val: null };
  P.true = { typ: "boolean", val: !0 };
  P.false = { typ: "boolean", val: !1 };
  P.product = { typ: "string", val: FromPS.makeStr("Photopea") };
  P.version = { typ: "string", val: [51] };
  P.languagelevel = { typ: "integer", val: 3 };
  for (var f = 0; f < d.length; f++) P[d[f]] = { typ: "operator", val: d[f] };
  for (var u in L) P[u] = L[u];
  return [P, v, l];
};
FromPS._getEnv = function (h) {
  var F = {
      bb: h,
      gst: UDOC.getState(h),
      packing: !1,
      overprint: !1,
      global: !1,
      systemparams: { MaxPatternCache: { type: "integer", val: 5e3 } },
      userparams: {},
      pagedevice: {
        PageSize: {
          typ: "array",
          val: [
            { typ: "real", val: h[2] },
            { typ: "real", val: h[3] },
          ],
        },
      },
      cmnum: 0,
      fnt: null,
      res: {},
      pgOpen: !1,
      funs: FromPS.makeProcs({
        blackgeneration: "",
        undercolorremoval: "pop 0",
      }),
    },
    d;
  d =
    "Font CIDFont CMap FontSet Form Pattern ProcSet Halftone ColorRendering IdiomSet InkParams TrapParams OutputDevice ControlLanguage Localization PDL HWOptions".split(
      " "
    );
  for (var t = 0; t < d.length; t++)
    F.res[d[t]] = { typ: "dict", val: {}, maxl: 1e3 };
  d = ["Encoding", "ColorSpace"];
  for (var t = 0; t < d.length; t++) F.res[d[t]] = { typ: "array", val: [] };
  F.res.Category = { typ: "dict", val: F.res };
  F.res.ColorSpace.val = [
    { typ: "array", val: [{ typ: "name", val: "/DeviceRGB" }] },
    { typ: "array", val: [{ typ: "name", val: "/DeviceCMYK" }] },
    { typ: "array", val: [{ typ: "name", val: "/DeviceGray" }] },
  ];
  for (var t = 0; t < d.length; t++)
    F.res[d[t]] = { typ: "dict", val: {}, maxl: 1e3 };
  return F;
};
FromPS.makeProcs = function (h) {
  var F = {};
  for (var d in h) {
    var t = h[d].replace(/  +/g, " ").split(" ");
    F[d] = { typ: "procedure", val: [] };
    for (var f = 0; f < t.length; f++)
      F[d].val.push({ typ: "name", val: t[f] });
  }
  return F;
};
FromPS.addProc = function (h, F) {
  if (h.val.length == 0) return;
  if (h.typ != "procedure") {
    console.log(h);
    throw h.typ;
  }
  F.push({ typ: "procedure", val: h.val, off: 0 });
};
FromPS.stepC = 0;
FromPS._f32 = new Float32Array(1);
FromPS.step = function (h, F, d, t, f, N, L, P) {
  var j = Date.now(),
    v = FromPS._f32,
    l = FromPS.getToken,
    p = f.gst,
    u = l(d, F),
    i = !1;
  if (u == null) return !1;
  if (P && u.typ == "string" && FromPS.readStr(u.val) == "def")
    u = { typ: "operator", val: "def" };
  var w = u.typ,
    s = u.val;
  if (s == "NaN" || s == "INF") w = "integer";
  if (isNaN(p.cpos[0])) throw "e";
  if (i) console.log(u, h.slice(0));
  if (
    "integer real dict boolean string array procedure null file"
      .split(" ")
      .indexOf(w) != -1
  ) {
    h.push(u);
    return !0;
  }
  if (w != "name" && w != "operator") throw "e";
  if (s.charAt(0) == "/") {
    h.push(u);
  } else if (s == "undefined") return !0;
  else if (s.startsWith("II*")) return !1;
  else if (s == "{") {
    var E = [],
      g = { typ: "procedure", val: [] },
      $ = l(d, F);
    while (!0) {
      if ($.val == "{") {
        var n = { typ: "procedure", val: [] };
        g.val.push(n);
        E.push(g);
        g = n;
      } else if ($.val == "}") {
        if (E.length == 0) break;
        g = E.pop();
      } else g.val.push($);
      $ = l(d, F);
    }
    h.push(g);
  } else if (s == "[" || s == "<<") h.push({ typ: "mark" });
  else if (s == "]" || s == ">>") {
    var I = [];
    while (h.length != 0) {
      var a = h.pop();
      if (a.typ == "mark") break;
      I.push(a);
    }
    I.reverse();
    if (s == "]") h.push({ typ: "array", val: I });
    else {
      var o = {};
      for (var S = 0; S < I.length; S += 2) o[I[S].val.slice(1)] = I[S + 1];
      h.push({ typ: "dict", val: o, maxl: 1e3 });
    }
  } else {
    var V = FromPS.getFromStacks(s, F);
    if (i) console.log("---", V);
    if (V == null) {
      if (P || s == "endstream") return !1;
      else {
        console.log("unknown operator", s, h, F);
        throw "e";
      }
    } else if (V.typ == "procedure") FromPS.addProc(V, d);
    else if (
      "array string dict null integer real boolean state name file"
        .split(" ")
        .indexOf(V.typ) != -1
    )
      h.push(V);
    else if (V.typ == "operator") {
      var Q = V.val,
        U =
          "known if ifelse currentpacking setpacking dict dup begin end put bind def undef where pop get exec ge stop stopped cvr string not and".split(
            " "
          );
      if (FromPS._myOps[Q]) {
        FromPS.addProc(FromPS._myOps[Q], d);
      } else if (Q == "flattenpath" || Q == "limitcheck") {
      } else if (Q == "def") {
        var K = h.pop(),
          z = h.pop();
        if (z == null && P) return !1;
        z = FromPS.getDKey(z);
        F[F.length - 1][z] = K;
      } else if (Q == "undef" || Q == "known") {
        var B = FromPS.getDKey(h.pop()),
          J = h.pop(),
          G = J.val;
        if (Q == "undef") delete G[B];
        else h.push({ typ: "boolean", val: J.typ != "null" && G[B] != null });
      } else if (Q == "internaldict") {
        var O = h.pop().val;
        h.push({ typ: "dict", val: {}, maxl: 1e3 });
      } else if (Q == "dict") {
        var O = h.pop().val;
        h.push({ typ: "dict", val: {}, maxl: O });
      } else if (Q == "string") {
        var O = h.pop().val;
        h.push({ typ: "string", val: new Array(O) });
      } else if (Q == "readstring" || Q == "readhexstring") {
        var T = h.pop(),
          O = T.val.length,
          W = h.pop(),
          Y = FromPS.GetFile(W).val;
        if (Q == "readstring") {
          for (var S = 0; S < O; S++) T.val[S] = Y.buff[Y.off + S];
          Y.off += O;
        } else FromPS.readHex(Y, O, T.val);
        h.push(T, { typ: "boolean", val: !0 });
      } else if (Q == "readline") {
        var T = h.pop(),
          Y = FromPS.GetFile(h.pop()).val,
          S = 0;
        if (FromPS.isEOL(Y.buff[Y.off])) Y.off++;
        while (S < T.val.length) {
          var q = Y.buff[Y.off];
          Y.off++;
          if (q == null) throw "e";
          if (FromPS.isEOL(q)) {
            if (Y.buff[Y.off] == 10) Y.off++;
            break;
          }
          T.val[S] = q;
          S++;
        }
        h.push({ typ: "string", val: T.val.slice(0, S) });
        h.push({ typ: "boolean", val: !0 });
      } else if (Q == "getinterval") {
        var ce = h.pop().val,
          bO = h.pop().val,
          a2 = h.pop(),
          A = [];
        if (a2.typ == "string" || a2.typ == "array")
          for (var S = 0; S < ce; S++) A.push(a2.val[bO + S]);
        else throw "e";
        h.push({ typ: a2.typ, val: A });
      } else if (Q == "putinterval") {
        var a2 = h.pop(),
          bO = h.pop().val,
          cu = h.pop();
        if (bO + a2.val.length >= cu.val.length) {
        } else if (a2.typ == "string")
          for (var S = 0; S < a2.val.length; S++) cu.val[bO + S] = a2.val[S];
        else throw "e";
      } else if (Q == "token") {
        var a2 = h.pop();
        if (a2.typ != "string") throw "e";
        var I = [];
        for (var S = 0; S < a2.val.length; S++) {
          var al = a2.val[S];
          if (al == null) break;
          I.push(al);
        }
        var bR = { buff: new Uint8Array(I), off: 0 },
          u = l([{ typ: "file", val: bR }], F),
          aw = [];
        for (var S = bR.off; S < I.length; S++) aw.push(I[S]);
        h.push({ typ: "string", val: aw }, u, { typ: "boolean", val: !0 });
      } else if (Q == "array") {
        var O = h.pop().val;
        h.push({ typ: "array", val: new Array(O) });
      } else if (Q == "aload") {
        var a = h.pop(),
          I = a.val;
        for (var S = 0; S < I.length; S++) h.push(I[S]);
        h.push(a);
      } else if (Q == "astore") {
        var a = h.pop(),
          I = a.val;
        for (var S = 0; S < I.length; S++) I[I.length - 1 - S] = h.pop();
        h.push(a);
      } else if (Q == "length") {
        var a = h.pop(),
          w = a.typ,
          O = 0;
        if (w == "array") O = a.val.length;
        else if (w == "procedure") O = a.val.length;
        else if (w == "dict") O = Object.keys(a.val).length;
        else if (w == "string") O = a.val.length;
        else {
          console.log(a);
          throw "e";
        }
        h.push({ typ: "integer", val: O });
      } else if (Q == "maxlength") {
        var bF = h.pop();
        h.push({ typ: "integer", val: bF.maxl });
      } else if (Q == "matrix") {
        h.push({
          typ: "array",
          val: FromPS.makeArr([1, 0, 0, 1, 0, 0], "real"),
        });
      } else if (Q == "count") {
        h.push({ typ: "integer", val: h.length });
      } else if (Q == "mark") {
        h.push({ typ: "mark" });
      } else if (Q == "counttomark" || Q == "cleartomark") {
        var bD = 0;
        while (bD < h.length && h[h.length - 1 - bD].typ != "mark") bD++;
        if (Q == "cleartomark") for (var S = 0; S < bD + 1; S++) h.pop();
        else h.push({ typ: "integer", val: bD });
      } else if (Q == "dictstack") {
        var I = h.pop();
        for (var S = 0; S < F.length; S++)
          I.val[S] = { typ: "dict", val: F[S], maxl: 1e3 };
        h.push(I);
      } else if (Q == "countdictstack") {
        var c4 = 0;
        for (var S = 0; S < h.length; S++) if (h[S].typ == "dict") c4++;
        h.push({ typ: "integer", val: c4 });
      } else if (Q == "begin") {
        var a = h.pop(),
          G = a.val;
        if (G == null || a.typ != "dict") {
          console.log(a, F);
          throw "e";
        }
        F.push(G);
      } else if (Q == "end") {
        F.pop();
        if (F.length == 3 && P) return !1;
      } else if (Q == "currentfile") {
        var bZ;
        for (var S = d.length - 1; S >= 0; S--)
          if (d[S].typ == "file") {
            bZ = d[S];
            break;
          }
        h.push({ typ: "file", val: bZ.val });
      } else if (Q == "currentdict") {
        var G = F[F.length - 1];
        h.push({ typ: "dict", val: G, maxl: 1e3 });
      } else if (
        "currentpacking currentoverprint currentglobal currentsystemparams currentuserparams currentpagedevice"
          .split(" ")
          .indexOf(Q) != -1
      ) {
        var K = f[Q.slice(7)];
        h.push({ typ: typeof K == "boolean" ? "boolean" : "dict", val: K });
      } else if (Q == "gcheck") {
        var cv = h.pop();
        h.push({ typ: "boolean", val: !1 });
      } else if (
        "setpacking setoverprint setglobal setsystemparams setuserparams setpagedevice"
          .split(" ")
          .indexOf(Q) != -1
      ) {
        f[Q.slice(3)] = h.pop().val;
      } else if (Q == "currentflat") {
        h.push({ typ: "real", val: 1 });
      } else if (Q == "currentlinewidth") {
        h.push({ typ: "real", val: p.lwidth });
      } else if (Q == "currentdash") {
        h.push(
          { typ: "array", val: FromPS.makeArr(p.dash, "integer") },
          { typ: "real", val: p.doff }
        );
      } else if (Q == "currentpoint") {
        var a9 = p.ctm.slice(0);
        UDOC.M.invert(a9);
        var bP = UDOC.M.multPoint(a9, p.cpos);
        h.push({ typ: "real", val: bP[0] }, { typ: "real", val: bP[1] });
      } else if (Q == "currentscreen") {
        h.push(
          { typ: "int", val: 60 },
          { typ: "real", val: 0 },
          { typ: "real", val: 0 }
        );
      } else if (Q == "setscreen") {
        h.pop();
        h.pop();
        h.pop();
      } else if (Q == "currenthalftone") {
        h.push({ typ: "dict", val: {}, maxl: 1e3 });
      } else if (
        Q == "currentblackgeneration" ||
        Q == "currentundercolorremoval"
      ) {
        h.push(f.funs[Q.slice(7)]);
      } else if (Q == "currentcolortransfer") {
        for (var S = 0; S < 4; S++) h.push(f.funs.blackgeneration);
      } else if (Q == "findresource") {
        var cs = h.pop().val.slice(1),
          bf = h.pop(),
          B = bf.val.slice(1),
          ca;
        if (cs == "Font") {
          f.res[cs].val[B] = {
            typ: "dict",
            val: {
              FontType: { typ: "integer", val: 1 },
              FontMatrix: {
                typ: "array",
                val: FromPS.makeArr([1, 0, 0, 1, 0, 0], "real"),
              },
              FontName: bf,
              FID: { typ: "fontID", val: Math.floor(Math.random() * 16777215) },
              Encoding: { typ: "array", val: [] },
              FontBBox: {
                typ: "array",
                val: FromPS.makeArr([0, 0, 1, 1], "real"),
              },
              PaintType: { typ: "integer", val: 0 },
            },
          };
        }
        if (cs == "Category" && B == "Generic")
          ca = { typ: "dict", val: {}, maxl: 1e3 };
        else if ((cs == "ProcSet" || cs == "Procset") && B == "CIDInit")
          ca = { typ: "dict", val: {}, maxl: 1e3 };
        else ca = f.res[cs].val[B];
        if (ca == null) throw "e";
        h.push(ca);
      } else if (Q == "resourcestatus") {
        var cs = h.pop().val.slice(1),
          B = h.pop().val.slice(1),
          ca = f.res[cs].val[B];
        if (ca) {
          h.push({ typ: "integer", val: 1 });
          h.push({ typ: "integer", val: Object.keys(ca.val).length });
        }
        h.push({ typ: "boolean", val: ca != null });
      } else if (Q == "defineresource") {
        var cs = h.pop().val.slice(1),
          a_ = h.pop();
        if (h.length == 0) return;
        var B = h.pop().val.slice(1);
        f.res[cs].val[B] = a_;
        h.push(a_);
      } else if (Q == "undefineresource") {
        var cs = h.pop().val.slice(1),
          B = h.pop().val.slice(1);
        delete f.res[cs].val[B];
      } else if (Q == "resourceforall") {
        var cs = h.pop().val.slice(1),
          c2 = h.pop().val,
          aZ = h.pop(),
          bQ = h.pop().val;
        if (bQ.length != 1 || bQ[0] != 42) throw "e";
        var cr = f.res[cs].val;
        for (var B in cr) {
          var T = c2.slice(0);
          for (var S = 0; S < B.length; S++) T[S] = B[S];
          FromPS.addProc(aZ, d);
          FromPS.addProc(
            { typ: "procedure", val: [{ typ: "string", val: T }] },
            d
          );
        }
      } else if (Q == "image" || Q == "colorimage") {
        var bu,
          aY,
          aS,
          cy,
          b3 = 1,
          a6 = !1,
          bS = [],
          top = h.pop();
        h.push(top);
        if (Q == "image" && top.typ == "dict") {
          var bI = h.pop().val;
          bu = bI.Width.val;
          aY = bI.Height.val;
          aS = bI.BitsPerComponent.val;
          cy = FromPS.readArr(bI.ImageMatrix.val);
          b3 = bI.NComponents ? bI.NComponents.val : 1;
          a6 = bI.MultipleDataSources ? bI.MultipleDataSources.val : !1;
          bS = bI.DataSource.val;
          if (bI.DataSource.typ == "file") bS = [bI.DataSource];
        } else {
          if (Q == "colorimage") {
            b3 = h.pop().val;
            a6 = h.pop().val;
          }
          if (a6) {
            bS[2] = h.pop();
            bS[1] = h.pop();
            bS[0] = h.pop();
          } else bS = [h.pop()];
          var cy = FromPS.readArr(h.pop().val),
            aS = h.pop().val,
            aY = h.pop().val,
            bu = h.pop().val;
        }
        if (b3 != 1 && b3 != 3 && b3 != 4)
          throw "unsupported number of channels " + b3;
        if (aS != 8) throw "unsupported bits per channel: " + aS;
        var bM = new Uint8Array(bu * aY * 4);
        for (var S = 0; S < bM.length; S++) bM[S] = 255;
        d.push({
          typ: "name",
          val: Q + "---",
          ctx: [bu, aY, aS, cy, b3, a6, bM, 0, bS],
        });
        if (bS[0].typ == "procedure")
          for (var S = 0; S < bS.length; S++) FromPS.addProc(bS[S], d);
      } else if (Q == "image---" || Q == "colorimage---") {
        var aM = u.ctx,
          bu = aM[0],
          aY = aM[1],
          aS = aM[2],
          cy = aM[3],
          b3 = aM[4],
          a6 = aM[5],
          bM = aM[6],
          ch = aM[7],
          bS = aM[8],
          ck = 0;
        if (a6) {
          for (S = 0; S < b3; S++) {
            var bY = bS[S];
            if (bY.typ == "procedure") bY = h.pop().val;
            else bY = bY.val;
            ck = bY.length;
            if (b3 == 4)
              for (var aC = 0; aC < ck; aC++)
                bM[(ch + aC) * 4 + 3 - S] = bY[aC];
            if (b3 == 3)
              for (var aC = 0; aC < ck; aC++)
                bM[(ch + aC) * 4 + 2 - S] = bY[aC];
          }
        } else {
          var bY;
          if (bS[0].typ == "file") bY = FromPS.GetFile(bS[0]).val.buff;
          else bY = h.pop().val;
          ck = Math.floor(bY.length / 3);
          for (var aC = 0; aC < ck; aC++) {
            var b8 = aC * 3,
              bX = (ch + aC) * 4;
            bM[bX + 0] = bY[b8 + 0];
            bM[bX + 1] = bY[b8 + 1];
            bM[bX + 2] = bY[b8 + 2];
          }
        }
        ch += ck;
        FromPS.checkPageStarted(f, N);
        if (ch == bu * aY) {
          var a7 = 1 / 255;
          if (p.space == "/DeviceCMYK")
            for (var S = 0; S < bM.length; S += 4) {
              var bw = [
                  bM[S] * a7,
                  bM[S + 1] * a7,
                  bM[S + 2] * a7,
                  bM[S + 3] * a7,
                ],
                aP = UDOC.C.cmykToRgb(bw);
              bM[S] = aP[0] * 255;
              bM[S + 1] = aP[1] * 255;
              bM[S + 2] = aP[2] * 255;
              bM[S + 3] = 255;
            }
          var ae = p.ctm.slice(),
            cA = cy.slice(0);
          UDOC.M.invert(cA);
          var aX = [bu, 0, 0, -aY, 0, aY];
          UDOC.M.concat(aX, cA);
          UDOC.M.concat(p.ctm, aX);
          N.PutImage(p, bM, bu, aY);
          p.ctm = ae;
        } else {
          aM[7] = ch;
          d.push(u);
          if (bS[0].typ == "procedure")
            for (var S = 0; S < bS.length; S++) FromPS.addProc(bS[S], d);
        }
      } else if (Q == "makepattern") {
        var M = h.pop().val,
          bF = h.pop().val;
        h.push({ typ: "array", val: [bF, JSON.parse(JSON.stringify(M))] });
      } else if (Q == "makefont" || Q == "scalefont") {
        var be = Q == "makefont",
          aM = h.pop().val;
        if (be) aM = FromPS.readArr(aM);
        var bT = JSON.parse(JSON.stringify(h.pop())),
          aK = FromPS.readArr(bT.val.FontMatrix.val);
        if (be) UDOC.M.concat(aK, aM);
        else UDOC.M.scale(aK, aM, aM);
        bT.val.FontMatrix.val = FromPS.makeArr(aK);
        h.push(bT);
      } else if (Q == "stringwidth" || Q == "charpath") {
        if (Q == "charpath") h.pop();
        var bo = h.pop().val,
          T = FromPS.readStr(bo),
          bH = UDOC.M.getScale(p.font.Tm) / UDOC.M.getScale(p.ctm),
          c9 = 0.55 * bH * T.length;
        if (Q == "stringwidth")
          h.push({ typ: "real", val: c9 }, { typ: "real", val: 0 });
        else UDOC.G.drawRect(p, 0, 0, c9, bH);
      } else if (Q == "setfont") {
        var bT = h.pop().val;
        p.font.Tf = bT.FontName.val.slice(1);
        p.font.Tm = FromPS.readArr(bT.FontMatrix.val);
      } else if (Q == "setlinewidth") p.lwidth = h.pop().val;
      else if (Q == "setstrokeadjust") p.SA = h.pop().val;
      else if (Q == "setlinecap") p.lcap = h.pop().val;
      else if (Q == "setlinejoin") p.ljoin = h.pop().val;
      else if (Q == "setmiterlimit") p.mlimit = h.pop().val;
      else if (Q == "setflat") p.dd.flat = h.pop();
      else if (Q == "setdash") {
        p.doff = h.pop().val;
        p.dash = FromPS.readArr(h.pop().val);
      } else if (
        Q == "show" ||
        Q == "ashow" ||
        Q == "xshow" ||
        Q == "yshow" ||
        Q == "xyshow" ||
        Q == "widthshow" ||
        Q == "awidthshow"
      ) {
        if (Q == "xshow" || Q == "xyshow" || Q == "yshow") h.pop();
        var bo = h.pop().val,
          T = FromPS.readStr(bo);
        if (Q == "awidthshow") {
          h.pop();
          h.pop();
          h.pop();
          h.pop();
        }
        if (Q == "widthshow") {
          h.pop();
          h.pop();
          h.pop();
        }
        if (Q == "ashow") {
          h.pop();
          h.pop();
        }
        var aR = p.ctm;
        p.ctm = aR.slice(0);
        p.ctm[4] = p.cpos[0];
        p.ctm[5] = p.cpos[1];
        FromPS.checkPageStarted(f, N);
        N.PutText(p, T, T.length * 0.55);
        p.cpos[0] +=
          T.length * UDOC.M.getScale(aR) * UDOC.M.getScale(p.font.Tm) * 0.55;
        p.ctm = aR;
      } else if (Q == "cshow") {
        h.pop();
        h.pop();
      } else if (Q == "currentcolorspace") {
        h.push({ typ: "array", val: [{ typ: "name", val: p.space }] });
      } else if (Q == "setcolorspace") {
        var bq = h.pop();
        p.space = bq.val;
        if (bq.typ == "array") p.space = bq.val[0].val;
        else if (bq.typ == "name") p.space = bq.val;
        else {
          console.log(bq);
          throw "e";
        }
      } else if (Q == "setcolor" || Q == "_setHSB_") {
        var b5;
        if (p.space == "/Pattern") {
          var bw = h.pop();
          if (bw.typ != "array") throw "e";
          var bP = bw.val,
            M = FromPS.readArr(bP[1]);
          UDOC.M.concat(M, p.ctm);
          b5 = FromPS.getPSShadingFill(bP[0].Shading, M);
        } else if (p.space == "/DeviceGray") {
          var aW = FromPS.nrm(h.pop().val);
          b5 = [aW, aW, aW];
        } else if (Q == "_setHSB_") {
          var cv = h.pop().val,
            bk = h.pop().val,
            aY = h.pop().val,
            bj,
            aW,
            bh,
            S,
            b$,
            bP,
            cl,
            ct;
          S = Math.floor(aY * 6);
          b$ = aY * 6 - S;
          bP = cv * (1 - bk);
          cl = cv * (1 - b$ * bk);
          ct = cv * (1 - (1 - b$) * bk);
          switch (S % 6) {
            case 0:
              (bj = cv), (aW = ct), (bh = bP);
              break;
            case 1:
              (bj = cl), (aW = cv), (bh = bP);
              break;
            case 2:
              (bj = bP), (aW = cv), (bh = ct);
              break;
            case 3:
              (bj = bP), (aW = cl), (bh = cv);
              break;
            case 4:
              (bj = ct), (aW = bP), (bh = cv);
              break;
            case 5:
              (bj = cv), (aW = bP), (bh = cl);
              break;
          }
          b5 = [FromPS.nrm(bj), FromPS.nrm(aW), FromPS.nrm(bh)];
        } else if (p.space == "/DeviceRGB") {
          var bh = h.pop().val,
            aW = h.pop().val,
            bj = h.pop().val;
          b5 = [FromPS.nrm(bj), FromPS.nrm(aW), FromPS.nrm(bh)];
        } else if (p.space == "/DeviceCMYK") {
          var c1 = h.pop().val,
            a4 = h.pop().val,
            M = h.pop().val,
            cd = h.pop().val;
          b5 = UDOC.C.cmykToRgb([cd, M, a4, c1]);
        } else throw p.space;
        if (b5) p.colr = p.COLR = b5;
      } else if (Q == "currentrgbcolor") {
        for (var S = 0; S < 3; S++) h.push({ typ: "real", val: p.colr[S] });
      } else if (Q == "currentcmykcolor") {
        for (var S = 0; S < 3; S++) h.push({ typ: "real", val: 1 - p.colr[S] });
        h.push({ typ: "real", val: 0 });
      } else if (Q == "currentgray") {
        h.push({ typ: "real", val: (p.colr[0] + p.colr[1] + p.colr[2]) / 3 });
      } else if (Q == "clip" || Q == "eoclip") {
        var aI = UDOC.G.getBB(p.pth.crds),
          br = UDOC.G.getBB(p.cpth.crds);
        if (UDOC.G.isBox(p.pth, aI) && UDOC.G.insideBox(br, aI)) {
        } else if (UDOC.G.isBox(p.cpth, br) && UDOC.G.insideBox(aI, br)) {
          p.cpth = JSON.parse(JSON.stringify(p.pth));
        } else if (UDOC.G.isBox(p.pth, aI) && UDOC.G.isBox(p.cpth, br)) {
          var c3 = Math.min(aI[0], br[0]),
            bs = Math.min(aI[1], br[1]),
            az = Math.min(aI[2], br[2]),
            bJ = Math.min(aI[3], br[3]);
          p.cpth = {
            cmds: ["M", "L", "L", "L", "Z"],
            crds: [c3, bs, az, bs, az, bJ, c3, bJ],
          };
        } else {
          p.cpth = JSON.parse(
            JSON.stringify(
              p.pth.crds.length > p.cpth.crds.length ? p.pth : p.cpth
            )
          );
        }
      } else if (Q == "clippath") {
        p.pth = JSON.parse(JSON.stringify(p.cpth));
      } else if (Q == "pathbbox") {
        var aB = p.pth.crds,
          aU = UDOC.G.getBB(aB);
        aB = [aU[0], aU[1], aU[2], aU[1], aU[0], aU[3], aU[2], aU[3]];
        var a9 = p.ctm.slice(0);
        UDOC.M.invert(a9);
        UDOC.M.multArray(a9, aB);
        aU = UDOC.G.getBB(aB);
        v[0] = aU[0];
        aU[0] = v[0];
        v[0] = aU[1];
        aU[1] = v[0];
        v[0] = aU[2];
        aU[2] = v[0];
        v[0] = aU[3];
        aU[3] = v[0];
        aU = FromPS.makeArr(aU, "real");
        h.push(aU[0], aU[1], aU[2], aU[3]);
      } else if (Q == "newpath") UDOC.G.newPath(p);
      else if (Q == "stroke") {
        FromPS.checkPageStarted(f, N);
        N.Stroke(p);
        UDOC.G.newPath(p);
      } else if (Q == "shfill") {
        var aA = p.colr,
          ac = p.pth,
          bP = h.pop().val,
          M = p.ctm.slice(0);
        p.colr = FromPS.getPSShadingFill(
          { typ: "dict", val: bP, maxl: 1e3 },
          M
        );
        FromPS.checkPageStarted(f, N);
        p.pth = p.cpth;
        p.cpth = UDOC.G.rectToPath(f.bb);
        N.Fill(p);
        p.colr = aA;
        p.pth = ac;
      } else if (Q == "fill" || Q == "eofill") {
        FromPS.checkPageStarted(f, N);
        N.Fill(p, Q == "eofill");
        UDOC.G.newPath(p);
      } else if (Q == "showpage") {
        FromPS.checkPageStarted(f, N);
        N.ShowPage();
        var bn = p.font;
        p = f.gst = UDOC.getState(f.bb);
        p.font = bn;
        f.pgOpen = !1;
      } else if (Q == "print") {
        var bo = h.pop().val,
          T = FromPS.readStr(bo);
        N.Print(T);
      } else if (Q == "_drawRect_") {
        var aY = h.pop();
        if (aY.typ != "real" && aY.typ != "integer") throw "e";
        aY = aY.val;
        var bu = h.pop().val,
          a4 = h.pop().val,
          bl = h.pop().val;
        UDOC.G.drawRect(p, bl, a4, bu, aY);
      } else if (Q == "closepath") UDOC.G.closePath(p);
      else if (Q == "moveto" || Q == "lineto") {
        var a4 = h.pop().val,
          bl = h.pop().val;
        if (Q == "moveto") UDOC.G.moveTo(p, bl, a4);
        else UDOC.G.lineTo(p, bl, a4);
      } else if (Q == "rmoveto" || Q == "rlineto") {
        var a4 = h.pop().val,
          bl = h.pop().val,
          a9 = p.ctm.slice(0);
        UDOC.M.invert(a9);
        var bP = UDOC.M.multPoint(a9, p.cpos);
        a4 += bP[1];
        bl += bP[0];
        if (Q == "rmoveto") UDOC.G.moveTo(p, bl, a4);
        else UDOC.G.lineTo(p, bl, a4);
      } else if (Q == "curveto") {
        var bp = h.pop().val,
          aV = h.pop().val,
          bU = h.pop().val,
          cc = h.pop().val,
          bJ = h.pop().val,
          az = h.length == 0 ? 0 : h.pop().val;
        UDOC.G.curveTo(p, az, bJ, cc, bU, aV, bp);
      } else if (Q == "arc" || Q == "arcn") {
        var c5 = h.pop().val,
          cq = h.pop().val,
          bj = h.pop().val,
          a4 = h.pop().val,
          bl = h.pop().val;
        UDOC.G.arc(
          p,
          bl,
          a4,
          bj,
          (cq * Math.PI) / 180,
          (c5 * Math.PI) / 180,
          Q == "arcn"
        );
      } else if (Q == "concat") {
        var M = FromPS.readArr(h.pop().val);
        UDOC.M.concat(M, p.ctm);
        p.ctm = M;
      } else if (["translate", "scale", "rotate"].indexOf(Q) != -1) {
        var cv = h.pop(),
          M,
          bl,
          a4;
        if (cv.typ == "array") {
          M = FromPS.readArr(cv.val);
          a4 = h.pop().val;
        } else {
          M = [1, 0, 0, 1, 0, 0];
          a4 = cv.val;
        }
        if (Q != "rotate") bl = h.pop().val;
        if (Q == "translate") UDOC.M.translate(M, bl, a4);
        if (Q == "scale") UDOC.M.scale(M, bl, a4);
        if (Q == "rotate") UDOC.M.rotate(M, (-a4 * Math.PI) / 180);
        if (cv.typ == "array")
          h.push({ typ: "array", val: FromPS.makeArr(M, "real") });
        else {
          UDOC.M.concat(M, p.ctm);
          p.ctm = M;
        }
      } else if (Q == "concatmatrix") {
        var aa = FromPS.readArr,
          aj = aa(h.pop().val),
          a0 = aa(h.pop().val),
          am = aa(h.pop().val),
          M = am.slice(0);
        UDOC.M.concat(M, a0);
        M = FromPS.makeArr(M, "real");
        h.push({ typ: "array", val: M });
      } else if (Q == "invertmatrix") {
        var aa = FromPS.readArr,
          a0 = aa(h.pop().val),
          am = aa(h.pop().val),
          M = am.slice(0);
        UDOC.M.invert(M);
        M = FromPS.makeArr(M, "real");
        h.push({ typ: "array", val: M });
      } else if (Q == "currentmatrix" || Q == "defaultmatrix") {
        var M = h.pop(),
          cg = FromPS.makeArr(
            Q == "currentmatrix" ? p.ctm : [1, 0, 0, 1, 0, 0],
            "real"
          );
        for (var S = 0; S < 6; S++) M.val[S] = cg[S];
        h.push(M);
      } else if (Q == "setmatrix") {
        p.ctm = FromPS.readArr(h.pop().val);
      } else if (Q == "cvi") {
        var a = h.pop(),
          cv = a.val,
          A = 0;
        if (a.typ == "real") A = Math.round(cv);
        else if (a.typ == "integer") A = cv;
        else throw "unknown type " + a.typ;
        h.push({ typ: "integer", val: A });
      } else if (Q == "cvr") {
        var a = h.pop(),
          cv = a.val,
          A = 0;
        if (a.typ == "real") A = cv;
        else if (a.typ == "integer") A = cv;
        else if (a.typ == "string") A = parseFloat(FromPS.readStr(cv));
        else throw "unknown type " + a.typ;
        h.push({ typ: "real", val: A });
      } else if (Q == "cvs") {
        var T = h.pop(),
          a$ = h.pop(),
          K = "";
        T.val = [];
        h.push(T);
        if (a$.typ == "real" || a$.typ == "integer") {
          if (Math.abs(Math.round(a$.val) - a$.val) < 1e-6)
            K = Math.round(a$.val) + ".0";
          else K = (Math.round(a$.val * 1e6) / 1e6).toString();
        } else if (a$.typ == "name") K = a$.val;
        else throw "unknown var type: " + a$.typ;
        for (var S = 0; S < K.length; S++) T.val[S] = K.charCodeAt(S);
      } else if (Q == "cvx") {
        var a = h.pop(),
          aT;
        if (a.typ == "array") aT = { typ: "procedure", val: a.val };
        else if (a.typ == "name") aT = { typ: "name", val: a.val.slice(1) };
        else if (a.typ == "string") {
          aT = { typ: "file", val: { off: 0, buff: new Uint8Array(a.val) } };
        } else {
          console.log(a);
          throw a.typ;
        }
        h.push(aT);
      } else if (Q == "cvlit") {
        var V = h.pop();
        if (V.typ == "procedure") h.push({ typ: "array", val: V.val });
        else h.push(V);
      } else if (Q == "cvn") {
        h.push({ typ: "name", val: FromPS.readStr(h.pop().val) });
      } else if (
        "add sub mul div idiv bitshift mod exp atan".split(" ").indexOf(Q) != -1
      ) {
        var cn = h.pop(),
          cb = h.pop(),
          b = cb.val,
          a8 = cn.val,
          A = 0,
          X = "";
        if (Q == "add" || Q == "sub" || Q == "mul")
          X = cb.typ == "real" || cn.typ == "real" ? "real" : "integer";
        else if (Q == "div" || Q == "atan" || Q == "exp") X = "real";
        else if (Q == "mod" || Q == "idiv" || Q == "bitshift") X = "integer";
        if (cb.typ == "real") {
          v[0] = b;
          b = v[0];
        }
        if (cn.typ == "real") {
          v[0] = a8;
          a8 = v[0];
        }
        if (Q == "add") A = b + a8;
        if (Q == "sub") A = b - a8;
        if (Q == "mul") A = b * a8;
        if (Q == "div") A = b / a8;
        if (Q == "idiv") A = ~~(b / a8);
        if (Q == "bitshift") A = a8 > 0 ? b << a8 : b >>> -a8;
        if (Q == "mod") A = b % a8;
        if (Q == "exp") A = Math.pow(b, a8);
        if (Q == "atan") A = (Math.atan2(b, a8) * 180) / Math.PI;
        if (X == "real") {
          v[0] = A;
          A = v[0];
        }
        h.push({ typ: X, val: A });
      } else if (
        "neg abs floor ceiling round truncate sqrt ln sin cos"
          .split(" ")
          .indexOf(Q) != -1
      ) {
        var cb = h.pop(),
          b = cb.val,
          A = 0,
          X = "";
        if (
          Q == "neg" ||
          Q == "abs" ||
          Q == "truncate" ||
          Q == "floor" ||
          Q == "ceiling" ||
          Q == "round"
        )
          X = cb.typ;
        else if (Q == "sqrt" || Q == "sin" || Q == "cos" || Q == "ln")
          X = "real";
        if (cb.typ == "real") {
          v[0] = b;
          b = v[0];
        }
        if (Q == "neg") A = -b;
        if (Q == "abs") A = Math.abs(b);
        if (Q == "floor") A = Math.floor(b);
        if (Q == "ceiling") A = Math.ceil(b);
        if (Q == "round") A = Math.round(b);
        if (Q == "truncate") A = Math.trunc(b);
        if (Q == "sqrt") A = Math.sqrt(b);
        if (Q == "ln") A = Math.log(b);
        if (Q == "sin") A = Math.sin((b * Math.PI) / 180);
        if (Q == "cos") A = Math.cos((b * Math.PI) / 180);
        if (Q == "ln" && b <= 0) throw "e";
        if (X == "real") {
          v[0] = A;
          A = v[0];
        }
        h.push({ typ: X, val: A });
      } else if ("eq ge gt le lt ne".split(" ").indexOf(Q) != -1) {
        var cn = h.pop(),
          cb = h.pop(),
          r = cb.typ,
          bt = cn.typ,
          b = cb.val,
          a8 = cn.val,
          A = !1;
        if (Q == "eq" || Q == "ne") {
          var aL = cb.typ == cn.typ;
          if (
            aL &&
            ["integer", "real", "name", "null", "dict"].indexOf(r) != -1
          )
            A = b == a8;
          else if (
            (r == "real" && bt == "integer") ||
            (bt == "real" && r == "integer")
          )
            A = b == a8;
          else if (!aL && (cb.typ == "null" || cn.typ == "null")) A = !1;
          else if (aL && cb.typ == "string") {
            if (b.length != a8.length) A = !1;
            else {
              A = !0;
              for (var S = 0; S < b.length; S++) if (b[S] != a8[S]) A = !1;
            }
          } else {
            console.log(Q, cb, cn, cb.val == cn.val);
            throw "e";
          }
          if (Q == "ne") A = !A;
        } else if (Q == "ge") A = b >= a8;
        else if (Q == "gt") A = b > a8;
        else if (Q == "le") A = b <= a8;
        else if (Q == "lt") A = b < a8;
        h.push({ typ: "boolean", val: A });
      } else if (["and", "or"].indexOf(Q) != -1) {
        var D = h.pop(),
          c = h.pop(),
          a8 = c.val,
          m = D.val,
          _ = c.typ == "integer",
          A;
        if (Q == "and") A = _ ? a8 & m : a8 && m;
        if (Q == "or") A = _ ? a8 | m : a8 || m;
        h.push({ typ: _ ? "integer" : "boolean", val: A });
      } else if (Q == "not") {
        var bh = h.pop(),
          cv = bh.val,
          _ = bh.typ == "integer",
          A = _ ? ~cv : !cv;
        h.push({ typ: _ ? "integer" : "boolean", val: A });
      } else if (Q == "if") {
        var aZ = h.pop(),
          R = h.pop().val;
        if (R) FromPS.addProc(aZ, d);
      } else if (Q == "ifelse") {
        var aq = h.pop(),
          b1 = h.pop(),
          R = h.pop().val;
        FromPS.addProc(R ? b1 : aq, d);
      } else if (Q == "exec" || Q == "stopped") {
        var V = h.pop();
        if (Q == "stopped")
          FromPS.addProc(
            { typ: "procedure", val: [{ typ: "boolean", val: !1 }] },
            d
          );
        if (V.typ == "procedure") FromPS.addProc(V, d);
        else if (
          V.typ == "name" ||
          V.typ == "operator" ||
          V.typ == "integer" ||
          V.typ == "real" ||
          V.typ == "array"
        )
          FromPS.addProc({ typ: "procedure", val: [V] }, d);
        else {
          console.log(V);
          throw "unknown executable type: " + V.typ;
        }
      } else if (Q == "stop") {
        var e = d[d.length - 1];
        if (e.typ == "procedure" && e.off != 0) d.pop();
      } else if (Q == "dup") {
        var cv = h.pop();
        h.push(cv, cv);
      } else if (Q == "exch") {
        h.push(h.pop(), h.pop());
      } else if (Q == "copy") {
        var c4 = h.pop();
        if (c4.typ == "integer") {
          var a5 = [];
          for (var S = 0; S < c4.val; S++) a5[c4.val - 1 - S] = h.pop();
          for (var S = 0; S < c4.val; S++) h.push(a5[S]);
          for (var S = 0; S < c4.val; S++) h.push(a5[S]);
        } else if (c4.typ == "array") {
          var M = h.pop().val;
          for (var S = 0; S < M.length; S++) {
            c4.val[S] = M[S];
            if (M[S].val == null) {
              console.log(F);
              throw "e";
            }
          }
          h.push(c4);
        } else if (c4.typ == "dict") {
          var M = h.pop().val;
          for (var Z in M) {
            c4.val[Z] = M[Z];
          }
          h.push(c4);
        } else throw "e";
      } else if (Q == "roll") {
        var aC = h.pop().val,
          c4 = h.pop().val,
          a5 = [];
        for (var S = 0; S < c4; S++) a5.push(h.pop());
        a5.reverse();
        aC = (c4 + aC) % c4;
        for (var S = 0; S < aC; S++) a5.unshift(a5.pop());
        for (var S = 0; S < c4; S++) h.push(a5[S]);
      } else if (Q == "index") {
        var c4 = h.pop().val;
        h.push(h[h.length - 1 - c4]);
      } else if (Q == "anchorsearch") {
        var y = h.pop(),
          c7 = h.pop(),
          aH = y.val,
          T = c7.val,
          a1 = !0;
        if (aH.length <= T.length) {
          for (var S = 0; S < aH.length; S++) if (aH[S] != T[S]) a1 = !1;
        } else a1 = !1;
        if (a1) h.push({ typ: "string", val: T.slice(aH.length) }, y);
        else h.push(c7);
        h.push({ typ: "boolean", val: a1 });
      } else if (
        Q == "transform" ||
        Q == "itransform" ||
        Q == "dtransform" ||
        Q == "idtransform"
      ) {
        var M = h.pop(),
          a4 = 0,
          bl = 0;
        if (M.typ == "array") {
          M = FromPS.readArr(M.val);
          a4 = h.pop().val;
        } else {
          a4 = M.val;
          M = p.ctm.slice(0);
        }
        if (Q == "itransform" || Q == "idtransform") {
          UDOC.M.invert(M);
        }
        bl = h.pop().val;
        if (Q.endsWith("dtransform")) {
          M[4] = 0;
          M[5] = 0;
        }
        var au = UDOC.M.multPoint(M, [bl, a4]);
        h.push({ typ: "real", val: au[0] }, { typ: "real", val: au[1] });
      } else if (Q == "pop" || Q == "srand" || Q == "==") {
        h.pop();
      } else if (Q == "rand") {
        h.push({ typ: "integer", val: Math.floor(Math.random() * 2147483647) });
      } else if (Q == "put") {
        var s = h.pop(),
          a = h.pop(),
          V = h.pop(),
          X = V.typ;
        if (X == "array") {
          if (a.typ != "integer") throw "e";
          V.val[a.val] = s;
        } else if (X == "dict") {
          var z = FromPS.getDKey(a);
          V.val[z] = s;
        } else if (X == "string") V.val[a.val] = s.val;
        else throw X + " e";
      } else if (Q == "get") {
        var a = h.pop(),
          V = h.pop(),
          X = V.typ;
        if (X == "string") h.push({ typ: "integer", val: V.val[a.val] });
        else if (X == "array") {
          var K = V.val[a.val];
          if (K == null) throw "e";
          h.push(K);
        } else if (X == "dict") {
          var c1 = FromPS.getDKey(a),
            cv = V.val[c1];
          if (cv == null) {
            throw "e";
          } else h.push(cv);
        } else throw "getting from unknown type " + V.typ;
      } else if (Q == "load") {
        var B = h.pop().val.slice(1),
          s = FromPS.getFromStacks(B, F);
        if (s == null) {
          console.log(B, F);
          throw "e";
        }
        h.push(s);
      } else if (Q == "where") {
        var B = h.pop().val.slice(1),
          G = FromPS.where(B, F);
        if (G != null) h.push({ typ: "dict", val: G, maxl: 1e3 });
        h.push({ typ: "boolean", val: G != null });
      } else if (Q == "store") {
        var s = h.pop(),
          B = h.pop().val.slice(1),
          G = FromPS.where(B, F);
        if (G == null) G = F[F.length - 1];
        G[B] = s;
      } else if (Q == "repeat") {
        var aZ = h.pop(),
          ap = h.pop().val;
        d.push({
          typ: "name",
          val: Q + "---",
          ctx: { proc: aZ, cur: 0, cnt: ap },
        });
      } else if (Q == "repeat---") {
        var C = u.ctx;
        if (C.cur < C.cnt) {
          d.push(u);
          FromPS.addProc(C.proc, d);
          C.cur++;
        }
      } else if (Q == "for") {
        var aZ = h.pop(),
          ad = h.pop(),
          ao = h.pop(),
          ak = h.pop();
        d.push({
          typ: "name",
          val: Q + "---",
          ctx: {
            proc: aZ,
            isInt: ak.typ == "integer" && ao.typ == "integer",
            init: ak.val,
            inc: ao.val,
            limit: ad.val,
          },
        });
      } else if (Q == "for---") {
        var C = u.ctx;
        if (C.isInt) {
          if (
            (C.inc > 0 && C.init <= C.limit) ||
            (C.inc < 0 && C.init >= C.limit)
          ) {
            d.push(u);
            FromPS.addProc(C.proc, d);
            h.push({ typ: "integer", val: C.init });
            C.init += C.inc;
          }
        } else {
          var k = new Float32Array(1);
          k[0] = C.limit;
          C.limit = k[0];
          k[0] = C.inc;
          C.inc = k[0];
          k[0] = C.init;
          if (
            (C.inc > 0 && k[0] <= C.limit) ||
            (C.inc < 0 && k[0] >= C.limit)
          ) {
            d.push(u);
            FromPS.addProc(C.proc, d);
            h.push({ typ: "real", val: k[0] });
            k[0] += C.inc;
            C.init = k[0];
          }
        }
      } else if (Q == "loop") {
        var aZ = h.pop();
        d.push({ typ: "name", val: Q + "---", ctx: { proc: aZ } });
      } else if (Q == "loop---") {
        var C = u.ctx;
        d.push(u);
        FromPS.addProc(C.proc, d);
      } else if (Q == "pathforall") {
        var x = h.pop(),
          cp = h.pop(),
          ci = h.pop(),
          ai = h.pop();
      } else if (Q == "forall") {
        var aZ = h.pop(),
          V = h.pop(),
          C = [aZ, V, 0];
        d.push({ typ: "name", val: Q + "---", ctx: C });
      } else if (Q == "forall---") {
        var C = u.ctx,
          aZ = C[0],
          V = C[1],
          S = C[2];
        if (V.typ == "dict") {
          var aN = Object.keys(V.val);
          if (S < aN.length) {
            d.push(u);
            FromPS.addProc(aZ, d);
            h.push({ typ: "name", val: "/" + aN[S] });
            var K = V.val[aN[S]];
            if (K == null) throw "e";
            h.push(K == null ? { typ: "null", val: null } : K);
            C[2]++;
          }
        } else if (V.typ == "procedure" || V.typ == "array") {
          if (S < V.val.length) {
            d.push(u);
            FromPS.addProc(aZ, d);
            var ab = V.val[S];
            h.push(ab == null ? { typ: "null", val: null } : ab);
            C[2]++;
          }
        } else {
          console.log(aZ, V);
          throw "forall: unknown type: " + V.typ;
        }
      } else if (Q == "exit") {
        var S = d.length - 1;
        while (S != 0 && (d[S].typ != "name" || !d[S].val.endsWith("---"))) S--;
        if (S != 0) while (d.length > S) d.pop();
      } else if (Q == "bind") {
      } else if (Q == "xcheck") {
        var V = h.pop(),
          w = V.typ;
        h.push({ typ: "boolean", val: w == "procedure" });
      } else if (Q == "status") {
        var T = h.pop();
        h.push({ typ: "boolean", val: !1 });
      } else if (Q == "cachestatus") {
        for (var S = 0; S < 7; S++) h.push({ typ: "integer", val: 5e3 });
      } else if (Q == "setcachelimit") {
        h.pop();
      } else if (Q == "type") {
        var a = h.pop(),
          b0 = {
            name: "nametype",
            dict: "dicttype",
            boolean: "booleantype",
            procedure: "operatortype",
            string: "stringtype",
            null: "nulltype",
            integer: "integertype",
            array: "arraytype",
            operator: "operatortype",
            real: "realtype",
          };
        if (b0[a.typ] == null) {
          console.log(a);
          throw a.typ;
        }
        h.push({ typ: "name", val: "/" + b0[a.typ] });
      } else if (Q == "save") {
        h.push({ typ: "state", val: JSON.parse(JSON.stringify(p)) });
      } else if (Q == "restore") {
        p = f.gst = h.pop().val;
      } else if (Q == "clipsave") {
        p.cpstack.push(JSON.parse(JSON.stringify(p.cpth)));
      } else if (Q == "cliprestore") {
        p.cpath = p.cpstack.pop();
      } else if (Q == "gsave") {
        t.push(JSON.parse(JSON.stringify(p)));
      } else if (Q == "grestore" || Q == "grestorePDF") {
        var cB = p.pth;
        if (t.length != 0) p = f.gst = t.pop();
        else p = UDOC.getState();
        if (Q == "grestorePDF") p.pth = cB;
      } else if (Q == "grestoreall") {
        while (t.length != 0) p = f.gst = t.pop();
      } else if (Q == "usertime" || Q == "realtime")
        h.push({
          typ: "integer",
          val: Q == "usertime" ? Date.now() - j : Date.now(),
        });
      else if (Q == "flush" || Q == "readonly" || Q == "executeonly") {
      } else if (Q == "flushfile") {
        FromPS.GetFile(h.pop());
      } else if (Q == "filter") {
        var b9 = h.pop().val,
          b7;
        if (b9 == "/SubFileDecode") {
          var T = h.pop();
          if (T.typ != "string") throw "e";
          var ce = h.pop().val;
          T = T.val;
          b7 = [b9, T, ce];
        } else b7 = [b9];
        var aG = h.pop();
        h.push({
          typ: "file",
          val: { buff: new Uint8Array(), off: 0 },
          _flt: b7,
          _src: aG,
        });
      } else if (Q == "begincmap" || Q == "endcmap") {
      } else if (
        Q == "begincodespacerange" ||
        Q == "beginbfrange" ||
        Q == "beginbfchar"
      ) {
        f.cmnum = h.pop().val;
      } else if (
        Q == "endcodespacerange" ||
        Q == "endbfrange" ||
        Q == "endbfchar"
      ) {
        var x = Q == "endbfrange" ? 3 : 2,
          av = Q.slice(3),
          G = F[F.length - 1],
          aS = 0;
        if (G[av] == null) G[av] = [];
        for (var S = 0; S < f.cmnum; S++) {
          var c8 = [];
          for (var aC = x - 1; aC >= 0; aC--) {
            var cz = h.pop(),
              K;
            if (cz == null && P) return !1;
            var b_ = cz.val;
            if (cz.typ == "string") {
              K = FromPS.strToInt(b_);
              if (aC == 0) aS = b_.length;
            } else {
              K = [];
              for (var c1 = 0; c1 < b_.length; c1++)
                K.push(FromPS.strToInt(b_[c1].val));
            }
            c8[aC] = K;
          }
          G[av] = G[av].concat(c8);
        }
        if (Q != "endcodespacerange") G.bpc = aS;
      } else if (L) L(Q, h, F, d, t, f, N);
      else {
        console.log(s, Q);
        console.log(F, h);
        throw "e";
      }
    } else throw V.typ;
  }
  return !0;
};
FromPS.strToInt = function (h) {
  var F = 0;
  for (var d = 0; d < h.length; d++) F = (F << 8) | h[d];
  return F;
};
FromPS.getDKey = function (h) {
  if (h.typ == "name") return h.val.slice(1);
  if (h.typ == "string") return FromPS.readStr(h.val);
  return h.val;
};
FromPS.GetFile = function (h) {
  if (h._flt == null || h.val.off < h.val.buff.length) return h;
  FromPS.GetFile(h._src);
  var F = h._src.val,
    d = h._flt,
    t = d[0],
    f;
  if (t == "/ASCII85Decode") f = FromPS.F.ASCII85Decode(F);
  else if (t == "/RunLengthDecode") f = FromPS.F.RunLengthDecode(F);
  else if (t == "/FlateDecode") f = FromPS.F.FlateDecode(F);
  else if (t == "/LZWDecode") f = FromPS.F.LZWDecode(F);
  else if (t == "/SubFileDecode") {
    var L = d[1],
      P = d[2],
      j = F.off,
      v = 0;
    while (j < F.buff.length) {
      var l = 0;
      while (l < L.length && F.buff[j + l] == L[l]) l++;
      if (l == L.length) {
        if (v == P) break;
        v++;
      }
      j++;
    }
    f = F.buff.slice(F.off, j);
    F.off = j;
  } else throw t;
  h.val = { buff: f, off: 0 };
  return h;
};
FromPS.checkPageStarted = function (h, F) {
  if (!h.pgOpen) {
    F.StartPage(h.bb[0], h.bb[1], h.bb[2], h.bb[3]);
    h.pgOpen = !0;
  }
};
FromPS.getPSShadingFill = function (h, F) {
  function d(f) {
    var N,
      L = f.typ,
      P = f.val;
    if (L == "dict") {
      N = {};
      for (var j in P) N["/" + j] = d(P[j]);
    } else if (L == "array") {
      N = [];
      for (var v = 0; v < P.length; v++) N.push(d(P[v]));
    } else if (L == "string") {
      N = "";
      for (var v = 0; v < P.length; v++) N += String.fromCharCode(P[v]);
    } else if (["boolean", "integer", "real", "name"].indexOf(L) != -1) N = P;
    else if (L == "procedure") {
      var l = "";
      for (var v = 0; v < P.length; v++) l += P[v].val + " ";
      l = "{ " + l + "}";
      var p = new Uint8Array(l.length);
      for (var v = 0; v < l.length; v++) p[v] = l.charCodeAt(v);
      N = {
        "/FunctionType": 4,
        "/Domain": [0, 1],
        "/Range": [0, 1, 0, 1, 0, 1, 0, 1],
        "/Length": l.length,
        stream: p,
      };
    } else {
      console.log(f);
      throw "e";
    }
    return N;
  }
  var t = d(h);
  return FromPS.getShadingFill(t, F);
};
FromPS.F = {
  HexDecode: function (h) {
    var F = [];
    FromPS.readHex(h, 1e9, F);
    return new Uint8Array(F);
  },
  ASCII85Decode: function (h) {
    var F = [85 * 85 * 85 * 85, 85 * 85 * 85, 85 * 85, 85, 1],
      d = [],
      t = 0,
      f = 0,
      N = 0,
      L = h.off,
      P = h.buff,
      v = P.length;
    while (!0) {
      var l = P[L++];
      if (FromPS.isWhite(l)) {
      } else if (l == 126) {
        if (f != 0) {
          for (var p = f; p < 5; p++) N += 84 * F[f];
          for (var p = 1; p < f; p++) d.push((N >>> (32 - p * 8)) & 255);
        }
        h.off = L + 1;
        return new Uint8Array(d);
      } else if (l == 122) {
        d.push(0);
        d.push(0);
        d.push(0);
        d.push(0);
      } else {
        N += (l - 33) * F[f];
        f++;
        if (f == 5) {
          d.push((N >>> 24) & 255);
          d.push((N >>> 16) & 255);
          d.push((N >>> 8) & 255);
          d.push((N >>> 0) & 255);
          f = 0;
          N = 0;
        }
      }
    }
  },
  RunLengthDecode: function (h) {
    var F = [],
      d = h.off,
      t = h.buff.length;
    while (d < t) {
      var f = h.buff[d];
      d++;
      if (f == 128) {
        break;
      }
      if (f < 128) {
        for (var N = 0; N < f + 1; N++) F.push(h.buff[d + N]);
        d += f + 1;
      } else {
        for (var N = 0; N < 257 - f; N++) F.push(h.buff[d]);
        d++;
      }
    }
    h.off = d;
    return new Uint8Array(F);
  },
  FlateDecode: function (h) {
    var F = h.buff;
    if (F.length == 0) return F;
    var d = new Uint8Array(F.buffer, F.byteOffset + h.off + 2, F.length - 2),
      t = pako.inflateRaw(d);
    return t;
  },
  LZWDecode: function (h) {
    var F = new Uint8Array((h.buff.length - h.off) * 20),
      d = UTIF.decode._decodeLZW(h.buff, h.off, h.buff.length - h.off, F, 0, 8);
    return F.slice(0, d);
  },
  _myLZW: (function () {
    var h = {},
      F = function (t, f, N, L, P) {
        for (var v = 0; v < P; v += 4) {
          N[L + v] = t[f + v];
          N[L + v + 1] = t[f + v + 1];
          N[L + v + 2] = t[f + v + 2];
          N[L + v + 3] = t[f + v + 3];
        }
      },
      d = function (t, f, N, L) {
        if (!h.c) {
          var P = new Uint32Array(65535),
            v = new Uint16Array(65535),
            l = new Uint8Array(2e6);
          for (var p = 0; p < 256; p++) {
            l[p << 2] = p;
            P[p] = p << 2;
            v[p] = 1;
          }
          h.c = [P, v, l];
        }
        var u = h.c[0],
          w = h.c[1],
          l = h.c[2],
          i = 258,
          E = 258 << 2,
          g = 9,
          $ = f << 3,
          n = 256,
          I = 257,
          a = 0,
          o = 0,
          U = 0;
        while (!0) {
          a = (t[$ >>> 3] << 16) | (t[($ + 8) >>> 3] << 8) | t[($ + 16) >>> 3];
          o = (a >> (24 - ($ & 7) - g)) & ((1 << g) - 1);
          $ += g;
          if (o == I) break;
          if (o == n) {
            g = 9;
            i = 258;
            E = 258 << 2;
            a =
              (t[$ >>> 3] << 16) | (t[($ + 8) >>> 3] << 8) | t[($ + 16) >>> 3];
            o = (a >> (24 - ($ & 7) - g)) & ((1 << g) - 1);
            $ += g;
            if (o == I) break;
            N[L] = o;
            L++;
          } else if (o < i) {
            var B = u[o],
              J = w[o];
            F(l, B, N, L, J);
            L += J;
            if (U >= i) {
              u[i] = E;
              l[u[i]] = B[0];
              w[i] = 1;
              E = (E + 1 + 3) & ~3;
              i++;
            } else {
              u[i] = E;
              var O = u[U],
                T = w[U];
              F(l, O, l, E, T);
              l[E + T] = l[B];
              T++;
              w[i] = T;
              i++;
              E = (E + T + 3) & ~3;
            }
            if (i + 1 == 1 << g) g++;
          } else {
            if (U >= i) {
              u[i] = E;
              w[i] = 0;
              i++;
            } else {
              u[i] = E;
              var O = u[U],
                T = w[U];
              F(l, O, l, E, T);
              l[E + T] = l[E];
              T++;
              w[i] = T;
              i++;
              F(l, E, N, L, T);
              L += T;
              E = (E + T + 3) & ~3;
            }
            if (i + 1 == 1 << g) g++;
          }
          U = o;
        }
        return L;
      };
    return d;
  })(),
};
FromPS.B = {
  readUshort: function (h, F) {
    return (h[F] << 8) | h[F + 1];
  },
  readUint: function (h, F) {
    return (
      h[F] * (256 * 256 * 256) + ((h[F + 1] << 16) | (h[F + 2] << 8) | h[F + 3])
    );
  },
  readASCII: function (h, F, d) {
    var t = "";
    for (var f = 0; f < d; f++) t += String.fromCharCode(h[F + f]);
    return t;
  },
};
FromPS.nrm = function (h) {
  return Math.max(0, Math.min(1, h));
};
FromPS.makeArr = function (h, F) {
  var d = [];
  for (var t = 0; t < h.length; t++) d.push({ typ: F, val: h[t] });
  return d;
};
FromPS.readArr = function (h) {
  var F = [];
  for (var d = 0; d < h.length; d++) F.push(h[d].val);
  return F;
};
FromPS.makeStr = function (h) {
  var F = [];
  for (var d = 0; d < h.length; d++) F.push(h.charCodeAt(d));
  return F;
};
FromPS.readStr = function (h) {
  var F = "";
  for (var d = 0; d < h.length; d++) F += String.fromCharCode(h[d]);
  return F;
};
FromPS.getFromStacks = function (h, F) {
  var d = F.length - 1;
  while (d >= 0) {
    if (F[d][h] != null) return F[d][h];
    d--;
  }
  return null;
};
FromPS.where = function (h, F) {
  var d = F.length - 1;
  while (d >= 0) {
    if (F[d][h] != null) return F[d];
    d--;
  }
  return null;
};
FromPS.skipWhite = function (h) {
  var F = h.off,
    d = h.buff,
    t = FromPS.isWhite;
  while (t(d[F]) || d[F] == 37) {
    while (t(d[F])) F++;
    if (d[F] == 37) {
      while (F < d.length && !FromPS.isEOL(d[F])) F++;
      F++;
    }
  }
  h.off = F;
};
FromPS.getToken = function (h, F) {
  if (h.length == 0) return null;
  var d = h[h.length - 1];
  if (d.typ == "procedure") {
    var t = d.val[d.off];
    d.off++;
    if (d.off == d.val.length) h.pop();
    return t;
  }
  if (d.typ == "name") {
    h.pop();
    return d;
  }
  var f = FromPS.getFToken(d.val, F);
  while (f == null && h.length > 1) {
    h.pop();
    if (h.length != 0) f = FromPS.getFToken(h[h.length - 1].val, F);
  }
  return f;
};
FromPS.getFToken = function (h, F) {
  FromPS.skipWhite(h);
  var d = FromPS.isWhite,
    t = FromPS.isSpecl,
    f = h.off,
    N = h.buff,
    L = null;
  if (f >= N.length) return null;
  var P = N[f],
    v = String.fromCharCode(P);
  f++;
  if (v == "(") {
    var l = 0,
      p = f;
    while (!(N[p] == 41 && l == 0)) {
      var u = N[p];
      if (u == 40) l++;
      else if (u == 41) l--;
      else if (u == 92) p++;
      p++;
    }
    var w = [];
    for (var s = 0; s < p - f; s++) w.push(N[f + s]);
    f = p + 1;
    w = FromPS.getString(w);
    L = { typ: "string", val: w };
  } else if (v == "{" || v == "}" || v == "[" || v == "]") {
    L = { typ: "name", val: v };
  } else if ((v == "<" && N[f] == 60) || (v == ">" && N[f] == 62)) {
    L = { typ: "name", val: v == "<" ? "<<" : ">>" };
    f++;
  } else if (v == "<") {
    var w;
    if (N[f] == "~".charCodeAt(0)) {
      h.off = f + 1;
      var i = FromPS.F.ASCII85Decode(h);
      w = [];
      for (var s = 0; s < i.length; s++) w.push(i[s]);
      f = h.off;
    } else {
      var p = f;
      while (N[p] != 62) p++;
      var w = [];
      FromPS.readHex({ buff: N, off: f }, 1e9, w);
      f = p + 1;
    }
    L = { typ: "string", val: w };
  } else {
    var p = f;
    while (
      p < N.length &&
      !d(N[p]) &&
      (!t(N[p]) || (N[p] == 47 && N[p - 1] == 47 && p == f && F))
    )
      p++;
    var E = FromPS.B.readASCII(N, f - 1, p - f + 1);
    f = p;
    var g = parseFloat(E);
    if (!1) {
    } else if (E == "true" || E == "false")
      L = { typ: "boolean", val: E == "true" };
    else if (!isNaN(g)) {
      var $ = new Float32Array(1);
      $[0] = g;
      g = $[0];
      L = { typ: E.indexOf(".") == -1 ? "integer" : "real", val: g };
    } else {
      if (E.slice(0, 2) == "//" && F) {
        var n = E.slice(2),
          I = FromPS.getFromStacks(n, F);
        if (I != null) L = I;
        else L = { typ: "name", val: E };
      } else L = { typ: "name", val: E };
    }
  }
  h.off = f;
  return L;
};
FromPS.isSpecl = function (h) {
  return [40, 41, 60, 62, 91, 93, 123, 125, 37, 47].indexOf(h) != -1;
};
FromPS.isWhite = function (h) {
  return h == 0 || h == 9 || h == 10 || h == 12 || h == 13 || h == 32;
};
FromPS.isEOL = function (h) {
  return h == 10 || h == 13;
};
FromPS.getString = function (h) {
  var F = [],
    d = "n,r,t,b,f,\\,(,), ,/".split(","),
    t = ["\n", "\r", "\t", "\b", "\f", "\\", "(", ")", " ", "/"];
  for (var f = 0; f < h.length; f++) {
    var N = h[f],
      L = String.fromCharCode(N);
    if (L == "\\") {
      var P = String.fromCharCode(h[f + 1]);
      f++;
      if (P == "\r" || P == "\n") continue;
      var v = d.indexOf(P);
      if (v != -1) F.push(t[v].charCodeAt(0));
      else {
        var l =
          P + String.fromCharCode(h[f + 1]) + String.fromCharCode(h[f + 2]);
        f += 2;
        F.push(parseInt(l, 8));
      }
    } else F.push(N);
  }
  return F;
};
FromPS.makeString = function (h) {
  var F = "n r t b f \\ ( )".split(" "),
    d = ["\n", "\r", "\t", "\b", "\f", "\\", "(", ")"],
    t = [];
  for (var f = 0; f < h.length; f++) {
    var N = h[f],
      L = d.indexOf(String.fromCharCode(N));
    if (L == -1) t.push(N);
    else t.push(92, F[L].charCodeAt(0));
  }
  return t;
};
FromPS.readHex = function (h, F, d) {
  var t = 0,
    f = -1,
    N = h.off,
    L = h.buff.length;
  while (t != F && N < L) {
    var P = h.buff[N],
      l = 0;
    N++;
    if (47 < P && P < 58) l = P - 48;
    else if (96 < P && P < 103) l = 10 + P - 97;
    else if (64 < P && P < 71) l = 10 + P - 65;
    else if (P == 62) break;
    else if (FromPS.isWhite(P)) continue;
    else throw P + "," + String.fromCharCode(P);
    if (f == -1) f = l;
    else {
      d[t] = (f << 4) | l;
      f = -1;
      t++;
    }
  }
  h.off = N;
};
FromPS.getShadingFill = function (h, F, d) {
  var t = h["/ShadingType"],
    f = h["/ColorSpace"],
    N = h["/Extend"],
    L = h["/Coords"] ? h["/Coords"].slice(0) : null,
    P = "",
    l;
  if (N == null) N = [!1, !1];
  if (t == 2) P = "lin";
  else if (t == 3) P = "rad";
  else {
    console.log("Unknown shading type", t);
    return;
  }
  var j = h["/Function"],
    v = d ? d["/Function"] : null;
  if (j instanceof Array) {
    var p = j.length,
      u;
    for (var s = 0; s < p; s++) {
      var i = FromPS.getGrad(j[s], "/DeviceGray");
      if (s == 0) u = i;
      else {
        var E = u.length;
        for (var g = 0; g < E; g++) u[g][1][s] = i[g][1][0];
      }
    }
    if (f == "/DeviceCMYK")
      for (var s = 0; s < u.length; s++) u[s][1] = UDOC.C.cmykToRgb(u[s][1]);
    l = u;
  } else l = FromPS.getGrad(j, f, v);
  if (P == "rad" && L[2] > L[5]) {
    L = L.slice(3).concat(L.slice(0, 3));
    N.reverse();
    l.reverse();
    for (var s = 0; s < l.length; s++) l[s][0] = 1 - l[s][0];
  }
  if (!N[0] && P != "rad") {
    var $ = l[0];
    $[0] += 0.002;
    l.unshift([0.001, $[1].slice(), 0, 0.5]);
  }
  if (!N[1]) {
    var $ = l[l.length - 1];
    $[0] -= 0.002;
    l.push([0.999, $[1].slice(), 0, 0.5]);
  }
  var n = { typ: P, mat: F, grad: l, crds: L };
  return n;
};
FromPS.getGrad = function (h, F, d) {
  var t = FromPS._normColor,
    f = h["/Functions"],
    N = h["/FunctionType"],
    L = h["/Bounds"],
    P = h["/Encode"],
    j = d ? d["/Functions"] : null,
    v;
  if (N == 0) {
    v = [];
    var l = Math.min(4, h["/Size"][0]);
    for (var p = 0; p <= l; p++) v.push([p / l, t(h, [p / l], F), 1, 0.5]);
  } else if (N == 2)
    v = [
      [0, t(h, [0], F), 1, 0.5],
      [1, t(h, [1], F), 1, 0.5],
    ];
  else if (N == 3) {
    var u = [];
    if (L.length == 0 || L[0] > 0) u.push([0, 0, P[0]]);
    for (var p = 0; p < L.length; p++) u.push([L[p], p, P[2 * p + 1]]);
    if (L.length == 0 || L[L.length - 1] < 1)
      u.push([1, f.length - 1, P[P.length - 1]]);
    v = [];
    for (var p = 0; p < u.length; p++) {
      var s = u[p],
        i = f[s[1]],
        E = 0.5,
        g = i["/N"];
      if (g != null) {
        E = Math.pow(0.5, 1 / g);
        if (s[2] == 0) E = 1 - E;
      }
      v.push([
        s[0],
        t(i, [s[2]], F),
        j ? t(j[s[1]], [s[2]], "/DeviceGray")[0] : 1,
        E,
      ]);
    }
    for (var p = 1; p < v.length; p++) v[p - 1][3] = v[p][3];
  } else if (N == 4) {
    v = [];
    for (var p = 0; p < 5; p++) v.push([p / 5, t(h, [p / 5], F), 1, 0.5]);
  }
  return v;
};
FromPS._normColor = function (h, F, d) {
  var t = "/DeviceCMYK",
    f = "/DeviceRGB",
    N,
    L = h ? FromPS.Func(h, F) : F;
  if (d[3] && d[3]["/Length"]) {
    L = FromPS.Func(d[3], L);
    if (d[2] == t || L.length == 4) N = t;
    else if (d[2] == f) N = f;
    else if (d[2] && d[2][0] == "/Lab") N = "/Lab";
    else if (
      d[2] &&
      d[2][1] &&
      d[2][1]["/Alternate"] &&
      d[2][1]["/Alternate"][0] == "/Lab"
    )
      N = "/Lab";
    else if (
      d[2] &&
      d[2][1] &&
      d[2][1]["/Alternate"] &&
      d[2][1]["/Alternate"] == f
    )
      N = f;
    else if (d[2] && d[2][1] && d[2][1]["/N"] && d[2][1]["/N"] == 3) N = f;
    else {
      console.log(L, d);
      throw "unknown color profile";
    }
  } else if (d[0] == "/ICCBased" && d[1]) {
    var P = d[1]["/N"];
    if (P == 4) N = t;
    else if (P == 3) N = f;
    else throw P;
  } else if (d[0] == "/Separation") {
    L = FromPS._readSeparation(d, L[0]);
    N = f;
  } else if (d.length == 1) N = d[0];
  else if (d[0] == "/Lab") N = "/Lab";
  else if (d[2] == t) N = t;
  else N = d;
  if (N == f) L = L;
  else if (N == t) L = UDOC.C.cmykToRgb(L);
  else if (N == "/DeviceGray") L = [L[0], L[0], L[0]];
  else if (N == "/Lab") L = UDOC.C.labToRgb(L);
  else throw "Unknown color space " + N;
  return L;
};
FromPS._readSeparation = function (h, F) {
  var d = FromPS.Func(h[3], [F]),
    t;
  if (h && h[2] == "/DeviceCMYK") t = UDOC.C.cmykToRgb(d);
  else if (h && h[2] == "/DeviceGray") t = [d[0], d[0], d[0]];
  else if (h && h[2] && h[2][0] && h[2][0] == "/Lab") t = UDOC.C.labToRgb(d);
  else {
    t = d;
  }
  return t;
};
FromPS.Func = function (h, F) {
  var d = FromPS.intp,
    t = h["/Domain"],
    f = h["/Range"],
    L = h["/FunctionType"],
    P = [];
  for (var j = 0; j < F.length; j++)
    F[j] = Math.max(t[2 * j], Math.min(t[2 * j + 1], F[j]));
  if (L == 0) {
    var v = h["/Encode"],
      l = h["/Size"],
      p = h["/Decode"],
      u = f.length / 2;
    if (v == null) v = [0, l[0] - 1];
    if (p == null) p = f;
    for (var j = 0; j < F.length; j++) {
      var s = d(F[j], t[2 * j], t[2 * j + 1], v[2 * j], v[2 * j + 1]);
      F[j] = Math.max(0, Math.min(l[j] - 1, s));
    }
    var i = h["/DataSource"];
    for (var E = 0; E < u; E++) {
      var g = Math.round(F[0]),
        $;
      if (i) $ = i.charCodeAt(u * g + E);
      else $ = FromPS.GS(h)[u * g + E];
      $ = d($, 0, 255, p[2 * E], p[2 * E + 1]);
      P.push($);
    }
  } else if (L == 2) {
    var n = h["/C0"],
      I = h["/C1"],
      a = h["/N"];
    if (n == null) n = [0];
    if (I == null) I = [1];
    var g = F[0];
    for (var j = 0; j < n.length; j++)
      P[j] = n[j] + Math.pow(g, a) * (I[j] - n[j]);
  } else if (L == 4) {
    var o = FromPS._getEnv([0, 0, 0, 0]),
      K = !0;
    o.pgOpen = !0;
    var V = [],
      Q = [],
      i = FromPS._getDictStack([], {}),
      U = [];
    U.push({ typ: "file", val: { buff: FromPS.GS(h), off: 0 } });
    while (K) K = FromPS.step(Q, i, U, V, o, {}, FromPS.operator);
    var z = Q.pop();
    z.off = 0;
    U.push(z);
    for (var j = 0; j < F.length; j++) Q.push({ typ: "real", val: F[j] });
    K = !0;
    while (K) K = FromPS.step(Q, i, U, V, o, {}, FromPS.operator);
    for (var j = 0; j < Q.length; j++) P.push(Q[j].val);
  }
  if (f)
    for (var j = 0; j < P.length; j++)
      P[j] = Math.max(f[2 * j], Math.min(f[2 * j + 1], P[j]));
  return P;
};
FromPS.intp = function (h, F, d, t, f) {
  return t + ((h - F) * (f - t)) / (d - F);
};
FromPS.GS = function (h) {
  if (h.stream == null) {
    var F = h.buff;
    delete h.buff;
    var d = h["/Filter"],
      t = h["/DecodeParms"];
    if (d != null) {
      var f = typeof d == "string" ? [d] : d,
        N = !1;
      for (var L = 0; L < f.length; L++) {
        var P = f[L],
          v = { buff: F, off: 0 };
        if (P == "/Fl" || P == "/FlateDecode") {
          F = FromPS.F.FlateDecode(v);
        } else if (P == "/RL" || P == "/RunLengthDecode") {
          F = FromPS.F.RunLengthDecode(v);
        } else if (P == "/LZW" || P == "/LZWDecode") {
          F = FromPS.F.LZWDecode(v);
        } else if (P == "/AHx" || P == "/ASCIIHexDecode") {
          F = FromPS.F.HexDecode(v);
        } else if (P == "/A85" || P == "/ASCII85Decode") {
          F = FromPS.F.ASCII85Decode(v);
        } else if (
          P == "/DCTDecode" ||
          P == "/CCITTFaxDecode" ||
          P == "/JPXDecode" ||
          P == "/JBIG2Decode" ||
          P == "/DCT" ||
          P == "/CCF"
        ) {
          N = !0;
        } else {
          console.log(P, F);
          throw "e";
        }
      }
      if (!N) delete h["/Filter"];
    }
    if (t != null) {
      if (t instanceof Array) t = t[0];
      var l = t["/Predictor"];
      if (t && l != null && l != 1) {
        var p = t["/Columns"],
          u = t["/Colors"] ? t["/Colors"] : 1,
          w = u * p,
          i = F.length / (w + (l == 2 ? 0 : 1));
        if (l == 2) {
          if (u != 1) throw "e";
          for (var E = 0; E < i; E++)
            for (var g = 1; g < p; g++) F[E * p + g] += F[E * p + g - 1];
        } else {
          FromPS._filterZero(F, 0, p, i, u);
          F = F.slice(0, i * w);
        }
      }
    }
    h.stream = F;
  }
  return h.stream;
};
FromPS._filterZero = function (h, F, d, t, f) {
  var N = f * d,
    L = FromPS._paeth;
  for (var j = 0; j < t; j++) {
    var v = F + j * N,
      l = v + j + 1,
      p = h[l - 1];
    if (p == 0) for (var u = 0; u < N; u++) h[v + u] = h[l + u];
    else if (p == 1) {
      for (var u = 0; u < f; u++) h[v + u] = h[l + u];
      for (var u = f; u < N; u++) h[v + u] = (h[l + u] + h[v + u - f]) & 255;
    } else if (j == 0) {
      for (var u = 0; u < f; u++) h[v + u] = h[l + u];
      if (p == 2) for (var u = f; u < N; u++) h[v + u] = h[l + u] & 255;
      if (p == 3)
        for (var u = f; u < N; u++)
          h[v + u] = (h[l + u] + (h[v + u - f] >> 1)) & 255;
      if (p == 4)
        for (var u = f; u < N; u++)
          h[v + u] = (h[l + u] + L(h[v + u - f], 0, 0)) & 255;
    } else {
      if (p == 2) {
        for (var u = 0; u < N; u++) h[v + u] = (h[l + u] + h[v + u - N]) & 255;
      }
      if (p == 3) {
        for (var u = 0; u < f; u++)
          h[v + u] = (h[l + u] + (h[v + u - N] >> 1)) & 255;
        for (var u = f; u < N; u++)
          h[v + u] = (h[l + u] + ((h[v + u - N] + h[v + u - f]) >> 1)) & 255;
      }
      if (p == 4) {
        for (var u = 0; u < f; u++)
          h[v + u] = (h[l + u] + L(0, h[v + u - N], 0)) & 255;
        for (var u = f; u < N; u++)
          h[v + u] =
            (h[l + u] + L(h[v + u - f], h[v + u - N], h[v + u - f - N])) & 255;
      }
    }
  }
  return h;
};
FromPS._paeth = function (h, F, d) {
  var t = h + F - d,
    f = Math.abs(t - h),
    N = Math.abs(t - F),
    L = Math.abs(t - d);
  if (f <= N && f <= L) return h;
  else if (N <= L) return F;
  return d;
};
function FromPDF() {}
FromPDF.indexOfXref = function (h) {
  var F = h.length - 3;
  while (FromPS.B.readASCII(h, F, 3) != "%%E") F--;
  while (h[F - 1] == 37) F--;
  var d = F;
  F--;
  while (FromPS.isEOL(h[F]) || h[F] == 32) F--;
  while (!FromPS.isEOL(h[F]) && h[F] != 32) F--;
  F++;
  var t = parseInt(FromPS.B.readASCII(h, F, d - F));
  if (isNaN(t)) throw "no xref";
  return t;
};
FromPDF.Parse = function (h, F) {
  h = new Uint8Array(h);
  var d = 0;
  while (h[d] == 32) d++;
  if (d != 0) h = new Uint8Array(h.buffer, h.byteOffset + d, h.length - d);
  var t = FromPDF.indexOfXref(h),
    f = [],
    N = FromPDF.readXrefTrail(h, t, f),
    L = -1;
  for (var P = 0; P < f.length; P++) if (f[P] == null) L = P;
  if (N == null || L != -1 || typeof N["/Root"] != "object") {
    console.log("PDF is broken, trying to rebuild");
    while (f.length != 0) f.pop();
    N = FromPDF.brokenXrefTrail(h, f);
  }
  if (N["/Encrypt"]) {
    alert("Encrypted PDFs are not supported yet.");
    return;
  }
  var v = { buff: h, off: 0 },
    l = N["/Root"];
  if (l.typ == "ref") N["/Root"] = FromPDF.getIndirect(l.ind, l.gen, v, f);
  var p = N["/Root"]["/Pages"];
  if (p && p.typ == "ref")
    N["/Root"]["/Pages"] = FromPDF.getIndirect(p.ind, p.gen, v, f);
  if (N["/Root"]["/Type"] == "/Pages") N["/Root"] = { "/Pages": N["/Root"] };
  var u = [N["/Root"]["/Pages"]];
  while (u.length != 0) {
    var w = u.pop();
    if (w["/Kids"]) {
      var s = w["/Kids"];
      for (var P = 0; P < s.length; P++) {
        if (s[P].typ == "ref")
          s[P] = FromPDF.getIndirect(s[P].ind, s[P].gen, v, f);
        FromPDF.solveIndirects(s[P], v, f, 0);
        u.push(s[P]);
      }
    }
  }
  var i = Date.now();
  FromPDF.render(N["/Root"], F, N);
  F.Done();
};
FromPDF.solveIndirects = function (h, F, d, t) {
  if (t > 50) return;
  if (typeof h == "object")
    for (var f in h)
      if (f.startsWith("/")) {
        if (h[f] && h[f].typ == "ref" && d[h[f].ind])
          h[f] = FromPDF.getIndirect(h[f].ind, h[f].gen, F, d);
        FromPDF.solveIndirects(h[f], F, d, t + 1);
      }
};
FromPDF.render = function (h, F, d) {
  var t =
      "CS cs SCN scn SC sc sh Do gs ID EI cm y v B B* BT ET ETQ Tj TJ Tf Tm Td T* Tc Tw Tz TL Tr Ts MP DP BMC BDC EMC BX EX ri TRGR trgr _reset_".split(
        " "
      ),
    f = {
      J: "setlinecap",
      j: "setlinejoin",
      w: "setlinewidth",
      d: "setdash",
      M: "setmiterlimit",
      i: "setflat",
      q: "gsave",
      Q: "grestorePDF",
      m: "moveto",
      l: "lineto",
      c: "curveto",
      h: "closepath",
      re: "_drawRect_",
      W: "clip",
      "W*": "eoclip",
      f: "fill",
      F: "fill",
      "f*": "eofill",
      S: "stroke",
      b: "h B",
      "b*": "h B*",
      n: "newpath",
      RG: "/DeviceRGB  CS SCN",
      rg: "/DeviceRGB  cs scn",
      G: "/DeviceGray CS SCN",
      g: "/DeviceGray cs scn",
      K: "/DeviceCMYK CS SCN",
      k: "/DeviceCMYK cs scn",
      TD: "dup neg TL Td",
      '"': "exch Tc exch Tw '",
      "'": "T* Tj",
      s: "h S",
      BI: "/BI",
    },
    L = 0;
  f = FromPS.makeProcs(f);
  var N = [h["/Pages"]];
  while (N.length != 0) {
    var P = N.pop();
    if (P["/Kids"]) {
      var j = P["/Kids"];
      for (var v = j.length - 1; v >= 0; v--) N.push(j[v]);
      continue;
    }
    var l = P["/MediaBox"];
    if (l == null) l = h["/Pages"]["/MediaBox"];
    if (l == null) l = P["/Parent"]["/MediaBox"];
    L += (l[2] - l[0]) * (l[3] - l[1]);
  }
  var N = [h["/Pages"]],
    p = -1,
    u = [-1e9, 1e9];
  while (N.length != 0) {
    var P = N.pop();
    if (P["/Kids"]) {
      var j = P["/Kids"];
      for (var v = j.length - 1; v >= 0; v--) N.push(j[v]);
      continue;
    }
    p++;
    if (p < u[0]) continue;
    if (P["/Resources"] == null) P["/Resources"] = h["/Pages"]["/Resources"];
    if (P["/Resources"] == null) P["/Resources"] = P["/Parent"]["/Resources"];
    var w = P["/Contents"];
    if (w == null) continue;
    if (w.length == null) w = [w];
    var s = h["/Pages"]["/Rotate"];
    if (s == null) s = P["/Rotate"];
    var i = s != null && (s + 36e3) % 360 == 90,
      l = P["/MediaBox"];
    if (l == null) l = h["/Pages"]["/MediaBox"];
    if (l == null) l = P["/Parent"]["/MediaBox"];
    if (i) l = [l[0], l[1], l[3], l[2]];
    var E = FromPS._getEnv(l);
    E.pgOpen = !0;
    var g = [],
      $ = [],
      n = FromPS._getDictStack(t, f),
      I = [];
    if (i) {
      UDOC.M.rotate(E.gst.ctm, Math.PI / 2);
      UDOC.M.translate(E.gst.ctm, 0, l[3]);
    }
    F.StartPage(l[0], l[1], l[2], l[3], L);
    if (d["/Encrypt"]) {
      if (N.length == 0) alert("Encrypted PDF is not supported yet.");
    } else
      for (var a = 0; a < w.length; a++) {
        if (w[a].buff == null || w[a]["/Length"] == 0) continue;
        if (w[a]["/Type"] == "/XObject" && w[a]["/Subtype"] == "/Image") {
          var o = w[a],
            S = E.gst,
            V = S.ctm;
          S.ctm = [o["/Width"] / 3, 0, 0, o["/Height"] / 3, 0, 0];
          FromPDF.putImage(o, S, F);
          S.ctm = V;
          continue;
        }
        var Q = FromPS.GS(w[a]),
          U = Q.length - 1,
          K = !0;
        while (Q[U] == 0) U--;
        Q = new Uint8Array(Q.buffer, Q.byteOffset, U + 1);
        I.push({ typ: "file", val: { buff: Q, off: 0, extra: P } });
        while (K) {
          K = FromPS.step($, n, I, g, E, F, FromPDF.operator);
        }
      }
    F.ShowPage();
    if (p >= u[1]) break;
  }
};
FromPDF.addCmd = function (h, F, d) {
  var t = h.length,
    f = new Uint8Array(t);
  for (var N = 0; N < t; N++) f[N] = h.charCodeAt(N);
  F.push({ typ: "file", val: { buff: f, off: 0, extra: d } });
};
FromPDF._pushForm = function (h, F, d, t) {
  var f = FromPS.GS(F);
  if (f == null) return;
  var N = F["/Matrix"];
  if (d) FromPDF.addCmd("Q TRGR", h, F);
  if (t) FromPDF.addCmd("Q", h, F);
  if (N) {
    var L = N.slice(0);
    UDOC.M.invert(L);
    FromPDF.addCmd(L.join(" ") + " cm", h, F);
  }
  h.push({ typ: "file", val: { buff: f, off: 0, extra: F } });
  if (N) FromPDF.addCmd(N.join(" ") + " cm", h, F);
  if (t) FromPDF.addCmd("q", h, F);
  if (d) FromPDF.addCmd("trgr q _reset_", h, F);
};
FromPDF.operator = function (h, F, d, t, f, N, L) {
  var P = N.gst,
    j = t.length - 1;
  while (t[j].typ != "file") j--;
  var v = t[j].val,
    l = v.extra["/Resources"];
  if (h == "Do") {
    var p = F.pop().val;
    if (l["/XObject"][p] == null) p = p.replace("_", "#5F");
    var u = l["/XObject"][p],
      w = u["/Subtype"];
    if (w == "/Form") {
      var s = u["/Group"],
        i =
          s &&
          s["/S"] == "/Transparency" &&
          (P.ca != 1 || P.bmode != "/Normal");
      if (u["/Resources"] == null) u["/Resources"] = l;
      FromPDF._pushForm(t, u, i);
    } else if (w == "/Image") {
      FromPDF.putImage(u, P, L);
    } else console.log("Unknown XObject", w);
  } else if (h == "trgr") {
    L.StartTGroup(P);
  } else if (h == "TRGR") L.EndTGroup();
  else if (h == "_reset_") {
    P.ca = P.CA = 1;
    P.bmode = "/Normal";
  } else if (h == "gs") {
    if (F.length == 0) return;
    var E = F.pop().val,
      g = l["/ExtGState"] ? l["/ExtGState"][E] : {};
    for (var $ in g) {
      var n = g[$];
      if ($ == "/Type") continue;
      else if ($ == "/CA") P.CA = n;
      else if ($ == "/ca") P.ca = n;
      else if ($ == "/BM") P.bmode = n;
      else if ($ == "/LC") P.lcap = n;
      else if ($ == "/LJ") P.ljoin = n;
      else if ($ == "/LW") P.lwidth = n;
      else if ($ == "/ML") P.mlimit = n;
      else if ($ == "/SA") P.SA = n;
      else if ($ == "/OPM") P.OPM = n;
      else if ($ == "/AIS") P.AIS = n;
      else if ($ == "/OP") P.OP = n;
      else if ($ == "/op") P.op = n;
      else if ($ == "/SMask") {
        if (typeof n == "string") P.SMask = n;
        else if (n["/G"]) {
          var I = n["/G"]["/Resources"];
          if (I) {
            var o = I["/Shading"];
            for (var S in o) {
              o = o[S];
              break;
            }
            P.SMask = o;
          }
        } else throw "e";
      } else if ($ == "/SM") P.SM = n;
      else if ($ == "/HT" || $ == "/TR") {
      } else console.log("Unknown gstate property: ", $, n);
    }
  } else if (h == "ID") {
    var V = {};
    while (!0) {
      var n = F.pop().val;
      if (n == "/BI") break;
      V[F.pop().val] = n;
    }
    v.off++;
    var Q = V["/W"],
      U = V["/H"],
      K = V["/F"],
      z = Q * U,
      B = new Uint8Array(z * 4),
      J = V["/CS"],
      G = V["/BPC"];
    if (J == null) J = "/G";
    var O = v.off,
      T = v.buff;
    while (
      !FromPS.isWhite(T[O]) ||
      T[O + 1] != 69 ||
      T[O + 2] != 73 ||
      !FromPS.isWhite(T[O + 3])
    )
      O++;
    var W = T.slice(v.off, O);
    v.off += W.length;
    if (K && K != "/CCF") {
      var Y = [];
      if (typeof K == "string") Y = [K];
      else for (var q = 0; q < K.length; q++) Y.push(K[q].val);
      var ce = { buff: W, "/Filter": Y };
      if (V["/DP"]) {
        var bO = (ce["/DecodeParms"] = {}),
          a2 = ["Predictor", "Columns", "Colors"];
        for (var q = 0; q < 3; q++)
          if (V["/DP"][a2[q]]) bO["/" + a2[q]] = V["/DP"][a2[q]].val;
      }
      W = FromPS.GS(ce);
      delete V["/F"];
      delete V["/DP"];
    }
    if (J == "/G") {
      var A = [0, 0, 0, 255, 255, 255],
        cu = new Uint8Array(z * 4);
      if (V["/ImageMask"] == !0) A.reverse();
      FromPDF.plteImage(W, 0, B, G == 1 ? A : null, Q, U, G);
    } else if (J == "/RGB" && W.length == Q * U * 3) {
      for (var q = 0; q < z; q++) {
        var al = q * 3,
          bR = q * 4;
        B[bR] = W[al];
        B[bR + 1] = W[al + 1];
        B[bR + 2] = W[al + 2];
        B[bR + 3] = 255;
      }
    } else if (J && J[0].typ != null) {
      FromPDF.plteImage(W, 0, B, J[3].val, Q, U, G);
    } else B = W;
    L.PutImage(P, B, Q, U);
  } else if (h == "n" || h == "BT" || h == "EI") {
  } else if (h == "ET" || h == "ETQ") {
    P.font.Tm = [1, 0, 0, 1, 0, 0];
    P.font.Tlm = P.font.Tm.slice(0);
  } else if (h == "y" || h == "v") {
    var aw = P.ctm.slice(0);
    UDOC.M.invert(aw);
    var $ = UDOC.M.multPoint(aw, P.cpos),
      bF = F.pop().val,
      bD = F.pop().val,
      c4 = F.pop().val,
      bZ = F.pop().val;
    if (h == "y") UDOC.G.curveTo(P, bZ, c4, bD, bF, bD, bF);
    else UDOC.G.curveTo(P, $[0], $[1], bZ, c4, bD, bF);
  } else if (h == "B" || h == "B*") {
    L.Fill(P, h == "B*");
    L.Stroke(P);
    UDOC.G.newPath(P);
  } else if (h == "cm" || h == "Tm") {
    var cv = [];
    for (var q = 0; q < 6; q++) cv.push(F.pop().val);
    cv.reverse();
    if (h == "cm") {
      UDOC.M.concat(cv, P.ctm);
      P.ctm = cv;
    } else {
      P.font.Tm = cv;
      P.font.Tlm = cv.slice(0);
    }
  } else if (h == "Td" || h == "T*") {
    var a9 = 0,
      bP = 0;
    if (h == "T*") {
      a9 = 0;
      bP = -P.font.Tl;
    } else {
      bP = F.pop().val;
      a9 = F.pop().val;
    }
    var cs = [1, 0, 0, 1, a9, bP];
    UDOC.M.concat(cs, P.font.Tlm);
    P.font.Tm = cs;
    P.font.Tlm = cs.slice(0);
  } else if (h == "Tf") {
    var bf = F.pop().val,
      ca = F.pop().val;
    P.font.Tf = ca;
    P.font.Tfs = bf;
  } else if (h == "Tj" || h == "TJ") {
    var a_ = F.pop();
    if (a_.typ == "string") a_ = [a_];
    else a_ = a_.val;
    var c2 = P.font.Tf,
      ca = l["/Font"][c2];
    if (ca == null) ca = l["/Font"][c2.replace("_", "#5F")];
    var aZ = t[0].val.extra["/Resources"]["/Font"];
    if (ca == null && aZ) ca = aZ[c2];
    if (ca == null && aZ)
      for (var bQ in aZ) {
        ca = aZ[bQ];
        break;
      }
    if (ca == null || ca == "null") return;
    var cr = P.font.Tfs / 1e3,
      bu = function (aP, ae) {
        var cA = [1, 0, 0, 1, ae, 0];
        UDOC.M.concat(cA, aP.Tm);
        aP.Tm = cA;
      };
    for (var q = 0; q < a_.length; q++) {
      if (a_[q].typ != "string") {
        if (q == 0) bu(P.font, -cr * a_[q].val);
        continue;
      }
      var aY = FromPDF.getString(a_[q].val, ca);
      if (a_[q + 1] && a_[q + 1].typ != "string") {
        var aS = a_[q + 1].val;
        aY[1] += -aS;
        if (-900 < aS && aS < -100) aY[0] += " ";
      }
      P.font.Tf = aY[2];
      L.PutText(P, aY[0], aY[1] / 1e3);
      P.font.Tf = c2;
      bu(P.font, cr * aY[1]);
    }
  } else if (h == "Tc") P.font.Tc = F.pop().val;
  else if (h == "Tw") P.font.Tw = F.pop().val;
  else if (h == "Tz") P.font.Th = F.pop().val;
  else if (h == "TL") P.font.Tl = F.pop().val;
  else if (h == "Tr") P.font.Tmode = F.pop().val;
  else if (h == "Ts") P.font.Trise = F.pop().val;
  else if (h == "CS" || h == "cs") {
    var J = F.pop().val;
    if (h == "CS") P.sspace = J;
    else P.space = J;
  } else if (h == "SCN" || h == "scn" || h == "SC" || h == "sc") {
    var cy = h == "SCN" || h == "SC",
      b3 = cy ? P.sspace : P.space,
      J,
      a6 = null,
      bS = l ? l["/ColorSpace"] : null;
    if (bS != null && bS[b3] != null) {
      if (bS[b3][1] && bS[b3][1]["/Alternate"]) J = bS[b3][1]["/Alternate"];
      else J = typeof bS[b3] == "string" ? bS[b3] : bS[b3][0];
    } else J = b3;
    if (J == "/DeviceN") {
      var bI = bS[b3],
        bM = bI[1].length;
      for (var q = 0; q < bM; q++) F.pop();
      a6 = [1, 0, 0];
    } else if (
      J == "/Lab" ||
      J == "/DeviceRGB" ||
      J == "/CalRGB" ||
      (J == "/ICCBased" && bS[b3][1]["/N"] == 3)
    ) {
      a6 = [F.pop().val, F.pop().val, F.pop().val];
      a6.reverse();
    } else if (
      J == "/DeviceCMYK" ||
      (J == "/ICCBased" && bS[b3][1]["/N"] == 4)
    ) {
      var aM = [F.pop().val, F.pop().val, F.pop().val, F.pop().val];
      aM.reverse();
      a6 = UDOC.C.cmykToRgb(aM);
    } else if (
      J == "/DeviceGray" ||
      J == "/CalGray" ||
      (J == "/ICCBased" && bS[b3][1]["/N"] == 1)
    ) {
      var ch = FromPS.nrm(F.pop().val);
      a6 = [ch, ch, ch];
    } else if (J == "/Separation") {
      a6 = FromPS._readSeparation(bS[b3], F.pop().val);
    } else if (J == "/Indexed") {
      var A = FromPDF.getPalette(bS[b3]),
        ck = F.pop().val * 3;
      a6 = [A[ck] / 255, A[ck + 1] / 255, A[ck + 2] / 255];
    } else if (J == "/Pattern") {
      var bY = l["/Pattern"][F.pop().val],
        aC = bY["/PatternType"];
      if (aC == 1) {
        console.log("tile pattern");
        FromPDF._pushForm(t, bY, !1, !0);
        return;
      }
      var b8 = bY["/Matrix"];
      if (b8 == null) b8 = [1, 0, 0, 1, 0, 0];
      var bX = P.SMask == "/None" ? null : P.SMask;
      a6 = FromPS.getShadingFill(bY["/Shading"], b8, bX);
      if (a6 == null) a6 = [0, 0, 0];
    } else {
      console.log(b3, J, bS, l);
      a6 = [1, 1, 1];
    }
    if (cy) P.COLR = a6;
    else P.colr = a6;
  } else if (h == "sh") {
    var o = l["/Shading"][F.pop().val],
      bX = P.SMask == "/None" ? null : P.SMask,
      a7 = P.colr,
      bw = P.pth;
    P.pth = P.cpth;
    P.cpth = UDOC.G.rectToPath(N.bb);
    P.colr = o ? FromPS.getShadingFill(o, P.ctm.slice(0), bX) : null;
    if (P.colr == null) P.colr = [0, 0, 0];
    L.Fill(P);
    P.colr = a7;
    P.pth = bw;
  } else if (h == "MP" || h == "BMC" || h == "ri") {
    F.pop();
  } else if (h == "DP" || h == "BDC") {
    F.pop();
    F.pop();
  } else if (h == "EMC" || h == "BX" || h == "EX") {
  } else throw ("Unknown operator", h);
};
FromPDF.putImage = function (h, F, d) {
  var t = h["/Width"],
    f = h["/Height"],
    N = h["/ColorSpace"],
    L = h["/SMask"],
    j = FromPDF.getImage(h),
    v = FromPDF.getJBIG2Glob(h),
    l,
    p;
  if (L && L["/Width"]) {
    var u = L["/Width"],
      w = L["/Height"],
      s = new Uint32Array(j.buffer.slice(j.byteOffset, j.byteOffset + 8));
    if ((u != t || w != f) && s[0] == s[1]) {
      var i = new Uint32Array(u * w);
      i.fill(s[0]);
      t = u;
      f = w;
      j = new Uint8Array(i.buffer);
    }
    if (u == t && w == f) {
      l = FromPDF.getImage(h["/SMask"]);
      p = FromPDF.getJBIG2Glob(h["/SMask"]);
      var E = L["/Decode"];
      if (E && E[0] == 1) for (var g = 0; g < l.length; g++) l[g] = 255 - l[g];
    }
  }
  if (h["/ImageMask"] == !0) {
    l = j;
    p = v;
    j = new Uint8Array(t * f * 4);
    v = null;
    var $ = F.colr[0] * 255,
      n = F.colr[1] * 255,
      I = F.colr[2] * 255;
    for (var g = 0; g < t * f * 4; g += 4) {
      j[g] = $;
      j[g + 1] = n;
      j[g + 2] = I;
      j[g + 3] = 255;
    }
  }
  if (j && j.byteOffset != 0) j = j.slice(0);
  if (l && l.byteOffset != 0) l = l.slice(0);
  d.PutImage(F, j, t, f, l, v, p);
};
FromPDF.getJBIG2Glob = function (h) {
  var F = h;
  F = F["/DecodeParms"];
  if (F == null) return null;
  if (F.length != null) F = F[0];
  if (F == null) return null;
  F = F["/JBIG2Globals"];
  if (F == null) return null;
  return FromPS.GS(F);
};
FromPDF.getImage = function (h) {
  var F = h["/Width"],
    d = h["/Height"],
    t = F * d,
    f = FromPS.GS(h),
    N = h["/Filter"],
    L = h["/ColorSpace"],
    j = h["/BitsPerComponent"],
    v = h["/Matte"],
    l = h.image;
  if (l == null) {
    var p = h["/Mask"];
    if (L && L[0] == "/Indexed") {
      var u = FromPDF.getPalette(L),
        w = new Uint8Array(t * 4);
      FromPDF.plteImage(f, 0, w, u, F, d, j, p);
      l = w;
    } else if (N == null && (L == null || L == "/DeviceGray")) {
      var u = [0, 0, 0, 255, 255, 255],
        w = new Uint8Array(t * 4);
      if (h["/Decode"] && h["/Decode"][0] == 1) {
        u.reverse();
      }
      if (h["/ImageMask"] == !0) u.reverse();
      FromPDF.plteImage(f, 0, w, j == 1 ? u : null, F, d, j, p);
      l = w;
    } else if (
      N == null &&
      L &&
      (L == "/DeviceCMYK" || (L[0] == "/ICCBased" && L[1] && L[1]["/N"] == 4))
    ) {
      var w = new Uint8Array(t * 4),
        s = [0, 0, 0, 0];
      for (var i = 0; i < t; i++) {
        var E = i * 4;
        s[0] = f[E] * (1 / 255);
        s[1] = f[E + 1] * (1 / 255);
        s[2] = f[E + 2] * (1 / 255);
        s[3] = f[E + 3] * (1 / 255);
        var g = UDOC.C.cmykToRgb(s);
        w[E] = ~~(g[0] * 255 + 0.5);
        w[E + 1] = ~~(g[1] * 255 + 0.5);
        w[E + 2] = ~~(g[2] * 255 + 0.5);
        w[E + 3] = 255;
      }
      l = w;
    } else if (N == null) {
      var $ = Math.round(255 / ((1 << j) - 1)),
        n = Math.ceil((F * 3 * j) / 8),
        w = new Uint8Array(t * 4);
      w.fill(255);
      var $ = Math.round(255 / ((1 << j) - 1));
      for (var I = 0; I < d; I++) {
        var a = n * I;
        for (var S = 0; S < F; S++) {
          var E = (I * F + S) * 4,
            Q = 3 * S;
          w[E] = FromPDF.getBitNum(f, a, Q, j) * $;
          w[E + 1] = FromPDF.getBitNum(f, a, Q + 1, j) * $;
          w[E + 2] = FromPDF.getBitNum(f, a, Q + 2, j) * $;
        }
      }
      l = w;
    } else {
      l = f;
    }
    if (v && v.join("") != "000") {
      var U = Math.round(v[0] * 255),
        K = Math.round(v[1] * 255),
        z = Math.round(v[2] * 255);
      for (var i = 0; i < l.length; i += 4) {
        l[i] = Math.max(l[i], U);
        l[i + 1] = Math.max(l[i + 1], K);
        l[i + 2] = Math.max(l[i + 2], z);
      }
    }
    h.image = l;
  }
  return l;
};
FromPDF.getPalette = function (h) {
  var F;
  if (h[3].length != null) {
    var d = h[3];
    F = new Uint8Array(256 * 3);
    for (var t = 0; t < d.length; t++) F[t] = d.charCodeAt(t);
  } else F = FromPS.GS(h[3]);
  if (h[1] == "/DeviceCMYK" || (h[1] && h[1][1] && h[1][1]["/N"] == 4)) {
    var f = F,
      F = new Uint8Array(256 * 3);
    for (var t = 0; t < 256; t++) {
      var N = t << 2,
        L = N - t,
        P = UDOC.C.cmykToRgb([
          f[N] / 255,
          f[N + 1] / 255,
          f[N + 2] / 255,
          f[N + 3] / 255,
        ]);
      F[L] = P[0] * 255;
      F[L + 1] = P[1] * 255;
      F[L + 2] = P[2] * 255;
    }
  }
  return F;
};
FromPDF.plteImage = function (h, F, d, t, f, N, L, j) {
  var v = Math.round(255 / ((1 << L) - 1)),
    l = Math.ceil((f * L) / 8);
  for (var p = 0; p < N; p++) {
    var u = F + l * p;
    for (var w = 0; w < f; w++) {
      var s = FromPDF.getBitNum(h, u, w, L),
        i = (p * f + w) << 2;
      if (t) {
        var E = s * 3;
        d[i] = t[E];
        d[i + 1] = t[E + 1];
        d[i + 2] = t[E + 2];
      } else {
        var g = s * v;
        d[i] = g;
        d[i + 1] = g;
        d[i + 2] = g;
      }
      d[i + 3] = 255;
      if (j && j[0] <= s && s <= j[1]) d[i + 3] = 0;
    }
  }
};
FromPDF.getBitNum = function (h, F, d, t) {
  var f = 0;
  if (t == 8) f = h[F + d];
  else if (t == 4) f = (h[F + (d >> 1)] >> ((1 - (d & 1)) << 2)) & 15;
  else if (t == 2) f = (h[F + (d >> 2)] >> ((3 - (d & 3)) << 1)) & 3;
  else if (t == 1) f = (h[F + (d >> 3)] >> ((7 - (d & 7)) << 0)) & 1;
  return f;
};
FromPDF.getString = function (h, F) {
  function d(W, Y) {
    console.log("approximating word widths");
    var q = 0,
      ce = 0.4;
    for (var n = 0; n < W.length; n++) {
      var B = W.charCodeAt(n);
      if (64 <= B && B <= 90) q += 1.3;
      else q++;
    }
    if (Y.indexOf("Courier") != -1) ce = 0.59;
    if (Y == "Helvetica" || Y == "Helvetica-Oblique") ce = 0.44;
    if (Y == "Helvetica-Bold") ce = 0.46;
    return q * 1e3 * ce;
  }
  var t = F["/Subtype"],
    f = "",
    N = 0,
    L = null,
    P = F["/ToUnicode"],
    j = F["/Encoding"],
    v = F,
    Q;
  if (P != null && typeof P != "object") P = null;
  if (t == "/Type0") v = F["/DescendantFonts"][0];
  if (P != null) f = FromPDF.toUnicode(h, P);
  else if (j == "/WinAnsiEncoding") f = FromPDF.encFromMap(h, FromPDF._win1252);
  else if (j == "/MacRomanEncoding")
    f = FromPDF.encFromMap(h, FromPDF._macRoman);
  else if (t == "/Type0") {
    var l = 0,
      p = v["/CIDSystemInfo"]["/Ordering"];
    if (p == "Identity") l = 0;
    else if (p == "Japan1") l = 31;
    else if (p == "GB1") l = 31;
    else if (p == "CNS1") l = 31;
    else if (p == "Korea1") l = 31;
    else {
      console.log("unknown ordering", p);
      l = 0;
    }
    for (var w = 0; w < h.length; w += 2) {
      var s = (h[w] << 8) | h[w + 1];
      f += String.fromCharCode(s + l);
    }
  } else if (j != null && j["/Type"] == "/Encoding") {
    var i = j["/Differences"],
      E = j["/BaseEncoding"],
      g = null,
      f = "";
    if (E == "/WinAnsiEncoding") g = FromPDF._win1252;
    if (E == "/MacRomanEncoding") g = FromPDF._macRoman;
    for (var n = 0; n < h.length; n++) {
      var I = h[n],
        a = -5,
        o = !1;
      if (i)
        for (var w = 0; w < i.length; w++) {
          if (typeof i[w] == "string") {
            if (I == a) {
              f += FromPDF.fromCName(i[w].slice(1));
              o = !0;
              break;
            }
            a++;
          } else a = i[w];
        }
      if (!o && g != null) {
        var S = g.indexOf(I);
        if (S != -1) I = String.fromCharCode(g[S + 1]);
        f += String.fromCharCode(I);
      } else if (!o) f += String.fromCharCode(I);
    }
  } else {
    f = FromPS.readStr(h);
  }
  var V = v["/FontDescriptor"],
    U = ["", "2", "3"];
  for (var n = 0; n < 3; n++)
    if (V && V["/FontFile" + U[n]]) Q = "/FontFile" + U[n];
  if (V) {
    if (V.psName) L = V.psName;
    else if (Q) {
      var K = FromPS.GS(V[Q]);
      if (Q != null && K && FromPS.B.readUint(K, 0) == 65536)
        L = V.psName = FromPDF._psName(K);
    }
  }
  if (L == null && F["/BaseFont"]) L = F["/BaseFont"].slice(1);
  if (L == null || L == "") L = "DejaVuSans";
  if (t == "/Type0") {
    var z = v["/W"];
    if (z && z.length == 0) z = null;
    if (z == null) {
      N = d(f, L);
    } else
      for (var n = 0; n < h.length; n += 2) {
        var B = (h[n] << 8) | h[n + 1],
          J = !1;
        for (var w = 0; w < z.length; w += 2) {
          var G = z[w],
            O = z[w + 1];
          if (O.length) {
            if (0 <= B - G && B - G < O.length) {
              N += O[B - G];
              J = !0;
            }
          } else {
            if (G <= B && B <= O) {
              N += z[w + 2];
              J = !0;
            }
            w++;
          }
        }
        if (!J) N += z[1].length ? z[1][0] : z[2];
      }
  } else if (
    t == "/Type1" ||
    t == "/Type3" ||
    t == "/TrueType" ||
    t == "/MMType1"
  ) {
    var T = F["/FirstChar"],
      z = F["/Widths"];
    if (z) for (var n = 0; n < h.length; n++) N += z[h[n] - T];
    else {
      N = d(f, L);
    }
  } else throw "unknown font type";
  return [f, N, L];
};
FromPDF._psName = function (h) {
  var F = FromPS.B.readUshort,
    d = F(h, 4),
    t = 0;
  for (var f = 0; f < d; f++) {
    var N = FromPS.B.readASCII(h, 12 + f * 16, 4),
      L = FromPS.B.readUint(h, 12 + f * 16 + 8);
    if (N == "name") {
      t = L;
      break;
    }
  }
  if (t == 0) return null;
  var P = F(h, t + 2),
    v = t + 6,
    l = t + 6;
  for (var f = 0; f < P; f++) {
    var p = F(h, l),
      u = F(h, l + 2),
      w = F(h, l + 4),
      s = F(h, l + 6),
      i = F(h, l + 8),
      E = F(h, l + 10),
      g;
    l += 12;
    var n = v + P * 12 + E;
    if (u == 1 || u == 10 || u == 3 || (p == 3 && u == 0)) {
      g = "";
      for (var I = 1; I < i; I += 2) g += String.fromCharCode(h[n + I]);
    } else if (u == 0 || u == 2) g = FromPS.B.readASCII(h, n, i);
    if (s == 6 && g != null && g.slice(0, 3) != "OTS")
      return g.replace(/\s/g, "");
  }
  return null;
};
FromPDF.encFromMap = function (h, F) {
  var d = "";
  for (var t = 0; t < h.length; t++) {
    var f = h[t],
      N = F.indexOf(f);
    if (N != -1) f = F[N + 1];
    d += String.fromCharCode(f);
  }
  return d;
};
FromPDF._win1252 = [
  128, 8364, 130, 8218, 131, 402, 132, 8222, 133, 8230, 134, 8224, 135, 8225,
  136, 710, 137, 8240, 138, 352, 139, 8249, 140, 338, 142, 381, 145, 8216, 146,
  8217, 147, 8220, 148, 8221, 149, 8226, 150, 8211, 151, 8212, 152, 732, 153,
  8482, 154, 353, 155, 8250, 156, 339, 158, 382, 159, 376,
];
FromPDF._macRoman = [
  128, 196, 129, 197, 130, 199, 131, 201, 132, 209, 133, 214, 134, 220, 135,
  225, 136, 224, 137, 226, 138, 228, 139, 227, 140, 229, 141, 231, 142, 233,
  143, 232, 144, 234, 145, 235, 146, 237, 147, 236, 148, 238, 149, 239, 150,
  241, 151, 243, 152, 242, 153, 244, 154, 246, 155, 245, 156, 250, 157, 249,
  158, 251, 159, 252, 160, 8224, 161, 176, 162, 162, 163, 163, 164, 167, 165,
  8226, 166, 182, 167, 223, 168, 174, 169, 169, 170, 8482, 171, 180, 172, 168,
  173, 9824, 174, 198, 175, 216, 176, 8734, 177, 177, 178, 8804, 179, 8805, 180,
  165, 181, 181, 182, 8706, 183, 8721, 184, 8719, 185, 960, 186, 8747, 187, 170,
  188, 186, 189, 937, 190, 230, 191, 248, 192, 191, 193, 161, 194, 172, 195,
  8730, 196, 402, 197, 8776, 198, 8710, 199, 171, 200, 187, 201, 8230, 202, 160,
  203, 192, 204, 195, 205, 213, 206, 338, 207, 339, 208, 8211, 209, 8212, 210,
  8220, 211, 8221, 212, 8216, 213, 8217, 214, 247, 215, 9674, 216, 255, 217,
  376, 218, 8260, 219, 8364, 220, 8249, 221, 8250, 222, 64257, 223, 64258, 224,
  8225, 225, 183, 226, 8218, 227, 8222, 228, 8240, 229, 194, 230, 202, 231, 193,
  232, 203, 233, 200, 234, 205, 235, 206, 236, 207, 237, 204, 238, 211, 239,
  212, 240, 63743, 241, 210, 242, 218, 243, 219, 244, 217, 245, 305, 246, 710,
  247, 732, 248, 175, 249, 728, 250, 729, 251, 730, 252, 184, 253, 733, 254,
  731, 255, 711,
];
FromPDF.fromCName = function (h) {
  if (h == "f_f_i") return "ffi";
  if (h.length == 1) return h;
  if (h.slice(0, 3) == "uni")
    return String.fromCharCode(parseInt(h.slice(3), 16));
  var F = {
      space: 32,
      exclam: 33,
      quotedbl: 34,
      numbersign: 35,
      dollar: 36,
      percent: 37,
      ampersand: 38,
      quotesingle: 39,
      parenleft: 40,
      parenright: 41,
      asterisk: 42,
      plus: 43,
      comma: 44,
      hyphen: 45,
      period: 46,
      slash: 47,
      zero: 48,
      one: 49,
      two: 50,
      three: 51,
      four: 52,
      five: 53,
      six: 54,
      seven: 55,
      eight: 56,
      nine: 57,
      colon: 58,
      semicolon: 59,
      less: 60,
      equal: 61,
      at: 64,
      bracketleft: 91,
      bracketright: 93,
      underscore: 95,
      braceleft: 123,
      braceright: 125,
      dieresis: 168,
      circlecopyrt: 169,
      copyright: 169,
      registered: 174,
      degree: 176,
      plusminus: 177,
      mu: 181,
      periodcentered: 183,
      Eacute: 201,
      Adieresis: 196,
      adieresis: 228,
      Udieresis: 220,
      germandbls: 223,
      udieresis: 252,
      Odieresis: 214,
      agrave: 224,
      ntilde: 241,
      odieresis: 246,
      Cacute: 262,
      cacute: 263,
      Ccaron: 268,
      ccaron: 269,
      Dcroat: 272,
      dcroat: 273,
      Ecaron: 283,
      ecaron: 283,
      dotlessi: 305,
      Scaron: 352,
      scaron: 353,
      Tcaron: 356,
      tcaron: 357,
      Zcaron: 381,
      zcaron: 382,
      alpha: 945,
      phi: 966,
      endash: 8211,
      emdash: 8212,
      asteriskmath: 8727,
      quoteright: 8217,
      quotedblbase: 8222,
      ellipsis: 8230,
      quotedblleft: 8220,
      quotedblright: 8221,
      bullet: 8226,
      minus: 8706,
      fi: 64257,
      fl: 64258,
    },
    d = F[h];
  if (d == null) {
    if (h.charAt(0) != "g") console.log("unknown character " + h);
    return h;
  }
  return String.fromCharCode(d);
};
FromPDF.toUnicode = function (h, F) {
  var d = F.cmap,
    t = "",
    f;
  if (d == null) {
    var N = { buff: FromPS.GS(F), off: 0 },
      L = [],
      P = FromPS._getDictStack({}),
      j = [{ typ: "file", val: N }],
      v = [],
      l = FromPS._getEnv([0, 0, 1, 1]),
      p = !0;
    l.pgOpen = !0;
    while (p) p = FromPS.step(L, P, j, v, l, null, FromPS.operator, !0);
    d = l.res.CMap.val;
    F.cmap = d;
  }
  for (var u in d) {
    d = d[u].val;
    break;
  }
  var w = d.bfrange,
    s = d.bfchar,
    E = d.bpc;
  for (var g = 0; g < h.length; g += E) {
    var n = h[g],
      I = !1;
    if (E == 2) n = (n << 8) | h[g + 1];
    if (!I && w)
      for (var a = 0; a < w.length; a += 3) {
        var o = w[a],
          S = w[a + 1],
          V = w[a + 2];
        if (o <= n && n <= S) {
          if (o == S && V == 0) {
          } else if (V.length == null) n += V - o;
          else n = V[n - o];
          I = !0;
          break;
        }
      }
    if (!I && s)
      for (var a = 0; a < s.length; a += 2)
        if (s[a] == n) {
          n = s[a + 1];
          I = !0;
          break;
        }
    if (n > 65535) t += String.fromCharCode(n >>> 16);
    t += String.fromCharCode(n);
  }
  return t;
};
FromPDF.brokenXrefTrail = function (h, F) {
  function d(w, s) {
    var i = s;
    while (48 <= w[s] && w[s] <= 57) s++;
    return FromPS.B.readASCII(w, i, s - i);
  }
  var t,
    f = h.length;
  for (var N = 0; N < f; N++) {
    if (FromPS.isEOL(h[N])) {
      var L = N;
      while (FromPS.isWhite(h[L])) L++;
      var P = d(h, L);
      if (P != "") {
        L += P.length;
        while (FromPS.isWhite(h[L])) L++;
        var v = d(h, L);
        if (v != "") {
          L += v.length;
          while (FromPS.isWhite(h[L])) L++;
          if (FromPS.B.readASCII(h, L, 3) == "obj") {
            var l = parseInt(P),
              p = parseInt(v);
            F[l] = { off: N + 1, gen: p, chr: "n" };
            N = L;
          }
        }
      } else if (
        h[L] == 116 &&
        h[L + 1] == 114 &&
        FromPS.B.readASCII(h, L, 7) == "trailer"
      ) {
        if (t == null) t = FromPDF._readTrailer(h, L + 7, F);
      } else if (
        h[L] == 115 &&
        h[L + 1] == 116 &&
        FromPS.B.readASCII(h, L, 9) == "startxref"
      ) {
        L += 10;
        while (FromPS.isWhite(h[L])) L++;
        var u = parseInt(d(h, L));
        if (u != 0 && t == null) t = FromPDF.readXrefTrail(h, u, F);
      }
    }
  }
  return t;
};
FromPDF._readTrailer = function (h, F, d) {
  var t = { buff: h, off: F },
    f = FromPDF.readObject(t, t, d);
  if (f["/Prev"]) FromPDF.readXrefTrail(h, f["/Prev"], d);
  return f;
};
FromPDF.readXrefTrail = function (h, F, d) {
  var t = FromPS.B.readASCII(h, F, 4);
  if (t == "xref") {
    var f = F + 4;
    if (h[f] == 13) f++;
    if (h[f] == 10) f++;
    while (!0) {
      if (FromPS.B.readASCII(h, f, 7) == "trailer") {
        f += 7;
        if (h[f] == 13) f++;
        if (h[f] == 10) f++;
        break;
      }
      var N = f;
      while (!FromPS.isEOL(h[f])) f++;
      var L = FromPS.B.readASCII(h, N, f - N);
      L = L.split(" ");
      var P = parseInt(L[0]),
        j = parseInt(L[1]);
      if (h[f] == 13) f++;
      if (h[f] == 10) f++;
      for (var v = 0; v < j; v++) {
        var l = P + v;
        if (d[l] == null)
          d[l] = {
            off: parseInt(FromPS.B.readASCII(h, f, 10)),
            gen: parseInt(FromPS.B.readASCII(h, f + 11, 5)),
            chr: FromPS.B.readASCII(h, f + 17, 1),
            val: null,
            opn: !1,
          };
        if (h[f + 16] != 32) return null;
        f += 20;
      }
    }
    return FromPDF._readTrailer(h, f, d);
  } else {
    var f = F,
      p = f + 32;
    while (f < p && FromPS.B.readASCII(h, f, 2) != "<<") f++;
    if (FromPS.B.readASCII(h, f, 2) == "<<") {
      var u = { buff: h, off: f },
        s = FromPDF.readObject(u, u, null, !0),
        i = 0,
        E = FromPS.GS(s),
        g = s["/W"],
        $ = s["/Index"],
        n = [],
        v = 0;
      if (E == null) return null;
      if ($) {
        for (v = 0; v < $.length; v += 2) {
          for (var I = 0; I < $[v + 1]; I++) n.push($[v] + I);
        }
      }
      v = 0;
      while (i < E.length) {
        var a = FromPDF.getInt(E, i, g[0]),
          f = 0,
          Q = 0,
          U = "n";
        i += g[0];
        var S = FromPDF.getInt(E, i, g[1]);
        i += g[1];
        var V = FromPDF.getInt(E, i, g[2]);
        i += g[2];
        if (a == 0) {
          f = S;
          Q = V;
          U = "f";
        }
        if (a == 1) {
          f = S;
          Q = V;
          U = "n";
        }
        if (a == 2) {
          f = S;
          Q = V;
          U = "s";
        }
        d[$ ? n[v] : v] = { off: f, gen: Q, chr: U, val: null, opn: !1 };
        v++;
      }
      if (s["/Prev"]) FromPDF.readXrefTrail(h, s["/Prev"], d);
      if (s["/Encrypt"]) return s;
      var K = { buff: h, off: 0 },
        z = ["/Root", "/Info"];
      for (v = 0; v < z.length; v++) {
        var B = z[v],
          J = s[B];
        if (J && J.typ == "ref") s[B] = FromPDF.getIndirect(J.ind, J.gen, K, d);
      }
      return s;
    } else return null;
  }
};
FromPDF.getInt = function (h, d, t) {
  if (t == 0) return 0;
  if (t == 1) return h[d];
  if (t == 2) return (h[d] << 8) | h[d + 1];
  if (t == 3) return (h[d] << 16) | (h[d + 1] << 8) | h[d + 2];
  if (t == 4)
    return (h[d] << 24) | (h[d + 1] << 16) | (h[d + 2] << 8) | h[d + 3];
  while (t > 4) {
    t--;
    d++;
  }
  return (h[d] << 24) | (h[d + 1] << 16) | (h[d + 2] << 8) | h[d + 3];
};
FromPDF.getIndirect = function (h, F, d, t) {
  var f = t[h],
    P;
  if (f.chr == "f") return null;
  if (f.val != null) return f.val;
  if (f.opn) return { typ: "ref", ind: h, gen: F };
  f.opn = !0;
  var N = d.off;
  if (f.chr == "s") {
    var v = FromPDF.getIndirect(f.off, f.gen, d, t),
      l = { buff: FromPS.GS(v), off: 0 },
      p = 0,
      u = 0;
    while (p != h) {
      p = FromPS.getFToken(l).val;
      u = FromPS.getFToken(l).val;
    }
    l.off = u + v["/First"];
    P = FromPDF.readObject(l, d, t);
  } else {
    d.off = f.off;
    var w = FromPS.getFToken(d);
    if (w.val != "<<") {
      var s = FromPS.getFToken(d),
        i = FromPS.getFToken(d);
    } else d.off -= 2;
    P = FromPDF.readObject(d, d, t, !0);
  }
  f.val = P;
  d.off = N;
  f.opn = !1;
  return P;
};
FromPDF.readObject = function (h, F, d, t) {
  var f = FromPS.getFToken(h);
  if (f.typ == "integer") {
    var N = h.off,
      L = FromPS.getFToken(h);
    if (L && L.typ == "integer") {
      FromPS.skipWhite(h);
      if (h.buff[h.off] == 82) {
        h.off++;
        if (d && d[f.val]) return FromPDF.getIndirect(f.val, L.val, F, d);
        else return { typ: "ref", ind: f.val, gen: L.val };
      }
    }
    h.off = N;
  }
  if (f.val == "<<") return FromPDF.readDict(h, F, d, t);
  if (f.val == "[") return FromPDF.readArra(h, F, d);
  if (f.typ == "string") {
    var P = "";
    for (var j = 0; j < f.val.length; j++) P += String.fromCharCode(f.val[j]);
    return P;
  }
  if (f.typ == "name" && f.val == ">>") {
    console.log(JSON.stringify(PUtils.readASCII(h.buff, h.off - 32, 128)));
    console.log(h.off);
    throw "e";
  }
  return f.val;
};
FromPDF.readDict = function (h, F, d, t) {
  var f = {};
  while (!0) {
    var N = h.off,
      L = FromPS.getFToken(h);
    if (L.typ == "name" && L.val == ">>") break;
    h.off = N;
    var P = FromPDF.readObject(h, F, d),
      j = FromPDF.readObject(h, F, d);
    f[P] = j;
  }
  if (f["/Length"] != null && t) {
    var v = f["/Length"],
      l = f["/Filter"];
    if (v.typ && v.typ == "ref") throw "e";
    var u = FromPS.getFToken(h);
    if (h.buff[h.off] == 32) h.off++;
    if (h.buff[h.off] == 13) h.off++;
    if (h.buff[h.off] == 10) h.off++;
    if (h.off + v > h.buff.length) {
      console.log(
        "too big /Length of a stream",
        v,
        h.buff.length - h.off,
        h.off
      );
      v = h.buff.length - h.off;
    }
    if (l) {
      l = typeof l == "string" ? [l] : l;
      if (l[0] == "/ASCII85Decode")
        while (h.buff[h.off + v - 2] != 126 || h.buff[h.off + v - 1] != 62) v++;
    }
    for (var w = 0; w < 32; w++) {
      var i = h.off + v - w;
      if (h.buff[i] != 101) continue;
      var E = FromPS.B.readASCII(h.buff, i, 9);
      if (E == "endstream") {
        v -= w;
        break;
      }
    }
    f.buff = new Uint8Array(h.buff.buffer, h.buff.byteOffset + h.off, v);
    h.off += v;
    while (h.buff[h.off] == 60) h.off++;
    FromPS.getFToken(h);
  }
  return f;
};
FromPDF.readArra = function (h, F, d) {
  var t = [];
  while (!0) {
    var f = h.off,
      N = FromPS.getFToken(h);
    if (N.typ == "name" && N.val == "]") return t;
    h.off = f;
    var L = FromPDF.readObject(h, F, d);
    t.push(L);
  }
};
var FromWMF = (function () {
    var h = 0,
      F = 53,
      d = 55,
      t = 258,
      f = 259,
      N = 260,
      L = 261,
      P = 262,
      j = 263,
      v = 264,
      l = 295,
      p = 313,
      u = 322,
      w = 329,
      s = 513,
      i = 521,
      E = 529,
      g = 531,
      $ = 532,
      n = 544,
      I = 552,
      a = 561,
      o = 564,
      S = 804,
      V = 805,
      Q = 522,
      U = 523,
      K = 524,
      z = 525,
      B = 526,
      J = 527,
      G = 1040,
      O = 1042,
      T = 1045,
      W = 1046,
      Y = 1048,
      q = 1049,
      ce = 1065,
      bO = 1078,
      a2 = 1313,
      A = 1336,
      cu = 1352,
      al = 1051,
      bR = 1055,
      aw = 1564,
      bF = 1565,
      bD = 30,
      c4 = 2074,
      bZ = 2851,
      cv = 1574,
      a9 = 298,
      bP = 299,
      cs = 300,
      bf = 301,
      ca = 302,
      a_ = 2071,
      c2 = 2096,
      aZ = 2338,
      bQ = 2610,
      cr = 3379,
      bu = 2368,
      aY = 2881,
      aS = 3907,
      cy = 496,
      b3 = 247,
      a6 = 505,
      bS = 762,
      bI = 763,
      bM = 764,
      aM = 1791,
      ch = 1,
      ck = 2,
      bY = 3,
      aC = 4,
      b8 = 5,
      bX = 6,
      a7 = 7,
      bw = 8,
      aP = 9,
      ae = 10,
      cA = 11,
      aX = 12,
      M = 13,
      be = 14,
      bT = 15,
      aK = 16,
      bo = 17,
      bH = 18,
      c9 = 19,
      aR = 20,
      bq = 21,
      b5 = 22,
      aW = 23,
      bk = 24,
      bj = 25,
      bh = 26,
      b$ = 27,
      cl = 28,
      ct = 29,
      c1 = 30,
      a4 = 31,
      cd = 32,
      aI = 33,
      br = 34,
      c3 = 35,
      bs = 37,
      az = 38,
      bJ = 42,
      aB = 256,
      aU = 258,
      aA = 512,
      ac = 513,
      bn = 514,
      bl = 2049,
      bp = 3073,
      aV = 4096,
      bU = 4097,
      cc = 4098,
      c5 = 4110,
      cq = 4111,
      aa = 4112,
      aj = 4115,
      a0 = 4116,
      am = 4117,
      cg = 4118,
      a$ = 4119,
      aT = 4120,
      cn = 4121,
      cb = 4122,
      H = 4568,
      b = UDOC.B;
    function a8(D, c) {
      D = new Uint8Array(D);
      var m = 0,
        _ = {
          fill: !1,
          strk: !1,
          bb: [0, 0, 600, 600],
          lbb: [0, 0, 600, 600],
          scl: 1,
          fnt: { nam: "Arial", hgh: 25, und: !1, orn: 0, chrst: 0 },
          tclr: [0, 0, 0],
          talg: 0,
        },
        R = b.readShort,
        aq = b.readUshort,
        b1 = b.readUint,
        e = b1(D, 0),
        ad = 0;
      if (e == 2596720087) {
        m = 6;
        var a5 = R(D, m + 8);
        _.scl = 120 / a5;
        for (var Z = 0; Z < 4; Z++) {
          _.bb[Z] = Math.round(R(D, m) * _.scl);
          m += 2;
        }
        m += 2;
        m += 6;
      }
      c.StartPage(_.bb[0], _.bb[1], _.bb[2], _.bb[3]);
      var y = UDOC.getState(_.bb),
        c7 = aq(D, m);
      m += 2;
      var aH = aq(D, m);
      m += 2;
      var at = aq(D, m);
      m += 2;
      var a1 = b1(D, m);
      m += 4;
      var au = aq(D, m);
      m += 2;
      var ap = b1(D, m);
      m += 4;
      var au = aq(D, m);
      m += 2;
      var C = [];
      while (!0) {
        var ao = b1(D, m) << 1,
          cp = null;
        m += 4;
        var ak = aq(D, m);
        m += 2;
        var k = ak,
          x = m;
        if (!1) {
        } else if (k == h) break;
        else if (k == cv) {
          var ci = aq(D, m);
          x += 2;
          var ai = ci;
          console.log(k, ai);
        } else if (k == f || k == P || k == t) {
        } else if (k == bf) {
          var aN = aq(D, x);
          x += 2;
          var ab = C[aN];
          if (ab.t == "br") {
            _.fill = ab.stl != 1;
            if (ab.stl == 0) {
            } else if (ab.stl == 1) {
            } else throw ab.stl + " e";
            y.colr = ab.clr;
          } else if (ab.t == "pn") {
            var b0 = ab.stl & 7;
            _.strk = b0 != 5;
            if (b0 == 0 || b0 == 6) y.lwidth = ab.px;
            else if (b0 == 5) {
            } else throw b0 + " e";
            if ((ab.stl & 4096) != 0) y.ljoin = 2;
            else if ((ab.stl & 8192) != 0) y.ljoin = 0;
            else y.ljoin = 1;
            y.COLR = ab.clr;
          } else if (ab.t == "fn") {
            _.fnt = ab;
            y.font.Tf = ab.nam;
            y.font.Tfs = Math.abs(ab.hgh);
            y.font.Tun = ab.und;
          } else throw "e";
        } else if (k == cy) {
          var aN = aq(D, x);
          x += 2;
          C[aN] = null;
        } else if (k == U || k == K) {
          var cB = k == U ? 0 : 2;
          _.lbb[cB + 1] = R(D, x);
          x += 2;
          _.lbb[cB] = R(D, x);
          x += 2;
          r(_, y);
        } else if (k == bM) {
          cp = { t: "br" };
          cp.stl = aq(D, x);
          x += 2;
          cp.clr = [D[x] / 255, D[x + 1] / 255, D[x + 2] / 255];
          x += 4;
          cp.htc = aq(D, x);
          x += 2;
        } else if (k == bS) {
          cp = { t: "pn" };
          cp.stl = aq(D, x);
          x += 2;
          cp.px = R(D, x);
          x += 2;
          cp.py = R(D, x);
          x += 2;
          cp.clr = [D[x] / 255, D[x + 1] / 255, D[x + 2] / 255];
          x += 4;
        } else if (k == bI) {
          cp = { t: "fn", nam: "" };
          cp.hgh = R(D, x);
          x += 2;
          x += 2 * 2;
          cp.orn = R(D, x) / 10;
          x += 2;
          var b9 = R(D, x);
          x += 2;
          cp.und = D[x + 1];
          x += 2;
          cp.stk = D[x];
          cp.chrst = D[m + 1];
          x += 2;
          x += 4;
          while (D[x] != 0) {
            cp.nam += String.fromCharCode(D[x]);
            x++;
          }
          if (b9 > 500) cp.nam += "-Bold";
        } else if (k == b3) {
          cp = { t: "pl" };
        } else if (k == i)
          _.tclr = [D[x] / 255, D[x + 1] / 255, D[x + 2] / 255];
        else if (k == ca) _.talg = aq(D, x);
        else if (k == $) {
          UDOC.G.moveTo(y, R(D, x + 2), R(D, x));
        } else if (k == g) {
          if (y.pth.cmds.length == 0) {
            var b7 = y.ctm.slice(0);
            UDOC.M.invert(b7);
            var aG = UDOC.M.multPoint(b7, y.cpos);
            UDOC.G.moveTo(y, aG[0], aG[1]);
          }
          UDOC.G.lineTo(y, R(D, x + 2), R(D, x));
          var av = _.fill;
          _.fill = !1;
          bt(c, y, _);
          _.fill = av;
        } else if (k == A) {
          var c8 = aq(D, x);
          x += 2;
          var cz = x;
          x += c8 * 2;
          for (var Z = 0; Z < c8; Z++) {
            var b_ = aq(D, cz + Z * 2);
            x = aL(D, x, b_, y, !0);
          }
          bt(c, y, _);
        } else if (k == S || k == V) {
          var b_ = aq(D, x);
          x += 2;
          x = aL(D, x, b_, y, k == S);
          var av = _.fill;
          _.fill = av && k == S;
          bt(c, y, _);
          _.fill = av;
        } else if (k == al || k == Y) {
          var bA = R(D, x);
          x += 2;
          var cj = R(D, x);
          x += 2;
          var aJ = R(D, x);
          x += 2;
          var ba = R(D, x);
          x += 2;
          if (k == al) {
            UDOC.G.moveTo(y, ba, aJ);
            UDOC.G.lineTo(y, cj, aJ);
            UDOC.G.lineTo(y, cj, bA);
            UDOC.G.lineTo(y, ba, bA);
          } else {
            var bi = (ba + cj) / 2,
              ag = (aJ + bA) / 2;
            UDOC.G.arc(y, bi, ag, (bA - aJ) / 2, 0, 2 * Math.PI, !1);
          }
          UDOC.G.closePath(y);
          var av = _.fill;
          _.fill = !0;
          bt(c, y, _);
          _.fill = av;
        } else if (k == aS || k == aY || k == bu) {
          var af = b1(D, x),
            bm,
            bb;
          x += 4;
          if (k == aS) {
            var a3 = aq(D, x);
            x += 2;
          }
          if (k != bu) {
            bb = R(D, x);
            x += 2;
            bm = R(D, x);
            x += 2;
          }
          var c6 = R(D, x);
          x += 2;
          var bg = R(D, x);
          x += 2;
          var bG = R(D, x);
          x += 2;
          var as = R(D, x);
          x += 2;
          var aE = R(D, x);
          x += 2;
          var aF = R(D, x);
          x += 2;
          if (k == bu) {
            bm = as;
            bb = bG;
          }
          var ar = X(D, x);
          if (ar.length > bm * bb * 4) ar = ar.slice(0, bm * bb * 4);
          var bC = y.ctm.slice(0);
          y.ctm = [1, 0, 0, 1, 0, 0];
          UDOC.M.scale(y.ctm, as, -bG);
          UDOC.M.translate(y.ctm, aF, aE + bG);
          UDOC.M.concat(y.ctm, bC);
          c.PutImage(y, ar, bm, bb);
          y.ctm = bC;
        } else if (k == bQ) {
          var bN = R(D, x),
            cm = "";
          x += 2;
          var aQ = R(D, x);
          x += 2;
          y.font.Tm = [1, 0, 0, -1, 0, 0];
          UDOC.M.rotate(y.font.Tm, (_.fnt.orn * Math.PI) / 180);
          UDOC.M.translate(y.font.Tm, aQ, bN);
          var cx = _.talg;
          if ((cx & 6) == 6) y.font.Tal = 2;
          else if ((cx & 7) == 0) y.font.Tal = 0;
          else throw cx + " e";
          if ((cx & 24) == 24) {
          } else if ((cx & 24) == 0) UDOC.M.translate(y.font.Tm, 0, y.font.Tfs);
          else throw "e";
          var bB = aq(D, x);
          x += 2;
          var by = aq(D, x);
          x += 2;
          if (by & 4) x += 8;
          for (var Z = 0; Z < bB; Z++) {
            var b4 = D[x + Z];
            if (b4 > 127) {
              Z++;
              b4 = (b4 << 8) | D[x + Z];
            }
            cm += String.fromCharCode(b4);
          }
          var b2 = y.colr;
          y.colr = _.tclr;
          c.PutText(y, cm, cm.length * y.font.Tfs * 0.5);
          y.colr = b2;
        } else if (k == ac) {
        } else {
          console.log(k.toString(16), ao);
        }
        if (cp != null) {
          var bV = 0;
          while (C[bV] != null) bV++;
          C[bV] = cp;
        }
        m += ao - 6;
      }
      c.ShowPage();
      c.Done();
    }
    function X(D, c) {
      var m = b.readShort,
        _ = b.readUshort,
        R = b.readUint,
        aq = R(D, c),
        b1,
        e,
        a5;
      c += 4;
      if (aq == 12) throw "e";
      else {
        b1 = R(D, c);
        c += 4;
        e = R(D, c);
        c += 4;
        var Z = _(D, c);
        c += 2;
        if (Z != 1) throw "e";
        var y = _(D, c);
        c += 2;
        if (y != 1 && y != 24 && y != 32) throw y + " e";
        var c7 = R(D, c);
        c += 4;
        if (c7 != 0) throw "e";
        var aH = R(D, c);
        c += 4;
        var at = R(D, c);
        c += 4;
        var a1 = R(D, c);
        c += 4;
        a5 = R(D, c);
        c += 4;
        var au = R(D, c);
        c += 4;
      }
      var ap = b1 * e,
        C = new Uint8Array(ap * 4),
        ad = Math.floor(((b1 * Z * y + 31) & ~31) / 8);
      if (y == 1)
        for (var ao = 0; ao < e; ao++) {
          var ak = c + a5 * 4 + (e - 1 - ao) * ad;
          for (var k = 0; k < b1; k++) {
            var x = (ao * b1 + k) << 2,
              cp = (D[ak + (k >>> 3)] >>> (7 - (k & 7))) & 1;
            C[x] = D[c + cp * 4 + 2];
            C[x + 1] = D[c + cp * 4 + 1];
            C[x + 2] = D[c + cp * 4 + 0];
            C[x + 3] = 255;
          }
        }
      if (y == 24) {
        for (var ao = 0; ao < e; ao++)
          for (var k = 0; k < b1; k++) {
            var x = (ao * b1 + k) << 2,
              ci = c + (e - 1 - ao) * ad + k * 3;
            C[x] = D[ci + 2];
            C[x + 1] = D[ci + 1];
            C[x + 2] = D[ci + 0];
            C[x + 3] = 255;
          }
      }
      if (y == 32) {
        for (var ao = 0; ao < e; ao++)
          for (var k = 0; k < b1; k++) {
            var x = (ao * b1 + k) << 2,
              ci = c + (e - 1 - ao) * ad + k * 4;
            C[x] = D[ci + 2];
            C[x + 1] = D[ci + 1];
            C[x + 2] = D[ci + 0];
            C[x + 3] = D[ci + 3];
          }
      }
      return C;
    }
    function r(D, c) {
      var m = [1, 0, 0, 1, 0, 0],
        _ = D.lbb,
        R = D.bb;
      UDOC.M.translate(m, -_[0], -_[1]);
      UDOC.M.scale(m, 1 / _[2], 1 / _[3]);
      UDOC.M.scale(m, R[2] - R[0], R[3] - R[1]);
      UDOC.M.translate(m, R[0], R[1]);
      c.ctm = m;
    }
    function bt(D, c, m) {
      if (m.fill) D.Fill(c, !1);
      if (m.strk && c.lwidth != 0) D.Stroke(c, !1);
      UDOC.G.newPath(c);
    }
    function aL(D, c, m, _, R) {
      var aq = b.readShort;
      for (var b1 = 0; b1 < m; b1++) {
        var e = aq(D, c);
        c += 2;
        var a5 = aq(D, c);
        c += 2;
        if (b1 == 0) UDOC.G.moveTo(_, e, a5);
        else UDOC.G.lineTo(_, e, a5);
      }
      if (R) UDOC.G.closePath(_);
      return c;
    }
    return { Parse: a8 };
  })(),
  FromEMF = (function () {
    var h = 1,
      F = 2,
      d = 3,
      t = 4,
      f = 5,
      N = 6,
      L = 7,
      P = 8,
      j = 9,
      v = 10,
      l = 11,
      p = 12,
      u = 13,
      w = 14,
      s = 15,
      i = 16,
      E = 17,
      g = 18,
      $ = 19,
      n = 20,
      I = 21,
      a = 22,
      o = 23,
      S = 24,
      V = 25,
      Q = 26,
      U = 27,
      K = 28,
      z = 29,
      B = 30,
      J = 31,
      G = 32,
      O = 33,
      T = 34,
      W = 35,
      Y = 36,
      q = 37,
      ce = 38,
      bO = 39,
      a2 = 40,
      A = 41,
      cu = 42,
      al = 43,
      bR = 44,
      aw = 45,
      bF = 46,
      bD = 47,
      c4 = 48,
      bZ = 49,
      cv = 50,
      a9 = 51,
      bP = 52,
      cs = 53,
      bf = 54,
      ca = 55,
      a_ = 56,
      c2 = 57,
      aZ = 58,
      bQ = 59,
      cr = 60,
      bu = 61,
      aY = 62,
      aS = 63,
      cy = 64,
      b3 = 65,
      a6 = 66,
      bS = 67,
      bI = 68,
      bM = 70,
      aM = 71,
      ch = 72,
      ck = 73,
      bY = 74,
      aC = 75,
      b8 = 76,
      bX = 77,
      a7 = 78,
      bw = 79,
      aP = 80,
      ae = 81,
      cA = 82,
      aX = 83,
      M = 84,
      be = 85,
      bT = 86,
      aK = 87,
      bo = 88,
      bH = 89,
      c9 = 90,
      aR = 91,
      bq = 92,
      b5 = 93,
      aW = 94,
      bk = 95,
      bj = 96,
      bh = 97,
      b$ = 98,
      cl = 99,
      ct = 100,
      c1 = 101,
      a4 = 102,
      cd = 103,
      aI = 104,
      br = 105,
      c3 = 106,
      bs = 108,
      az = 109,
      bJ = 110,
      aB = 111,
      aU = 112,
      aA = 113,
      ac = 114,
      bn = 115,
      bl = 116,
      bp = 118,
      aV = 119,
      bU = 120,
      cc = 121,
      c5 = 122,
      cq = UDOC.B,
      aa = null,
      aj = 13369376,
      a0 = 15597702,
      am = 8913094;
    function cg(H, b) {
      H = new Uint8Array(H);
      var a8 = 0,
        X = {
          fill: !1,
          strk: !1,
          bb: [0, 0, 1, 1],
          wbb: [0, 0, 1, 1],
          fnt: { nam: "Arial", hgh: 25, und: !1, orn: 0 },
          tclr: [0, 0, 0],
          talg: 0,
        },
        r,
        bt = [],
        aL = [],
        D = cq.readShort,
        c = cq.readUshort,
        m = cq.readInt,
        _ = cq.readUint,
        R = cq.readFloat,
        aq = 0;
      while (!0) {
        var b1 = _(H, a8),
          y = null,
          c7 = 0;
        a8 += 4;
        var e = b1,
          a5 = _(H, a8);
        a8 += 4;
        var Z = a8;
        if (!1) {
        } else if (e == w) {
          break;
        } else if (e == h) {
          X.bb = a$(H, Z);
          Z += 16;
          b.StartPage(X.bb[0], X.bb[1], X.bb[2], X.bb[3]);
          r = UDOC.getState(X.bb);
        } else if (e == O) aL.push(JSON.stringify(r), JSON.stringify(X));
        else if (e == T) {
          var aH = m(H, Z);
          Z += 4;
          while (aH < -1) {
            aL.pop();
            aL.pop();
            aH++;
          }
          X = JSON.parse(aL.pop());
          r = JSON.parse(aL.pop());
        } else if (e == bS) {
          r.cpth = JSON.parse(JSON.stringify(r.pth));
        } else if (e == B) {
          var at = a$(H, Z);
          Z += 16;
          var a1 = r.pth;
          r.pth = { cmds: [], crds: [] };
          UDOC.G.drawRect(r, at[0], at[1], at[2] - at[0], at[3] - at[1]);
          r.cpth = r.pth;
          r.pth = a1;
        } else if ([E, $, g, b$, n, aC].indexOf(e) != -1) {
        } else if (e == aZ) r.mlimit = _(H, Z);
        else if (e == S) X.tclr = [H[Z] / 255, H[Z + 1] / 255, H[Z + 2] / 255];
        else if (e == a) X.talg = _(H, Z);
        else if (e == l || e == p) {
          if (X.vbb == null) X.vbb = [];
          var ap = e == p ? 0 : 2;
          X.vbb[ap] = m(H, Z);
          Z += 4;
          X.vbb[ap + 1] = m(H, Z);
          Z += 4;
          if (e == l) aT(X, r);
        } else if (e == j || e == v) {
          var ap = e == v ? 0 : 2;
          X.wbb[ap] = m(H, Z);
          Z += 4;
          X.wbb[ap + 1] = m(H, Z);
          Z += 4;
          if (e == j) aT(X, r);
        } else if (e == bM) {
          var C = _(H, Z);
          Z += 4;
        } else if (e == q) {
          var ad = _(H, Z);
          Z += 4;
          if (ad == 2147483648) {
            X.fill = !0;
            r.colr = [1, 1, 1];
          } else if (ad == 2147483653) {
            X.fill = !1;
          } else if (ad == 2147483655) {
            X.strk = !0;
            X.lwidth = 1;
            r.COLR = [0, 0, 0];
          } else if (ad == 2147483656) {
            X.strk = !1;
          } else if (ad == 2147483661) {
          } else if (ad == 2147483662) {
          } else {
            var ao = bt[ad];
            if (ao.t == "b") {
              X.fill = ao.stl != 1;
              if (ao.stl == 0) {
              } else if (ao.stl == 1) {
              } else throw ao.stl + " e";
              r.colr = ao.clr;
            } else if (ao.t == "p") {
              X.strk = ao.stl != 5;
              r.lwidth = ao.wid;
              r.COLR = ao.clr;
            } else if (ao.t == "f") {
              X.fnt = ao;
              r.font.Tf = ao.nam;
              r.font.Tfs = Math.abs(ao.hgh);
              r.font.Tun = ao.und;
            } else throw "e";
          }
        } else if (e == a2) {
          var ad = _(H, Z);
          Z += 4;
          if (bt[ad] != null) bt[ad] = null;
          else throw "e";
        } else if (e == bO) {
          c7 = _(H, Z);
          Z += 4;
          y = { t: "b" };
          y.stl = _(H, Z);
          Z += 4;
          y.clr = [H[Z] / 255, H[Z + 1] / 255, H[Z + 2] / 255];
          Z += 4;
          y.htc = _(H, Z);
          Z += 4;
        } else if (e == aW) {
          c7 = _(H, Z);
          Z += 4;
          console.log("unsupported pattern brush");
          y = { t: "b" };
          y.stl = 0;
        } else if (e == ce || e == bk) {
          c7 = _(H, Z);
          Z += 4;
          y = { t: "p" };
          if (e == bk) {
            Z += 16;
            y.stl = _(H, Z);
            Z += 4;
            y.wid = _(H, Z);
            Z += 4;
            Z += 4;
          } else {
            y.stl = _(H, Z);
            Z += 4;
            y.wid = _(H, Z);
            Z += 4;
            Z += 4;
          }
          y.clr = [H[Z] / 255, H[Z + 1] / 255, H[Z + 2] / 255];
          Z += 4;
        } else if (e == cA) {
          c7 = _(H, Z);
          Z += 4;
          y = { t: "f", nam: "" };
          y.hgh = m(H, Z);
          Z += 4;
          Z += 4 * 2;
          y.orn = m(H, Z) / 10;
          Z += 4;
          var ak = _(H, Z);
          Z += 4;
          y.und = H[Z + 1];
          y.stk = H[Z + 2];
          Z += 4 * 2;
          while (c(H, Z) != 0) {
            y.nam += String.fromCharCode(c(H, Z));
            Z += 2;
          }
          if (ak > 500) y.nam += "-Bold";
        } else if (e == M) {
          Z += 16;
          var k = _(H, Z),
            aG = "";
          Z += 4;
          var x = R(H, Z);
          Z += 4;
          var cp = R(H, Z);
          Z += 4;
          var ci = m(H, Z);
          Z += 4;
          var ai = m(H, Z);
          Z += 4;
          var aN = r.ctm.slice(0);
          if (k == 1) r.ctm = [1, 0, 0, 1, 0, 0];
          r.font.Tm = [1, 0, 0, -1, 0, 0];
          UDOC.M.rotate(r.font.Tm, (X.fnt.orn * Math.PI) / 180);
          UDOC.M.translate(r.font.Tm, ci, ai);
          var ab = X.talg;
          if ((ab & 6) == 6) r.font.Tal = 2;
          else if ((ab & 7) == 0) r.font.Tal = 0;
          else throw ab + " e";
          if ((ab & 24) == 24) {
          } else if ((ab & 24) == 0) UDOC.M.translate(r.font.Tm, 0, r.font.Tfs);
          else console.log("unknown alignment", ab);
          var b0 = _(H, Z);
          Z += 4;
          var cB = _(H, Z);
          Z += 4;
          var b9 = _(H, Z);
          Z += 4;
          Z += 16;
          var b7 = _(H, Z);
          Z += 4;
          cB += a8 - 8;
          for (var av = 0; av < b0; av++) {
            var c8 = c(H, cB + av * 2);
            aG += String.fromCharCode(c8);
          }
          var cz = r.colr;
          r.colr = X.tclr;
          b.PutText(r, aG, aG.length * r.font.Tfs * 0.5);
          r.colr = cz;
          r.ctm = aN;
        } else if (e == bQ) {
          UDOC.G.newPath(r);
        } else if (e == cr) {
        } else if (e == bu) UDOC.G.closePath(r);
        else if (e == U) {
          UDOC.G.moveTo(r, m(H, Z), m(H, Z + 4));
        } else if (e == bf) {
          if (r.pth.cmds.length == 0) {
            var b_ = r.ctm.slice(0);
            UDOC.M.invert(b_);
            var bA = UDOC.M.multPoint(b_, r.cpos);
            UDOC.G.moveTo(r, bA[0], bA[1]);
          }
          UDOC.G.lineTo(r, m(H, Z), m(H, Z + 4));
        } else if (
          e == d ||
          e == bT ||
          e == t ||
          e == aK ||
          e == N ||
          e == bH
        ) {
          Z += 16;
          var cj = e == d || e == bT,
            aJ = e == N || e == bH,
            ba = _(H, Z);
          Z += 4;
          if (!aJ) UDOC.G.newPath(r);
          Z = cb(H, Z, ba, r, e == bT || e == aK || e == bH ? 2 : 4, cj, aJ);
          if (!aJ) cn(b, r, X, cj);
        } else if (e == aR) {
          Z += 16;
          var cj = !0,
            aJ = !1,
            bi = _(H, Z);
          Z += 4;
          Z += 4;
          var ag = Z;
          Z += bi * 4;
          if (!aJ) UDOC.G.newPath(r);
          for (var av = 0; av < bi; av++) {
            var af = c(H, ag + av * 4);
            Z = cb(H, Z, af, r, 2, cj, aJ);
          }
          if (!aJ) cn(b, r, X, cj);
        } else if (e == F || e == be || e == f || e == bo) {
          Z += 16;
          var a3 = e == be || e == bo,
            bm = a3 ? D : m,
            bb = a3 ? 2 : 4,
            ba = _(H, Z);
          Z += 4;
          if (!(e == f || e == bo)) {
            UDOC.G.moveTo(r, bm(H, Z), bm(H, Z + bb));
            Z += 2 * bb;
            ba--;
          }
          while (ba > 0) {
            UDOC.G.curveTo(
              r,
              bm(H, Z),
              bm(H, Z + bb),
              bm(H, Z + 2 * bb),
              bm(H, Z + 3 * bb),
              bm(H, Z + 4 * bb),
              bm(H, Z + 5 * bb)
            );
            Z += 6 * bb;
            ba -= 3;
          }
        } else if (e == al || e == cu) {
          UDOC.G.newPath(r);
          var at = a$(H, Z);
          if (e == al) {
            UDOC.G.drawRect(r, at[0], at[1], at[2] - at[0], at[3] - at[1]);
          } else {
            var c6 = (at[0] + at[2]) / 2,
              bg = (at[1] + at[3]) / 2;
            UDOC.G.arc(r, c6, bg, (at[2] - at[0]) / 2, 0, 2 * Math.PI, !1);
          }
          UDOC.G.closePath(r);
          cn(b, r, X, !0);
        } else if (e == aY) b.Fill(r, !1);
        else if (e == cy) b.Stroke(r);
        else if (e == aS) {
          b.Fill(r, !1);
          b.Stroke(r);
        } else if (e == W || e == Y) {
          var bG = [];
          for (var av = 0; av < 6; av++) bG.push(R(H, Z + av * 4));
          Z += 24;
          if (e == W) r.ctm = bG;
          else {
            var k = _(H, Z);
            Z += 4;
            if (k == 2) {
              var as = r.ctm;
              r.ctm = bG;
              UDOC.M.concat(r.ctm, as);
            } else if (k == 4) r.ctm = bG;
            else throw k;
          }
        } else if (e == I) {
          var aE = _(H, Z);
          Z += 4;
        } else if (e == ae) {
          var at = a$(H, Z);
          Z += 16;
          var aF = m(H, Z);
          Z += 4;
          var ar = m(H, Z);
          Z += 4;
          var bC = m(H, Z);
          Z += 4;
          var bN = m(H, Z);
          Z += 4;
          var aQ = m(H, Z);
          Z += 4;
          var cx = m(H, Z);
          Z += 4;
          var by = _(H, Z) + a8 - 8;
          Z += 4;
          var cm = _(H, Z);
          Z += 4;
          var b4 = _(H, Z) + a8 - 8;
          Z += 4;
          var b2 = _(H, Z);
          Z += 4;
          var bV = _(H, Z);
          Z += 4;
          if (bV != 0) throw "e";
          var aO = _(H, Z);
          Z += 4;
          if (aO != aj && aO != a0 && aO != am) throw aO.toString(16);
          var cf = m(H, Z);
          Z += 4;
          var aD = m(H, Z);
          Z += 4;
          var an = _(H, by);
          by += 4;
          if (an != 40) throw an;
          var ax = _(H, by);
          by += 4;
          var ay = _(H, by);
          by += 4;
          if (ax != aQ || ay != cx) throw "e";
          var bd = c(H, by);
          by += 2;
          if (bd != 1) throw "e";
          var bv = c(H, by);
          by += 2;
          if (bv != 1 && bv != 4 && bv != 8 && bv != 16 && bv != 24 && bv != 32)
            throw bv + " e";
          var bL = _(H, by);
          by += 4;
          if (bL != 0) throw bL + " e";
          var ah = _(H, by);
          by += 4;
          var bx = _(H, by);
          by += 4;
          var bK = _(H, by);
          by += 4;
          var cw = _(H, by);
          by += 4;
          var bc = _(H, by);
          by += 4;
          if (bc != 0) throw bc;
          var cC = Math.floor(((ax * bd * bv + 31) & ~31) / 8),
            b6 = new Uint8Array(ax * ay * 4);
          if (bv == 1) {
            for (var bg = 0; bg < ay; bg++)
              for (var c6 = 0; c6 < ax; c6++) {
                var bE = (bg * ax + c6) << 2,
                  ad =
                    ((H[b4 + (ay - 1 - bg) * cC + (c6 >>> 3)] >>>
                      (7 - (c6 & 7))) &
                      1) <<
                    2;
                b6[bE] = H[by + ad + 2];
                b6[bE + 1] = H[by + ad + 1];
                b6[bE + 2] = H[by + ad + 0];
                b6[bE + 3] = 255;
              }
          } else if (bv == 8) {
            for (var bg = 0; bg < ay; bg++)
              for (var c6 = 0; c6 < ax; c6++) {
                var bE = (bg * ax + c6) << 2,
                  ad = H[b4 + (ay - 1 - bg) * cC + c6] << 2;
                b6[bE] = H[by + ad + 2];
                b6[bE + 1] = H[by + ad + 1];
                b6[bE + 2] = H[by + ad + 0];
                b6[bE + 3] = 255;
              }
          } else if (bv == 16) {
            for (var bg = 0; bg < ay; bg++)
              for (var c6 = 0; c6 < ax; c6++) {
                var bE = (bg * ax + c6) << 2,
                  bz = b4 + (ay - 1 - bg) * cC + c6 * 2,
                  c0 = (H[bz + 1] << 8) | H[bz];
                b6[bE] = ((c0 >>> 10) & 31) * (255 / 31);
                b6[bE + 1] = ((c0 >>> 5) & 31) * (255 / 31);
                b6[bE + 2] = ((c0 >>> 0) & 31) * (255 / 31);
                b6[bE + 3] = 255;
              }
          } else if (bv == 24) {
            for (var bg = 0; bg < ay; bg++)
              for (var c6 = 0; c6 < ax; c6++) {
                var bE = (bg * ax + c6) << 2,
                  bz = b4 + (ay - 1 - bg) * cC + c6 * 3;
                b6[bE] = H[bz + 2];
                b6[bE + 1] = H[bz + 1];
                b6[bE + 2] = H[bz + 0];
                b6[bE + 3] = 255;
              }
          } else if (bv == 32) {
            for (var bg = 0; bg < ay; bg++)
              for (var c6 = 0; c6 < ax; c6++) {
                var bE = (bg * ax + c6) << 2,
                  bz = b4 + (ay - 1 - bg) * cC + c6 * 4;
                b6[bE] = H[bz + 2];
                b6[bE + 1] = H[bz + 1];
                b6[bE + 2] = H[bz + 0];
                b6[bE + 3] = H[bz + 3];
              }
          } else console.log("unsupported bit depth", bv, ax, ay);
          var bW = r.ctm.slice(0);
          r.ctm = [1, 0, 0, 1, 0, 0];
          UDOC.M.scale(r.ctm, cf, -aD);
          UDOC.M.translate(r.ctm, aF, ar + aD);
          UDOC.M.concat(r.ctm, bW);
          if (aO == a0) aa = b6;
          else if (aO == am) b.PutImage(r, b6, ax, ay, aa);
          else b.PutImage(r, b6, ax, ay);
          r.ctm = bW;
        } else {
          console.log("unknown command", e, a5);
        }
        if (y != null) bt[c7] = y;
        a8 += a5 - 8;
      }
      b.ShowPage();
      b.Done();
    }
    function a$(H, b) {
      var a8 = [];
      for (var X = 0; X < 4; X++) a8[X] = cq.readInt(H, b + X * 4);
      return a8;
    }
    function aT(H, b) {
      var a8 = [1, 0, 0, 1, 0, 0],
        X = H.wbb,
        r = H.bb,
        bt = H.vbb && H.vbb.length == 4 ? H.vbb : H.bb;
      UDOC.M.translate(a8, -X[0], -X[1]);
      UDOC.M.scale(a8, 1 / X[2], 1 / X[3]);
      UDOC.M.scale(a8, bt[2], bt[3]);
      b.ctm = a8;
    }
    function cn(H, b, a8, X) {
      if (a8.fill && X) H.Fill(b, !1);
      if (a8.strk && b.lwidth != 0) H.Stroke(b);
    }
    function cb(H, b, a8, X, r, bt, aL) {
      var D = r == 2 ? cq.readShort : cq.readInt;
      for (var c = 0; c < a8; c++) {
        var m = D(H, b);
        b += r;
        var _ = D(H, b);
        b += r;
        if (c == 0 && !aL) UDOC.G.moveTo(X, m, _);
        else UDOC.G.lineTo(X, m, _);
      }
      if (bt) UDOC.G.closePath(X);
      return b;
    }
    return { Parse: cg };
  })(),
  FromDXF = (function () {
    var h = function () {
      this.bb = [1e9, 1e9, -1e9, -1e9];
    };
    h.prototype = {
      StartPage: function () {},
      PutText: function () {},
      PutImage: function () {},
      Stroke: function (P) {
        this.checkPath(P.pth.crds);
      },
      Fill: function (P) {
        this.checkPath(P.pth.crds);
      },
      PutText: function (P, j, v, l) {
        var p = [0, 0, v * P.font.Tfs, 0, 0, -P.font.Tfs, 0, P.font.Tfs];
        if (l) {
          p[2] = l[0];
          p[5] = -l[1];
        }
        UDOC.M.multArray(P.ctm, p);
        UDOC.M.multArray(P.font.Tm, p);
        this.checkPath(p);
      },
      checkPath: function (P) {
        var j = this.bb;
        for (var v = 0; v < P.length; v += 2) {
          var l = P[v],
            p = P[v + 1];
          j[0] = Math.min(j[0], l);
          j[1] = Math.min(j[1], p);
          j[2] = Math.max(j[2], l);
          j[3] = Math.max(j[3], p);
        }
      },
      ShowPage: function () {},
      Done: function () {},
    };
    function F(P, j) {
      P = new Uint8Array(P);
      var v = 0,
        l = new TextDecoder().decode(P),
        p = l.split("\n"),
        i = 2e3,
        E = 100;
      for (var u = 0; u < p.length; u++) p[u] = p[u].trim();
      while (p[p.length - 1] == "") p.pop();
      var w = new h();
      d(p, w);
      var s = w.bb,
        g = (i - E * 2) / (s[2] - s[0]),
        $ = Math.round((s[3] - s[1]) * g + E * 2),
        n = [0, 0, i, $],
        I = UDOC.getState(n);
      I.lwidth = 1 / g;
      I.ctm = [g, 0, 0, -g, E - s[0] * g, -E + s[1] * g + $];
      d(p, j, I, n);
    }
    function d(P, j, v, l) {
      if (v == null) {
        l = [0, 0, 1e3, 1e3];
        v = UDOC.getState(l);
      }
      j.StartPage(l[0], l[1], l[2], l[3]);
      var p = { tabs: { LTYPE: {} }, blocks: {} };
      f(P, j, v, p, 0, P.length);
      j.ShowPage();
      j.Done();
    }
    function t(P, j) {
      if (P.startsWith("%%u")) {
        P = P.slice(3);
        j.font.Tun = 1;
      }
      P = P.split("\\P").join("\n");
      P = P.split("%%d").join("'");
      P = P.split("{").join("");
      P = P.split("}").join("");
      while (!0) {
        var v = P.indexOf("\\U+");
        if (v == -1) break;
        P =
          P.slice(0, v) +
          String.fromCharCode(parseInt(P.slice(v + 3, v + 7), 16)) +
          P.slice(v + 7);
      }
      while (!0) {
        var v = P.indexOf("\\"),
          l = P.indexOf(";");
        if (v == -1 || l == -1) break;
        var p = P.slice(v + 1, l);
        if (p.startsWith("pi")) p = " ".repeat(0.5 * parseFloat(p.slice(2)));
        else p = "";
        P = P.slice(0, v) + p + P.slice(l + 1);
      }
      return P;
    }
    function f(P, j, v, l, p, u, w) {
      var s,
        i,
        E,
        g = !1;
      while (p < u) {
        var $ = parseInt(P[p++]),
          n = P[p++],
          I =
            [
              10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 30, 31, 32, 33, 34, 40,
              41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 62, 70, 71,
              72, 73, 74, 90, 370,
            ].indexOf($) != -1,
          a =
            (s == "LWPOLYLINE" && ($ == 10 || $ == 20 || $ == 30)) ||
            (s == "LTYPE" && $ == 49) ||
            (s == "SPLINE" && ($ == 10 || $ == 20 || $ == 30 || $ == 40)) ||
            (s == "OLE2FRAME" && $ == 310);
        if (I) n = parseFloat(n);
        if ($ == 999) {
        } else if (n[0] == "$") g = !0;
        else if (g) g = !1;
        else if (n == "SECTION") w = -1;
        else if (n == "ENDSEC") {
        } else if (w == -1) w = n;
        else if (n == "EOF") {
        } else if (w == "HEADER") {
        } else if (w == "CLASSES") {
        } else if (w == "TABLES" || w == "BLOCKS") {
          if (n == "ENDBLK") {
            E[1] = p - 2;
            E = null;
          }
          if ($ == 0) {
            s = n;
            i = {};
            continue;
          }
          if (a) {
            if (i[$] == null) i[$] = [];
            i[$].push(n);
          } else {
            i[$] = n;
          }
          if (P[p] != "0") continue;
          if (s == "LTYPE" && i[2] != null) {
            if (l.tabs[s][i[2]] != null) throw "e";
            l.tabs[s][i[2]] = i;
          } else if (s == "BLOCK") {
            E = l.blocks[i[2]] = [p];
          }
        } else if (w == "ENTITIES") {
          if ($ == 0) {
            s = n;
            i = {};
          } else {
            if (a) {
              if (i[$] == null) i[$] = [];
              i[$].push(n);
            } else {
              i[$] = n;
            }
          }
          if (P[p] != "0") continue;
          if (E == null) {
            v.colr = [0, 0, 0];
            v.ca = 1;
            v.COLR = [0, 0, 0];
            v.dash = [];
            if (i[62] != null && i[62] != 256) {
              var o = {
                c0: [0, 0, 0],
                c1: [1, 0, 0],
                c2: [1, 1, 0],
                c4: [0, 1, 1],
                c5: [0, 0, 1],
                c7: [0, 0, 0],
                c8: [0, 0, 0],
                c242: [0.64, 0, 0.16],
                c250: [0, 0, 0],
              }["c" + i[62]];
              if (o) v.COLR = o;
              else {
                v.COLR = [0, 1, 0];
                console.log(s + " " + i[62]);
              }
            }
            if (i[6] != null) {
              var S = l.tabs.LTYPE[i[6]];
              if (S[49] != null) {
                var V = S[49].slice(0);
                for (var Q = 0; Q < V.length; Q++)
                  V[Q] = Math.abs(V[Q]) * (i[48] ? i[48] : 1);
                v.dash = V;
              }
            }
            if (i[8] == "H") v.dash = [0.1, 0.02];
            UDOC.G.newPath(v);
          }
          var U = -1 / 3.17;
          if (s == "LINE") {
            var K = (i[30] ? i[30] : 0) * U,
              z = (i[31] ? i[31] : 0) * U;
            UDOC.G.moveTo(v, i[10] + K, i[20] - K);
            UDOC.G.lineTo(v, i[11] + z, i[21] - z);
            j.Stroke(v, !1);
          } else if (s == "POLYLINE") {
            E = [i, []];
          } else if (s == "VERTEX") {
            E[1].push(i);
          } else if (s == "SEQEND") {
            if (E == null) continue;
            var B = E[0],
              J = E[1],
              G = J.length,
              O = B[70] == 1 ? G + 1 : G;
            UDOC.G.moveTo(v, J[0][10], J[0][20]);
            for (var Q = 1; Q < O; Q++) {
              var T = J[Q % G][10],
                W = J[Q % G][20],
                Y = J[Q - 1][42];
              if (Y == null) Y = 0;
              if (Y == 0) UDOC.G.lineTo(v, T, W);
              else {
                var q = J[Q - 1],
                  ce = q[10],
                  bO = q[20],
                  A = T - ce,
                  cu = W - bO,
                  al = (-Y * Math.PI) / 2,
                  bR = 0.42,
                  aw = Math.sin(al),
                  bF = Math.cos(al),
                  bD = bF * A - aw * cu,
                  c4 = aw * A + bF * cu,
                  bZ = bF * A + aw * cu,
                  cv = -aw * A + bF * cu;
                UDOC.G.curveTo(
                  v,
                  ce + bR * bD,
                  bO + bR * c4,
                  T - bR * bZ,
                  W - bR * cv,
                  T,
                  W
                );
              }
            }
            j.Stroke(v, !1);
            E = null;
          } else if (s == "OLE2FRAME") {
            var a9 = 57,
              bP = 295,
              cs = i[310].join(""),
              bf = bP * a9,
              ca = new Uint8Array(cs.length >>> 1);
            for (var Q = 0; Q < ca.length; Q++)
              ca[Q] = parseInt(cs.slice(Q * 2, Q * 2 + 2), 16);
            var a_ = new Float64Array(ca.slice(2, 2 + 12 * 8).buffer),
              c2 = new Uint8Array(bf * 4);
            new Uint32Array(c2.buffer).fill(4281563135);
            var aZ = v.ctm,
              bQ = [1, 0, 0, 1, 0, 0],
              cr = i[11] - i[10],
              bu = i[21] - i[20];
            UDOC.M.scale(bQ, cr, bu);
            UDOC.M.translate(bQ, i[10], i[20]);
            UDOC.M.concat(bQ, v.ctm);
            v.ctm = bQ;
            j.PutImage(v, c2, bP, a9);
            v.ctm = aZ;
          } else if (s == "INSERT") {
            var aY = l.blocks[i[2]],
              aS = v.ctm.slice(0),
              bQ = [1, 0, 0, 1, 0, 0];
            if (i[50] != null) UDOC.M.rotate(bQ, (i[50] * Math.PI) / 180);
            if (i[41] != null) UDOC.M.scale(bQ, i[41], i[42]);
            UDOC.M.translate(bQ, i[10], i[20]);
            UDOC.M.concat(bQ, v.ctm);
            v.ctm = bQ;
            f(P, j, v, l, aY[0], aY[1], w);
            v.ctm = aS;
          } else if (s == "--VIEWPORT") {
            console.log(i);
            v.COLR = [1, 0, 0];
            UDOC.G.moveTo(v, i[10], i[20]);
            UDOC.G.lineTo(v, i[10] + 5, i[20] + 5);
            j.Stroke(v, !1);
          } else if (s == "--DIMENSION") {
            var cy = i[70] & 7;
            if (cy == 0) {
              console.log(i);
              v.COLR = [0, 0.3, 0.6];
              var A = 0,
                cu = 0;
              UDOC.G.moveTo(v, i[13] + A, i[23] + cu);
              UDOC.G.lineTo(v, i[14] + A, i[24] + cu);
              j.Stroke(v, !1);
            }
          } else if (s == "3DFACE" || s == "SOLID") {
            var K = i[30] * U,
              z = i[31] * U,
              b3 = i[32] * U,
              a6 = i[33] * U;
            UDOC.G.moveTo(v, i[10] + K, i[20] - K);
            UDOC.G.lineTo(v, i[11] + z, i[21] - z);
            UDOC.G.lineTo(v, i[12] + b3, i[22] - b3);
            UDOC.G.lineTo(v, i[13] + a6, i[23] - a6);
            UDOC.G.closePath(v);
            if (s == "3DFACE") {
              v.colr = [Math.random(), Math.random(), Math.random()];
              v.ca = 0.5;
            }
            j.Fill(v, !1);
          } else if (s == "LWPOLYLINE") {
            for (var Q = 0; Q < i[90]; Q++) {
              var bS = Q == 0 ? UDOC.G.moveTo : UDOC.G.lineTo;
              bS(v, i[10][Q], i[20][Q]);
            }
            if (i[70] == 1) UDOC.G.closePath(v);
            j.Stroke(v, !1);
          } else if (s == "CIRCLE") {
            UDOC.G.arc(v, i[10], i[20], i[40], 0, Math.PI * 2);
            j.Stroke(v, !1);
          } else if (s == "ELLIPSE") {
            var bI = v.ctm.slice(0),
              bM = i[10],
              aM = i[20],
              A = i[11],
              cu = i[21],
              ch = Math.sqrt(A * A + cu * cu),
              bQ = [1, 0, 0, 1, 0, 0];
            UDOC.M.scale(bQ, 1, i[40]);
            UDOC.M.rotate(bQ, -Math.atan2(cu, A));
            UDOC.M.translate(bQ, bM, aM);
            UDOC.M.concat(bQ, v.ctm);
            v.ctm = bQ;
            UDOC.G.arc(v, 0, 0, ch, i[41], i[42]);
            j.Stroke(v, !1);
            v.ctm = bI;
          } else if (s == "ARC") {
            UDOC.G.arc(
              v,
              i[10],
              i[20],
              i[40],
              (i[50] * Math.PI) / 180,
              (i[51] * Math.PI) / 180
            );
            j.Stroke(v, !1);
          } else if (s == "SPLINE") {
            var ck = i[10],
              bY = i[20],
              aC = i[40].slice(0),
              b8 = ck.length - 1;
            UDOC.G.moveTo(v, ck[0], bY[0]);
            if (i[71] == 3 && i[73] == 4) {
              UDOC.G.curveTo(v, ck[1], bY[1], ck[2], bY[2], ck[3], bY[3]);
            } else {
              var bX = -1e6,
                a7 = 1e6;
              for (var Q = 0; Q < aC.length; Q++) {
                var bw = aC[Q];
                if (bw < a7) a7 = bw;
                if (bw > bX) bX = bw;
              }
              for (var Q = 0; Q < aC.length; Q++) {
                aC[Q] = (aC[Q] - a7) / (bX - a7);
              }
              var G = ck.length * 10;
              for (var aP = 1; aP < G; aP++) {
                var ae = aP / G,
                  cA = N(ck, bY, i[71], aC, ae);
                UDOC.G.lineTo(v, cA[0], cA[1]);
              }
              UDOC.G.lineTo(v, ck[ck.length - 1], bY[bY.length - 1]);
            }
            if (i[70] & 1) UDOC.G.closePath(v);
            j.Stroke(v, !1);
          } else if (
            s == "--ATTDEF" ||
            s == "ATTRIB" ||
            s == "TEXT" ||
            s == "MTEXT"
          ) {
            v.font.Tun = 0;
            v.font.Tal = 0;
            v.font.Tm = [1, 0, 0, 1, 0, 0];
            if (i[50]) UDOC.M.rotate(v.font.Tm, (-i[50] * Math.PI) / 180);
            UDOC.M.translate(v.font.Tm, i[10], i[20]);
            v.font.Tfs = i[40];
            var cs = i[s == "ATTDEF" ? 3 : 1],
              M = null;
            cs = t(cs, v);
            var aX = i[71] == null ? 0 : (i[71] - 1) % 3;
            v.font.Tal = [0, 2, 1][aX];
            if (s == "MTEXT" && i[41] != null && i[41] != 0) {
              var be = (cs.length * v.font.Tfs) / i[41];
              be = Math.max(be, cs.split("\n").length);
              M = [i[41], be * v.font.Tfs * 1.5];
              if (aX == 0) {
              } else if (aX == 2) {
                UDOC.M.translate(v.font.Tm, -i[41], 0);
              } else if (aX == 1) {
                UDOC.M.translate(v.font.Tm, -i[41] / 2, 0);
              } else console.log("unknown align", i);
            } else if (s == "MTEXT" && i[71] != null) {
              if (i[71] <= 3) UDOC.M.translate(v.font.Tm, 0, -v.font.Tfs * 0.8);
              else if (i[71] <= 6)
                UDOC.M.translate(v.font.Tm, 0, -v.font.Tfs * 0.4);
            }
            j.PutText(v, cs, cs.length * 0.5, M);
          } else console.log("unknown command", s);
        } else if (w == "OBJECTS") {
        } else if (w == "ACDSDATA") {
        } else {
          console.log(w, $, n);
          throw w;
        }
      }
    }
    function N(P, j, v, l, p) {
      var u = 0,
        w = 0;
      for (var s = 0; s < P.length; s++) {
        var i = L(s, v, l, p);
        u += P[s] * i;
        w += j[s] * i;
      }
      return [u, w];
    }
    function L(P, v, l, p) {
      var u = new Float64Array(v + 1),
        w,
        s,
        E = l.Length - 1;
      if ((P == 0 && p == l[0]) || (P == E - v - 1 && p == l[E])) return 1;
      if (p < l[P] || p >= l[P + v + 1]) return 0;
      for (var g = 0; g <= v; g++) {
        if (p >= l[P + g] && p < l[P + g + 1]) u[g] = 1;
        else u[g] = 0;
      }
      for (var $ = 1; $ <= v; $++) {
        if (u[0] == 0) w = 0;
        else w = ((p - l[P]) * u[0]) / (l[P + $] - l[P]);
        for (var g = 0; g < v - $ + 1; g++) {
          var n = l[P + g + 1],
            a = l[P + g + $ + 1];
          if (u[g + 1] == 0) {
            u[g] = w;
            w = 0;
          } else {
            s = u[g + 1] / (a - n);
            u[g] = w + (a - p) * s;
            w = (p - n) * s;
          }
        }
      }
      return u[0];
    }
    return { Parse: F };
  })(),
  ToPDF = (function () {
    function h() {
      this._res = {
        "/Font": {},
        "/XObject": {},
        "/ExtGState": {},
        "/Pattern": {},
      };
      this._xr = [
        null,
        { "/Type": "/Catalog", "/Pages": { typ: "ref", ind: 2 } },
        { "/Type": "/Pages", "/Kids": [], "/Count": 0 },
        this._res,
      ];
      this._bnds = [];
      this._cont = "";
      this._annt = [];
      this._gst = F();
      this._gmap = { smsk: "/None" };
      this._stck = [];
    }
    function F() {
      return {
        colr: "[0,0,0]",
        COLR: "[0,0,0]",
        lcap: "0",
        ljoin: "0",
        lwidth: "1",
        mlimit: "10",
        dash: "[]",
        doff: "0",
        bmode: "/Normal",
        CA: "1",
        ca: "1",
      };
    }
    h.prototype.StartTGroup = function (U) {
      this.setGState(U, !1);
      this._stck.push(this._cont, this._gst);
      this._cont = "";
      this._gst = F();
    };
    h.prototype.EndTGroup = function () {
      var U = {
          "/Type": "/XObject",
          "/Subtype": "/Form",
          "/Group": { "/Type": "/Group", "/S": "/Transparency" },
          stream: this._cont,
        },
        K = this._res["/XObject"],
        z = s(U, K, this._xr);
      this._gst = this._stck.pop();
      this._cont = this._stck.pop();
      this._cont += z + " Do \n";
    };
    h.prototype.StartPage = function (U, K, z, B) {
      this._bnds = [U, K, z, B];
    };
    h.prototype.AddAnnot = function (U, K) {
      this._annt.push([U, K]);
    };
    h.prototype.Stroke = function (U) {
      if (U.CA == 0) return;
      var K = null;
      if (U.cpth) {
        this._cont += " q " + w(U.cpth) + " W  n  ";
        K = JSON.stringify(this._gst);
      }
      this.setGState(U, !0);
      this._cont += " S\n";
      this._cont += v(this._gmap, this._res["/ExtGState"]);
      if (U.cpth) {
        this._cont += " Q ";
        this._gst = JSON.parse(K);
      }
    };
    h.prototype.Fill = function (U, K) {
      if (U.ca == 0) return;
      var z = null;
      if (U.cpth) {
        this._cont += " q " + w(U.cpth) + " W  n  ";
        z = JSON.stringify(this._gst);
      }
      this.setGState(U, !0);
      this._cont += " f" + (K ? "*" : "") + "\n";
      this._cont += v(this._gmap, this._res["/ExtGState"]);
      if (U.cpth) {
        this._cont += " Q ";
        this._gst = JSON.parse(z);
      }
    };
    function d(U) {
      return "" + parseFloat(U.toFixed(2));
    }
    function t(U) {
      return "" + parseFloat(U.toFixed(3));
    }
    function f(U) {
      return Math.sqrt(Math.abs(U[0] * U[3] - U[1] * U[2]));
    }
    function N(U) {
      var K = U.map(d).join(" ");
      if (K == "1 0 0 1 0 0") return "";
      return K + " cm ";
    }
    function L(U, K) {
      if (U.length != K.length) return !1;
      for (var z = 0; z < U.length; z++) if (U[z] != K[z]) return !1;
      return !0;
    }
    function P(U) {
      var K = [
          [255, 216, 255],
          [0, 0, 0, 12, 106, 80, 32, 32],
          [0, 0, 0, 0, 48, 0, 1, 0],
        ],
        z = ["/DCTDecode", "/JPXDecode", "/JBIG2Decode"];
      for (var B = 0; B < K.length; B++) {
        var J = K[B],
          G = !0;
        for (var O = 0; O < J.length; O++) G = G && U[O] == J[O];
        if (G) return z[B];
      }
    }
    h.prototype.setGState = function (U, K) {
      var z = this._gst,
        B = {};
      for (var J in U)
        if (J != "pth" && J != "cpth")
          B[J] = typeof U[J] == "string" ? U[J] : JSON.stringify(U[J]);
      var G = f(U.ctm),
        O = U.dash.slice(0);
      for (var T = 0; T < O.length; T++) O[T] = d(O[T] * G);
      var W = this._cont;
      if (z.lcap != B.lcap) W += U.lcap + " J ";
      if (z.ljoin != B.ljoin) W += U.ljoin + " j ";
      if (z.lwidth != B.lwidth) W += d(U.lwidth * G) + " w ";
      if (z.mlimit != B.mlimit) W += d(U.mlimit) + " M ";
      if (z.dash != B.dash || z.doff != B.doff)
        W += "[" + O.join(" ") + "] " + U.doff + " d ";
      var Y = this._res["/ExtGState"];
      if (z.COLR != B.COLR) W += j(U.COLR, !1, this._res, this._xr, this._gmap);
      if (z.colr != B.colr) W += j(U.colr, !0, this._res, this._xr, this._gmap);
      if (z.bmode != B.bmode) {
        var q = B.bmode;
        if (Y[q] == null) Y[q] = { "/Type": "/ExtGState", "/BM": U.bmode };
        W += q + " gs ";
      }
      if (z.CA != B.CA) {
        var q = "/CA" + Math.round(255 * B.CA);
        if (Y[q] == null) Y[q] = { "/Type": "/ExtGState", "/CA": U.CA };
        W += q + " gs ";
      }
      if (z.ca != B.ca) {
        var q = "/ca" + Math.round(255 * B.ca);
        if (Y[q] == null) Y[q] = { "/Type": "/ExtGState", "/ca": U.ca };
        W += q + " gs ";
      }
      if (K) W += w(U.pth);
      this._cont = W;
      this._gst = B;
    };
    function j(U, K, z, B, J) {
      var G = z["/ExtGState"];
      if (U.length != null) {
        return U.map(t).join(" ") + " " + (K ? "rg" : "RG") + " \n";
      } else {
        var O = z["/XObject"],
          T = z["/Pattern"],
          W = U,
          Y = l(W, O, B, J),
          q = "/P" + (i(T) + 1);
        T[q] = {
          "/Type": "/Pattern",
          "/PatternType": 2,
          "/Matrix": W.mat,
          "/Shading": Y[0],
        };
        var ce = "/Pattern " + (K ? "cs " + q + " scn " : "CS " + q + " SCN ");
        if (Y[1]) {
          var bO = "q   0 g   " + N(W.mat) + "   BX /Sh0 sh EX Q",
            a2 = {
              "/Subtype": "/Form",
              "/BBox": [-32768, 32767, 32767, -32768],
              "/Resources": { "/Shading": { "/Sh0": Y[1] } },
              stream: bO,
            },
            A = s(a2, O, B),
            cu = q + "m";
          G[cu] = {
            "/Type": "/ExtGState",
            "/SMask": { "/Type": "/Mask", "/S": "/Luminosity", "/G": O[A] },
          };
          J.smsk = "custom";
          return cu + " gs " + ce;
        }
        return ce;
      }
    }
    function v(U, K) {
      if (U.smsk == "/None") return "";
      U.smsk = "/None";
      if (K["/Nmsk"] == null)
        K["/Nmsk"] = { "/Type": "/ExtGState", "/SMask": "/None" };
      return "/Nmsk gs ";
    }
    function l(U, K, z, B) {
      var J = JSON.stringify([U.typ, U.grad, U.crds]),
        G = 1;
      if (B[J]) return B[J];
      for (var O = 0; O < U.grad.length; O++) G = Math.min(G, U.grad[O][2]);
      var T = (B[J] = []),
        W = p(U.grad);
      for (var O = 0; O < 2; O++) {
        var Y = {
          "/ShadingType": U.typ == "lin" ? 2 : 3,
          "/ColorSpace": O == 0 ? "/DeviceRGB" : "/DeviceGray",
          "/Extend": [!0, !0],
          "/Function": W[O],
          "/Coords": U.crds,
        };
        T.push({ typ: "ref", ind: z.length });
        z.push(Y);
        if (G == 1) break;
      }
      return T;
    }
    function p(U) {
      U = U.slice(0);
      if (U[0][0] != 0) U.unshift(JSON.parse(JSON.stringify(U[0])));
      if (U[U.length - 1][0] != 1)
        U.push(JSON.parse(JSON.stringify(U[U.length - 1])));
      U[0][0] = 0;
      U[U.length - 1][0] = 1;
      var K = [],
        z = [],
        B = [],
        J = [],
        G = u;
      G(U[0], U[1], J, z, B);
      for (var O = 1; O < U.length - 1; O++) {
        K.push(U[O][0]);
        G(U[O], U[O + 1], J, z, B);
      }
      return [
        z.length == 1
          ? z[0]
          : {
              "/FunctionType": 3,
              "/Encode": J,
              "/Domain": [0, 1],
              "/Bounds": K,
              "/Functions": z,
            },
        K.length == 1
          ? K[0]
          : {
              "/FunctionType": 3,
              "/Encode": J,
              "/Domain": [0, 1],
              "/Bounds": K,
              "/Functions": B,
            },
      ];
    }
    function u(U, K, z, B, J) {
      var G = U[3];
      if (G < 0.5) {
        G = 1 - G;
        var O = U;
        U = K;
        K = O;
        z.push(1, 0);
      } else z.push(0, 1);
      var T = Math.log(0.5) / Math.log(G);
      B.push({
        "/FunctionType": 2,
        "/C0": U[1],
        "/C1": K[1],
        "/Domain": [0, 1],
        "/N": T,
      });
      J.push({
        "/FunctionType": 2,
        "/C0": [U[2]],
        "/C1": [K[2]],
        "/Domain": [0, 1],
        "/N": T,
      });
    }
    function w(U) {
      var K = 0,
        z = "",
        B = d,
        J = U.crds,
        O = U.cmds,
        T = 0,
        W = 0,
        Y = 0,
        q = 0;
      for (var ce = 0; ce < O.length; ce++) {
        var bO = O[ce];
        if (bO == "M") {
          for (var a2 = 0; a2 < 2; a2++) z += B(J[K++]) + " ";
          z += "m ";
        } else if (bO == "L") {
          for (var a2 = 0; a2 < 2; a2++) z += B(J[K++]) + " ";
          z += "l ";
        } else if (bO == "Q") {
          var A = J[K++],
            cu = J[K++],
            al = J[K++],
            bR = J[K++],
            aw = [
              (2 * A + Y) / 3,
              (2 * cu + q) / 3,
              (2 * A + al) / 3,
              (2 * cu + bR) / 3,
              al,
              bR,
            ];
          for (var a2 = 0; a2 < 6; a2++) z += B(aw[a2]) + " ";
          z += "c ";
        } else if (bO == "C") {
          for (var a2 = 0; a2 < 6; a2++) z += B(J[K++]) + " ";
          z += "c ";
        } else if (bO == "Z") {
          z += "h ";
        } else throw bO;
        if (bO == "Z") {
          Y = T;
          q = W;
        } else {
          Y = J[K - 2];
          q = J[K - 1];
          if (bO == "M") {
            T = Y;
            W = q;
          }
        }
      }
      return z;
    }
    h.prototype.PutText = function (U, K, z, B) {
      this.setGState(U, !1);
      var J = this.addFont(U.font.Tf, B);
      this._cont += "q ";
      if (U.cpth) this._cont += w(U.cpth) + " W  n  ";
      this._cont += N(U.ctm);
      this._cont += N(U.font.Tm);
      this._cont += "BT  " + J + " " + d(U.font.Tfs) + " Tf  0 0 Td  (";
      var G = [];
      if (B == null) {
        var O = [
          128, 8364, 130, 8218, 131, 402, 132, 8222, 133, 8230, 134, 8224, 135,
          8225, 136, 710, 137, 8240, 138, 352, 139, 8249, 140, 338, 142, 381,
          145, 8216, 146, 8217, 147, 8220, 148, 8221, 149, 8226, 150, 8211, 151,
          8212, 152, 732, 153, 8482, 154, 353, 155, 8250, 156, 339, 158, 382,
          159, 376,
        ];
        for (var T = 0; T < K.length; T++) {
          var W = K.charCodeAt(T);
          if (W > 255) {
            var Y = O.indexOf(W);
            G.push(Y == -1 ? 32 : O[Y - 1]);
          } else G.push(W);
        }
      } else {
        for (var T = 0; T < K.length; T++) {
          var W = K.charCodeAt(T);
          G.push(W & 255);
        }
      }
      G = FromPS.makeString(G);
      for (var T = 0; T < G.length; T++)
        this._cont += String.fromCharCode(G[T]);
      this._cont += ") Tj  ET ";
      this._cont += " Q\n";
    };
    h.prototype.PutImage = function (U, K, z, B, J) {
      if (K.length == z * B * 4 && J == null) {
        var G = z * B,
          O = new Uint8Array(G),
          T = 255;
        for (var W = 0; W < G; W++) {
          O[W] = K[(W << 2) + 3];
          T &= K[(W << 2) + 3];
        }
        if (T != 255) J = O;
      }
      var Y = this.addImage(K, z, B, J);
      this.setGState(U, !1);
      this._cont += "q ";
      if (U.cpth) {
        this._cont += w(U.cpth) + " W  n  ";
      }
      this._cont += N(U.ctm);
      this._cont += Y + " Do  Q\n";
    };
    h.prototype.ShowPage = function () {
      $(this._xr, this._cont, this._bnds, this._annt);
      this._cont = "";
      this._annt = [];
      this._gst = F();
    };
    h.prototype.Print = function (U) {};
    h.prototype.Done = function () {
      var U = this._res;
      for (var K in U) if (Object.keys(U[K]) == 0) delete U[K];
      this.buffer = n(this._xr);
    };
    h.prototype.addImage = function (U, K, z, B) {
      var J, G;
      if (B) {
        G = B;
        if (B.length == K * z * 4) {
          G = new Uint8Array(K * z);
          for (var O = 0; O < G.length; O++) G[O] = B[(O << 2) + 1];
        }
        J = this.addImage(G, K, z, null);
      }
      var T = P(U),
        W = U;
      if (U.length == K * z * 4) {
        W = new Uint8Array(K * z * 3);
        for (var O = 0; O < U.length; O += 4) {
          var Y = 3 * (O >> 2);
          W[Y] = U[O + 0];
          W[Y + 1] = U[O + 1];
          W[Y + 2] = U[O + 2];
        }
      }
      var q = this._res["/XObject"],
        ce = J != null ? 1 : 0;
      for (var bO in q) {
        var a2 = this._xr[q[bO].ind],
          A = a2["/SMask"],
          cu = A != null ? 1 : 0;
        if (!L(a2.stream, W) || cu + ce == 1) continue;
        if (cu + ce == 2 && !L(this._xr[A.ind].stream, G)) continue;
        return bO;
      }
      var al = {
        "/Type": "/XObject",
        "/Subtype": "/Image",
        "/BitsPerComponent": 8,
        "/ColorSpace":
          U.length == K * z || (T == "/DCTDecode" && E(U) && E(U).comps == 1)
            ? "/DeviceGray"
            : "/DeviceRGB",
        "/Height": z,
        "/Width": K,
        stream: W,
      };
      if (T != null) al["/Filter"] = P(U);
      if (B) {
        al["/SMask"] = q[J];
      }
      return s(al, q, this._xr);
    };
    function s(U, K, z) {
      var B = "/I" + (i(K) + 1);
      K[B] = { typ: "ref", ind: z.length };
      z.push(U);
      return B;
    }
    function i(U) {
      var K;
      for (var z in U) K = z;
      return K == null ? 0 : parseInt(K.slice(2));
    }
    function E(U) {
      var K = 0;
      while (K < U.length) {
        while (U[K] == 255) K++;
        var z = U[K];
        K++;
        if (z == 216) continue;
        if (z == 217) break;
        if (208 <= z && z <= 215) continue;
        if (z == 1) continue;
        var B = ((U[K] << 8) | U[K + 1]) - 2;
        K += 2;
        if (z == 192)
          return {
            bpp: U[K],
            w: (U[K + 1] << 8) | U[K + 2],
            h: (U[K + 3] << 8) | U[K + 4],
            comps: U[K + 5],
          };
        K += B;
      }
    }
    function g(U) {
      var K = U.toLowerCase(),
        z =
          "Helvetica Helvetica-Bold Helvetica-Oblique Helvetica-BoldOblique Times-Roman Times-Bold Times-Italic Times-BoldItalic".split(
            " "
          ),
        B = 0;
      if (K.indexOf("sans") != -1) B = 0;
      else if (K.indexOf("serif") != -1) B = 4;
      var J = K.indexOf("bold") != -1,
        G =
          K.indexOf("italic") != -1 ||
          K.indexOf("oblique") != -1 ||
          K.endsWith("-it");
      if (J && G) B += 3;
      else if (G) B += 2;
      else if (J) B += 1;
      return z[B];
    }
    h.prototype.addFont = function (U, K) {
      U = g(U);
      U = "/" + U;
      var z = this._res["/Font"];
      for (var B in z) if (z[B]["/BaseFont"] == U) return B;
      var B = "/F" + (i(z) + 1),
        J = {
          "/Type": "/Font",
          "/Subtype": "/Type1",
          "/BaseFont": U,
          "/Encoding": "/WinAnsiEncoding",
        };
      if (K != null) {
        var G =
            "/CIDInit /ProcSet findresource begin \t12 dict begin \tbegincmap \t/CIDSystemInfo \t<<  /Registry (Adobe) \t/Ordering (UCS) \t/Supplement 0 \t>> def \t/CMapName /Adobe-Identity-UCS def \t/CMapType 2 def \t1 begincodespacerange \t<0000> <FFFF> \tendcodespacerange \t1 beginbfchar \t<0001> <200B> \tendbfchar \tendcmap \tCMapName currentdict /CMap defineresource pop \tend \tend",
          O = new Uint8Array(G.length);
        for (var T = 0; T < G.length; T++) O[T] = G.charCodeAt(T);
        J["/Subtype"] = "/TrueType";
        delete J["/Encoding"];
        J["/FirstChar"] = 0;
        J["/Widths"] = [];
        for (var T = 0; T < 256; T++) J["/Widths"].push(500);
        J["/LastChar"] = J["/Widths"].length - 1;
        J["/FontDescriptor"] = {
          "/Ascent": 905,
          "/CapHeight": 1010,
          "/Descent": 211,
          "/Flags": 4,
          "/FontBBox": [-627, -376, 2e3, 1011],
          "/FontName": U,
          "/ItalicAngle": 0,
          "/StemV": 80,
          "/Type": "/FontDescriptor",
          "/FontFile2": { stream: new Uint8Array(K) },
        };
      }
      z[B] = J;
      return B;
    };
    function $(U, K, z, B) {
      var J = [];
      for (var G = 0; G < B.length; G++) {
        var O = B[G];
        U.push({
          "/Type": "/Annot",
          "/Subtype": "/Link",
          "/F": 4,
          "/Border": [0, 0, 0],
          "/Rect": O[0],
          "/A": { "/Type": "/Action", "/S": "/URI", "/URI": "(" + O[1] + ")" },
        });
        J.push({ typ: "ref", ind: U.length - 1 });
      }
      var G = U.length;
      U[2]["/Kids"].push({ typ: "ref", ind: G });
      U[2]["/Count"]++;
      U.push({
        "/Type": "/Page",
        "/Parent": { typ: "ref", ind: 2 },
        "/Resources": { typ: "ref", ind: 3 },
        "/MediaBox": z,
        "/Annots": J,
        "/Contents": { typ: "ref", ind: G + 1 },
      });
      U.push({ stream: K });
    }
    function n(U) {
      var K = { file: new Q(), off: 0 },
        z = I,
        B = [];
      z(K, "%PDF-1.1\n");
      for (var J = 1; J < U.length; J++) {
        B.push(K.off);
        z(K, J + " 0 obj\n");
        S(K, U[J], 0);
        z(K, "\nendobj\n");
      }
      var O = K.off;
      z(K, "xref\n");
      z(K, "0 " + U.length + "\n");
      z(K, "0000000000 65535 f \n");
      for (var J = 0; J < B.length; J++) {
        var T = B[J] + "";
        while (T.length < 10) T = "0" + T;
        z(K, T + " 00000 n \n");
      }
      z(K, "trailer\n");
      S(K, { "/Root": { typ: "ref", ind: 1 }, "/Size": U.length }, 0);
      z(K, "\nstartxref\n" + O + "\n%%EOF\n");
      return K.file.data.buffer.slice(0, K.off);
    }
    function I(U, K) {
      U.file.req(U.off, K.length);
      for (var z = 0; z < K.length; z++)
        U.file.data[U.off + z] = K.charCodeAt(z);
      U.off += K.length;
    }
    function a(U) {
      var K = "";
      for (var z = 0; z < U; z++) K += "    ";
      return K;
    }
    function o(U, K, z) {
      var B = I;
      if (!1) {
      } else if (typeof K == "string") B(U, K);
      else if (typeof K == "number") B(U, "" + parseFloat(K.toFixed(3)));
      else if (typeof K == "boolean") B(U, "" + K);
      else if (K.typ != null) B(U, K.ind + " 0 R");
      else if (K instanceof Array) V(U, K, z + 1);
      else if (K instanceof Object) S(U, K, z + 1);
      else {
        console.log(K);
        throw "e";
      }
    }
    function S(U, K, z) {
      var B = I,
        J = a,
        O = K.stream;
      if (O) {
        if (typeof O == "string") {
          var T = new Uint8Array(O.length);
          for (var W = 0; W < O.length; W++) T[W] = O.charCodeAt(W);
          O = T;
        }
        if (K["/Filter"] == null) {
          K["/Filter"] = "/FlateDecode";
          O = pako.deflate(O);
        }
      }
      B(U, "<<\n");
      for (var Y in K) {
        if (Y.charAt(0) != "/") continue;
        B(U, J(z + 1) + Y + " ");
        o(U, K[Y], z);
        B(U, "\n");
      }
      if (O) B(U, J(z + 1) + "/Length " + O.length + "\n");
      B(U, J(z) + ">>");
      if (O) {
        B(U, J(z) + "\nstream\n");
        U.file.req(U.off, O.length);
        for (var W = 0; W < O.length; W++) U.file.data[U.off + W] = O[W];
        U.off += O.length;
        B(U, J(z) + "\nendstream");
      }
    }
    function V(U, K, z) {
      var B = I;
      B(U, "[ ");
      for (var J = 0; J < K.length; J++) {
        o(U, K[J], z + 1);
        if (J != K.length - 1) B(U, " ");
      }
      B(U, " ]");
    }
    var Q = function () {
      this.size = 16;
      this.data = new Uint8Array(16);
    };
    Q.prototype.req = function (U, K) {
      if (U + K <= this.size) return;
      var z = this.size;
      while (U + K > this.size) this.size *= 2;
      var B = new Uint8Array(this.size);
      for (var J = 0; J < z; J++) B[J] = this.data[J];
      this.data = B;
    };
    return h;
  })();
function ToEMF() {
  this._file = { file: new ToEMF.MFile(), off: 0 };
  this._lstw = 0;
  this._curx = 0;
  this._curh = 0;
  this._recs = 0;
  this._lenp = 0;
  this._objs = {};
  this._tabl = 1;
  this._stkf = 0;
  this._tclr = 0;
  this._curt = { p: -1, b: -1, t: -1 };
  this._inited = !1;
}
ToEMF.prototype.StartTGroup = function () {};
ToEMF.prototype.EndTGroup = function () {};
ToEMF.prototype.StartPage = function (h, F, d, t) {
  this._check();
  var f = this._file,
    L = ToEMF.B.writeUint,
    P = ToEMF.B.writeInt;
  this._curh = Math.max(this._curh, t * 10);
  if (!this._inited) {
    this._inited = !0;
    this._addRec("HEADER", 88);
    ToEMF._writeHeadBox(f, [h, F, d, t]);
    f.off += 32;
    ToEMF.B.writeASCII(f.file, f.off, " EMF");
    f.off += 4;
    L(f.file, f.off, 65536);
    f.off += 4;
    this._lenp = f.off;
    f.off += 4 + 4 + 4;
    f.off += 4 + 4 + 4;
    P(f.file, f.off, 1440);
    f.off += 4;
    P(f.file, f.off, 900);
    f.off += 4;
    P(f.file, f.off, 508);
    f.off += 4;
    P(f.file, f.off, 318);
    f.off += 4;
    this._trsf([0.1, 0, 0, 0.1, 0, 0]);
    this._addRec("SETBKMODE", 12);
    L(f.file, f.off, 1);
    f.off += 4;
    this._addRec("SETTEXTALIGN", 12);
    L(f.file, f.off, 24);
    f.off += 4;
  } else {
    this._curx += this._lstw;
    ToEMF._writeHeadBox(f, [0, 0, this._curx + d, Math.round(this._curh / 10)]);
  }
  this._lstw = d;
};
ToEMF.prototype.Stroke = function (h) {
  this._draw(h, 1);
};
ToEMF.prototype.Fill = function (h, F) {
  this._draw(h, 2);
};
ToEMF.prototype.PutImage = function (h, F, d, t, f) {
  var N = F.length;
  if ((N & 3) != 0) N += 4 - (N & 3);
  var L = [1, 0, 0, -1, 0, 1];
  UDOC.M.concat(L, h.ctm);
  UDOC.M.scale(L, 10, 10);
  UDOC.M.scale(L, 1, -1);
  UDOC.M.translate(L, this._curx, this._curh);
  this._trsf(L);
  var j = this._file,
    v = ToEMF.B.writeUint,
    l = ToEMF.B.writeInt,
    p = ToEMF.B.writeUshort,
    w = 8 + 16 + 14 * 4;
  this._addRec("STRETCHDIBITS", w + 40 + N);
  j.off += 16;
  l(j.file, j.off, Math.round(0));
  j.off += 4;
  l(j.file, j.off, Math.round(0));
  j.off += 4;
  j.off += 8;
  l(j.file, j.off, d);
  j.off += 4;
  l(j.file, j.off, t);
  j.off += 4;
  v(j.file, j.off, w);
  j.off += 4;
  v(j.file, j.off, 40);
  j.off += 4;
  v(j.file, j.off, w + 40);
  j.off += 4;
  v(j.file, j.off, F.length);
  j.off += 4;
  j.off += 4;
  v(j.file, j.off, 13369376);
  j.off += 4;
  l(j.file, j.off, Math.round(1));
  j.off += 4;
  l(j.file, j.off, Math.round(1));
  j.off += 4;
  l(j.file, j.off, 40);
  j.off += 4;
  l(j.file, j.off, d);
  j.off += 4;
  l(j.file, j.off, t);
  j.off += 4;
  p(j.file, j.off, 1);
  j.off += 2;
  p(j.file, j.off, 32);
  j.off += 2;
  l(j.file, j.off, 0);
  j.off += 4;
  l(j.file, j.off, F.length);
  j.off += 4;
  l(j.file, j.off, 3800);
  j.off += 4;
  l(j.file, j.off, 3800);
  j.off += 4;
  j.off += 8;
  j.file.req(j.off, F.length);
  if (F.length == d * t * 4) {
    for (var s = 0; s < t; s++)
      for (var i = 0; i < d; i++) {
        var E = (s * d + i) << 2,
          g = j.off + (((t - 1 - s) * d + i) << 2);
        j.file.data[g] = F[E + 2];
        j.file.data[g + 1] = F[E + 1];
        j.file.data[g + 2] = F[E];
        j.file.data[g + 3] = F[E + 3];
      }
  } else for (var $ = 0; $ < F.length; $++) j.file.data[j.off + $] = F[$];
  j.off += N;
  UDOC.M.invert(L);
  this._trsf(L);
};
ToEMF.prototype.PutText = function (h, F, d) {
  var t = F.length,
    s;
  if ((t & 1) == 1) t++;
  this._check();
  var f = this._file,
    L = ToEMF.B.writeUint,
    P = ToEMF.B.writeInt,
    j = ToEMF.B.writeUshort,
    v = ToEMF.B.writeFloat,
    l = ToEMF._color(h.colr);
  if (l != this._tclr) {
    this._addRec("SETTEXTCOLOR", 12);
    L(f.file, f.off, l);
    f.off += 4;
    this._tclr = l;
  }
  this._setTool("f", [h.font.Tf, Math.round(h.font.Tfs * 10)]);
  var p = 10 * (h.ctm[4] + this._curx),
    u = this._curh - 10 * h.ctm[5],
    w = Math.abs(h.ctm[1]) > 0.05;
  if (w) {
    s = h.ctm.slice(0);
    s[1] *= -1;
    s[2] *= -1;
    s[4] = p;
    s[5] = u;
    p = u = 0;
    this._trsf(s);
  }
  var i = 8 + 16 + 12 + 4 * 6 + 16;
  this._addRec("EXTTEXTOUTW", i + t * 2);
  f.off += 16;
  L(f.file, f.off, 2);
  f.off += 4;
  v(f.file, f.off, 31.25);
  f.off += 4;
  v(f.file, f.off, 31.25);
  f.off += 4;
  P(f.file, f.off, Math.round(p));
  f.off += 4;
  P(f.file, f.off, Math.round(u));
  f.off += 4;
  L(f.file, f.off, F.length);
  f.off += 4;
  L(f.file, f.off, i);
  f.off += 4;
  L(f.file, f.off, 0);
  f.off += 4;
  f.off += 16;
  L(f.file, f.off, 0);
  f.off += 4;
  for (var E = 0; E < F.length; E++) j(f.file, f.off + E * 2, F.charCodeAt(E));
  f.off += 2 * t;
  if (w) {
    UDOC.M.invert(s);
    this._trsf(s);
  }
};
ToEMF.prototype.ShowPage = function () {
  this._check();
};
ToEMF.prototype.Done = function () {
  this._check();
  var h = this._file,
    F = ToEMF.B.writeUint;
  this._addRec("EOF", 20);
  F(h.file, h.off, 0);
  h.off += 4;
  F(h.file, h.off, 16);
  h.off += 4;
  F(h.file, h.off, 20);
  h.off += 4;
  F(h.file, this._lenp, h.off);
  F(h.file, this._lenp + 4, this._recs);
  F(h.file, this._lenp + 8, this._tabl);
  this.buffer = h.file.data.buffer.slice(0, h.off);
};
ToEMF.prototype._check = function () {
  var h = this._file,
    F = this._stkf;
  if (F == 0) return;
  if (F == 1) this._addRec("STROKEPATH", 24);
  if (F == 2) this._addRec("FILLPATH", 24);
  if (F == 3) this._addRec("STROKEANDFILLPATH", 24);
  h.off += 16;
  this._stkf = 0;
};
ToEMF.prototype._addRec = function (h, F) {
  var d = this._file,
    t = ToEMF.B.writeUint;
  this._recs++;
  t(d.file, d.off, ToEMF.C["EMR_" + h]);
  d.off += 4;
  t(d.file, d.off, F);
  d.off += 4;
};
ToEMF.prototype._trsf = function (h) {
  var F = this._file,
    d = ToEMF.B.writeInt;
  this._addRec("MODIFYWORLDTRANSFORM", 36);
  for (var t = 0; t < h.length; t++) {
    ToEMF.B.writeFloat(F.file, F.off, h[t]);
    F.off += 4;
  }
  d(F.file, F.off, 2);
  F.off += 4;
};
ToEMF._writeHeadBox = function (h, F) {
  var d = h.off;
  h.off = 8;
  ToEMF._writeBox(h, F);
  var t = (1 / 72) * 25.4 * 100;
  ToEMF._writeBox(h, [
    0,
    0,
    Math.round((F[2] - F[0]) * t),
    Math.round((F[3] - F[1]) * t),
  ]);
  h.off = d;
};
ToEMF._writeBox = function (h, F) {
  for (var d = 0; d < 4; d++) {
    ToEMF.B.writeInt(h.file, h.off, F[d]);
    h.off += 4;
  }
};
ToEMF.prototype._draw = function (h, F) {
  var d = this._file,
    t = ToEMF.B.writeUint,
    f = ToEMF.B.writeInt,
    L = h.pth,
    P = JSON.stringify(L);
  if (this._cpth != P) this._check();
  if (F == 1) this._setTool("p", [h.COLR, h.lwidth, h.ljoin]);
  else this._setTool("b", [h.colr]);
  if (this._cpth == P) {
    this._stkf += F;
  } else {
    var j = {
        M: ["MOVETOEX", 1],
        L: ["LINETO", 1],
        Q: ["POLYBEZIERTO", 3],
        C: ["POLYBEZIERTO", 3],
        Z: ["CLOSEFIGURE", 0],
      },
      v = 0,
      l = L.cmds.length;
    this._addRec("BEGINPATH", 8);
    for (var p = 0; p < l; p++) {
      var u = L.cmds[p],
        w = j[u],
        g = 1;
      if (w == null) throw u + " e";
      var s = w[1] * 2,
        i = w[0],
        E = 8 + 4 * s;
      while (!0) {
        if (p + g < l && L.cmds[p + g] == u) g++;
        else break;
      }
      var $ = u == "C" || u == "Q" || (u == "L" && g > 1);
      if ($) {
        if (u == "L") i = "POLYLINETO";
        E = 8 + 20 + 4 * s * g;
      }
      this._addRec(i, E);
      if ($) {
        d.off += 16;
        t(d.file, d.off, g * w[1]);
        d.off += 4;
        p += g - 1;
      }
      for (var n = 0; n < g; n++) {
        var I = L.crds,
          a = v;
        if (u == "Q") {
          var o = I[a - 2],
            V = I[a - 1],
            Q = I[a++],
            U = I[a++],
            K = I[a++],
            z = I[a++];
          I = [
            (2 * Q + o) / 3,
            (2 * U + V) / 3,
            (2 * Q + K) / 3,
            (2 * U + z) / 3,
            K,
            z,
          ];
          a = 0;
          v -= 2;
        }
        for (var B = 0; B < s; B += 2) {
          f(d.file, d.off, Math.round(10 * (I[a] + this._curx)));
          d.off += 4;
          a++;
          f(d.file, d.off, Math.round(this._curh - 10 * I[a]));
          d.off += 4;
          a++;
        }
        v += s;
      }
    }
    this._addRec("ENDPATH", 8);
    this._cpth = P;
    this._stkf = F;
  }
};
ToEMF.prototype._setTool = function (h, F) {
  var d = this._file,
    t = ToEMF.B.writeUint,
    f = ToEMF.B.writeInt,
    L = h + JSON.stringify(F),
    P = this._objs[L];
  if (P == null) {
    P = this._objs[L] = this._tabl;
    this._tabl++;
    if (h == "b") this._addRec("CREATEBRUSHINDIRECT", 24);
    if (h == "p") this._addRec("CREATEPEN", 28);
    if (h == "f") this._addRec("EXTCREATEFONTINDIRECTW", 104);
    t(d.file, d.off, P);
    d.off += 4;
    if (h == "b" || h == "p") {
      if (h == "p") {
        t(d.file, d.off, 0);
        d.off += 4;
        var j = Math.round(F[1] * 10);
        t(d.file, d.off, j);
        d.off += 4;
        t(d.file, d.off, j);
        d.off += 4;
      } else {
        t(d.file, d.off, 0);
        d.off += 4;
      }
      t(d.file, d.off, ToEMF._color(F[0]));
      d.off += 4;
      if (h == "b") {
        t(d.file, d.off, 0);
        d.off += 4;
      }
    }
    if (h == "f") {
      var v = F[0],
        l = v.toLowerCase().indexOf("bold") != -1;
      if (v.endsWith("-Bold")) v = v.slice(0, v.length - 5);
      f(d.file, d.off, -F[1]);
      d.off += 4;
      d.off += 12;
      t(d.file, d.off, l ? 700 : 400);
      d.off += 4;
      t(d.file, d.off, 0);
      d.off += 4;
      t(d.file, d.off, 262151);
      d.off += 4;
      for (var p = 0; p < v.length; p++)
        ToEMF.B.writeUshort(d.file, d.off + p * 2, v.charCodeAt(p));
      d.off += 64;
    }
  }
  if (this._curt[h] != P) {
    this._addRec("SELECTOBJECT", 12);
    t(d.file, d.off, P);
    d.off += 4;
    this._curt[h] = P;
  }
};
ToEMF._color = function (h) {
  var F = h.grad;
  if (F) h = F[Math.floor(F.length / 2)][1];
  var d = Math.round(h[0] * 255),
    t = Math.round(h[1] * 255),
    f = Math.round(h[2] * 255);
  return (f << 16) | (t << 8) | (d << 0);
};
ToEMF.B = (function () {
  var h = new Uint8Array(4),
    F = h.buffer,
    d = new Int16Array(F),
    t = new Uint16Array(F),
    f = new Int32Array(F),
    N = new Uint32Array(F),
    L = new Float32Array(F);
  return {
    writeShort: function (P, j, v) {
      d[0] = v;
      P.req(j, 2);
      var l = P.data;
      l[j] = h[0];
      l[j + 1] = h[1];
    },
    writeUshort: function (P, j, v) {
      t[0] = v;
      P.req(j, 2);
      var l = P.data;
      l[j] = h[0];
      l[j + 1] = h[1];
    },
    writeInt: function (P, j, v) {
      f[0] = v;
      P.req(j, 4);
      var l = P.data;
      l[j] = h[0];
      l[j + 1] = h[1];
      l[j + 2] = h[2];
      l[j + 3] = h[3];
    },
    writeUint: function (P, j, v) {
      N[0] = v;
      P.req(j, 4);
      var l = P.data;
      l[j] = h[0];
      l[j + 1] = h[1];
      l[j + 2] = h[2];
      l[j + 3] = h[3];
    },
    writeFloat: function (P, j, v) {
      L[0] = v;
      P.req(j, 4);
      var l = P.data;
      l[j] = h[0];
      l[j + 1] = h[1];
      l[j + 2] = h[2];
      l[j + 3] = h[3];
    },
    writeASCII: function (P, j, v) {
      P.req(j, v.length);
      for (var l = 0; l < v.length; l++) P.data[j + l] = v.charCodeAt(l);
    },
  };
})();
ToEMF.MFile = function () {
  this.size = 16;
  this.data = new Uint8Array(16);
};
ToEMF.MFile.prototype.req = function (h, F) {
  if (h + F <= this.size) return;
  var d = this.size;
  while (h + F > this.size) this.size *= 2;
  var t = new Uint8Array(this.size);
  for (var f = 0; f < d; f++) t[f] = this.data[f];
  this.data = t;
};
ToEMF.C = {
  EMR_HEADER: 1,
  EMR_POLYBEZIER: 2,
  EMR_POLYGON: 3,
  EMR_POLYLINE: 4,
  EMR_POLYBEZIERTO: 5,
  EMR_POLYLINETO: 6,
  EMR_POLYPOLYLINE: 7,
  EMR_POLYPOLYGON: 8,
  EMR_SETWINDOWEXTEX: 9,
  EMR_SETWINDOWORGEX: 10,
  EMR_SETVIEWPORTEXTEX: 11,
  EMR_SETVIEWPORTORGEX: 12,
  EMR_SETBRUSHORGEX: 13,
  EMR_EOF: 14,
  EMR_SETPIXELV: 15,
  EMR_SETMAPPERFLAGS: 16,
  EMR_SETMAPMODE: 17,
  EMR_SETBKMODE: 18,
  EMR_SETPOLYFILLMODE: 19,
  EMR_SETROP2: 20,
  EMR_SETSTRETCHBLTMODE: 21,
  EMR_SETTEXTALIGN: 22,
  EMR_SETCOLORADJUSTMENT: 23,
  EMR_SETTEXTCOLOR: 24,
  EMR_SETBKCOLOR: 25,
  EMR_OFFSETCLIPRGN: 26,
  EMR_MOVETOEX: 27,
  EMR_SETMETARGN: 28,
  EMR_EXCLUDECLIPRECT: 29,
  EMR_INTERSECTCLIPRECT: 30,
  EMR_SCALEVIEWPORTEXTEX: 31,
  EMR_SCALEWINDOWEXTEX: 32,
  EMR_SAVEDC: 33,
  EMR_RESTOREDC: 34,
  EMR_SETWORLDTRANSFORM: 35,
  EMR_MODIFYWORLDTRANSFORM: 36,
  EMR_SELECTOBJECT: 37,
  EMR_CREATEPEN: 38,
  EMR_CREATEBRUSHINDIRECT: 39,
  EMR_DELETEOBJECT: 40,
  EMR_ANGLEARC: 41,
  EMR_ELLIPSE: 42,
  EMR_RECTANGLE: 43,
  EMR_ROUNDRECT: 44,
  EMR_ARC: 45,
  EMR_CHORD: 46,
  EMR_PIE: 47,
  EMR_SELECTPALETTE: 48,
  EMR_CREATEPALETTE: 49,
  EMR_SETPALETTEENTRIES: 50,
  EMR_RESIZEPALETTE: 51,
  EMR_REALIZEPALETTE: 52,
  EMR_EXTFLOODFILL: 53,
  EMR_LINETO: 54,
  EMR_ARCTO: 55,
  EMR_POLYDRAW: 56,
  EMR_SETARCDIRECTION: 57,
  EMR_SETMITERLIMIT: 58,
  EMR_BEGINPATH: 59,
  EMR_ENDPATH: 60,
  EMR_CLOSEFIGURE: 61,
  EMR_FILLPATH: 62,
  EMR_STROKEANDFILLPATH: 63,
  EMR_STROKEPATH: 64,
  EMR_FLATTENPATH: 65,
  EMR_WIDENPATH: 66,
  EMR_SELECTCLIPPATH: 67,
  EMR_ABORTPATH: 68,
  EMR_COMMENT: 70,
  EMR_FILLRGN: 71,
  EMR_FRAMERGN: 72,
  EMR_INVERTRGN: 73,
  EMR_PAINTRGN: 74,
  EMR_EXTSELECTCLIPRGN: 75,
  EMR_BITBLT: 76,
  EMR_STRETCHBLT: 77,
  EMR_MASKBLT: 78,
  EMR_PLGBLT: 79,
  EMR_SETDIBITSTODEVICE: 80,
  EMR_STRETCHDIBITS: 81,
  EMR_EXTCREATEFONTINDIRECTW: 82,
  EMR_EXTTEXTOUTA: 83,
  EMR_EXTTEXTOUTW: 84,
  EMR_POLYBEZIER16: 85,
  EMR_POLYGON16: 86,
  EMR_POLYLINE16: 87,
  EMR_POLYBEZIERTO16: 88,
  EMR_POLYLINETO16: 89,
  EMR_POLYPOLYLINE16: 90,
  EMR_POLYPOLYGON16: 91,
  EMR_POLYDRAW16: 92,
  EMR_CREATEMONOBRUSH: 93,
  EMR_CREATEDIBPATTERNBRUSHPT: 94,
  EMR_EXTCREATEPEN: 95,
  EMR_POLYTEXTOUTA: 96,
  EMR_POLYTEXTOUTW: 97,
  EMR_SETICMMODE: 98,
  EMR_CREATECOLORSPACE: 99,
  EMR_SETCOLORSPACE: 100,
  EMR_DELETECOLORSPACE: 101,
  EMR_GLSRECORD: 102,
  EMR_GLSBOUNDEDRECORD: 103,
  EMR_PIXELFORMAT: 104,
  EMR_DRAWESCAPE: 105,
  EMR_EXTESCAPE: 106,
  EMR_SMALLTEXTOUT: 108,
  EMR_FORCEUFIMAPPING: 109,
  EMR_NAMEDESCAPE: 110,
  EMR_COLORCORRECTPALETTE: 111,
  EMR_SETICMPROFILEA: 112,
  EMR_SETICMPROFILEW: 113,
  EMR_ALPHABLEND: 114,
  EMR_SETLAYOUT: 115,
  EMR_TRANSPARENTBLT: 116,
  EMR_GRADIENTFILL: 118,
  EMR_SETLINKEDUFIS: 119,
  EMR_SETTEXTJUSTIFICATION: 120,
  EMR_COLORMATCHTOTARGETW: 121,
  EMR_CREATECOLORSPACEW: 122,
};
ToEMF.K = [];
(function () {
  var h, F, d;
  h = ToEMF.C;
  F = ToEMF.K;
  d = 4;
  for (var t in h) F[h[t]] = t.slice(d);
})();
var ToDXF = (function () {
  var h;
  function F() {
    this.buffer = null;
  }
  F.prototype.StartTGroup = function () {};
  F.prototype.EndTGroup = function () {};
  F.prototype.StartPage = function () {
    if (h == null) h = [0, "SECTION", 2, "ENTITIES"];
  };
  F.prototype.ShowPage = function () {};
  F.prototype.Done = function () {
    h.push(0, "ENDSEC", 0, "EOF", "");
    var d = h.join("\n"),
      t = new Uint8Array(d.length);
    this.buffer = t.buffer;
    for (var f = 0; f < d.length; f++) t[f] = d.charCodeAt(f);
    h = null;
  };
  F.prototype.PutImage = function () {};
  F.prototype.PutText = function (d, t, f) {
    while (t.endsWith("\n")) t = t.slice(0, t.length - 1);
    h.push(0, "MTEXT");
    h.push(40, d.font.Tfs);
    h.push(10, d.ctm[4], 20, d.ctm[5]);
    h.push(1, t);
  };
  F.prototype.Fill = function (d) {
    this.Stroke(d);
  };
  F.prototype.Stroke = function (d) {
    var t = d.pth.cmds,
      f = d.pth.crds,
      N = 0,
      L = 0,
      P = 0,
      j = 0,
      v = 0;
    for (var l = 0; l < t.length; l++) {
      var p = t[l];
      if (p == "M") {
        P = f[v++];
        j = f[v++];
        N = P;
        L = j;
      } else if (p == "L" || p == "Z") {
        if (p == "Z" && P == N && j == L) continue;
        h.push(0, "LINE", 10, P, 20, j);
        if (p == "L") {
          P = f[v++];
          j = f[v++];
        } else {
          P = N;
          j = L;
        }
        h.push(11, P, 21, j);
      } else if (p == "C") {
        h.push(0, "SPLINE");
        h.push(210, 0, 220, 0, 230, 0);
        h.push(70, 8, 71, 3, 72, 8, 73, 4, 74, 0, 42, 0, 43, 0);
        for (var u = 0; u < 8; u++) h.push(40, u < 4 ? 0 : 1);
        h.push(10, P, 20, j);
        for (var u = 0; u < 3; u++) {
          P = f[v++];
          j = f[v++];
          h.push(10, P, 20, j);
        }
      }
    }
  };
  return F;
})();

/* pako 1.0.5 nodeca/pako */
!(function (t) {
  if ("object" == typeof exports && "undefined" != typeof module)
    module.exports = t();
  else if ("function" == typeof define && define.amd) define([], t);
  else {
    var e;
    (e =
      "undefined" != typeof window
        ? window
        : "undefined" != typeof global
        ? global
        : "undefined" != typeof self
        ? self
        : this),
      (e.pako = t());
  }
})(function () {
  return (function t(e, a, i) {
    function n(s, o) {
      if (!a[s]) {
        if (!e[s]) {
          var l = "function" == typeof require && require;
          if (!o && l) return l(s, !0);
          if (r) return r(s, !0);
          var h = new Error("Cannot find module '" + s + "'");
          throw ((h.code = "MODULE_NOT_FOUND"), h);
        }
        var d = (a[s] = { exports: {} });
        e[s][0].call(
          d.exports,
          function (t) {
            var a = e[s][1][t];
            return n(a ? a : t);
          },
          d,
          d.exports,
          t,
          e,
          a,
          i
        );
      }
      return a[s].exports;
    }
    for (
      var r = "function" == typeof require && require, s = 0;
      s < i.length;
      s++
    )
      n(i[s]);
    return n;
  })(
    {
      1: [
        function (t, e, a) {
          "use strict";
          function i(t) {
            if (!(this instanceof i)) return new i(t);
            this.options = l.assign(
              {
                level: w,
                method: v,
                chunkSize: 16384,
                windowBits: 15,
                memLevel: 8,
                strategy: p,
                to: "",
              },
              t || {}
            );
            var e = this.options;
            e.raw && e.windowBits > 0
              ? (e.windowBits = -e.windowBits)
              : e.gzip &&
                e.windowBits > 0 &&
                e.windowBits < 16 &&
                (e.windowBits += 16),
              (this.err = 0),
              (this.msg = ""),
              (this.ended = !1),
              (this.chunks = []),
              (this.strm = new f()),
              (this.strm.avail_out = 0);
            var a = o.deflateInit2(
              this.strm,
              e.level,
              e.method,
              e.windowBits,
              e.memLevel,
              e.strategy
            );
            if (a !== b) throw new Error(d[a]);
            if (
              (e.header && o.deflateSetHeader(this.strm, e.header),
              e.dictionary)
            ) {
              var n;
              if (
                ((n =
                  "string" == typeof e.dictionary
                    ? h.string2buf(e.dictionary)
                    : "[object ArrayBuffer]" === _.call(e.dictionary)
                    ? new Uint8Array(e.dictionary)
                    : e.dictionary),
                (a = o.deflateSetDictionary(this.strm, n)),
                a !== b)
              )
                throw new Error(d[a]);
              this._dict_set = !0;
            }
          }
          function n(t, e) {
            var a = new i(e);
            if ((a.push(t, !0), a.err)) throw a.msg || d[a.err];
            return a.result;
          }
          function r(t, e) {
            return (e = e || {}), (e.raw = !0), n(t, e);
          }
          function s(t, e) {
            return (e = e || {}), (e.gzip = !0), n(t, e);
          }
          var o = t("./zlib/deflate"),
            l = t("./utils/common"),
            h = t("./utils/strings"),
            d = t("./zlib/messages"),
            f = t("./zlib/zstream"),
            _ = Object.prototype.toString,
            u = 0,
            c = 4,
            b = 0,
            g = 1,
            m = 2,
            w = -1,
            p = 0,
            v = 8;
          (i.prototype.push = function (t, e) {
            var a,
              i,
              n = this.strm,
              r = this.options.chunkSize;
            if (this.ended) return !1;
            (i = e === ~~e ? e : e === !0 ? c : u),
              "string" == typeof t
                ? (n.input = h.string2buf(t))
                : "[object ArrayBuffer]" === _.call(t)
                ? (n.input = new Uint8Array(t))
                : (n.input = t),
              (n.next_in = 0),
              (n.avail_in = n.input.length);
            do {
              if (
                (0 === n.avail_out &&
                  ((n.output = new l.Buf8(r)),
                  (n.next_out = 0),
                  (n.avail_out = r)),
                (a = o.deflate(n, i)),
                a !== g && a !== b)
              )
                return this.onEnd(a), (this.ended = !0), !1;
              (0 !== n.avail_out &&
                (0 !== n.avail_in || (i !== c && i !== m))) ||
                ("string" === this.options.to
                  ? this.onData(
                      h.buf2binstring(l.shrinkBuf(n.output, n.next_out))
                    )
                  : this.onData(l.shrinkBuf(n.output, n.next_out)));
            } while ((n.avail_in > 0 || 0 === n.avail_out) && a !== g);
            return i === c
              ? ((a = o.deflateEnd(this.strm)),
                this.onEnd(a),
                (this.ended = !0),
                a === b)
              : i !== m || (this.onEnd(b), (n.avail_out = 0), !0);
          }),
            (i.prototype.onData = function (t) {
              this.chunks.push(t);
            }),
            (i.prototype.onEnd = function (t) {
              t === b &&
                ("string" === this.options.to
                  ? (this.result = this.chunks.join(""))
                  : (this.result = l.flattenChunks(this.chunks))),
                (this.chunks = []),
                (this.err = t),
                (this.msg = this.strm.msg);
            }),
            (a.Deflate = i),
            (a.deflate = n),
            (a.deflateRaw = r),
            (a.gzip = s);
        },
        {
          "./utils/common": 3,
          "./utils/strings": 4,
          "./zlib/deflate": 8,
          "./zlib/messages": 13,
          "./zlib/zstream": 15,
        },
      ],
      2: [
        function (t, e, a) {
          "use strict";
          function i(t) {
            if (!(this instanceof i)) return new i(t);
            this.options = o.assign(
              { chunkSize: 16384, windowBits: 0, to: "" },
              t || {}
            );
            var e = this.options;
            e.raw &&
              e.windowBits >= 0 &&
              e.windowBits < 16 &&
              ((e.windowBits = -e.windowBits),
              0 === e.windowBits && (e.windowBits = -15)),
              !(e.windowBits >= 0 && e.windowBits < 16) ||
                (t && t.windowBits) ||
                (e.windowBits += 32),
              e.windowBits > 15 &&
                e.windowBits < 48 &&
                0 === (15 & e.windowBits) &&
                (e.windowBits |= 15),
              (this.err = 0),
              (this.msg = ""),
              (this.ended = !1),
              (this.chunks = []),
              (this.strm = new f()),
              (this.strm.avail_out = 0);
            var a = s.inflateInit2(this.strm, e.windowBits);
            if (a !== h.Z_OK) throw new Error(d[a]);
            (this.header = new _()), s.inflateGetHeader(this.strm, this.header);
          }
          function n(t, e) {
            var a = new i(e);
            if ((a.push(t, !0), a.err)) throw a.msg || d[a.err];
            return a.result;
          }
          function r(t, e) {
            return (e = e || {}), (e.raw = !0), n(t, e);
          }
          var s = t("./zlib/inflate"),
            o = t("./utils/common"),
            l = t("./utils/strings"),
            h = t("./zlib/constants"),
            d = t("./zlib/messages"),
            f = t("./zlib/zstream"),
            _ = t("./zlib/gzheader"),
            u = Object.prototype.toString;
          (i.prototype.push = function (t, e) {
            var a,
              i,
              n,
              r,
              d,
              f,
              _ = this.strm,
              c = this.options.chunkSize,
              b = this.options.dictionary,
              g = !1;
            if (this.ended) return !1;
            (i = e === ~~e ? e : e === !0 ? h.Z_FINISH : h.Z_NO_FLUSH),
              "string" == typeof t
                ? (_.input = l.binstring2buf(t))
                : "[object ArrayBuffer]" === u.call(t)
                ? (_.input = new Uint8Array(t))
                : (_.input = t),
              (_.next_in = 0),
              (_.avail_in = _.input.length);
            do {
              if (
                (0 === _.avail_out &&
                  ((_.output = new o.Buf8(c)),
                  (_.next_out = 0),
                  (_.avail_out = c)),
                (a = s.inflate(_, h.Z_NO_FLUSH)),
                a === h.Z_NEED_DICT &&
                  b &&
                  ((f =
                    "string" == typeof b
                      ? l.string2buf(b)
                      : "[object ArrayBuffer]" === u.call(b)
                      ? new Uint8Array(b)
                      : b),
                  (a = s.inflateSetDictionary(this.strm, f))),
                a === h.Z_BUF_ERROR && g === !0 && ((a = h.Z_OK), (g = !1)),
                a !== h.Z_STREAM_END && a !== h.Z_OK)
              )
                return this.onEnd(a), (this.ended = !0), !1;
              _.next_out &&
                ((0 !== _.avail_out &&
                  a !== h.Z_STREAM_END &&
                  (0 !== _.avail_in ||
                    (i !== h.Z_FINISH && i !== h.Z_SYNC_FLUSH))) ||
                  ("string" === this.options.to
                    ? ((n = l.utf8border(_.output, _.next_out)),
                      (r = _.next_out - n),
                      (d = l.buf2string(_.output, n)),
                      (_.next_out = r),
                      (_.avail_out = c - r),
                      r && o.arraySet(_.output, _.output, n, r, 0),
                      this.onData(d))
                    : this.onData(o.shrinkBuf(_.output, _.next_out)))),
                0 === _.avail_in && 0 === _.avail_out && (g = !0);
            } while (
              (_.avail_in > 0 || 0 === _.avail_out) &&
              a !== h.Z_STREAM_END
            );
            return (
              a === h.Z_STREAM_END && (i = h.Z_FINISH),
              i === h.Z_FINISH
                ? ((a = s.inflateEnd(this.strm)),
                  this.onEnd(a),
                  (this.ended = !0),
                  a === h.Z_OK)
                : i !== h.Z_SYNC_FLUSH ||
                  (this.onEnd(h.Z_OK), (_.avail_out = 0), !0)
            );
          }),
            (i.prototype.onData = function (t) {
              this.chunks.push(t);
            }),
            (i.prototype.onEnd = function (t) {
              t === h.Z_OK &&
                ("string" === this.options.to
                  ? (this.result = this.chunks.join(""))
                  : (this.result = o.flattenChunks(this.chunks))),
                (this.chunks = []),
                (this.err = t),
                (this.msg = this.strm.msg);
            }),
            (a.Inflate = i),
            (a.inflate = n),
            (a.inflateRaw = r),
            (a.ungzip = n);
        },
        {
          "./utils/common": 3,
          "./utils/strings": 4,
          "./zlib/constants": 6,
          "./zlib/gzheader": 9,
          "./zlib/inflate": 11,
          "./zlib/messages": 13,
          "./zlib/zstream": 15,
        },
      ],
      3: [
        function (t, e, a) {
          "use strict";
          var i =
            "undefined" != typeof Uint8Array &&
            "undefined" != typeof Uint16Array &&
            "undefined" != typeof Int32Array;
          (a.assign = function (t) {
            for (var e = Array.prototype.slice.call(arguments, 1); e.length; ) {
              var a = e.shift();
              if (a) {
                if ("object" != typeof a)
                  throw new TypeError(a + "must be non-object");
                for (var i in a) a.hasOwnProperty(i) && (t[i] = a[i]);
              }
            }
            return t;
          }),
            (a.shrinkBuf = function (t, e) {
              return t.length === e
                ? t
                : t.subarray
                ? t.subarray(0, e)
                : ((t.length = e), t);
            });
          var n = {
              arraySet: function (t, e, a, i, n) {
                if (e.subarray && t.subarray)
                  return void t.set(e.subarray(a, a + i), n);
                for (var r = 0; r < i; r++) t[n + r] = e[a + r];
              },
              flattenChunks: function (t) {
                var e, a, i, n, r, s;
                for (i = 0, e = 0, a = t.length; e < a; e++) i += t[e].length;
                for (
                  s = new Uint8Array(i), n = 0, e = 0, a = t.length;
                  e < a;
                  e++
                )
                  (r = t[e]), s.set(r, n), (n += r.length);
                return s;
              },
            },
            r = {
              arraySet: function (t, e, a, i, n) {
                for (var r = 0; r < i; r++) t[n + r] = e[a + r];
              },
              flattenChunks: function (t) {
                return [].concat.apply([], t);
              },
            };
          (a.setTyped = function (t) {
            t
              ? ((a.Buf8 = Uint8Array),
                (a.Buf16 = Uint16Array),
                (a.Buf32 = Int32Array),
                a.assign(a, n))
              : ((a.Buf8 = Array),
                (a.Buf16 = Array),
                (a.Buf32 = Array),
                a.assign(a, r));
          }),
            a.setTyped(i);
        },
        {},
      ],
      4: [
        function (t, e, a) {
          "use strict";
          function i(t, e) {
            if (e < 65537 && ((t.subarray && s) || (!t.subarray && r)))
              return String.fromCharCode.apply(null, n.shrinkBuf(t, e));
            for (var a = "", i = 0; i < e; i++) a += String.fromCharCode(t[i]);
            return a;
          }
          var n = t("./common"),
            r = !0,
            s = !0;
          try {
            String.fromCharCode.apply(null, [0]);
          } catch (t) {
            r = !1;
          }
          try {
            String.fromCharCode.apply(null, new Uint8Array(1));
          } catch (t) {
            s = !1;
          }
          for (var o = new n.Buf8(256), l = 0; l < 256; l++)
            o[l] =
              l >= 252
                ? 6
                : l >= 248
                ? 5
                : l >= 240
                ? 4
                : l >= 224
                ? 3
                : l >= 192
                ? 2
                : 1;
          (o[254] = o[254] = 1),
            (a.string2buf = function (t) {
              var e,
                a,
                i,
                r,
                s,
                o = t.length,
                l = 0;
              for (r = 0; r < o; r++)
                (a = t.charCodeAt(r)),
                  55296 === (64512 & a) &&
                    r + 1 < o &&
                    ((i = t.charCodeAt(r + 1)),
                    56320 === (64512 & i) &&
                      ((a = 65536 + ((a - 55296) << 10) + (i - 56320)), r++)),
                  (l += a < 128 ? 1 : a < 2048 ? 2 : a < 65536 ? 3 : 4);
              for (e = new n.Buf8(l), s = 0, r = 0; s < l; r++)
                (a = t.charCodeAt(r)),
                  55296 === (64512 & a) &&
                    r + 1 < o &&
                    ((i = t.charCodeAt(r + 1)),
                    56320 === (64512 & i) &&
                      ((a = 65536 + ((a - 55296) << 10) + (i - 56320)), r++)),
                  a < 128
                    ? (e[s++] = a)
                    : a < 2048
                    ? ((e[s++] = 192 | (a >>> 6)), (e[s++] = 128 | (63 & a)))
                    : a < 65536
                    ? ((e[s++] = 224 | (a >>> 12)),
                      (e[s++] = 128 | ((a >>> 6) & 63)),
                      (e[s++] = 128 | (63 & a)))
                    : ((e[s++] = 240 | (a >>> 18)),
                      (e[s++] = 128 | ((a >>> 12) & 63)),
                      (e[s++] = 128 | ((a >>> 6) & 63)),
                      (e[s++] = 128 | (63 & a)));
              return e;
            }),
            (a.buf2binstring = function (t) {
              return i(t, t.length);
            }),
            (a.binstring2buf = function (t) {
              for (
                var e = new n.Buf8(t.length), a = 0, i = e.length;
                a < i;
                a++
              )
                e[a] = t.charCodeAt(a);
              return e;
            }),
            (a.buf2string = function (t, e) {
              var a,
                n,
                r,
                s,
                l = e || t.length,
                h = new Array(2 * l);
              for (n = 0, a = 0; a < l; )
                if (((r = t[a++]), r < 128)) h[n++] = r;
                else if (((s = o[r]), s > 4)) (h[n++] = 65533), (a += s - 1);
                else {
                  for (r &= 2 === s ? 31 : 3 === s ? 15 : 7; s > 1 && a < l; )
                    (r = (r << 6) | (63 & t[a++])), s--;
                  s > 1
                    ? (h[n++] = 65533)
                    : r < 65536
                    ? (h[n++] = r)
                    : ((r -= 65536),
                      (h[n++] = 55296 | ((r >> 10) & 1023)),
                      (h[n++] = 56320 | (1023 & r)));
                }
              return i(h, n);
            }),
            (a.utf8border = function (t, e) {
              var a;
              for (
                e = e || t.length, e > t.length && (e = t.length), a = e - 1;
                a >= 0 && 128 === (192 & t[a]);

              )
                a--;
              return a < 0 ? e : 0 === a ? e : a + o[t[a]] > e ? a : e;
            });
        },
        { "./common": 3 },
      ],
      5: [
        function (t, e, a) {
          "use strict";
          function i(t, e, a, i) {
            for (
              var n = (65535 & t) | 0, r = ((t >>> 16) & 65535) | 0, s = 0;
              0 !== a;

            ) {
              (s = a > 2e3 ? 2e3 : a), (a -= s);
              do (n = (n + e[i++]) | 0), (r = (r + n) | 0);
              while (--s);
              (n %= 65521), (r %= 65521);
            }
            return n | (r << 16) | 0;
          }
          e.exports = i;
        },
        {},
      ],
      6: [
        function (t, e, a) {
          "use strict";
          e.exports = {
            Z_NO_FLUSH: 0,
            Z_PARTIAL_FLUSH: 1,
            Z_SYNC_FLUSH: 2,
            Z_FULL_FLUSH: 3,
            Z_FINISH: 4,
            Z_BLOCK: 5,
            Z_TREES: 6,
            Z_OK: 0,
            Z_STREAM_END: 1,
            Z_NEED_DICT: 2,
            Z_ERRNO: -1,
            Z_STREAM_ERROR: -2,
            Z_DATA_ERROR: -3,
            Z_BUF_ERROR: -5,
            Z_NO_COMPRESSION: 0,
            Z_BEST_SPEED: 1,
            Z_BEST_COMPRESSION: 9,
            Z_DEFAULT_COMPRESSION: -1,
            Z_FILTERED: 1,
            Z_HUFFMAN_ONLY: 2,
            Z_RLE: 3,
            Z_FIXED: 4,
            Z_DEFAULT_STRATEGY: 0,
            Z_BINARY: 0,
            Z_TEXT: 1,
            Z_UNKNOWN: 2,
            Z_DEFLATED: 8,
          };
        },
        {},
      ],
      7: [
        function (t, e, a) {
          "use strict";
          function i() {
            for (var t, e = [], a = 0; a < 256; a++) {
              t = a;
              for (var i = 0; i < 8; i++)
                t = 1 & t ? 3988292384 ^ (t >>> 1) : t >>> 1;
              e[a] = t;
            }
            return e;
          }
          function n(t, e, a, i) {
            var n = r,
              s = i + a;
            t ^= -1;
            for (var o = i; o < s; o++) t = (t >>> 8) ^ n[255 & (t ^ e[o])];
            return t ^ -1;
          }
          var r = i();
          e.exports = n;
        },
        {},
      ],
      8: [
        function (t, e, a) {
          "use strict";
          function i(t, e) {
            return (t.msg = D[e]), e;
          }
          function n(t) {
            return (t << 1) - (t > 4 ? 9 : 0);
          }
          function r(t) {
            for (var e = t.length; --e >= 0; ) t[e] = 0;
          }
          function s(t) {
            var e = t.state,
              a = e.pending;
            a > t.avail_out && (a = t.avail_out),
              0 !== a &&
                (R.arraySet(
                  t.output,
                  e.pending_buf,
                  e.pending_out,
                  a,
                  t.next_out
                ),
                (t.next_out += a),
                (e.pending_out += a),
                (t.total_out += a),
                (t.avail_out -= a),
                (e.pending -= a),
                0 === e.pending && (e.pending_out = 0));
          }
          function o(t, e) {
            C._tr_flush_block(
              t,
              t.block_start >= 0 ? t.block_start : -1,
              t.strstart - t.block_start,
              e
            ),
              (t.block_start = t.strstart),
              s(t.strm);
          }
          function l(t, e) {
            t.pending_buf[t.pending++] = e;
          }
          function h(t, e) {
            (t.pending_buf[t.pending++] = (e >>> 8) & 255),
              (t.pending_buf[t.pending++] = 255 & e);
          }
          function d(t, e, a, i) {
            var n = t.avail_in;
            return (
              n > i && (n = i),
              0 === n
                ? 0
                : ((t.avail_in -= n),
                  R.arraySet(e, t.input, t.next_in, n, a),
                  1 === t.state.wrap
                    ? (t.adler = N(t.adler, e, n, a))
                    : 2 === t.state.wrap && (t.adler = O(t.adler, e, n, a)),
                  (t.next_in += n),
                  (t.total_in += n),
                  n)
            );
          }
          function f(t, e) {
            var a,
              i,
              n = t.max_chain_length,
              r = t.strstart,
              s = t.prev_length,
              o = t.nice_match,
              l = t.strstart > t.w_size - ft ? t.strstart - (t.w_size - ft) : 0,
              h = t.window,
              d = t.w_mask,
              f = t.prev,
              _ = t.strstart + dt,
              u = h[r + s - 1],
              c = h[r + s];
            t.prev_length >= t.good_match && (n >>= 2),
              o > t.lookahead && (o = t.lookahead);
            do
              if (
                ((a = e),
                h[a + s] === c &&
                  h[a + s - 1] === u &&
                  h[a] === h[r] &&
                  h[++a] === h[r + 1])
              ) {
                (r += 2), a++;
                do;
                while (
                  h[++r] === h[++a] &&
                  h[++r] === h[++a] &&
                  h[++r] === h[++a] &&
                  h[++r] === h[++a] &&
                  h[++r] === h[++a] &&
                  h[++r] === h[++a] &&
                  h[++r] === h[++a] &&
                  h[++r] === h[++a] &&
                  r < _
                );
                if (((i = dt - (_ - r)), (r = _ - dt), i > s)) {
                  if (((t.match_start = e), (s = i), i >= o)) break;
                  (u = h[r + s - 1]), (c = h[r + s]);
                }
              }
            while ((e = f[e & d]) > l && 0 !== --n);
            return s <= t.lookahead ? s : t.lookahead;
          }
          function _(t) {
            var e,
              a,
              i,
              n,
              r,
              s = t.w_size;
            do {
              if (
                ((n = t.window_size - t.lookahead - t.strstart),
                t.strstart >= s + (s - ft))
              ) {
                R.arraySet(t.window, t.window, s, s, 0),
                  (t.match_start -= s),
                  (t.strstart -= s),
                  (t.block_start -= s),
                  (a = t.hash_size),
                  (e = a);
                do (i = t.head[--e]), (t.head[e] = i >= s ? i - s : 0);
                while (--a);
                (a = s), (e = a);
                do (i = t.prev[--e]), (t.prev[e] = i >= s ? i - s : 0);
                while (--a);
                n += s;
              }
              if (0 === t.strm.avail_in) break;
              if (
                ((a = d(t.strm, t.window, t.strstart + t.lookahead, n)),
                (t.lookahead += a),
                t.lookahead + t.insert >= ht)
              )
                for (
                  r = t.strstart - t.insert,
                    t.ins_h = t.window[r],
                    t.ins_h =
                      ((t.ins_h << t.hash_shift) ^ t.window[r + 1]) &
                      t.hash_mask;
                  t.insert &&
                  ((t.ins_h =
                    ((t.ins_h << t.hash_shift) ^ t.window[r + ht - 1]) &
                    t.hash_mask),
                  (t.prev[r & t.w_mask] = t.head[t.ins_h]),
                  (t.head[t.ins_h] = r),
                  r++,
                  t.insert--,
                  !(t.lookahead + t.insert < ht));

                );
            } while (t.lookahead < ft && 0 !== t.strm.avail_in);
          }
          function u(t, e) {
            var a = 65535;
            for (
              a > t.pending_buf_size - 5 && (a = t.pending_buf_size - 5);
              ;

            ) {
              if (t.lookahead <= 1) {
                if ((_(t), 0 === t.lookahead && e === I)) return vt;
                if (0 === t.lookahead) break;
              }
              (t.strstart += t.lookahead), (t.lookahead = 0);
              var i = t.block_start + a;
              if (
                (0 === t.strstart || t.strstart >= i) &&
                ((t.lookahead = t.strstart - i),
                (t.strstart = i),
                o(t, !1),
                0 === t.strm.avail_out)
              )
                return vt;
              if (
                t.strstart - t.block_start >= t.w_size - ft &&
                (o(t, !1), 0 === t.strm.avail_out)
              )
                return vt;
            }
            return (
              (t.insert = 0),
              e === F
                ? (o(t, !0), 0 === t.strm.avail_out ? yt : xt)
                : t.strstart > t.block_start &&
                  (o(t, !1), 0 === t.strm.avail_out)
                ? vt
                : vt
            );
          }
          function c(t, e) {
            for (var a, i; ; ) {
              if (t.lookahead < ft) {
                if ((_(t), t.lookahead < ft && e === I)) return vt;
                if (0 === t.lookahead) break;
              }
              if (
                ((a = 0),
                t.lookahead >= ht &&
                  ((t.ins_h =
                    ((t.ins_h << t.hash_shift) ^
                      t.window[t.strstart + ht - 1]) &
                    t.hash_mask),
                  (a = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h]),
                  (t.head[t.ins_h] = t.strstart)),
                0 !== a &&
                  t.strstart - a <= t.w_size - ft &&
                  (t.match_length = f(t, a)),
                t.match_length >= ht)
              )
                if (
                  ((i = C._tr_tally(
                    t,
                    t.strstart - t.match_start,
                    t.match_length - ht
                  )),
                  (t.lookahead -= t.match_length),
                  t.match_length <= t.max_lazy_match && t.lookahead >= ht)
                ) {
                  t.match_length--;
                  do
                    t.strstart++,
                      (t.ins_h =
                        ((t.ins_h << t.hash_shift) ^
                          t.window[t.strstart + ht - 1]) &
                        t.hash_mask),
                      (a = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h]),
                      (t.head[t.ins_h] = t.strstart);
                  while (0 !== --t.match_length);
                  t.strstart++;
                } else
                  (t.strstart += t.match_length),
                    (t.match_length = 0),
                    (t.ins_h = t.window[t.strstart]),
                    (t.ins_h =
                      ((t.ins_h << t.hash_shift) ^ t.window[t.strstart + 1]) &
                      t.hash_mask);
              else
                (i = C._tr_tally(t, 0, t.window[t.strstart])),
                  t.lookahead--,
                  t.strstart++;
              if (i && (o(t, !1), 0 === t.strm.avail_out)) return vt;
            }
            return (
              (t.insert = t.strstart < ht - 1 ? t.strstart : ht - 1),
              e === F
                ? (o(t, !0), 0 === t.strm.avail_out ? yt : xt)
                : t.last_lit && (o(t, !1), 0 === t.strm.avail_out)
                ? vt
                : kt
            );
          }
          function b(t, e) {
            for (var a, i, n; ; ) {
              if (t.lookahead < ft) {
                if ((_(t), t.lookahead < ft && e === I)) return vt;
                if (0 === t.lookahead) break;
              }
              if (
                ((a = 0),
                t.lookahead >= ht &&
                  ((t.ins_h =
                    ((t.ins_h << t.hash_shift) ^
                      t.window[t.strstart + ht - 1]) &
                    t.hash_mask),
                  (a = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h]),
                  (t.head[t.ins_h] = t.strstart)),
                (t.prev_length = t.match_length),
                (t.prev_match = t.match_start),
                (t.match_length = ht - 1),
                0 !== a &&
                  t.prev_length < t.max_lazy_match &&
                  t.strstart - a <= t.w_size - ft &&
                  ((t.match_length = f(t, a)),
                  t.match_length <= 5 &&
                    (t.strategy === q ||
                      (t.match_length === ht &&
                        t.strstart - t.match_start > 4096)) &&
                    (t.match_length = ht - 1)),
                t.prev_length >= ht && t.match_length <= t.prev_length)
              ) {
                (n = t.strstart + t.lookahead - ht),
                  (i = C._tr_tally(
                    t,
                    t.strstart - 1 - t.prev_match,
                    t.prev_length - ht
                  )),
                  (t.lookahead -= t.prev_length - 1),
                  (t.prev_length -= 2);
                do
                  ++t.strstart <= n &&
                    ((t.ins_h =
                      ((t.ins_h << t.hash_shift) ^
                        t.window[t.strstart + ht - 1]) &
                      t.hash_mask),
                    (a = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h]),
                    (t.head[t.ins_h] = t.strstart));
                while (0 !== --t.prev_length);
                if (
                  ((t.match_available = 0),
                  (t.match_length = ht - 1),
                  t.strstart++,
                  i && (o(t, !1), 0 === t.strm.avail_out))
                )
                  return vt;
              } else if (t.match_available) {
                if (
                  ((i = C._tr_tally(t, 0, t.window[t.strstart - 1])),
                  i && o(t, !1),
                  t.strstart++,
                  t.lookahead--,
                  0 === t.strm.avail_out)
                )
                  return vt;
              } else (t.match_available = 1), t.strstart++, t.lookahead--;
            }
            return (
              t.match_available &&
                ((i = C._tr_tally(t, 0, t.window[t.strstart - 1])),
                (t.match_available = 0)),
              (t.insert = t.strstart < ht - 1 ? t.strstart : ht - 1),
              e === F
                ? (o(t, !0), 0 === t.strm.avail_out ? yt : xt)
                : t.last_lit && (o(t, !1), 0 === t.strm.avail_out)
                ? vt
                : kt
            );
          }
          function g(t, e) {
            for (var a, i, n, r, s = t.window; ; ) {
              if (t.lookahead <= dt) {
                if ((_(t), t.lookahead <= dt && e === I)) return vt;
                if (0 === t.lookahead) break;
              }
              if (
                ((t.match_length = 0),
                t.lookahead >= ht &&
                  t.strstart > 0 &&
                  ((n = t.strstart - 1),
                  (i = s[n]),
                  i === s[++n] && i === s[++n] && i === s[++n]))
              ) {
                r = t.strstart + dt;
                do;
                while (
                  i === s[++n] &&
                  i === s[++n] &&
                  i === s[++n] &&
                  i === s[++n] &&
                  i === s[++n] &&
                  i === s[++n] &&
                  i === s[++n] &&
                  i === s[++n] &&
                  n < r
                );
                (t.match_length = dt - (r - n)),
                  t.match_length > t.lookahead &&
                    (t.match_length = t.lookahead);
              }
              if (
                (t.match_length >= ht
                  ? ((a = C._tr_tally(t, 1, t.match_length - ht)),
                    (t.lookahead -= t.match_length),
                    (t.strstart += t.match_length),
                    (t.match_length = 0))
                  : ((a = C._tr_tally(t, 0, t.window[t.strstart])),
                    t.lookahead--,
                    t.strstart++),
                a && (o(t, !1), 0 === t.strm.avail_out))
              )
                return vt;
            }
            return (
              (t.insert = 0),
              e === F
                ? (o(t, !0), 0 === t.strm.avail_out ? yt : xt)
                : t.last_lit && (o(t, !1), 0 === t.strm.avail_out)
                ? vt
                : kt
            );
          }
          function m(t, e) {
            for (var a; ; ) {
              if (0 === t.lookahead && (_(t), 0 === t.lookahead)) {
                if (e === I) return vt;
                break;
              }
              if (
                ((t.match_length = 0),
                (a = C._tr_tally(t, 0, t.window[t.strstart])),
                t.lookahead--,
                t.strstart++,
                a && (o(t, !1), 0 === t.strm.avail_out))
              )
                return vt;
            }
            return (
              (t.insert = 0),
              e === F
                ? (o(t, !0), 0 === t.strm.avail_out ? yt : xt)
                : t.last_lit && (o(t, !1), 0 === t.strm.avail_out)
                ? vt
                : kt
            );
          }
          function w(t, e, a, i, n) {
            (this.good_length = t),
              (this.max_lazy = e),
              (this.nice_length = a),
              (this.max_chain = i),
              (this.func = n);
          }
          function p(t) {
            (t.window_size = 2 * t.w_size),
              r(t.head),
              (t.max_lazy_match = Z[t.level].max_lazy),
              (t.good_match = Z[t.level].good_length),
              (t.nice_match = Z[t.level].nice_length),
              (t.max_chain_length = Z[t.level].max_chain),
              (t.strstart = 0),
              (t.block_start = 0),
              (t.lookahead = 0),
              (t.insert = 0),
              (t.match_length = t.prev_length = ht - 1),
              (t.match_available = 0),
              (t.ins_h = 0);
          }
          function v() {
            (this.strm = null),
              (this.status = 0),
              (this.pending_buf = null),
              (this.pending_buf_size = 0),
              (this.pending_out = 0),
              (this.pending = 0),
              (this.wrap = 0),
              (this.gzhead = null),
              (this.gzindex = 0),
              (this.method = V),
              (this.last_flush = -1),
              (this.w_size = 0),
              (this.w_bits = 0),
              (this.w_mask = 0),
              (this.window = null),
              (this.window_size = 0),
              (this.prev = null),
              (this.head = null),
              (this.ins_h = 0),
              (this.hash_size = 0),
              (this.hash_bits = 0),
              (this.hash_mask = 0),
              (this.hash_shift = 0),
              (this.block_start = 0),
              (this.match_length = 0),
              (this.prev_match = 0),
              (this.match_available = 0),
              (this.strstart = 0),
              (this.match_start = 0),
              (this.lookahead = 0),
              (this.prev_length = 0),
              (this.max_chain_length = 0),
              (this.max_lazy_match = 0),
              (this.level = 0),
              (this.strategy = 0),
              (this.good_match = 0),
              (this.nice_match = 0),
              (this.dyn_ltree = new R.Buf16(2 * ot)),
              (this.dyn_dtree = new R.Buf16(2 * (2 * rt + 1))),
              (this.bl_tree = new R.Buf16(2 * (2 * st + 1))),
              r(this.dyn_ltree),
              r(this.dyn_dtree),
              r(this.bl_tree),
              (this.l_desc = null),
              (this.d_desc = null),
              (this.bl_desc = null),
              (this.bl_count = new R.Buf16(lt + 1)),
              (this.heap = new R.Buf16(2 * nt + 1)),
              r(this.heap),
              (this.heap_len = 0),
              (this.heap_max = 0),
              (this.depth = new R.Buf16(2 * nt + 1)),
              r(this.depth),
              (this.l_buf = 0),
              (this.lit_bufsize = 0),
              (this.last_lit = 0),
              (this.d_buf = 0),
              (this.opt_len = 0),
              (this.static_len = 0),
              (this.matches = 0),
              (this.insert = 0),
              (this.bi_buf = 0),
              (this.bi_valid = 0);
          }
          function k(t) {
            var e;
            return t && t.state
              ? ((t.total_in = t.total_out = 0),
                (t.data_type = Q),
                (e = t.state),
                (e.pending = 0),
                (e.pending_out = 0),
                e.wrap < 0 && (e.wrap = -e.wrap),
                (e.status = e.wrap ? ut : wt),
                (t.adler = 2 === e.wrap ? 0 : 1),
                (e.last_flush = I),
                C._tr_init(e),
                H)
              : i(t, K);
          }
          function y(t) {
            var e = k(t);
            return e === H && p(t.state), e;
          }
          function x(t, e) {
            return t && t.state
              ? 2 !== t.state.wrap
                ? K
                : ((t.state.gzhead = e), H)
              : K;
          }
          function z(t, e, a, n, r, s) {
            if (!t) return K;
            var o = 1;
            if (
              (e === Y && (e = 6),
              n < 0 ? ((o = 0), (n = -n)) : n > 15 && ((o = 2), (n -= 16)),
              r < 1 ||
                r > $ ||
                a !== V ||
                n < 8 ||
                n > 15 ||
                e < 0 ||
                e > 9 ||
                s < 0 ||
                s > W)
            )
              return i(t, K);
            8 === n && (n = 9);
            var l = new v();
            return (
              (t.state = l),
              (l.strm = t),
              (l.wrap = o),
              (l.gzhead = null),
              (l.w_bits = n),
              (l.w_size = 1 << l.w_bits),
              (l.w_mask = l.w_size - 1),
              (l.hash_bits = r + 7),
              (l.hash_size = 1 << l.hash_bits),
              (l.hash_mask = l.hash_size - 1),
              (l.hash_shift = ~~((l.hash_bits + ht - 1) / ht)),
              (l.window = new R.Buf8(2 * l.w_size)),
              (l.head = new R.Buf16(l.hash_size)),
              (l.prev = new R.Buf16(l.w_size)),
              (l.lit_bufsize = 1 << (r + 6)),
              (l.pending_buf_size = 4 * l.lit_bufsize),
              (l.pending_buf = new R.Buf8(l.pending_buf_size)),
              (l.d_buf = 1 * l.lit_bufsize),
              (l.l_buf = 3 * l.lit_bufsize),
              (l.level = e),
              (l.strategy = s),
              (l.method = a),
              y(t)
            );
          }
          function B(t, e) {
            return z(t, e, V, tt, et, J);
          }
          function S(t, e) {
            var a, o, d, f;
            if (!t || !t.state || e > L || e < 0) return t ? i(t, K) : K;
            if (
              ((o = t.state),
              !t.output ||
                (!t.input && 0 !== t.avail_in) ||
                (o.status === pt && e !== F))
            )
              return i(t, 0 === t.avail_out ? P : K);
            if (
              ((o.strm = t),
              (a = o.last_flush),
              (o.last_flush = e),
              o.status === ut)
            )
              if (2 === o.wrap)
                (t.adler = 0),
                  l(o, 31),
                  l(o, 139),
                  l(o, 8),
                  o.gzhead
                    ? (l(
                        o,
                        (o.gzhead.text ? 1 : 0) +
                          (o.gzhead.hcrc ? 2 : 0) +
                          (o.gzhead.extra ? 4 : 0) +
                          (o.gzhead.name ? 8 : 0) +
                          (o.gzhead.comment ? 16 : 0)
                      ),
                      l(o, 255 & o.gzhead.time),
                      l(o, (o.gzhead.time >> 8) & 255),
                      l(o, (o.gzhead.time >> 16) & 255),
                      l(o, (o.gzhead.time >> 24) & 255),
                      l(
                        o,
                        9 === o.level
                          ? 2
                          : o.strategy >= G || o.level < 2
                          ? 4
                          : 0
                      ),
                      l(o, 255 & o.gzhead.os),
                      o.gzhead.extra &&
                        o.gzhead.extra.length &&
                        (l(o, 255 & o.gzhead.extra.length),
                        l(o, (o.gzhead.extra.length >> 8) & 255)),
                      o.gzhead.hcrc &&
                        (t.adler = O(t.adler, o.pending_buf, o.pending, 0)),
                      (o.gzindex = 0),
                      (o.status = ct))
                    : (l(o, 0),
                      l(o, 0),
                      l(o, 0),
                      l(o, 0),
                      l(o, 0),
                      l(
                        o,
                        9 === o.level
                          ? 2
                          : o.strategy >= G || o.level < 2
                          ? 4
                          : 0
                      ),
                      l(o, zt),
                      (o.status = wt));
              else {
                var _ = (V + ((o.w_bits - 8) << 4)) << 8,
                  u = -1;
                (u =
                  o.strategy >= G || o.level < 2
                    ? 0
                    : o.level < 6
                    ? 1
                    : 6 === o.level
                    ? 2
                    : 3),
                  (_ |= u << 6),
                  0 !== o.strstart && (_ |= _t),
                  (_ += 31 - (_ % 31)),
                  (o.status = wt),
                  h(o, _),
                  0 !== o.strstart &&
                    (h(o, t.adler >>> 16), h(o, 65535 & t.adler)),
                  (t.adler = 1);
              }
            if (o.status === ct)
              if (o.gzhead.extra) {
                for (
                  d = o.pending;
                  o.gzindex < (65535 & o.gzhead.extra.length) &&
                  (o.pending !== o.pending_buf_size ||
                    (o.gzhead.hcrc &&
                      o.pending > d &&
                      (t.adler = O(t.adler, o.pending_buf, o.pending - d, d)),
                    s(t),
                    (d = o.pending),
                    o.pending !== o.pending_buf_size));

                )
                  l(o, 255 & o.gzhead.extra[o.gzindex]), o.gzindex++;
                o.gzhead.hcrc &&
                  o.pending > d &&
                  (t.adler = O(t.adler, o.pending_buf, o.pending - d, d)),
                  o.gzindex === o.gzhead.extra.length &&
                    ((o.gzindex = 0), (o.status = bt));
              } else o.status = bt;
            if (o.status === bt)
              if (o.gzhead.name) {
                d = o.pending;
                do {
                  if (
                    o.pending === o.pending_buf_size &&
                    (o.gzhead.hcrc &&
                      o.pending > d &&
                      (t.adler = O(t.adler, o.pending_buf, o.pending - d, d)),
                    s(t),
                    (d = o.pending),
                    o.pending === o.pending_buf_size)
                  ) {
                    f = 1;
                    break;
                  }
                  (f =
                    o.gzindex < o.gzhead.name.length
                      ? 255 & o.gzhead.name.charCodeAt(o.gzindex++)
                      : 0),
                    l(o, f);
                } while (0 !== f);
                o.gzhead.hcrc &&
                  o.pending > d &&
                  (t.adler = O(t.adler, o.pending_buf, o.pending - d, d)),
                  0 === f && ((o.gzindex = 0), (o.status = gt));
              } else o.status = gt;
            if (o.status === gt)
              if (o.gzhead.comment) {
                d = o.pending;
                do {
                  if (
                    o.pending === o.pending_buf_size &&
                    (o.gzhead.hcrc &&
                      o.pending > d &&
                      (t.adler = O(t.adler, o.pending_buf, o.pending - d, d)),
                    s(t),
                    (d = o.pending),
                    o.pending === o.pending_buf_size)
                  ) {
                    f = 1;
                    break;
                  }
                  (f =
                    o.gzindex < o.gzhead.comment.length
                      ? 255 & o.gzhead.comment.charCodeAt(o.gzindex++)
                      : 0),
                    l(o, f);
                } while (0 !== f);
                o.gzhead.hcrc &&
                  o.pending > d &&
                  (t.adler = O(t.adler, o.pending_buf, o.pending - d, d)),
                  0 === f && (o.status = mt);
              } else o.status = mt;
            if (
              (o.status === mt &&
                (o.gzhead.hcrc
                  ? (o.pending + 2 > o.pending_buf_size && s(t),
                    o.pending + 2 <= o.pending_buf_size &&
                      (l(o, 255 & t.adler),
                      l(o, (t.adler >> 8) & 255),
                      (t.adler = 0),
                      (o.status = wt)))
                  : (o.status = wt)),
              0 !== o.pending)
            ) {
              if ((s(t), 0 === t.avail_out)) return (o.last_flush = -1), H;
            } else if (0 === t.avail_in && n(e) <= n(a) && e !== F)
              return i(t, P);
            if (o.status === pt && 0 !== t.avail_in) return i(t, P);
            if (
              0 !== t.avail_in ||
              0 !== o.lookahead ||
              (e !== I && o.status !== pt)
            ) {
              var c =
                o.strategy === G
                  ? m(o, e)
                  : o.strategy === X
                  ? g(o, e)
                  : Z[o.level].func(o, e);
              if (
                ((c !== yt && c !== xt) || (o.status = pt),
                c === vt || c === yt)
              )
                return 0 === t.avail_out && (o.last_flush = -1), H;
              if (
                c === kt &&
                (e === U
                  ? C._tr_align(o)
                  : e !== L &&
                    (C._tr_stored_block(o, 0, 0, !1),
                    e === T &&
                      (r(o.head),
                      0 === o.lookahead &&
                        ((o.strstart = 0),
                        (o.block_start = 0),
                        (o.insert = 0)))),
                s(t),
                0 === t.avail_out)
              )
                return (o.last_flush = -1), H;
            }
            return e !== F
              ? H
              : o.wrap <= 0
              ? j
              : (2 === o.wrap
                  ? (l(o, 255 & t.adler),
                    l(o, (t.adler >> 8) & 255),
                    l(o, (t.adler >> 16) & 255),
                    l(o, (t.adler >> 24) & 255),
                    l(o, 255 & t.total_in),
                    l(o, (t.total_in >> 8) & 255),
                    l(o, (t.total_in >> 16) & 255),
                    l(o, (t.total_in >> 24) & 255))
                  : (h(o, t.adler >>> 16), h(o, 65535 & t.adler)),
                s(t),
                o.wrap > 0 && (o.wrap = -o.wrap),
                0 !== o.pending ? H : j);
          }
          function E(t) {
            var e;
            return t && t.state
              ? ((e = t.state.status),
                e !== ut &&
                e !== ct &&
                e !== bt &&
                e !== gt &&
                e !== mt &&
                e !== wt &&
                e !== pt
                  ? i(t, K)
                  : ((t.state = null), e === wt ? i(t, M) : H))
              : K;
          }
          function A(t, e) {
            var a,
              i,
              n,
              s,
              o,
              l,
              h,
              d,
              f = e.length;
            if (!t || !t.state) return K;
            if (
              ((a = t.state),
              (s = a.wrap),
              2 === s || (1 === s && a.status !== ut) || a.lookahead)
            )
              return K;
            for (
              1 === s && (t.adler = N(t.adler, e, f, 0)),
                a.wrap = 0,
                f >= a.w_size &&
                  (0 === s &&
                    (r(a.head),
                    (a.strstart = 0),
                    (a.block_start = 0),
                    (a.insert = 0)),
                  (d = new R.Buf8(a.w_size)),
                  R.arraySet(d, e, f - a.w_size, a.w_size, 0),
                  (e = d),
                  (f = a.w_size)),
                o = t.avail_in,
                l = t.next_in,
                h = t.input,
                t.avail_in = f,
                t.next_in = 0,
                t.input = e,
                _(a);
              a.lookahead >= ht;

            ) {
              (i = a.strstart), (n = a.lookahead - (ht - 1));
              do
                (a.ins_h =
                  ((a.ins_h << a.hash_shift) ^ a.window[i + ht - 1]) &
                  a.hash_mask),
                  (a.prev[i & a.w_mask] = a.head[a.ins_h]),
                  (a.head[a.ins_h] = i),
                  i++;
              while (--n);
              (a.strstart = i), (a.lookahead = ht - 1), _(a);
            }
            return (
              (a.strstart += a.lookahead),
              (a.block_start = a.strstart),
              (a.insert = a.lookahead),
              (a.lookahead = 0),
              (a.match_length = a.prev_length = ht - 1),
              (a.match_available = 0),
              (t.next_in = l),
              (t.input = h),
              (t.avail_in = o),
              (a.wrap = s),
              H
            );
          }
          var Z,
            R = t("../utils/common"),
            C = t("./trees"),
            N = t("./adler32"),
            O = t("./crc32"),
            D = t("./messages"),
            I = 0,
            U = 1,
            T = 3,
            F = 4,
            L = 5,
            H = 0,
            j = 1,
            K = -2,
            M = -3,
            P = -5,
            Y = -1,
            q = 1,
            G = 2,
            X = 3,
            W = 4,
            J = 0,
            Q = 2,
            V = 8,
            $ = 9,
            tt = 15,
            et = 8,
            at = 29,
            it = 256,
            nt = it + 1 + at,
            rt = 30,
            st = 19,
            ot = 2 * nt + 1,
            lt = 15,
            ht = 3,
            dt = 258,
            ft = dt + ht + 1,
            _t = 32,
            ut = 42,
            ct = 69,
            bt = 73,
            gt = 91,
            mt = 103,
            wt = 113,
            pt = 666,
            vt = 1,
            kt = 2,
            yt = 3,
            xt = 4,
            zt = 3;
          (Z = [
            new w(0, 0, 0, 0, u),
            new w(4, 4, 8, 4, c),
            new w(4, 5, 16, 8, c),
            new w(4, 6, 32, 32, c),
            new w(4, 4, 16, 16, b),
            new w(8, 16, 32, 32, b),
            new w(8, 16, 128, 128, b),
            new w(8, 32, 128, 256, b),
            new w(32, 128, 258, 1024, b),
            new w(32, 258, 258, 4096, b),
          ]),
            (a.deflateInit = B),
            (a.deflateInit2 = z),
            (a.deflateReset = y),
            (a.deflateResetKeep = k),
            (a.deflateSetHeader = x),
            (a.deflate = S),
            (a.deflateEnd = E),
            (a.deflateSetDictionary = A),
            (a.deflateInfo = "pako deflate (from Nodeca project)");
        },
        {
          "../utils/common": 3,
          "./adler32": 5,
          "./crc32": 7,
          "./messages": 13,
          "./trees": 14,
        },
      ],
      9: [
        function (t, e, a) {
          "use strict";
          function i() {
            (this.text = 0),
              (this.time = 0),
              (this.xflags = 0),
              (this.os = 0),
              (this.extra = null),
              (this.extra_len = 0),
              (this.name = ""),
              (this.comment = ""),
              (this.hcrc = 0),
              (this.done = !1);
          }
          e.exports = i;
        },
        {},
      ],
      10: [
        function (t, e, a) {
          "use strict";
          var i = 30,
            n = 12;
          e.exports = function (t, e) {
            var a,
              r,
              s,
              o,
              l,
              h,
              d,
              f,
              _,
              u,
              c,
              b,
              g,
              m,
              w,
              p,
              v,
              k,
              y,
              x,
              z,
              B,
              S,
              E,
              A;
            (a = t.state),
              (r = t.next_in),
              (E = t.input),
              (s = r + (t.avail_in - 5)),
              (o = t.next_out),
              (A = t.output),
              (l = o - (e - t.avail_out)),
              (h = o + (t.avail_out - 257)),
              (d = a.dmax),
              (f = a.wsize),
              (_ = a.whave),
              (u = a.wnext),
              (c = a.window),
              (b = a.hold),
              (g = a.bits),
              (m = a.lencode),
              (w = a.distcode),
              (p = (1 << a.lenbits) - 1),
              (v = (1 << a.distbits) - 1);
            t: do {
              g < 15 &&
                ((b += E[r++] << g), (g += 8), (b += E[r++] << g), (g += 8)),
                (k = m[b & p]);
              e: for (;;) {
                if (
                  ((y = k >>> 24),
                  (b >>>= y),
                  (g -= y),
                  (y = (k >>> 16) & 255),
                  0 === y)
                )
                  A[o++] = 65535 & k;
                else {
                  if (!(16 & y)) {
                    if (0 === (64 & y)) {
                      k = m[(65535 & k) + (b & ((1 << y) - 1))];
                      continue e;
                    }
                    if (32 & y) {
                      a.mode = n;
                      break t;
                    }
                    (t.msg = "invalid literal/length code"), (a.mode = i);
                    break t;
                  }
                  (x = 65535 & k),
                    (y &= 15),
                    y &&
                      (g < y && ((b += E[r++] << g), (g += 8)),
                      (x += b & ((1 << y) - 1)),
                      (b >>>= y),
                      (g -= y)),
                    g < 15 &&
                      ((b += E[r++] << g),
                      (g += 8),
                      (b += E[r++] << g),
                      (g += 8)),
                    (k = w[b & v]);
                  a: for (;;) {
                    if (
                      ((y = k >>> 24),
                      (b >>>= y),
                      (g -= y),
                      (y = (k >>> 16) & 255),
                      !(16 & y))
                    ) {
                      if (0 === (64 & y)) {
                        k = w[(65535 & k) + (b & ((1 << y) - 1))];
                        continue a;
                      }
                      (t.msg = "invalid distance code"), (a.mode = i);
                      break t;
                    }
                    if (
                      ((z = 65535 & k),
                      (y &= 15),
                      g < y &&
                        ((b += E[r++] << g),
                        (g += 8),
                        g < y && ((b += E[r++] << g), (g += 8))),
                      (z += b & ((1 << y) - 1)),
                      z > d)
                    ) {
                      (t.msg = "invalid distance too far back"), (a.mode = i);
                      break t;
                    }
                    if (((b >>>= y), (g -= y), (y = o - l), z > y)) {
                      if (((y = z - y), y > _ && a.sane)) {
                        (t.msg = "invalid distance too far back"), (a.mode = i);
                        break t;
                      }
                      if (((B = 0), (S = c), 0 === u)) {
                        if (((B += f - y), y < x)) {
                          x -= y;
                          do A[o++] = c[B++];
                          while (--y);
                          (B = o - z), (S = A);
                        }
                      } else if (u < y) {
                        if (((B += f + u - y), (y -= u), y < x)) {
                          x -= y;
                          do A[o++] = c[B++];
                          while (--y);
                          if (((B = 0), u < x)) {
                            (y = u), (x -= y);
                            do A[o++] = c[B++];
                            while (--y);
                            (B = o - z), (S = A);
                          }
                        }
                      } else if (((B += u - y), y < x)) {
                        x -= y;
                        do A[o++] = c[B++];
                        while (--y);
                        (B = o - z), (S = A);
                      }
                      for (; x > 2; )
                        (A[o++] = S[B++]),
                          (A[o++] = S[B++]),
                          (A[o++] = S[B++]),
                          (x -= 3);
                      x && ((A[o++] = S[B++]), x > 1 && (A[o++] = S[B++]));
                    } else {
                      B = o - z;
                      do
                        (A[o++] = A[B++]),
                          (A[o++] = A[B++]),
                          (A[o++] = A[B++]),
                          (x -= 3);
                      while (x > 2);
                      x && ((A[o++] = A[B++]), x > 1 && (A[o++] = A[B++]));
                    }
                    break;
                  }
                }
                break;
              }
            } while (r < s && o < h);
            (x = g >> 3),
              (r -= x),
              (g -= x << 3),
              (b &= (1 << g) - 1),
              (t.next_in = r),
              (t.next_out = o),
              (t.avail_in = r < s ? 5 + (s - r) : 5 - (r - s)),
              (t.avail_out = o < h ? 257 + (h - o) : 257 - (o - h)),
              (a.hold = b),
              (a.bits = g);
          };
        },
        {},
      ],
      11: [
        function (t, e, a) {
          "use strict";
          function i(t) {
            return (
              ((t >>> 24) & 255) +
              ((t >>> 8) & 65280) +
              ((65280 & t) << 8) +
              ((255 & t) << 24)
            );
          }
          function n() {
            (this.mode = 0),
              (this.last = !1),
              (this.wrap = 0),
              (this.havedict = !1),
              (this.flags = 0),
              (this.dmax = 0),
              (this.check = 0),
              (this.total = 0),
              (this.head = null),
              (this.wbits = 0),
              (this.wsize = 0),
              (this.whave = 0),
              (this.wnext = 0),
              (this.window = null),
              (this.hold = 0),
              (this.bits = 0),
              (this.length = 0),
              (this.offset = 0),
              (this.extra = 0),
              (this.lencode = null),
              (this.distcode = null),
              (this.lenbits = 0),
              (this.distbits = 0),
              (this.ncode = 0),
              (this.nlen = 0),
              (this.ndist = 0),
              (this.have = 0),
              (this.next = null),
              (this.lens = new w.Buf16(320)),
              (this.work = new w.Buf16(288)),
              (this.lendyn = null),
              (this.distdyn = null),
              (this.sane = 0),
              (this.back = 0),
              (this.was = 0);
          }
          function r(t) {
            var e;
            return t && t.state
              ? ((e = t.state),
                (t.total_in = t.total_out = e.total = 0),
                (t.msg = ""),
                e.wrap && (t.adler = 1 & e.wrap),
                (e.mode = T),
                (e.last = 0),
                (e.havedict = 0),
                (e.dmax = 32768),
                (e.head = null),
                (e.hold = 0),
                (e.bits = 0),
                (e.lencode = e.lendyn = new w.Buf32(bt)),
                (e.distcode = e.distdyn = new w.Buf32(gt)),
                (e.sane = 1),
                (e.back = -1),
                Z)
              : N;
          }
          function s(t) {
            var e;
            return t && t.state
              ? ((e = t.state),
                (e.wsize = 0),
                (e.whave = 0),
                (e.wnext = 0),
                r(t))
              : N;
          }
          function o(t, e) {
            var a, i;
            return t && t.state
              ? ((i = t.state),
                e < 0
                  ? ((a = 0), (e = -e))
                  : ((a = (e >> 4) + 1), e < 48 && (e &= 15)),
                e && (e < 8 || e > 15)
                  ? N
                  : (null !== i.window && i.wbits !== e && (i.window = null),
                    (i.wrap = a),
                    (i.wbits = e),
                    s(t)))
              : N;
          }
          function l(t, e) {
            var a, i;
            return t
              ? ((i = new n()),
                (t.state = i),
                (i.window = null),
                (a = o(t, e)),
                a !== Z && (t.state = null),
                a)
              : N;
          }
          function h(t) {
            return l(t, wt);
          }
          function d(t) {
            if (pt) {
              var e;
              for (g = new w.Buf32(512), m = new w.Buf32(32), e = 0; e < 144; )
                t.lens[e++] = 8;
              for (; e < 256; ) t.lens[e++] = 9;
              for (; e < 280; ) t.lens[e++] = 7;
              for (; e < 288; ) t.lens[e++] = 8;
              for (
                y(z, t.lens, 0, 288, g, 0, t.work, { bits: 9 }), e = 0;
                e < 32;

              )
                t.lens[e++] = 5;
              y(B, t.lens, 0, 32, m, 0, t.work, { bits: 5 }), (pt = !1);
            }
            (t.lencode = g),
              (t.lenbits = 9),
              (t.distcode = m),
              (t.distbits = 5);
          }
          function f(t, e, a, i) {
            var n,
              r = t.state;
            return (
              null === r.window &&
                ((r.wsize = 1 << r.wbits),
                (r.wnext = 0),
                (r.whave = 0),
                (r.window = new w.Buf8(r.wsize))),
              i >= r.wsize
                ? (w.arraySet(r.window, e, a - r.wsize, r.wsize, 0),
                  (r.wnext = 0),
                  (r.whave = r.wsize))
                : ((n = r.wsize - r.wnext),
                  n > i && (n = i),
                  w.arraySet(r.window, e, a - i, n, r.wnext),
                  (i -= n),
                  i
                    ? (w.arraySet(r.window, e, a - i, i, 0),
                      (r.wnext = i),
                      (r.whave = r.wsize))
                    : ((r.wnext += n),
                      r.wnext === r.wsize && (r.wnext = 0),
                      r.whave < r.wsize && (r.whave += n))),
              0
            );
          }
          function _(t, e) {
            var a,
              n,
              r,
              s,
              o,
              l,
              h,
              _,
              u,
              c,
              b,
              g,
              m,
              bt,
              gt,
              mt,
              wt,
              pt,
              vt,
              kt,
              yt,
              xt,
              zt,
              Bt,
              St = 0,
              Et = new w.Buf8(4),
              At = [
                16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1,
                15,
              ];
            if (!t || !t.state || !t.output || (!t.input && 0 !== t.avail_in))
              return N;
            (a = t.state),
              a.mode === X && (a.mode = W),
              (o = t.next_out),
              (r = t.output),
              (h = t.avail_out),
              (s = t.next_in),
              (n = t.input),
              (l = t.avail_in),
              (_ = a.hold),
              (u = a.bits),
              (c = l),
              (b = h),
              (xt = Z);
            t: for (;;)
              switch (a.mode) {
                case T:
                  if (0 === a.wrap) {
                    a.mode = W;
                    break;
                  }
                  for (; u < 16; ) {
                    if (0 === l) break t;
                    l--, (_ += n[s++] << u), (u += 8);
                  }
                  if (2 & a.wrap && 35615 === _) {
                    (a.check = 0),
                      (Et[0] = 255 & _),
                      (Et[1] = (_ >>> 8) & 255),
                      (a.check = v(a.check, Et, 2, 0)),
                      (_ = 0),
                      (u = 0),
                      (a.mode = F);
                    break;
                  }
                  if (
                    ((a.flags = 0),
                    a.head && (a.head.done = !1),
                    !(1 & a.wrap) || (((255 & _) << 8) + (_ >> 8)) % 31)
                  ) {
                    (t.msg = "incorrect header check"), (a.mode = _t);
                    break;
                  }
                  if ((15 & _) !== U) {
                    (t.msg = "unknown compression method"), (a.mode = _t);
                    break;
                  }
                  if (
                    ((_ >>>= 4), (u -= 4), (yt = (15 & _) + 8), 0 === a.wbits)
                  )
                    a.wbits = yt;
                  else if (yt > a.wbits) {
                    (t.msg = "invalid window size"), (a.mode = _t);
                    break;
                  }
                  (a.dmax = 1 << yt),
                    (t.adler = a.check = 1),
                    (a.mode = 512 & _ ? q : X),
                    (_ = 0),
                    (u = 0);
                  break;
                case F:
                  for (; u < 16; ) {
                    if (0 === l) break t;
                    l--, (_ += n[s++] << u), (u += 8);
                  }
                  if (((a.flags = _), (255 & a.flags) !== U)) {
                    (t.msg = "unknown compression method"), (a.mode = _t);
                    break;
                  }
                  if (57344 & a.flags) {
                    (t.msg = "unknown header flags set"), (a.mode = _t);
                    break;
                  }
                  a.head && (a.head.text = (_ >> 8) & 1),
                    512 & a.flags &&
                      ((Et[0] = 255 & _),
                      (Et[1] = (_ >>> 8) & 255),
                      (a.check = v(a.check, Et, 2, 0))),
                    (_ = 0),
                    (u = 0),
                    (a.mode = L);
                case L:
                  for (; u < 32; ) {
                    if (0 === l) break t;
                    l--, (_ += n[s++] << u), (u += 8);
                  }
                  a.head && (a.head.time = _),
                    512 & a.flags &&
                      ((Et[0] = 255 & _),
                      (Et[1] = (_ >>> 8) & 255),
                      (Et[2] = (_ >>> 16) & 255),
                      (Et[3] = (_ >>> 24) & 255),
                      (a.check = v(a.check, Et, 4, 0))),
                    (_ = 0),
                    (u = 0),
                    (a.mode = H);
                case H:
                  for (; u < 16; ) {
                    if (0 === l) break t;
                    l--, (_ += n[s++] << u), (u += 8);
                  }
                  a.head && ((a.head.xflags = 255 & _), (a.head.os = _ >> 8)),
                    512 & a.flags &&
                      ((Et[0] = 255 & _),
                      (Et[1] = (_ >>> 8) & 255),
                      (a.check = v(a.check, Et, 2, 0))),
                    (_ = 0),
                    (u = 0),
                    (a.mode = j);
                case j:
                  if (1024 & a.flags) {
                    for (; u < 16; ) {
                      if (0 === l) break t;
                      l--, (_ += n[s++] << u), (u += 8);
                    }
                    (a.length = _),
                      a.head && (a.head.extra_len = _),
                      512 & a.flags &&
                        ((Et[0] = 255 & _),
                        (Et[1] = (_ >>> 8) & 255),
                        (a.check = v(a.check, Et, 2, 0))),
                      (_ = 0),
                      (u = 0);
                  } else a.head && (a.head.extra = null);
                  a.mode = K;
                case K:
                  if (
                    1024 & a.flags &&
                    ((g = a.length),
                    g > l && (g = l),
                    g &&
                      (a.head &&
                        ((yt = a.head.extra_len - a.length),
                        a.head.extra ||
                          (a.head.extra = new Array(a.head.extra_len)),
                        w.arraySet(a.head.extra, n, s, g, yt)),
                      512 & a.flags && (a.check = v(a.check, n, g, s)),
                      (l -= g),
                      (s += g),
                      (a.length -= g)),
                    a.length)
                  )
                    break t;
                  (a.length = 0), (a.mode = M);
                case M:
                  if (2048 & a.flags) {
                    if (0 === l) break t;
                    g = 0;
                    do
                      (yt = n[s + g++]),
                        a.head &&
                          yt &&
                          a.length < 65536 &&
                          (a.head.name += String.fromCharCode(yt));
                    while (yt && g < l);
                    if (
                      (512 & a.flags && (a.check = v(a.check, n, g, s)),
                      (l -= g),
                      (s += g),
                      yt)
                    )
                      break t;
                  } else a.head && (a.head.name = null);
                  (a.length = 0), (a.mode = P);
                case P:
                  if (4096 & a.flags) {
                    if (0 === l) break t;
                    g = 0;
                    do
                      (yt = n[s + g++]),
                        a.head &&
                          yt &&
                          a.length < 65536 &&
                          (a.head.comment += String.fromCharCode(yt));
                    while (yt && g < l);
                    if (
                      (512 & a.flags && (a.check = v(a.check, n, g, s)),
                      (l -= g),
                      (s += g),
                      yt)
                    )
                      break t;
                  } else a.head && (a.head.comment = null);
                  a.mode = Y;
                case Y:
                  if (512 & a.flags) {
                    for (; u < 16; ) {
                      if (0 === l) break t;
                      l--, (_ += n[s++] << u), (u += 8);
                    }
                    if (_ !== (65535 & a.check)) {
                      (t.msg = "header crc mismatch"), (a.mode = _t);
                      break;
                    }
                    (_ = 0), (u = 0);
                  }
                  a.head &&
                    ((a.head.hcrc = (a.flags >> 9) & 1), (a.head.done = !0)),
                    (t.adler = a.check = 0),
                    (a.mode = X);
                  break;
                case q:
                  for (; u < 32; ) {
                    if (0 === l) break t;
                    l--, (_ += n[s++] << u), (u += 8);
                  }
                  (t.adler = a.check = i(_)), (_ = 0), (u = 0), (a.mode = G);
                case G:
                  if (0 === a.havedict)
                    return (
                      (t.next_out = o),
                      (t.avail_out = h),
                      (t.next_in = s),
                      (t.avail_in = l),
                      (a.hold = _),
                      (a.bits = u),
                      C
                    );
                  (t.adler = a.check = 1), (a.mode = X);
                case X:
                  if (e === E || e === A) break t;
                case W:
                  if (a.last) {
                    (_ >>>= 7 & u), (u -= 7 & u), (a.mode = ht);
                    break;
                  }
                  for (; u < 3; ) {
                    if (0 === l) break t;
                    l--, (_ += n[s++] << u), (u += 8);
                  }
                  switch (((a.last = 1 & _), (_ >>>= 1), (u -= 1), 3 & _)) {
                    case 0:
                      a.mode = J;
                      break;
                    case 1:
                      if ((d(a), (a.mode = at), e === A)) {
                        (_ >>>= 2), (u -= 2);
                        break t;
                      }
                      break;
                    case 2:
                      a.mode = $;
                      break;
                    case 3:
                      (t.msg = "invalid block type"), (a.mode = _t);
                  }
                  (_ >>>= 2), (u -= 2);
                  break;
                case J:
                  for (_ >>>= 7 & u, u -= 7 & u; u < 32; ) {
                    if (0 === l) break t;
                    l--, (_ += n[s++] << u), (u += 8);
                  }
                  if ((65535 & _) !== ((_ >>> 16) ^ 65535)) {
                    (t.msg = "invalid stored block lengths"), (a.mode = _t);
                    break;
                  }
                  if (
                    ((a.length = 65535 & _),
                    (_ = 0),
                    (u = 0),
                    (a.mode = Q),
                    e === A)
                  )
                    break t;
                case Q:
                  a.mode = V;
                case V:
                  if ((g = a.length)) {
                    if ((g > l && (g = l), g > h && (g = h), 0 === g)) break t;
                    w.arraySet(r, n, s, g, o),
                      (l -= g),
                      (s += g),
                      (h -= g),
                      (o += g),
                      (a.length -= g);
                    break;
                  }
                  a.mode = X;
                  break;
                case $:
                  for (; u < 14; ) {
                    if (0 === l) break t;
                    l--, (_ += n[s++] << u), (u += 8);
                  }
                  if (
                    ((a.nlen = (31 & _) + 257),
                    (_ >>>= 5),
                    (u -= 5),
                    (a.ndist = (31 & _) + 1),
                    (_ >>>= 5),
                    (u -= 5),
                    (a.ncode = (15 & _) + 4),
                    (_ >>>= 4),
                    (u -= 4),
                    a.nlen > 286 || a.ndist > 30)
                  ) {
                    (t.msg = "too many length or distance symbols"),
                      (a.mode = _t);
                    break;
                  }
                  (a.have = 0), (a.mode = tt);
                case tt:
                  for (; a.have < a.ncode; ) {
                    for (; u < 3; ) {
                      if (0 === l) break t;
                      l--, (_ += n[s++] << u), (u += 8);
                    }
                    (a.lens[At[a.have++]] = 7 & _), (_ >>>= 3), (u -= 3);
                  }
                  for (; a.have < 19; ) a.lens[At[a.have++]] = 0;
                  if (
                    ((a.lencode = a.lendyn),
                    (a.lenbits = 7),
                    (zt = { bits: a.lenbits }),
                    (xt = y(x, a.lens, 0, 19, a.lencode, 0, a.work, zt)),
                    (a.lenbits = zt.bits),
                    xt)
                  ) {
                    (t.msg = "invalid code lengths set"), (a.mode = _t);
                    break;
                  }
                  (a.have = 0), (a.mode = et);
                case et:
                  for (; a.have < a.nlen + a.ndist; ) {
                    for (
                      ;
                      (St = a.lencode[_ & ((1 << a.lenbits) - 1)]),
                        (gt = St >>> 24),
                        (mt = (St >>> 16) & 255),
                        (wt = 65535 & St),
                        !(gt <= u);

                    ) {
                      if (0 === l) break t;
                      l--, (_ += n[s++] << u), (u += 8);
                    }
                    if (wt < 16)
                      (_ >>>= gt), (u -= gt), (a.lens[a.have++] = wt);
                    else {
                      if (16 === wt) {
                        for (Bt = gt + 2; u < Bt; ) {
                          if (0 === l) break t;
                          l--, (_ += n[s++] << u), (u += 8);
                        }
                        if (((_ >>>= gt), (u -= gt), 0 === a.have)) {
                          (t.msg = "invalid bit length repeat"), (a.mode = _t);
                          break;
                        }
                        (yt = a.lens[a.have - 1]),
                          (g = 3 + (3 & _)),
                          (_ >>>= 2),
                          (u -= 2);
                      } else if (17 === wt) {
                        for (Bt = gt + 3; u < Bt; ) {
                          if (0 === l) break t;
                          l--, (_ += n[s++] << u), (u += 8);
                        }
                        (_ >>>= gt),
                          (u -= gt),
                          (yt = 0),
                          (g = 3 + (7 & _)),
                          (_ >>>= 3),
                          (u -= 3);
                      } else {
                        for (Bt = gt + 7; u < Bt; ) {
                          if (0 === l) break t;
                          l--, (_ += n[s++] << u), (u += 8);
                        }
                        (_ >>>= gt),
                          (u -= gt),
                          (yt = 0),
                          (g = 11 + (127 & _)),
                          (_ >>>= 7),
                          (u -= 7);
                      }
                      if (a.have + g > a.nlen + a.ndist) {
                        (t.msg = "invalid bit length repeat"), (a.mode = _t);
                        break;
                      }
                      for (; g--; ) a.lens[a.have++] = yt;
                    }
                  }
                  if (a.mode === _t) break;
                  if (0 === a.lens[256]) {
                    (t.msg = "invalid code -- missing end-of-block"),
                      (a.mode = _t);
                    break;
                  }
                  if (
                    ((a.lenbits = 9),
                    (zt = { bits: a.lenbits }),
                    (xt = y(z, a.lens, 0, a.nlen, a.lencode, 0, a.work, zt)),
                    (a.lenbits = zt.bits),
                    xt)
                  ) {
                    (t.msg = "invalid literal/lengths set"), (a.mode = _t);
                    break;
                  }
                  if (
                    ((a.distbits = 6),
                    (a.distcode = a.distdyn),
                    (zt = { bits: a.distbits }),
                    (xt = y(
                      B,
                      a.lens,
                      a.nlen,
                      a.ndist,
                      a.distcode,
                      0,
                      a.work,
                      zt
                    )),
                    (a.distbits = zt.bits),
                    xt)
                  ) {
                    (t.msg = "invalid distances set"), (a.mode = _t);
                    break;
                  }
                  if (((a.mode = at), e === A)) break t;
                case at:
                  a.mode = it;
                case it:
                  if (l >= 6 && h >= 258) {
                    (t.next_out = o),
                      (t.avail_out = h),
                      (t.next_in = s),
                      (t.avail_in = l),
                      (a.hold = _),
                      (a.bits = u),
                      k(t, b),
                      (o = t.next_out),
                      (r = t.output),
                      (h = t.avail_out),
                      (s = t.next_in),
                      (n = t.input),
                      (l = t.avail_in),
                      (_ = a.hold),
                      (u = a.bits),
                      a.mode === X && (a.back = -1);
                    break;
                  }
                  for (
                    a.back = 0;
                    (St = a.lencode[_ & ((1 << a.lenbits) - 1)]),
                      (gt = St >>> 24),
                      (mt = (St >>> 16) & 255),
                      (wt = 65535 & St),
                      !(gt <= u);

                  ) {
                    if (0 === l) break t;
                    l--, (_ += n[s++] << u), (u += 8);
                  }
                  if (mt && 0 === (240 & mt)) {
                    for (
                      pt = gt, vt = mt, kt = wt;
                      (St =
                        a.lencode[kt + ((_ & ((1 << (pt + vt)) - 1)) >> pt)]),
                        (gt = St >>> 24),
                        (mt = (St >>> 16) & 255),
                        (wt = 65535 & St),
                        !(pt + gt <= u);

                    ) {
                      if (0 === l) break t;
                      l--, (_ += n[s++] << u), (u += 8);
                    }
                    (_ >>>= pt), (u -= pt), (a.back += pt);
                  }
                  if (
                    ((_ >>>= gt),
                    (u -= gt),
                    (a.back += gt),
                    (a.length = wt),
                    0 === mt)
                  ) {
                    a.mode = lt;
                    break;
                  }
                  if (32 & mt) {
                    (a.back = -1), (a.mode = X);
                    break;
                  }
                  if (64 & mt) {
                    (t.msg = "invalid literal/length code"), (a.mode = _t);
                    break;
                  }
                  (a.extra = 15 & mt), (a.mode = nt);
                case nt:
                  if (a.extra) {
                    for (Bt = a.extra; u < Bt; ) {
                      if (0 === l) break t;
                      l--, (_ += n[s++] << u), (u += 8);
                    }
                    (a.length += _ & ((1 << a.extra) - 1)),
                      (_ >>>= a.extra),
                      (u -= a.extra),
                      (a.back += a.extra);
                  }
                  (a.was = a.length), (a.mode = rt);
                case rt:
                  for (
                    ;
                    (St = a.distcode[_ & ((1 << a.distbits) - 1)]),
                      (gt = St >>> 24),
                      (mt = (St >>> 16) & 255),
                      (wt = 65535 & St),
                      !(gt <= u);

                  ) {
                    if (0 === l) break t;
                    l--, (_ += n[s++] << u), (u += 8);
                  }
                  if (0 === (240 & mt)) {
                    for (
                      pt = gt, vt = mt, kt = wt;
                      (St =
                        a.distcode[kt + ((_ & ((1 << (pt + vt)) - 1)) >> pt)]),
                        (gt = St >>> 24),
                        (mt = (St >>> 16) & 255),
                        (wt = 65535 & St),
                        !(pt + gt <= u);

                    ) {
                      if (0 === l) break t;
                      l--, (_ += n[s++] << u), (u += 8);
                    }
                    (_ >>>= pt), (u -= pt), (a.back += pt);
                  }
                  if (((_ >>>= gt), (u -= gt), (a.back += gt), 64 & mt)) {
                    (t.msg = "invalid distance code"), (a.mode = _t);
                    break;
                  }
                  (a.offset = wt), (a.extra = 15 & mt), (a.mode = st);
                case st:
                  if (a.extra) {
                    for (Bt = a.extra; u < Bt; ) {
                      if (0 === l) break t;
                      l--, (_ += n[s++] << u), (u += 8);
                    }
                    (a.offset += _ & ((1 << a.extra) - 1)),
                      (_ >>>= a.extra),
                      (u -= a.extra),
                      (a.back += a.extra);
                  }
                  if (a.offset > a.dmax) {
                    (t.msg = "invalid distance too far back"), (a.mode = _t);
                    break;
                  }
                  a.mode = ot;
                case ot:
                  if (0 === h) break t;
                  if (((g = b - h), a.offset > g)) {
                    if (((g = a.offset - g), g > a.whave && a.sane)) {
                      (t.msg = "invalid distance too far back"), (a.mode = _t);
                      break;
                    }
                    g > a.wnext
                      ? ((g -= a.wnext), (m = a.wsize - g))
                      : (m = a.wnext - g),
                      g > a.length && (g = a.length),
                      (bt = a.window);
                  } else (bt = r), (m = o - a.offset), (g = a.length);
                  g > h && (g = h), (h -= g), (a.length -= g);
                  do r[o++] = bt[m++];
                  while (--g);
                  0 === a.length && (a.mode = it);
                  break;
                case lt:
                  if (0 === h) break t;
                  (r[o++] = a.length), h--, (a.mode = it);
                  break;
                case ht:
                  if (a.wrap) {
                    for (; u < 32; ) {
                      if (0 === l) break t;
                      l--, (_ |= n[s++] << u), (u += 8);
                    }
                    if (
                      ((b -= h),
                      (t.total_out += b),
                      (a.total += b),
                      b &&
                        (t.adler = a.check =
                          a.flags
                            ? v(a.check, r, b, o - b)
                            : p(a.check, r, b, o - b)),
                      (b = h),
                      (a.flags ? _ : i(_)) !== a.check)
                    ) {
                      (t.msg = "incorrect data check"), (a.mode = _t);
                      break;
                    }
                    (_ = 0), (u = 0);
                  }
                  a.mode = dt;
                case dt:
                  if (a.wrap && a.flags) {
                    for (; u < 32; ) {
                      if (0 === l) break t;
                      l--, (_ += n[s++] << u), (u += 8);
                    }
                    if (_ !== (4294967295 & a.total)) {
                      (t.msg = "incorrect length check"), (a.mode = _t);
                      break;
                    }
                    (_ = 0), (u = 0);
                  }
                  a.mode = ft;
                case ft:
                  xt = R;
                  break t;
                case _t:
                  xt = O;
                  break t;
                case ut:
                  return D;
                case ct:
                default:
                  return N;
              }
            return (
              (t.next_out = o),
              (t.avail_out = h),
              (t.next_in = s),
              (t.avail_in = l),
              (a.hold = _),
              (a.bits = u),
              (a.wsize ||
                (b !== t.avail_out &&
                  a.mode < _t &&
                  (a.mode < ht || e !== S))) &&
              f(t, t.output, t.next_out, b - t.avail_out)
                ? ((a.mode = ut), D)
                : ((c -= t.avail_in),
                  (b -= t.avail_out),
                  (t.total_in += c),
                  (t.total_out += b),
                  (a.total += b),
                  a.wrap &&
                    b &&
                    (t.adler = a.check =
                      a.flags
                        ? v(a.check, r, b, t.next_out - b)
                        : p(a.check, r, b, t.next_out - b)),
                  (t.data_type =
                    a.bits +
                    (a.last ? 64 : 0) +
                    (a.mode === X ? 128 : 0) +
                    (a.mode === at || a.mode === Q ? 256 : 0)),
                  ((0 === c && 0 === b) || e === S) && xt === Z && (xt = I),
                  xt)
            );
          }
          function u(t) {
            if (!t || !t.state) return N;
            var e = t.state;
            return e.window && (e.window = null), (t.state = null), Z;
          }
          function c(t, e) {
            var a;
            return t && t.state
              ? ((a = t.state),
                0 === (2 & a.wrap) ? N : ((a.head = e), (e.done = !1), Z))
              : N;
          }
          function b(t, e) {
            var a,
              i,
              n,
              r = e.length;
            return t && t.state
              ? ((a = t.state),
                0 !== a.wrap && a.mode !== G
                  ? N
                  : a.mode === G &&
                    ((i = 1), (i = p(i, e, r, 0)), i !== a.check)
                  ? O
                  : (n = f(t, e, r, r))
                  ? ((a.mode = ut), D)
                  : ((a.havedict = 1), Z))
              : N;
          }
          var g,
            m,
            w = t("../utils/common"),
            p = t("./adler32"),
            v = t("./crc32"),
            k = t("./inffast"),
            y = t("./inftrees"),
            x = 0,
            z = 1,
            B = 2,
            S = 4,
            E = 5,
            A = 6,
            Z = 0,
            R = 1,
            C = 2,
            N = -2,
            O = -3,
            D = -4,
            I = -5,
            U = 8,
            T = 1,
            F = 2,
            L = 3,
            H = 4,
            j = 5,
            K = 6,
            M = 7,
            P = 8,
            Y = 9,
            q = 10,
            G = 11,
            X = 12,
            W = 13,
            J = 14,
            Q = 15,
            V = 16,
            $ = 17,
            tt = 18,
            et = 19,
            at = 20,
            it = 21,
            nt = 22,
            rt = 23,
            st = 24,
            ot = 25,
            lt = 26,
            ht = 27,
            dt = 28,
            ft = 29,
            _t = 30,
            ut = 31,
            ct = 32,
            bt = 852,
            gt = 592,
            mt = 15,
            wt = mt,
            pt = !0;
          (a.inflateReset = s),
            (a.inflateReset2 = o),
            (a.inflateResetKeep = r),
            (a.inflateInit = h),
            (a.inflateInit2 = l),
            (a.inflate = _),
            (a.inflateEnd = u),
            (a.inflateGetHeader = c),
            (a.inflateSetDictionary = b),
            (a.inflateInfo = "pako inflate (from Nodeca project)");
        },
        {
          "../utils/common": 3,
          "./adler32": 5,
          "./crc32": 7,
          "./inffast": 10,
          "./inftrees": 12,
        },
      ],
      12: [
        function (t, e, a) {
          "use strict";
          var i = t("../utils/common"),
            n = 15,
            r = 852,
            s = 592,
            o = 0,
            l = 1,
            h = 2,
            d = [
              3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43,
              51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0,
            ],
            f = [
              16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,
              19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78,
            ],
            _ = [
              1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257,
              385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289,
              16385, 24577, 0, 0,
            ],
            u = [
              16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,
              23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64,
            ];
          e.exports = function (t, e, a, c, b, g, m, w) {
            var p,
              v,
              k,
              y,
              x,
              z,
              B,
              S,
              E,
              A = w.bits,
              Z = 0,
              R = 0,
              C = 0,
              N = 0,
              O = 0,
              D = 0,
              I = 0,
              U = 0,
              T = 0,
              F = 0,
              L = null,
              H = 0,
              j = new i.Buf16(n + 1),
              K = new i.Buf16(n + 1),
              M = null,
              P = 0;
            for (Z = 0; Z <= n; Z++) j[Z] = 0;
            for (R = 0; R < c; R++) j[e[a + R]]++;
            for (O = A, N = n; N >= 1 && 0 === j[N]; N--);
            if ((O > N && (O = N), 0 === N))
              return (b[g++] = 20971520), (b[g++] = 20971520), (w.bits = 1), 0;
            for (C = 1; C < N && 0 === j[C]; C++);
            for (O < C && (O = C), U = 1, Z = 1; Z <= n; Z++)
              if (((U <<= 1), (U -= j[Z]), U < 0)) return -1;
            if (U > 0 && (t === o || 1 !== N)) return -1;
            for (K[1] = 0, Z = 1; Z < n; Z++) K[Z + 1] = K[Z] + j[Z];
            for (R = 0; R < c; R++) 0 !== e[a + R] && (m[K[e[a + R]]++] = R);
            if (
              (t === o
                ? ((L = M = m), (z = 19))
                : t === l
                ? ((L = d), (H -= 257), (M = f), (P -= 257), (z = 256))
                : ((L = _), (M = u), (z = -1)),
              (F = 0),
              (R = 0),
              (Z = C),
              (x = g),
              (D = O),
              (I = 0),
              (k = -1),
              (T = 1 << O),
              (y = T - 1),
              (t === l && T > r) || (t === h && T > s))
            )
              return 1;
            for (;;) {
              (B = Z - I),
                m[R] < z
                  ? ((S = 0), (E = m[R]))
                  : m[R] > z
                  ? ((S = M[P + m[R]]), (E = L[H + m[R]]))
                  : ((S = 96), (E = 0)),
                (p = 1 << (Z - I)),
                (v = 1 << D),
                (C = v);
              do
                (v -= p), (b[x + (F >> I) + v] = (B << 24) | (S << 16) | E | 0);
              while (0 !== v);
              for (p = 1 << (Z - 1); F & p; ) p >>= 1;
              if (
                (0 !== p ? ((F &= p - 1), (F += p)) : (F = 0),
                R++,
                0 === --j[Z])
              ) {
                if (Z === N) break;
                Z = e[a + m[R]];
              }
              if (Z > O && (F & y) !== k) {
                for (
                  0 === I && (I = O), x += C, D = Z - I, U = 1 << D;
                  D + I < N && ((U -= j[D + I]), !(U <= 0));

                )
                  D++, (U <<= 1);
                if (((T += 1 << D), (t === l && T > r) || (t === h && T > s)))
                  return 1;
                (k = F & y), (b[k] = (O << 24) | (D << 16) | (x - g) | 0);
              }
            }
            return (
              0 !== F && (b[x + F] = ((Z - I) << 24) | (64 << 16) | 0),
              (w.bits = O),
              0
            );
          };
        },
        { "../utils/common": 3 },
      ],
      13: [
        function (t, e, a) {
          "use strict";
          e.exports = {
            2: "need dictionary",
            1: "stream end",
            0: "",
            "-1": "file error",
            "-2": "stream error",
            "-3": "data error",
            "-4": "insufficient memory",
            "-5": "buffer error",
            "-6": "incompatible version",
          };
        },
        {},
      ],
      14: [
        function (t, e, a) {
          "use strict";
          function i(t) {
            for (var e = t.length; --e >= 0; ) t[e] = 0;
          }
          function n(t, e, a, i, n) {
            (this.static_tree = t),
              (this.extra_bits = e),
              (this.extra_base = a),
              (this.elems = i),
              (this.max_length = n),
              (this.has_stree = t && t.length);
          }
          function r(t, e) {
            (this.dyn_tree = t), (this.max_code = 0), (this.stat_desc = e);
          }
          function s(t) {
            return t < 256 ? lt[t] : lt[256 + (t >>> 7)];
          }
          function o(t, e) {
            (t.pending_buf[t.pending++] = 255 & e),
              (t.pending_buf[t.pending++] = (e >>> 8) & 255);
          }
          function l(t, e, a) {
            t.bi_valid > W - a
              ? ((t.bi_buf |= (e << t.bi_valid) & 65535),
                o(t, t.bi_buf),
                (t.bi_buf = e >> (W - t.bi_valid)),
                (t.bi_valid += a - W))
              : ((t.bi_buf |= (e << t.bi_valid) & 65535), (t.bi_valid += a));
          }
          function h(t, e, a) {
            l(t, a[2 * e], a[2 * e + 1]);
          }
          function d(t, e) {
            var a = 0;
            do (a |= 1 & t), (t >>>= 1), (a <<= 1);
            while (--e > 0);
            return a >>> 1;
          }
          function f(t) {
            16 === t.bi_valid
              ? (o(t, t.bi_buf), (t.bi_buf = 0), (t.bi_valid = 0))
              : t.bi_valid >= 8 &&
                ((t.pending_buf[t.pending++] = 255 & t.bi_buf),
                (t.bi_buf >>= 8),
                (t.bi_valid -= 8));
          }
          function _(t, e) {
            var a,
              i,
              n,
              r,
              s,
              o,
              l = e.dyn_tree,
              h = e.max_code,
              d = e.stat_desc.static_tree,
              f = e.stat_desc.has_stree,
              _ = e.stat_desc.extra_bits,
              u = e.stat_desc.extra_base,
              c = e.stat_desc.max_length,
              b = 0;
            for (r = 0; r <= X; r++) t.bl_count[r] = 0;
            for (
              l[2 * t.heap[t.heap_max] + 1] = 0, a = t.heap_max + 1;
              a < G;
              a++
            )
              (i = t.heap[a]),
                (r = l[2 * l[2 * i + 1] + 1] + 1),
                r > c && ((r = c), b++),
                (l[2 * i + 1] = r),
                i > h ||
                  (t.bl_count[r]++,
                  (s = 0),
                  i >= u && (s = _[i - u]),
                  (o = l[2 * i]),
                  (t.opt_len += o * (r + s)),
                  f && (t.static_len += o * (d[2 * i + 1] + s)));
            if (0 !== b) {
              do {
                for (r = c - 1; 0 === t.bl_count[r]; ) r--;
                t.bl_count[r]--,
                  (t.bl_count[r + 1] += 2),
                  t.bl_count[c]--,
                  (b -= 2);
              } while (b > 0);
              for (r = c; 0 !== r; r--)
                for (i = t.bl_count[r]; 0 !== i; )
                  (n = t.heap[--a]),
                    n > h ||
                      (l[2 * n + 1] !== r &&
                        ((t.opt_len += (r - l[2 * n + 1]) * l[2 * n]),
                        (l[2 * n + 1] = r)),
                      i--);
            }
          }
          function u(t, e, a) {
            var i,
              n,
              r = new Array(X + 1),
              s = 0;
            for (i = 1; i <= X; i++) r[i] = s = (s + a[i - 1]) << 1;
            for (n = 0; n <= e; n++) {
              var o = t[2 * n + 1];
              0 !== o && (t[2 * n] = d(r[o]++, o));
            }
          }
          function c() {
            var t,
              e,
              a,
              i,
              r,
              s = new Array(X + 1);
            for (a = 0, i = 0; i < K - 1; i++)
              for (dt[i] = a, t = 0; t < 1 << et[i]; t++) ht[a++] = i;
            for (ht[a - 1] = i, r = 0, i = 0; i < 16; i++)
              for (ft[i] = r, t = 0; t < 1 << at[i]; t++) lt[r++] = i;
            for (r >>= 7; i < Y; i++)
              for (ft[i] = r << 7, t = 0; t < 1 << (at[i] - 7); t++)
                lt[256 + r++] = i;
            for (e = 0; e <= X; e++) s[e] = 0;
            for (t = 0; t <= 143; ) (st[2 * t + 1] = 8), t++, s[8]++;
            for (; t <= 255; ) (st[2 * t + 1] = 9), t++, s[9]++;
            for (; t <= 279; ) (st[2 * t + 1] = 7), t++, s[7]++;
            for (; t <= 287; ) (st[2 * t + 1] = 8), t++, s[8]++;
            for (u(st, P + 1, s), t = 0; t < Y; t++)
              (ot[2 * t + 1] = 5), (ot[2 * t] = d(t, 5));
            (_t = new n(st, et, M + 1, P, X)),
              (ut = new n(ot, at, 0, Y, X)),
              (ct = new n(new Array(0), it, 0, q, J));
          }
          function b(t) {
            var e;
            for (e = 0; e < P; e++) t.dyn_ltree[2 * e] = 0;
            for (e = 0; e < Y; e++) t.dyn_dtree[2 * e] = 0;
            for (e = 0; e < q; e++) t.bl_tree[2 * e] = 0;
            (t.dyn_ltree[2 * Q] = 1),
              (t.opt_len = t.static_len = 0),
              (t.last_lit = t.matches = 0);
          }
          function g(t) {
            t.bi_valid > 8
              ? o(t, t.bi_buf)
              : t.bi_valid > 0 && (t.pending_buf[t.pending++] = t.bi_buf),
              (t.bi_buf = 0),
              (t.bi_valid = 0);
          }
          function m(t, e, a, i) {
            g(t),
              i && (o(t, a), o(t, ~a)),
              N.arraySet(t.pending_buf, t.window, e, a, t.pending),
              (t.pending += a);
          }
          function w(t, e, a, i) {
            var n = 2 * e,
              r = 2 * a;
            return t[n] < t[r] || (t[n] === t[r] && i[e] <= i[a]);
          }
          function p(t, e, a) {
            for (
              var i = t.heap[a], n = a << 1;
              n <= t.heap_len &&
              (n < t.heap_len && w(e, t.heap[n + 1], t.heap[n], t.depth) && n++,
              !w(e, i, t.heap[n], t.depth));

            )
              (t.heap[a] = t.heap[n]), (a = n), (n <<= 1);
            t.heap[a] = i;
          }
          function v(t, e, a) {
            var i,
              n,
              r,
              o,
              d = 0;
            if (0 !== t.last_lit)
              do
                (i =
                  (t.pending_buf[t.d_buf + 2 * d] << 8) |
                  t.pending_buf[t.d_buf + 2 * d + 1]),
                  (n = t.pending_buf[t.l_buf + d]),
                  d++,
                  0 === i
                    ? h(t, n, e)
                    : ((r = ht[n]),
                      h(t, r + M + 1, e),
                      (o = et[r]),
                      0 !== o && ((n -= dt[r]), l(t, n, o)),
                      i--,
                      (r = s(i)),
                      h(t, r, a),
                      (o = at[r]),
                      0 !== o && ((i -= ft[r]), l(t, i, o)));
              while (d < t.last_lit);
            h(t, Q, e);
          }
          function k(t, e) {
            var a,
              i,
              n,
              r = e.dyn_tree,
              s = e.stat_desc.static_tree,
              o = e.stat_desc.has_stree,
              l = e.stat_desc.elems,
              h = -1;
            for (t.heap_len = 0, t.heap_max = G, a = 0; a < l; a++)
              0 !== r[2 * a]
                ? ((t.heap[++t.heap_len] = h = a), (t.depth[a] = 0))
                : (r[2 * a + 1] = 0);
            for (; t.heap_len < 2; )
              (n = t.heap[++t.heap_len] = h < 2 ? ++h : 0),
                (r[2 * n] = 1),
                (t.depth[n] = 0),
                t.opt_len--,
                o && (t.static_len -= s[2 * n + 1]);
            for (e.max_code = h, a = t.heap_len >> 1; a >= 1; a--) p(t, r, a);
            n = l;
            do
              (a = t.heap[1]),
                (t.heap[1] = t.heap[t.heap_len--]),
                p(t, r, 1),
                (i = t.heap[1]),
                (t.heap[--t.heap_max] = a),
                (t.heap[--t.heap_max] = i),
                (r[2 * n] = r[2 * a] + r[2 * i]),
                (t.depth[n] =
                  (t.depth[a] >= t.depth[i] ? t.depth[a] : t.depth[i]) + 1),
                (r[2 * a + 1] = r[2 * i + 1] = n),
                (t.heap[1] = n++),
                p(t, r, 1);
            while (t.heap_len >= 2);
            (t.heap[--t.heap_max] = t.heap[1]), _(t, e), u(r, h, t.bl_count);
          }
          function y(t, e, a) {
            var i,
              n,
              r = -1,
              s = e[1],
              o = 0,
              l = 7,
              h = 4;
            for (
              0 === s && ((l = 138), (h = 3)),
                e[2 * (a + 1) + 1] = 65535,
                i = 0;
              i <= a;
              i++
            )
              (n = s),
                (s = e[2 * (i + 1) + 1]),
                (++o < l && n === s) ||
                  (o < h
                    ? (t.bl_tree[2 * n] += o)
                    : 0 !== n
                    ? (n !== r && t.bl_tree[2 * n]++, t.bl_tree[2 * V]++)
                    : o <= 10
                    ? t.bl_tree[2 * $]++
                    : t.bl_tree[2 * tt]++,
                  (o = 0),
                  (r = n),
                  0 === s
                    ? ((l = 138), (h = 3))
                    : n === s
                    ? ((l = 6), (h = 3))
                    : ((l = 7), (h = 4)));
          }
          function x(t, e, a) {
            var i,
              n,
              r = -1,
              s = e[1],
              o = 0,
              d = 7,
              f = 4;
            for (0 === s && ((d = 138), (f = 3)), i = 0; i <= a; i++)
              if (((n = s), (s = e[2 * (i + 1) + 1]), !(++o < d && n === s))) {
                if (o < f) {
                  do h(t, n, t.bl_tree);
                  while (0 !== --o);
                } else
                  0 !== n
                    ? (n !== r && (h(t, n, t.bl_tree), o--),
                      h(t, V, t.bl_tree),
                      l(t, o - 3, 2))
                    : o <= 10
                    ? (h(t, $, t.bl_tree), l(t, o - 3, 3))
                    : (h(t, tt, t.bl_tree), l(t, o - 11, 7));
                (o = 0),
                  (r = n),
                  0 === s
                    ? ((d = 138), (f = 3))
                    : n === s
                    ? ((d = 6), (f = 3))
                    : ((d = 7), (f = 4));
              }
          }
          function z(t) {
            var e;
            for (
              y(t, t.dyn_ltree, t.l_desc.max_code),
                y(t, t.dyn_dtree, t.d_desc.max_code),
                k(t, t.bl_desc),
                e = q - 1;
              e >= 3 && 0 === t.bl_tree[2 * nt[e] + 1];
              e--
            );
            return (t.opt_len += 3 * (e + 1) + 5 + 5 + 4), e;
          }
          function B(t, e, a, i) {
            var n;
            for (
              l(t, e - 257, 5), l(t, a - 1, 5), l(t, i - 4, 4), n = 0;
              n < i;
              n++
            )
              l(t, t.bl_tree[2 * nt[n] + 1], 3);
            x(t, t.dyn_ltree, e - 1), x(t, t.dyn_dtree, a - 1);
          }
          function S(t) {
            var e,
              a = 4093624447;
            for (e = 0; e <= 31; e++, a >>>= 1)
              if (1 & a && 0 !== t.dyn_ltree[2 * e]) return D;
            if (
              0 !== t.dyn_ltree[18] ||
              0 !== t.dyn_ltree[20] ||
              0 !== t.dyn_ltree[26]
            )
              return I;
            for (e = 32; e < M; e++) if (0 !== t.dyn_ltree[2 * e]) return I;
            return D;
          }
          function E(t) {
            bt || (c(), (bt = !0)),
              (t.l_desc = new r(t.dyn_ltree, _t)),
              (t.d_desc = new r(t.dyn_dtree, ut)),
              (t.bl_desc = new r(t.bl_tree, ct)),
              (t.bi_buf = 0),
              (t.bi_valid = 0),
              b(t);
          }
          function A(t, e, a, i) {
            l(t, (T << 1) + (i ? 1 : 0), 3), m(t, e, a, !0);
          }
          function Z(t) {
            l(t, F << 1, 3), h(t, Q, st), f(t);
          }
          function R(t, e, a, i) {
            var n,
              r,
              s = 0;
            t.level > 0
              ? (t.strm.data_type === U && (t.strm.data_type = S(t)),
                k(t, t.l_desc),
                k(t, t.d_desc),
                (s = z(t)),
                (n = (t.opt_len + 3 + 7) >>> 3),
                (r = (t.static_len + 3 + 7) >>> 3),
                r <= n && (n = r))
              : (n = r = a + 5),
              a + 4 <= n && e !== -1
                ? A(t, e, a, i)
                : t.strategy === O || r === n
                ? (l(t, (F << 1) + (i ? 1 : 0), 3), v(t, st, ot))
                : (l(t, (L << 1) + (i ? 1 : 0), 3),
                  B(t, t.l_desc.max_code + 1, t.d_desc.max_code + 1, s + 1),
                  v(t, t.dyn_ltree, t.dyn_dtree)),
              b(t),
              i && g(t);
          }
          function C(t, e, a) {
            return (
              (t.pending_buf[t.d_buf + 2 * t.last_lit] = (e >>> 8) & 255),
              (t.pending_buf[t.d_buf + 2 * t.last_lit + 1] = 255 & e),
              (t.pending_buf[t.l_buf + t.last_lit] = 255 & a),
              t.last_lit++,
              0 === e
                ? t.dyn_ltree[2 * a]++
                : (t.matches++,
                  e--,
                  t.dyn_ltree[2 * (ht[a] + M + 1)]++,
                  t.dyn_dtree[2 * s(e)]++),
              t.last_lit === t.lit_bufsize - 1
            );
          }
          var N = t("../utils/common"),
            O = 4,
            D = 0,
            I = 1,
            U = 2,
            T = 0,
            F = 1,
            L = 2,
            H = 3,
            j = 258,
            K = 29,
            M = 256,
            P = M + 1 + K,
            Y = 30,
            q = 19,
            G = 2 * P + 1,
            X = 15,
            W = 16,
            J = 7,
            Q = 256,
            V = 16,
            $ = 17,
            tt = 18,
            et = [
              0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4,
              4, 4, 5, 5, 5, 5, 0,
            ],
            at = [
              0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9,
              10, 10, 11, 11, 12, 12, 13, 13,
            ],
            it = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7],
            nt = [
              16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
            ],
            rt = 512,
            st = new Array(2 * (P + 2));
          i(st);
          var ot = new Array(2 * Y);
          i(ot);
          var lt = new Array(rt);
          i(lt);
          var ht = new Array(j - H + 1);
          i(ht);
          var dt = new Array(K);
          i(dt);
          var ft = new Array(Y);
          i(ft);
          var _t,
            ut,
            ct,
            bt = !1;
          (a._tr_init = E),
            (a._tr_stored_block = A),
            (a._tr_flush_block = R),
            (a._tr_tally = C),
            (a._tr_align = Z);
        },
        { "../utils/common": 3 },
      ],
      15: [
        function (t, e, a) {
          "use strict";
          function i() {
            (this.input = null),
              (this.next_in = 0),
              (this.avail_in = 0),
              (this.total_in = 0),
              (this.output = null),
              (this.next_out = 0),
              (this.avail_out = 0),
              (this.total_out = 0),
              (this.msg = ""),
              (this.state = null),
              (this.data_type = 2),
              (this.adler = 0);
          }
          e.exports = i;
        },
        {},
      ],
      "/": [
        function (t, e, a) {
          "use strict";
          var i = t("./lib/utils/common").assign,
            n = t("./lib/deflate"),
            r = t("./lib/inflate"),
            s = t("./lib/zlib/constants"),
            o = {};
          i(o, n, r, s), (e.exports = o);
        },
        {
          "./lib/deflate": 1,
          "./lib/inflate": 2,
          "./lib/utils/common": 3,
          "./lib/zlib/constants": 6,
        },
      ],
    },
    {},
    []
  )("/");
});
var DNLMarkerError = function () {};
var EOIMarkerError = function () {};

var PDFJS;
!(function (e) {
  "use strict";
  var t = (function () {
      function e(e) {
        this.message = "JPEG error: " + e;
      }
      return (
        (e.prototype = new Error()),
        (e.prototype.name = "JpegError"),
        (e.constructor = e),
        e
      );
    })(),
    r = (function () {
      var e = new Uint8Array([
          0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26,
          33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57,
          50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31,
          39, 46, 53, 60, 61, 54, 47, 55, 62, 63,
        ]),
        r = 4017,
        n = 799,
        i = 3406,
        a = 2276,
        s = 1567,
        o = 3784,
        l = 5793,
        h = 2896;
      function f({ decodeTransform: e = null, colorTransform: t = -1 } = {}) {
        (this._decodeTransform = e), (this._colorTransform = t);
      }
      function m(e, t) {
        for (var r, n, i = 0, a = [], s = 16; s > 0 && !e[s - 1]; ) s--;
        a.push({ children: [], index: 0 });
        var o,
          c = a[0];
        for (r = 0; r < s; r++) {
          for (n = 0; n < e[r]; n++) {
            for ((c = a.pop()).children[c.index] = t[i]; c.index > 0; )
              c = a.pop();
            for (c.index++, a.push(c); a.length <= r; )
              a.push((o = { children: [], index: 0 })),
                (c.children[c.index] = o.children),
                (c = o);
            i++;
          }
          r + 1 < s &&
            (a.push((o = { children: [], index: 0 })),
            (c.children[c.index] = o.children),
            (c = o));
        }
        return a[0].children;
      }
      function p(e, t, r) {
        return 64 * ((e.blocksPerLine + 1) * t + r);
      }
      function d(r, n, i, a, s, o, l, h, f, m = !1) {
        var d = i.mcusPerLine,
          v = i.progressive;
        const g = n;
        let y = 0,
          x = 0;
        function w() {
          if (x > 0) return (y >> --x) & 1;
          if (255 === (y = r[n++])) {
            var e = r[n++];
            if (e) {
              if (220 === e && m) {
                const e = c(r, (n += 2));
                if (((n += 2), e > 0 && e !== i.scanLines))
                  throw new DNLMarkerError(
                    "Found DNL marker (0xFFDC) while parsing scan data",
                    e
                  );
              } else if (217 === e) {
                if (m) {
                  const e = 8 * T;
                  if (e > 0 && e < i.scanLines / 10)
                    throw new DNLMarkerError(
                      "Found EOI marker (0xFFD9) while parsing scan data, possibly caused by incorrect `scanLines` parameter",
                      e
                    );
                }
                throw new EOIMarkerError(
                  "Found EOI marker (0xFFD9) while parsing scan data"
                );
              }
              throw new t(`unexpected marker ${((y << 8) | e).toString(16)}`);
            }
          }
          return (x = 7), y >>> 7;
        }
        function k(e) {
          for (var r = e; ; ) {
            switch (typeof (r = r[w()])) {
              case "number":
                return r;
              case "object":
                continue;
            }
            throw new t("invalid huffman sequence");
          }
        }
        function C(e) {
          for (var t = 0; e > 0; ) (t = (t << 1) | w()), e--;
          return t;
        }
        function P(e) {
          if (1 === e) return 1 === w() ? 1 : -1;
          var t = C(e);
          return t >= 1 << (e - 1) ? t : t + (-1 << e) + 1;
        }
        var I = 0;
        var M,
          S = 0;
        let T = 0;
        function A(e, t, r, n, i) {
          var a = r % d;
          T = ((r / d) | 0) * e.v + n;
          var s = a * e.h + i;
          t(e, p(e, T, s));
        }
        function D(e, t, r) {
          T = (r / e.blocksPerLine) | 0;
          var n = r % e.blocksPerLine;
          t(e, p(e, T, n));
        }
        var L,
          z,
          F,
          O,
          B,
          q,
          R = a.length;
        q = v
          ? 0 === o
            ? 0 === h
              ? function (e, t) {
                  var r = k(e.huffmanTableDC),
                    n = 0 === r ? 0 : P(r) << f;
                  e.blockData[t] = e.pred += n;
                }
              : function (e, t) {
                  e.blockData[t] |= w() << f;
                }
            : 0 === h
            ? function (t, r) {
                if (I > 0) I--;
                else
                  for (var n = o, i = l; n <= i; ) {
                    var a = k(t.huffmanTableAC),
                      s = 15 & a,
                      c = a >> 4;
                    if (0 !== s) {
                      var h = e[(n += c)];
                      (t.blockData[r + h] = P(s) * (1 << f)), n++;
                    } else {
                      if (c < 15) {
                        I = C(c) + (1 << c) - 1;
                        break;
                      }
                      n += 16;
                    }
                  }
              }
            : function (r, n) {
                for (var i, a, s = o, c = l, h = 0; s <= c; ) {
                  const o = n + e[s],
                    c = r.blockData[o] < 0 ? -1 : 1;
                  switch (S) {
                    case 0:
                      if (
                        ((h = (a = k(r.huffmanTableAC)) >> 4),
                        0 == (i = 15 & a))
                      )
                        h < 15
                          ? ((I = C(h) + (1 << h)), (S = 4))
                          : ((h = 16), (S = 1));
                      else {
                        if (1 !== i) throw new t("invalid ACn encoding");
                        (M = P(i)), (S = h ? 2 : 3);
                      }
                      continue;
                    case 1:
                    case 2:
                      r.blockData[o]
                        ? (r.blockData[o] += c * (w() << f))
                        : 0 == --h && (S = 2 === S ? 3 : 0);
                      break;
                    case 3:
                      r.blockData[o]
                        ? (r.blockData[o] += c * (w() << f))
                        : ((r.blockData[o] = M << f), (S = 0));
                      break;
                    case 4:
                      r.blockData[o] && (r.blockData[o] += c * (w() << f));
                  }
                  s++;
                }
                4 === S && 0 == --I && (S = 0);
              }
          : function (t, r) {
              var n = k(t.huffmanTableDC),
                i = 0 === n ? 0 : P(n);
              t.blockData[r] = t.pred += i;
              for (var a = 1; a < 64; ) {
                var s = k(t.huffmanTableAC),
                  o = 15 & s,
                  c = s >> 4;
                if (0 !== o) {
                  var l = e[(a += c)];
                  (t.blockData[r + l] = P(o)), a++;
                } else {
                  if (c < 15) break;
                  a += 16;
                }
              }
            };
        var E,
          U,
          X,
          H,
          J = 0;
        for (
          U =
            1 === R
              ? a[0].blocksPerLine * a[0].blocksPerColumn
              : d * i.mcusPerColumn;
          J <= U;

        ) {
          var _ = s ? Math.min(U - J, s) : U;
          if (_ > 0) {
            for (z = 0; z < R; z++) a[z].pred = 0;
            if (((I = 0), 1 === R))
              for (L = a[0], B = 0; B < _; B++) D(L, q, J), J++;
            else
              for (B = 0; B < _; B++) {
                for (z = 0; z < R; z++)
                  for (X = (L = a[z]).h, H = L.v, F = 0; F < H; F++)
                    for (O = 0; O < X; O++) A(L, q, J, F, O);
                J++;
              }
          }
          if (((x = 0), !(E = b(r, n)))) break;
          if (E.invalid) {
            u(
              `decodeScan - ${
                _ > 0 ? "unexpected" : "excessive"
              } MCU data, current marker is: ${E.invalid}`
            ),
              (n = E.offset);
          }
          if (!(E.marker >= 65488 && E.marker <= 65495)) break;
          n += 2;
        }
        return n - g;
      }
      function v(e, c, f) {
        var u,
          m,
          p,
          d,
          v,
          g,
          b,
          y,
          x,
          w,
          k,
          C,
          P,
          I,
          M,
          S,
          T,
          A = e.quantizationTable,
          D = e.blockData;
        if (!A) throw new t("missing required Quantization Table.");
        for (var L = 0; L < 64; L += 8)
          (x = D[c + L]),
            (w = D[c + L + 1]),
            (k = D[c + L + 2]),
            (C = D[c + L + 3]),
            (P = D[c + L + 4]),
            (I = D[c + L + 5]),
            (M = D[c + L + 6]),
            (S = D[c + L + 7]),
            (x *= A[L]),
            0 != (w | k | C | P | I | M | S)
              ? ((w *= A[L + 1]),
                (k *= A[L + 2]),
                (C *= A[L + 3]),
                (P *= A[L + 4]),
                (I *= A[L + 5]),
                (M *= A[L + 6]),
                (S *= A[L + 7]),
                (m =
                  (u =
                    ((u = (l * x + 128) >> 8) + (m = (l * P + 128) >> 8) + 1) >>
                    1) - m),
                (T = ((p = k) * o + (d = M) * s + 128) >> 8),
                (p = (p * s - d * o + 128) >> 8),
                (b =
                  (v =
                    ((v = (h * (w - S) + 128) >> 8) + (b = I << 4) + 1) >> 1) -
                  b),
                (g =
                  (y =
                    ((y = (h * (w + S) + 128) >> 8) + (g = C << 4) + 1) >> 1) -
                  g),
                (d = (u = (u + (d = T) + 1) >> 1) - d),
                (p = (m = (m + p + 1) >> 1) - p),
                (T = (v * a + y * i + 2048) >> 12),
                (v = (v * i - y * a + 2048) >> 12),
                (y = T),
                (T = (g * n + b * r + 2048) >> 12),
                (g = (g * r - b * n + 2048) >> 12),
                (b = T),
                (f[L] = u + y),
                (f[L + 7] = u - y),
                (f[L + 1] = m + b),
                (f[L + 6] = m - b),
                (f[L + 2] = p + g),
                (f[L + 5] = p - g),
                (f[L + 3] = d + v),
                (f[L + 4] = d - v))
              : ((T = (l * x + 512) >> 10),
                (f[L] = T),
                (f[L + 1] = T),
                (f[L + 2] = T),
                (f[L + 3] = T),
                (f[L + 4] = T),
                (f[L + 5] = T),
                (f[L + 6] = T),
                (f[L + 7] = T));
        for (var z = 0; z < 8; ++z)
          (x = f[z]),
            0 !=
            ((w = f[z + 8]) |
              (k = f[z + 16]) |
              (C = f[z + 24]) |
              (P = f[z + 32]) |
              (I = f[z + 40]) |
              (M = f[z + 48]) |
              (S = f[z + 56]))
              ? ((m =
                  (u =
                    4112 +
                    (((u = (l * x + 2048) >> 12) +
                      (m = (l * P + 2048) >> 12) +
                      1) >>
                      1)) - m),
                (T = ((p = k) * o + (d = M) * s + 2048) >> 12),
                (p = (p * s - d * o + 2048) >> 12),
                (d = T),
                (b =
                  (v = ((v = (h * (w - S) + 2048) >> 12) + (b = I) + 1) >> 1) -
                  b),
                (g =
                  (y = ((y = (h * (w + S) + 2048) >> 12) + (g = C) + 1) >> 1) -
                  g),
                (T = (v * a + y * i + 2048) >> 12),
                (v = (v * i - y * a + 2048) >> 12),
                (y = T),
                (T = (g * n + b * r + 2048) >> 12),
                (g = (g * r - b * n + 2048) >> 12),
                (x = (u = (u + d + 1) >> 1) + y) < 16
                  ? (x = 0)
                  : x >= 4080
                  ? (x = 255)
                  : (x >>= 4),
                (w = (m = (m + p + 1) >> 1) + (b = T)) < 16
                  ? (w = 0)
                  : w >= 4080
                  ? (w = 255)
                  : (w >>= 4),
                (k = (p = m - p) + g) < 16
                  ? (k = 0)
                  : k >= 4080
                  ? (k = 255)
                  : (k >>= 4),
                (C = (d = u - d) + v) < 16
                  ? (C = 0)
                  : C >= 4080
                  ? (C = 255)
                  : (C >>= 4),
                (P = d - v) < 16 ? (P = 0) : P >= 4080 ? (P = 255) : (P >>= 4),
                (I = p - g) < 16 ? (I = 0) : I >= 4080 ? (I = 255) : (I >>= 4),
                (M = m - b) < 16 ? (M = 0) : M >= 4080 ? (M = 255) : (M >>= 4),
                (S = u - y) < 16 ? (S = 0) : S >= 4080 ? (S = 255) : (S >>= 4),
                (D[c + z] = x),
                (D[c + z + 8] = w),
                (D[c + z + 16] = k),
                (D[c + z + 24] = C),
                (D[c + z + 32] = P),
                (D[c + z + 40] = I),
                (D[c + z + 48] = M),
                (D[c + z + 56] = S))
              : ((T =
                  (T = (l * x + 8192) >> 14) < -2040
                    ? 0
                    : T >= 2024
                    ? 255
                    : (T + 2056) >> 4),
                (D[c + z] = T),
                (D[c + z + 8] = T),
                (D[c + z + 16] = T),
                (D[c + z + 24] = T),
                (D[c + z + 32] = T),
                (D[c + z + 40] = T),
                (D[c + z + 48] = T),
                (D[c + z + 56] = T));
      }
      function g(e, t) {
        for (
          var r = t.blocksPerLine,
            n = t.blocksPerColumn,
            i = new Int16Array(64),
            a = 0;
          a < n;
          a++
        )
          for (var s = 0; s < r; s++) {
            v(t, p(t, a, s), i);
          }
        return t.blockData;
      }
      function b(e, t, r = t) {
        const n = e.length - 1;
        var i = r < t ? r : t;
        if (t >= n) return null;
        var a = c(e, t);
        if (a >= 65472 && a <= 65534)
          return { invalid: null, marker: a, offset: t };
        for (var s = c(e, i); !(s >= 65472 && s <= 65534); ) {
          if (++i >= n) return null;
          s = c(e, i);
        }
        return { invalid: a.toString(16), marker: s, offset: i };
      }
      return (
        (f.prototype = {
          parse(r, { dnlScanLines: n = null } = {}) {
            function i() {
              const e = c(r, l);
              let t = (l += 2) + e - 2;
              var n = b(r, t, l);
              n &&
                n.invalid &&
                (u(
                  "readDataBlock - incorrect length, current marker is: " +
                    n.invalid
                ),
                (t = n.offset));
              var i = r.subarray(l, t);
              return (l += i.length), i;
            }
            function a(e) {
              for (
                var t = Math.ceil(e.samplesPerLine / 8 / e.maxH),
                  r = Math.ceil(e.scanLines / 8 / e.maxV),
                  n = 0;
                n < e.components.length;
                n++
              ) {
                X = e.components[n];
                var i = Math.ceil(
                    (Math.ceil(e.samplesPerLine / 8) * X.h) / e.maxH
                  ),
                  a = Math.ceil((Math.ceil(e.scanLines / 8) * X.v) / e.maxV),
                  s = t * X.h,
                  o = 64 * (r * X.v) * (s + 1);
                (X.blockData = new Int16Array(o)),
                  (X.blocksPerLine = i),
                  (X.blocksPerColumn = a);
              }
              (e.mcusPerLine = t), (e.mcusPerColumn = r);
            }
            var s,
              o,
              l = 0,
              h = null,
              f = null;
            let p = 0;
            var v = [],
              y = [],
              x = [];
            let w = c(r, l);
            if (((l += 2), 65496 !== w)) throw new t("SOI not found");
            (w = c(r, l)), (l += 2);
            e: for (; 65497 !== w; ) {
              var k, C, P;
              switch (w) {
                case 65504:
                case 65505:
                case 65506:
                case 65507:
                case 65508:
                case 65509:
                case 65510:
                case 65511:
                case 65512:
                case 65513:
                case 65514:
                case 65515:
                case 65516:
                case 65517:
                case 65518:
                case 65519:
                case 65534:
                  var I = i();
                  65504 === w &&
                    74 === I[0] &&
                    70 === I[1] &&
                    73 === I[2] &&
                    70 === I[3] &&
                    0 === I[4] &&
                    (h = {
                      version: { major: I[5], minor: I[6] },
                      densityUnits: I[7],
                      xDensity: (I[8] << 8) | I[9],
                      yDensity: (I[10] << 8) | I[11],
                      thumbWidth: I[12],
                      thumbHeight: I[13],
                      thumbData: I.subarray(14, 14 + 3 * I[12] * I[13]),
                    }),
                    65518 === w &&
                      65 === I[0] &&
                      100 === I[1] &&
                      111 === I[2] &&
                      98 === I[3] &&
                      101 === I[4] &&
                      (f = {
                        version: (I[5] << 8) | I[6],
                        flags0: (I[7] << 8) | I[8],
                        flags1: (I[9] << 8) | I[10],
                        transformCode: I[11],
                      });
                  break;
                case 65499:
                  for (var M = c(r, l) + (l += 2) - 2; l < M; ) {
                    var S = r[l++],
                      T = new Uint16Array(64);
                    if (S >> 4 == 0) for (C = 0; C < 64; C++) T[e[C]] = r[l++];
                    else {
                      if (S >> 4 != 1) throw new t("DQT - invalid table spec");
                      for (C = 0; C < 64; C++) (T[e[C]] = c(r, l)), (l += 2);
                    }
                    v[15 & S] = T;
                  }
                  break;
                case 65472:
                case 65473:
                case 65474:
                  if (s) throw new t("Only single frame JPEGs supported");
                  (l += 2),
                    ((s = {}).extended = 65473 === w),
                    (s.progressive = 65474 === w),
                    (s.precision = r[l++]);
                  const g = c(r, l);
                  (l += 2),
                    (s.scanLines = n || g),
                    (s.samplesPerLine = c(r, l)),
                    (l += 2),
                    (s.components = []),
                    (s.componentIds = {});
                  var A,
                    D = r[l++],
                    L = 0,
                    z = 0;
                  for (k = 0; k < D; k++) {
                    A = r[l];
                    var F = r[l + 1] >> 4,
                      O = 15 & r[l + 1];
                    L < F && (L = F), z < O && (z = O);
                    var B = r[l + 2];
                    (P = s.components.push({
                      h: F,
                      v: O,
                      quantizationId: B,
                      quantizationTable: null,
                    })),
                      (s.componentIds[A] = P - 1),
                      (l += 3);
                  }
                  (s.maxH = L), (s.maxV = z), a(s);
                  break;
                case 65476:
                  const V = c(r, l);
                  for (l += 2, k = 2; k < V; ) {
                    var q = r[l++],
                      R = new Uint8Array(16),
                      E = 0;
                    for (C = 0; C < 16; C++, l++) E += R[C] = r[l];
                    var U = new Uint8Array(E);
                    for (C = 0; C < E; C++, l++) U[C] = r[l];
                    (k += 17 + E), ((q >> 4 == 0 ? x : y)[15 & q] = m(R, U));
                  }
                  break;
                case 65501:
                  (o = c(r, (l += 2))), (l += 2);
                  break;
                case 65498:
                  const Z = 1 == ++p && !n;
                  l += 2;
                  var X,
                    H = r[l++],
                    J = [];
                  for (k = 0; k < H; k++) {
                    const e = r[l++];
                    var _ = s.componentIds[e];
                    (X = s.components[_]).index = e;
                    var N = r[l++];
                    (X.huffmanTableDC = x[N >> 4]),
                      (X.huffmanTableAC = y[15 & N]),
                      J.push(X);
                  }
                  var Y = r[l++],
                    G = r[l++],
                    W = r[l++];
                  try {
                    var Q = d(r, l, s, J, o, Y, G, W >> 4, 15 & W, Z);
                    l += Q;
                  } catch (e) {
                    if (e instanceof DNLMarkerError)
                      return (
                        u(
                          `${e.message} -- attempting to re-parse the JPEG image.`
                        ),
                        this.parse(r, { dnlScanLines: e.scanLines })
                      );
                    if (e instanceof EOIMarkerError) {
                      u(`${e.message} -- ignoring the rest of the image data.`);
                      break e;
                    }
                    throw e;
                  }
                  break;
                case 65500:
                  l += 4;
                  break;
                case 0xfff6:
                  l += 3;
                  break;
                case 65535:
                  255 !== r[l] && l--;
                  break;
                default:
                  const j = b(r, l - 2, l - 3);
                  if (j && j.invalid) {
                    u(
                      "JpegImage.parse - unexpected data, current marker is: " +
                        j.invalid
                    ),
                      (l = j.offset);
                    break;
                  }
                  if (l >= r.length - 1) {
                    u(
                      "JpegImage.parse - reached the end of the image data without finding an EOI marker (0xFFD9)."
                    );
                    break e;
                  }
                  throw new t(
                    "JpegImage.parse - unknown marker: " + w.toString(16)
                  );
              }
              (w = c(r, l)), (l += 2);
            }
            for (
              this.width = s.samplesPerLine,
                this.height = s.scanLines,
                this.jfif = h,
                this.adobe = f,
                this.components = [],
                k = 0;
              k < s.components.length;
              k++
            ) {
              var V = v[(X = s.components[k]).quantizationId];
              V && (X.quantizationTable = V),
                this.components.push({
                  index: X.index,
                  output: g(0, X),
                  scaleX: X.h / s.maxH,
                  scaleY: X.v / s.maxV,
                  blocksPerLine: X.blocksPerLine,
                  blocksPerColumn: X.blocksPerColumn,
                });
            }
            this.numComponents = this.components.length;
          },
          _getLinearizedBlockData(e, t, r = !1) {
            var n,
              i,
              a,
              s,
              o,
              c,
              l,
              h,
              f,
              u,
              m,
              p = this.width / e,
              d = this.height / t,
              v = 0,
              g = this.components.length,
              b = e * t * g,
              y = new Uint8ClampedArray(b),
              x = new Uint32Array(e);
            let w;
            for (l = 0; l < g; l++) {
              if (
                ((i = (n = this.components[l]).scaleX * p),
                (a = n.scaleY * d),
                (v = l),
                (m = n.output),
                (s = (n.blocksPerLine + 1) << 3),
                i !== w)
              ) {
                for (o = 0; o < e; o++)
                  (h = 0 | (o * i)), (x[o] = ((4294967288 & h) << 3) | (7 & h));
                w = i;
              }
              for (c = 0; c < t; c++)
                for (
                  u = (s * (4294967288 & (h = 0 | (c * a)))) | ((7 & h) << 3),
                    o = 0;
                  o < e;
                  o++
                )
                  (y[v] = m[u + x[o]]), (v += g);
            }
            let k = this._decodeTransform;
            if (
              (r ||
                4 !== g ||
                k ||
                (k = new Int32Array([
                  -256, 255, -256, 255, -256, 255, -256, 255,
                ])),
              k)
            )
              for (l = 0; l < b; )
                for (h = 0, f = 0; h < g; h++, l++, f += 2)
                  y[l] = ((y[l] * k[f]) >> 8) + k[f + 1];
            return y;
          },
          get _isColorConversionNeeded() {
            return this.adobe
              ? !!this.adobe.transformCode
              : 3 === this.numComponents
              ? 0 !== this._colorTransform &&
                (82 !== this.components[0].index ||
                  71 !== this.components[1].index ||
                  66 !== this.components[2].index)
              : 1 === this._colorTransform;
          },
          _convertYccToRgb: function (e) {
            for (var t, r, n, i = 0, a = e.length; i < a; i += 3)
              (t = e[i]),
                (r = e[i + 1]),
                (n = e[i + 2]),
                (e[i] = t - 179.456 + 1.402 * n),
                (e[i + 1] = t + 135.459 - 0.344 * r - 0.714 * n),
                (e[i + 2] = t - 226.816 + 1.772 * r);
            return e;
          },
          _convertYcckToRgb: function (e) {
            for (var t, r, n, i, a = 0, s = 0, o = e.length; s < o; s += 4)
              (t = e[s]),
                (r = e[s + 1]),
                (n = e[s + 2]),
                (i = e[s + 3]),
                (e[a++] =
                  r *
                    (-660635669420364e-19 * r +
                      0.000437130475926232 * n -
                      54080610064599e-18 * t +
                      0.00048449797120281 * i -
                      0.154362151871126) -
                  122.67195406894 +
                  n *
                    (-0.000957964378445773 * n +
                      0.000817076911346625 * t -
                      0.00477271405408747 * i +
                      1.53380253221734) +
                  t *
                    (0.000961250184130688 * t -
                      0.00266257332283933 * i +
                      0.48357088451265) +
                  i * (-0.000336197177618394 * i + 0.484791561490776)),
                (e[a++] =
                  107.268039397724 +
                  r *
                    (219927104525741e-19 * r -
                      0.000640992018297945 * n +
                      0.000659397001245577 * t +
                      0.000426105652938837 * i -
                      0.176491792462875) +
                  n *
                    (-0.000778269941513683 * n +
                      0.00130872261408275 * t +
                      0.000770482631801132 * i -
                      0.151051492775562) +
                  t *
                    (0.00126935368114843 * t -
                      0.00265090189010898 * i +
                      0.25802910206845) +
                  i * (-0.000318913117588328 * i - 0.213742400323665)),
                (e[a++] =
                  r *
                    (-0.000570115196973677 * r -
                      263409051004589e-19 * n +
                      0.0020741088115012 * t -
                      0.00288260236853442 * i +
                      0.814272968359295) -
                  20.810012546947 +
                  n *
                    (-153496057440975e-19 * n -
                      0.000132689043961446 * t +
                      0.000560833691242812 * i -
                      0.195152027534049) +
                  t *
                    (0.00174418132927582 * t -
                      0.00255243321439347 * i +
                      0.116935020465145) +
                  i * (-0.000343531996510555 * i + 0.24165260232407));
            return e.subarray(0, a);
          },
          _convertYcckToCmyk: function (e) {
            for (var t, r, n, i = 0, a = e.length; i < a; i += 4)
              (t = e[i]),
                (r = e[i + 1]),
                (n = e[i + 2]),
                (e[i] = 434.456 - t - 1.402 * n),
                (e[i + 1] = 119.541 - t + 0.344 * r + 0.714 * n),
                (e[i + 2] = 481.816 - t - 1.772 * r);
            return e;
          },
          _convertCmykToRgb: function (e) {
            for (var t, r, n, i, a = 0, s = 0, o = e.length; s < o; s += 4)
              (t = e[s]),
                (r = e[s + 1]),
                (n = e[s + 2]),
                (i = e[s + 3]),
                (e[a++] =
                  255 +
                  t *
                    (-6747147073602441e-20 * t +
                      0.0008379262121013727 * r +
                      0.0002894718188643294 * n +
                      0.003264231057537806 * i -
                      1.1185611867203937) +
                  r *
                    (26374107616089405e-21 * r -
                      8626949158638572e-20 * n -
                      0.0002748769067499491 * i -
                      0.02155688794978967) +
                  n *
                    (-3878099212869363e-20 * n -
                      0.0003267808279485286 * i +
                      0.0686742238595345) -
                  i * (0.0003361971776183937 * i + 0.7430659151342254)),
                (e[a++] =
                  255 +
                  t *
                    (0.00013596372813588848 * t +
                      0.000924537132573585 * r +
                      0.00010567359618683593 * n +
                      0.0004791864687436512 * i -
                      0.3109689587515875) +
                  r *
                    (-0.00023545346108370344 * r +
                      0.0002702845253534714 * n +
                      0.0020200308977307156 * i -
                      0.7488052167015494) +
                  n *
                    (6834815998235662e-20 * n +
                      0.00015168452363460973 * i -
                      0.09751927774728933) -
                  i * (0.0003189131175883281 * i + 0.7364883807733168)),
                (e[a++] =
                  255 +
                  t *
                    (13598650411385307e-21 * t +
                      0.00012423956175490851 * r +
                      0.0004751985097583589 * n -
                      36729317476630422e-22 * i -
                      0.05562186980264034) +
                  r *
                    (0.00016141380598724676 * r +
                      0.0009692239130725186 * n +
                      0.0007782692450036253 * i -
                      0.44015232367526463) +
                  n *
                    (5.068882914068769e-7 * n +
                      0.0017778369011375071 * i -
                      0.7591454649749609) -
                  i * (0.0003435319965105553 * i + 0.7063770186160144));
            return e.subarray(0, a);
          },
          getData({
            width: e,
            height: r,
            forceRGB: n = !1,
            isSourcePDF: i = !1,
          }) {
            if (this.numComponents > 4) throw new t("Unsupported color mode");
            var a = this._getLinearizedBlockData(e, r, i);
            if (1 === this.numComponents && n) {
              for (
                var s = a.length,
                  o = new Uint8ClampedArray(3 * s),
                  c = 0,
                  l = 0;
                l < s;
                l++
              ) {
                var h = a[l];
                (o[c++] = h), (o[c++] = h), (o[c++] = h);
              }
              return o;
            }
            if (3 === this.numComponents && this._isColorConversionNeeded)
              return this._convertYccToRgb(a);
            if (4 === this.numComponents) {
              if (this._isColorConversionNeeded)
                return n
                  ? this._convertYcckToRgb(a)
                  : this._convertYcckToCmyk(a);
              if (n) return this._convertCmykToRgb(a);
            }
            return a;
          },
        }),
        f
      );
    })(),
    n = (function () {
      var e = [
        { qe: 22017, nmps: 1, nlps: 1, switchFlag: 1 },
        { qe: 13313, nmps: 2, nlps: 6, switchFlag: 0 },
        { qe: 6145, nmps: 3, nlps: 9, switchFlag: 0 },
        { qe: 2753, nmps: 4, nlps: 12, switchFlag: 0 },
        { qe: 1313, nmps: 5, nlps: 29, switchFlag: 0 },
        { qe: 545, nmps: 38, nlps: 33, switchFlag: 0 },
        { qe: 22017, nmps: 7, nlps: 6, switchFlag: 1 },
        { qe: 21505, nmps: 8, nlps: 14, switchFlag: 0 },
        { qe: 18433, nmps: 9, nlps: 14, switchFlag: 0 },
        { qe: 14337, nmps: 10, nlps: 14, switchFlag: 0 },
        { qe: 12289, nmps: 11, nlps: 17, switchFlag: 0 },
        { qe: 9217, nmps: 12, nlps: 18, switchFlag: 0 },
        { qe: 7169, nmps: 13, nlps: 20, switchFlag: 0 },
        { qe: 5633, nmps: 29, nlps: 21, switchFlag: 0 },
        { qe: 22017, nmps: 15, nlps: 14, switchFlag: 1 },
        { qe: 21505, nmps: 16, nlps: 14, switchFlag: 0 },
        { qe: 20737, nmps: 17, nlps: 15, switchFlag: 0 },
        { qe: 18433, nmps: 18, nlps: 16, switchFlag: 0 },
        { qe: 14337, nmps: 19, nlps: 17, switchFlag: 0 },
        { qe: 13313, nmps: 20, nlps: 18, switchFlag: 0 },
        { qe: 12289, nmps: 21, nlps: 19, switchFlag: 0 },
        { qe: 10241, nmps: 22, nlps: 19, switchFlag: 0 },
        { qe: 9217, nmps: 23, nlps: 20, switchFlag: 0 },
        { qe: 8705, nmps: 24, nlps: 21, switchFlag: 0 },
        { qe: 7169, nmps: 25, nlps: 22, switchFlag: 0 },
        { qe: 6145, nmps: 26, nlps: 23, switchFlag: 0 },
        { qe: 5633, nmps: 27, nlps: 24, switchFlag: 0 },
        { qe: 5121, nmps: 28, nlps: 25, switchFlag: 0 },
        { qe: 4609, nmps: 29, nlps: 26, switchFlag: 0 },
        { qe: 4353, nmps: 30, nlps: 27, switchFlag: 0 },
        { qe: 2753, nmps: 31, nlps: 28, switchFlag: 0 },
        { qe: 2497, nmps: 32, nlps: 29, switchFlag: 0 },
        { qe: 2209, nmps: 33, nlps: 30, switchFlag: 0 },
        { qe: 1313, nmps: 34, nlps: 31, switchFlag: 0 },
        { qe: 1089, nmps: 35, nlps: 32, switchFlag: 0 },
        { qe: 673, nmps: 36, nlps: 33, switchFlag: 0 },
        { qe: 545, nmps: 37, nlps: 34, switchFlag: 0 },
        { qe: 321, nmps: 38, nlps: 35, switchFlag: 0 },
        { qe: 273, nmps: 39, nlps: 36, switchFlag: 0 },
        { qe: 133, nmps: 40, nlps: 37, switchFlag: 0 },
        { qe: 73, nmps: 41, nlps: 38, switchFlag: 0 },
        { qe: 37, nmps: 42, nlps: 39, switchFlag: 0 },
        { qe: 21, nmps: 43, nlps: 40, switchFlag: 0 },
        { qe: 9, nmps: 44, nlps: 41, switchFlag: 0 },
        { qe: 5, nmps: 45, nlps: 42, switchFlag: 0 },
        { qe: 1, nmps: 45, nlps: 43, switchFlag: 0 },
        { qe: 22017, nmps: 46, nlps: 46, switchFlag: 0 },
      ];
      function t(e, t, r) {
        (this.data = e),
          (this.bp = t),
          (this.dataEnd = r),
          (this.chigh = e[t]),
          (this.clow = 0),
          this.byteIn(),
          (this.chigh = ((this.chigh << 7) & 65535) | ((this.clow >> 9) & 127)),
          (this.clow = (this.clow << 7) & 65535),
          (this.ct -= 7),
          (this.a = 32768);
      }
      return (
        (t.prototype = {
          byteIn: function () {
            var e = this.data,
              t = this.bp;
            255 === e[t]
              ? e[t + 1] > 143
                ? ((this.clow += 65280), (this.ct = 8))
                : (t++, (this.clow += e[t] << 9), (this.ct = 7), (this.bp = t))
              : (t++,
                (this.clow += t < this.dataEnd ? e[t] << 8 : 65280),
                (this.ct = 8),
                (this.bp = t));
            this.clow > 65535 &&
              ((this.chigh += this.clow >> 16), (this.clow &= 65535));
          },
          readBit: function (t, r) {
            var n,
              i = t[r] >> 1,
              a = 1 & t[r],
              s = e[i],
              o = s.qe,
              c = this.a - o;
            if (this.chigh < o)
              c < o
                ? ((c = o), (n = a), (i = s.nmps))
                : ((c = o),
                  (n = 1 ^ a),
                  1 === s.switchFlag && (a = n),
                  (i = s.nlps));
            else {
              if (((this.chigh -= o), 0 != (32768 & c))) return (this.a = c), a;
              c < o
                ? ((n = 1 ^ a), 1 === s.switchFlag && (a = n), (i = s.nlps))
                : ((n = a), (i = s.nmps));
            }
            do {
              0 === this.ct && this.byteIn(),
                (c <<= 1),
                (this.chigh =
                  ((this.chigh << 1) & 65535) | ((this.clow >> 15) & 1)),
                (this.clow = (this.clow << 1) & 65535),
                this.ct--;
            } while (0 == (32768 & c));
            return (this.a = c), (t[r] = (i << 1) | a), n;
          },
        }),
        t
      );
    })(),
    i = (function () {
      var e = { LL: 0, LH: 1, HL: 1, HH: 2 };
      function t() {
        this.failOnCorruptedImage = !1;
      }
      function r(e, t) {
        (e.x0 = Math.ceil(t.XOsiz / e.XRsiz)),
          (e.x1 = Math.ceil(t.Xsiz / e.XRsiz)),
          (e.y0 = Math.ceil(t.YOsiz / e.YRsiz)),
          (e.y1 = Math.ceil(t.Ysiz / e.YRsiz)),
          (e.width = e.x1 - e.x0),
          (e.height = e.y1 - e.y0);
      }
      function i(e, t) {
        for (
          var r,
            n = e.SIZ,
            i = [],
            a = Math.ceil((n.Xsiz - n.XTOsiz) / n.XTsiz),
            s = Math.ceil((n.Ysiz - n.YTOsiz) / n.YTsiz),
            o = 0;
          o < s;
          o++
        )
          for (var c = 0; c < a; c++)
            ((r = {}).tx0 = Math.max(n.XTOsiz + c * n.XTsiz, n.XOsiz)),
              (r.ty0 = Math.max(n.YTOsiz + o * n.YTsiz, n.YOsiz)),
              (r.tx1 = Math.min(n.XTOsiz + (c + 1) * n.XTsiz, n.Xsiz)),
              (r.ty1 = Math.min(n.YTOsiz + (o + 1) * n.YTsiz, n.Ysiz)),
              (r.width = r.tx1 - r.tx0),
              (r.height = r.ty1 - r.ty0),
              (r.components = []),
              i.push(r);
        e.tiles = i;
        for (var l = 0, h = n.Csiz; l < h; l++)
          for (var f = t[l], u = 0, m = i.length; u < m; u++) {
            var p = {};
            (r = i[u]),
              (p.tcx0 = Math.ceil(r.tx0 / f.XRsiz)),
              (p.tcy0 = Math.ceil(r.ty0 / f.YRsiz)),
              (p.tcx1 = Math.ceil(r.tx1 / f.XRsiz)),
              (p.tcy1 = Math.ceil(r.ty1 / f.YRsiz)),
              (p.width = p.tcx1 - p.tcx0),
              (p.height = p.tcy1 - p.tcy0),
              (r.components[l] = p);
          }
      }
      function a(e, t, r) {
        var n = t.codingStyleParameters,
          i = {};
        return (
          n.entropyCoderWithCustomPrecincts
            ? ((i.PPx = n.precinctsSizes[r].PPx),
              (i.PPy = n.precinctsSizes[r].PPy))
            : ((i.PPx = 15), (i.PPy = 15)),
          (i.xcb_ =
            r > 0 ? Math.min(n.xcb, i.PPx - 1) : Math.min(n.xcb, i.PPx)),
          (i.ycb_ =
            r > 0 ? Math.min(n.ycb, i.PPy - 1) : Math.min(n.ycb, i.PPy)),
          i
        );
      }
      function o(e, t, r) {
        var n = 1 << r.PPx,
          i = 1 << r.PPy,
          a = 0 === t.resLevel,
          s = 1 << (r.PPx + (a ? 0 : -1)),
          o = 1 << (r.PPy + (a ? 0 : -1)),
          c =
            t.trx1 > t.trx0
              ? Math.ceil(t.trx1 / n) - Math.floor(t.trx0 / n)
              : 0,
          l =
            t.try1 > t.try0
              ? Math.ceil(t.try1 / i) - Math.floor(t.try0 / i)
              : 0,
          h = c * l;
        t.precinctParameters = {
          precinctWidth: n,
          precinctHeight: i,
          numprecinctswide: c,
          numprecinctshigh: l,
          numprecincts: h,
          precinctWidthInSubband: s,
          precinctHeightInSubband: o,
        };
      }
      function h(e, t, r) {
        var n,
          i,
          a,
          s,
          o = r.xcb_,
          c = r.ycb_,
          l = 1 << o,
          h = 1 << c,
          f = t.tbx0 >> o,
          u = t.tby0 >> c,
          m = (t.tbx1 + l - 1) >> o,
          p = (t.tby1 + h - 1) >> c,
          d = t.resolution.precinctParameters,
          v = [],
          g = [];
        for (i = u; i < p; i++)
          for (n = f; n < m; n++) {
            if (
              (((a = {
                cbx: n,
                cby: i,
                tbx0: l * n,
                tby0: h * i,
                tbx1: l * (n + 1),
                tby1: h * (i + 1),
              }).tbx0_ = Math.max(t.tbx0, a.tbx0)),
              (a.tby0_ = Math.max(t.tby0, a.tby0)),
              (a.tbx1_ = Math.min(t.tbx1, a.tbx1)),
              (a.tby1_ = Math.min(t.tby1, a.tby1)),
              (s =
                Math.floor((a.tbx0_ - t.tbx0) / d.precinctWidthInSubband) +
                Math.floor((a.tby0_ - t.tby0) / d.precinctHeightInSubband) *
                  d.numprecinctswide),
              (a.precinctNumber = s),
              (a.subbandType = t.type),
              (a.Lblock = 3),
              !(a.tbx1_ <= a.tbx0_ || a.tby1_ <= a.tby0_))
            ) {
              v.push(a);
              var b = g[s];
              void 0 !== b
                ? (n < b.cbxMin
                    ? (b.cbxMin = n)
                    : n > b.cbxMax && (b.cbxMax = n),
                  i < b.cbyMin
                    ? (b.cbxMin = i)
                    : i > b.cbyMax && (b.cbyMax = i))
                : (g[s] = b = { cbxMin: n, cbyMin: i, cbxMax: n, cbyMax: i }),
                (a.precinct = b);
            }
          }
        (t.codeblockParameters = {
          codeblockWidth: o,
          codeblockHeight: c,
          numcodeblockwide: m - f + 1,
          numcodeblockhigh: p - u + 1,
        }),
          (t.codeblocks = v),
          (t.precincts = g);
      }
      function p(e, t, r) {
        for (var n = [], i = e.subbands, a = 0, s = i.length; a < s; a++)
          for (var o = i[a].codeblocks, c = 0, l = o.length; c < l; c++) {
            var h = o[c];
            h.precinctNumber === t && n.push(h);
          }
        return { layerNumber: r, codeblocks: n };
      }
      function d(e) {
        for (
          var t = e.SIZ,
            r = e.currentTile.index,
            n = e.tiles[r],
            i = n.codingStyleDefaultParameters.layersCount,
            a = t.Csiz,
            s = 0,
            o = 0;
          o < a;
          o++
        )
          s = Math.max(
            s,
            n.components[o].codingStyleParameters.decompositionLevelsCount
          );
        var c = 0,
          l = 0,
          h = 0,
          u = 0;
        this.nextPacket = function () {
          for (; c < i; c++) {
            for (; l <= s; l++) {
              for (; h < a; h++) {
                var e = n.components[h];
                if (!(l > e.codingStyleParameters.decompositionLevelsCount)) {
                  for (
                    var t = e.resolutions[l],
                      r = t.precinctParameters.numprecincts;
                    u < r;

                  ) {
                    var o = p(t, u, c);
                    return u++, o;
                  }
                  u = 0;
                }
              }
              h = 0;
            }
            l = 0;
          }
          f("JPX Error: Out of packets");
        };
      }
      function v(e) {
        for (
          var t = e.SIZ,
            r = e.currentTile.index,
            n = e.tiles[r],
            i = n.codingStyleDefaultParameters.layersCount,
            a = t.Csiz,
            s = 0,
            o = 0;
          o < a;
          o++
        )
          s = Math.max(
            s,
            n.components[o].codingStyleParameters.decompositionLevelsCount
          );
        var c = 0,
          l = 0,
          h = 0,
          u = 0;
        this.nextPacket = function () {
          for (; c <= s; c++) {
            for (; l < i; l++) {
              for (; h < a; h++) {
                var e = n.components[h];
                if (!(c > e.codingStyleParameters.decompositionLevelsCount)) {
                  for (
                    var t = e.resolutions[c],
                      r = t.precinctParameters.numprecincts;
                    u < r;

                  ) {
                    var o = p(t, u, l);
                    return u++, o;
                  }
                  u = 0;
                }
              }
              h = 0;
            }
            l = 0;
          }
          f("JPX Error: Out of packets");
        };
      }
      function g(e) {
        var t,
          r,
          n,
          i,
          a = e.SIZ,
          s = e.currentTile.index,
          o = e.tiles[s],
          c = o.codingStyleDefaultParameters.layersCount,
          l = a.Csiz,
          h = 0;
        for (n = 0; n < l; n++) {
          var u = o.components[n];
          h = Math.max(h, u.codingStyleParameters.decompositionLevelsCount);
        }
        var m = new Int32Array(h + 1);
        for (r = 0; r <= h; ++r) {
          var d = 0;
          for (n = 0; n < l; ++n) {
            var v = o.components[n].resolutions;
            r < v.length &&
              (d = Math.max(d, v[r].precinctParameters.numprecincts));
          }
          m[r] = d;
        }
        (t = 0),
          (r = 0),
          (n = 0),
          (i = 0),
          (this.nextPacket = function () {
            for (; r <= h; r++) {
              for (; i < m[r]; i++) {
                for (; n < l; n++) {
                  var e = o.components[n];
                  if (!(r > e.codingStyleParameters.decompositionLevelsCount)) {
                    var a = e.resolutions[r],
                      s = a.precinctParameters.numprecincts;
                    if (!(i >= s)) {
                      for (; t < c; ) {
                        var u = p(a, i, t);
                        return t++, u;
                      }
                      t = 0;
                    }
                  }
                }
                n = 0;
              }
              i = 0;
            }
            f("JPX Error: Out of packets");
          });
      }
      function b(e) {
        var t = e.SIZ,
          r = e.currentTile.index,
          n = e.tiles[r],
          i = n.codingStyleDefaultParameters.layersCount,
          a = t.Csiz,
          s = w(n),
          o = s,
          c = 0,
          l = 0,
          h = 0,
          u = 0,
          m = 0;
        this.nextPacket = function () {
          for (; m < o.maxNumHigh; m++) {
            for (; u < o.maxNumWide; u++) {
              for (; h < a; h++) {
                for (
                  var e = n.components[h],
                    t = e.codingStyleParameters.decompositionLevelsCount;
                  l <= t;
                  l++
                ) {
                  var r = e.resolutions[l],
                    d = s.components[h].resolutions[l],
                    v = x(u, m, d, o, r);
                  if (null !== v) {
                    for (; c < i; ) {
                      var g = p(r, v, c);
                      return c++, g;
                    }
                    c = 0;
                  }
                }
                l = 0;
              }
              h = 0;
            }
            u = 0;
          }
          f("JPX Error: Out of packets");
        };
      }
      function y(e) {
        var t = e.SIZ,
          r = e.currentTile.index,
          n = e.tiles[r],
          i = n.codingStyleDefaultParameters.layersCount,
          a = t.Csiz,
          s = w(n),
          o = 0,
          c = 0,
          l = 0,
          h = 0,
          u = 0;
        this.nextPacket = function () {
          for (; l < a; ++l) {
            for (
              var e = n.components[l],
                t = s.components[l],
                r = e.codingStyleParameters.decompositionLevelsCount;
              u < t.maxNumHigh;
              u++
            ) {
              for (; h < t.maxNumWide; h++) {
                for (; c <= r; c++) {
                  var m = e.resolutions[c],
                    d = t.resolutions[c],
                    v = x(h, u, d, t, m);
                  if (null !== v) {
                    for (; o < i; ) {
                      var g = p(m, v, o);
                      return o++, g;
                    }
                    o = 0;
                  }
                }
                c = 0;
              }
              h = 0;
            }
            u = 0;
          }
          f("JPX Error: Out of packets");
        };
      }
      function x(e, t, r, n, i) {
        var a = e * n.minWidth,
          s = t * n.minHeight;
        if (a % r.width != 0 || s % r.height != 0) return null;
        var o = (s / r.width) * i.precinctParameters.numprecinctswide;
        return a / r.height + o;
      }
      function w(e) {
        for (
          var t = e.components.length,
            r = Number.MAX_VALUE,
            n = Number.MAX_VALUE,
            i = 0,
            a = 0,
            s = new Array(t),
            o = 0;
          o < t;
          o++
        ) {
          for (
            var c = e.components[o],
              l = c.codingStyleParameters.decompositionLevelsCount,
              h = new Array(l + 1),
              f = Number.MAX_VALUE,
              u = Number.MAX_VALUE,
              m = 0,
              p = 0,
              d = 1,
              v = l;
            v >= 0;
            --v
          ) {
            var g = c.resolutions[v],
              b = d * g.precinctParameters.precinctWidth,
              y = d * g.precinctParameters.precinctHeight;
            (f = Math.min(f, b)),
              (u = Math.min(u, y)),
              (m = Math.max(m, g.precinctParameters.numprecinctswide)),
              (p = Math.max(p, g.precinctParameters.numprecinctshigh)),
              (h[v] = { width: b, height: y }),
              (d <<= 1);
          }
          (r = Math.min(r, f)),
            (n = Math.min(n, u)),
            (i = Math.max(i, m)),
            (a = Math.max(a, p)),
            (s[o] = {
              resolutions: h,
              minWidth: f,
              minHeight: u,
              maxNumWide: m,
              maxNumHigh: p,
            });
        }
        return {
          components: s,
          minWidth: r,
          minHeight: n,
          maxNumWide: i,
          maxNumHigh: a,
        };
      }
      function k(e) {
        for (
          var t = e.SIZ,
            r = e.currentTile.index,
            n = e.tiles[r],
            i = t.Csiz,
            s = 0;
          s < i;
          s++
        ) {
          for (
            var c = n.components[s],
              l = c.codingStyleParameters.decompositionLevelsCount,
              u = [],
              m = [],
              p = 0;
            p <= l;
            p++
          ) {
            var x,
              w = a(0, c, p),
              k = {},
              C = 1 << (l - p);
            if (
              ((k.trx0 = Math.ceil(c.tcx0 / C)),
              (k.try0 = Math.ceil(c.tcy0 / C)),
              (k.trx1 = Math.ceil(c.tcx1 / C)),
              (k.try1 = Math.ceil(c.tcy1 / C)),
              (k.resLevel = p),
              o(0, k, w),
              u.push(k),
              0 === p)
            )
              ((x = {}).type = "LL"),
                (x.tbx0 = Math.ceil(c.tcx0 / C)),
                (x.tby0 = Math.ceil(c.tcy0 / C)),
                (x.tbx1 = Math.ceil(c.tcx1 / C)),
                (x.tby1 = Math.ceil(c.tcy1 / C)),
                (x.resolution = k),
                h(0, x, w),
                m.push(x),
                (k.subbands = [x]);
            else {
              var P = 1 << (l - p + 1),
                I = [];
              ((x = {}).type = "HL"),
                (x.tbx0 = Math.ceil(c.tcx0 / P - 0.5)),
                (x.tby0 = Math.ceil(c.tcy0 / P)),
                (x.tbx1 = Math.ceil(c.tcx1 / P - 0.5)),
                (x.tby1 = Math.ceil(c.tcy1 / P)),
                (x.resolution = k),
                h(0, x, w),
                m.push(x),
                I.push(x),
                ((x = {}).type = "LH"),
                (x.tbx0 = Math.ceil(c.tcx0 / P)),
                (x.tby0 = Math.ceil(c.tcy0 / P - 0.5)),
                (x.tbx1 = Math.ceil(c.tcx1 / P)),
                (x.tby1 = Math.ceil(c.tcy1 / P - 0.5)),
                (x.resolution = k),
                h(0, x, w),
                m.push(x),
                I.push(x),
                ((x = {}).type = "HH"),
                (x.tbx0 = Math.ceil(c.tcx0 / P - 0.5)),
                (x.tby0 = Math.ceil(c.tcy0 / P - 0.5)),
                (x.tbx1 = Math.ceil(c.tcx1 / P - 0.5)),
                (x.tby1 = Math.ceil(c.tcy1 / P - 0.5)),
                (x.resolution = k),
                h(0, x, w),
                m.push(x),
                I.push(x),
                (k.subbands = I);
            }
          }
          (c.resolutions = u), (c.subbands = m);
        }
        var M = n.codingStyleDefaultParameters.progressionOrder;
        switch (M) {
          case 0:
            n.packetsIterator = new d(e);
            break;
          case 1:
            n.packetsIterator = new v(e);
            break;
          case 2:
            n.packetsIterator = new g(e);
            break;
          case 3:
            n.packetsIterator = new b(e);
            break;
          case 4:
            n.packetsIterator = new y(e);
            break;
          default:
            f("JPX Error: Unsupported progression order " + M);
        }
      }
      function C(e, t, r, n) {
        var i,
          a = 0,
          o = 0,
          c = !1;
        function l(e) {
          for (; o < e; ) {
            var n = t[r + a];
            a++,
              c
                ? ((i = (i << 7) | n), (o += 7), (c = !1))
                : ((i = (i << 8) | n), (o += 8)),
              255 === n && (c = !0);
          }
          return (i >>> (o -= e)) & ((1 << e) - 1);
        }
        function h(e) {
          return 255 === t[r + a - 1] && t[r + a] === e
            ? (f(1), !0)
            : 255 === t[r + a] && t[r + a + 1] === e && (f(2), !0);
        }
        function f(e) {
          a += e;
        }
        function u() {
          (o = 0), c && (a++, (c = !1));
        }
        function m() {
          if (0 === l(1)) return 1;
          if (0 === l(1)) return 2;
          var e = l(2);
          return e < 3 ? e + 3 : (e = l(5)) < 31 ? e + 6 : (e = l(7)) + 37;
        }
        for (
          var p = e.currentTile.index,
            d = e.tiles[p],
            v = e.COD.sopMarkerUsed,
            g = e.COD.ephMarkerUsed,
            b = d.packetsIterator;
          a < n;

        ) {
          u(), v && h(145) && f(4);
          var y = b.nextPacket();
          if (l(1)) {
            for (
              var x, w = y.layerNumber, k = [], C = 0, P = y.codeblocks.length;
              C < P;
              C++
            ) {
              var I = (x = y.codeblocks[C]).precinct,
                M = x.cbx - I.cbxMin,
                A = x.cby - I.cbyMin,
                D = !1,
                L = !1;
              if (void 0 !== x.included) D = !!l(1);
              else {
                var z, F;
                if (void 0 !== (I = x.precinct).inclusionTree)
                  z = I.inclusionTree;
                else {
                  var O = I.cbxMax - I.cbxMin + 1,
                    B = I.cbyMax - I.cbyMin + 1;
                  (z = new T(O, B, w)),
                    (F = new S(O, B)),
                    (I.inclusionTree = z),
                    (I.zeroBitPlanesTree = F);
                }
                if (z.reset(M, A, w))
                  for (;;) {
                    if (!l(1)) {
                      z.incrementValue(w);
                      break;
                    }
                    if (!z.nextLevel()) {
                      (x.included = !0), (D = L = !0);
                      break;
                    }
                  }
              }
              if (D) {
                if (L) {
                  for ((F = I.zeroBitPlanesTree).reset(M, A); ; )
                    if (l(1)) {
                      if (!F.nextLevel()) break;
                    } else F.incrementValue();
                  x.zeroBitPlanes = F.value;
                }
                for (var q = m(); l(1); ) x.Lblock++;
                var R = s(q),
                  E = l((q < 1 << R ? R - 1 : R) + x.Lblock);
                k.push({ codeblock: x, codingpasses: q, dataLength: E });
              }
            }
            for (u(), g && h(146); k.length > 0; ) {
              var U = k.shift();
              void 0 === (x = U.codeblock).data && (x.data = []),
                x.data.push({
                  data: t,
                  start: r + a,
                  end: r + a + U.dataLength,
                  codingpasses: U.codingpasses,
                }),
                (a += U.dataLength);
            }
          }
        }
        return a;
      }
      function P(e, t, r, i, a, s, o, c) {
        for (
          var l = i.tbx0,
            h = i.tby0,
            f = i.tbx1 - i.tbx0,
            u = i.codeblocks,
            m = "H" === i.type.charAt(0) ? 1 : 0,
            p = "H" === i.type.charAt(1) ? t : 0,
            d = 0,
            v = u.length;
          d < v;
          ++d
        ) {
          var g = u[d],
            b = g.tbx1_ - g.tbx0_,
            y = g.tby1_ - g.tby0_;
          if (0 !== b && 0 !== y && void 0 !== g.data) {
            var x, w;
            (x = new A(b, y, g.subbandType, g.zeroBitPlanes, s)), (w = 2);
            var k,
              C,
              P,
              I = g.data,
              M = 0,
              S = 0;
            for (k = 0, C = I.length; k < C; k++)
              (M += (P = I[k]).end - P.start), (S += P.codingpasses);
            var T = new Uint8Array(M),
              D = 0;
            for (k = 0, C = I.length; k < C; k++) {
              var L = (P = I[k]).data.subarray(P.start, P.end);
              T.set(L, D), (D += L.length);
            }
            var z = new n(T, 0, M);
            for (x.setDecoder(z), k = 0; k < S; k++) {
              switch (w) {
                case 0:
                  x.runSignificancePropagationPass();
                  break;
                case 1:
                  x.runMagnitudeRefinementPass();
                  break;
                case 2:
                  x.runCleanupPass(), c && x.checkSegmentationSymbol();
              }
              w = (w + 1) % 3;
            }
            var F,
              O,
              B,
              q = g.tbx0_ - l + (g.tby0_ - h) * f,
              R = x.coefficentsSign,
              E = x.coefficentsMagnitude,
              U = x.bitsDecoded,
              X = o ? 0 : 0.5;
            D = 0;
            var H = "LL" !== i.type;
            for (k = 0; k < y; k++) {
              var J = 2 * ((q / f) | 0) * (t - f) + m + p;
              for (F = 0; F < b; F++) {
                if (0 !== (O = E[D])) {
                  (O = (O + X) * a), 0 !== R[D] && (O = -O), (B = U[D]);
                  var _ = H ? J + (q << 1) : q;
                  e[_] = o && B >= s ? O : O * (1 << (s - B));
                }
                q++, D++;
              }
              q += f - b;
            }
          }
        }
      }
      function I(t, r, n) {
        for (
          var i = r.components[n],
            a = i.codingStyleParameters,
            s = i.quantizationParameters,
            o = a.decompositionLevelsCount,
            c = s.SPqcds,
            l = s.scalarExpounded,
            h = s.guardBits,
            f = a.segmentationSymbolUsed,
            u = t.components[n].precision,
            m = a.reversibleTransformation,
            p = m ? new z() : new L(),
            d = [],
            v = 0,
            g = 0;
          g <= o;
          g++
        ) {
          for (
            var b = i.resolutions[g],
              y = b.trx1 - b.trx0,
              x = b.try1 - b.try0,
              w = new Float32Array(y * x),
              k = 0,
              C = b.subbands.length;
            k < C;
            k++
          ) {
            var I, M;
            l
              ? ((I = c[v].mu), (M = c[v].epsilon), v++)
              : ((I = c[0].mu), (M = c[0].epsilon + (g > 0 ? 1 - g : 0)));
            var S = b.subbands[k],
              T = e[S.type];
            P(
              w,
              y,
              0,
              S,
              m ? 1 : Math.pow(2, u + T - M) * (1 + I / 2048),
              h + M - 1,
              m,
              f
            );
          }
          d.push({ width: y, height: x, items: w });
        }
        var A = p.calculate(d, i.tcx0, i.tcy0);
        return {
          left: i.tcx0,
          top: i.tcy0,
          width: A.width,
          height: A.height,
          items: A.items,
        };
      }
      function M(e, t) {
        for (var r = e.SIZ.Csiz, n = e.tiles[t], i = 0; i < r; i++) {
          var a = n.components[i],
            s =
              void 0 !== e.currentTile.QCC[i]
                ? e.currentTile.QCC[i]
                : e.currentTile.QCD;
          a.quantizationParameters = s;
          var o =
            void 0 !== e.currentTile.COC[i]
              ? e.currentTile.COC[i]
              : e.currentTile.COD;
          a.codingStyleParameters = o;
        }
        n.codingStyleDefaultParameters = e.currentTile.COD;
      }
      t.prototype = {
        parse: function (e) {
          if (65359 !== c(e, 0))
            for (var t = 0, r = e.length; t < r; ) {
              var n = 8,
                i = l(e, t),
                a = l(e, t + 4);
              (t += n),
                1 === i &&
                  ((i = 4294967296 * l(e, t) + l(e, t + 4)),
                  (t += 8),
                  (n += 8)),
                0 === i && (i = r - t + n),
                i < n && f("JPX Error: Invalid box field size");
              var s = i - n,
                o = !0;
              switch (a) {
                case 1785737832:
                  o = !1;
                  break;
                case 1668246642:
                  var h = e[t];
                  if (1 === h) {
                    var p = l(e, t + 3);
                    switch (p) {
                      case 16:
                      case 17:
                      case 18:
                        break;
                      default:
                        u("Unknown colorspace " + p);
                    }
                  } else 2 === h && m("ICC profile not supported");
                  break;
                case 1785737827:
                  this.parseCodestream(e, t, t + s);
                  break;
                case 1783636e3:
                  218793738 !== l(e, t) && u("Invalid JP2 signature");
                  break;
                case 1783634458:
                case 1718909296:
                case 1920099697:
                case 1919251232:
                case 1768449138:
                  break;
                default:
                  var d = String.fromCharCode(
                    (a >> 24) & 255,
                    (a >> 16) & 255,
                    (a >> 8) & 255,
                    255 & a
                  );
                  u("Unsupported header type " + a + " (" + d + ")");
              }
              o && (t += s);
            }
          else this.parseCodestream(e, 0, e.length);
        },
        parseImageProperties: function (e) {
          for (var t = e.getByte(); t >= 0; ) {
            if (65361 === ((t << 8) | (t = e.getByte()))) {
              e.skip(4);
              var r = e.getInt32() >>> 0,
                n = e.getInt32() >>> 0,
                i = e.getInt32() >>> 0,
                a = e.getInt32() >>> 0;
              e.skip(16);
              var s = e.getUint16();
              return (
                (this.width = r - i),
                (this.height = n - a),
                (this.componentsCount = s),
                void (this.bitsPerComponent = 8)
              );
            }
          }
          f("JPX Error: No size marker found in JPX stream");
        },
        parseCodestream: function (e, t, n) {
          var a = {},
            s = !1;
          try {
            for (var o = t; o + 1 < n; ) {
              var h = c(e, o);
              o += 2;
              var m,
                p,
                d,
                v,
                g,
                b,
                y = 0;
              switch (h) {
                case 65359:
                  a.mainHeader = !0;
                  break;
                case 65497:
                  break;
                case 65361:
                  y = c(e, o);
                  var x = {};
                  (x.Xsiz = l(e, o + 4)),
                    (x.Ysiz = l(e, o + 8)),
                    (x.XOsiz = l(e, o + 12)),
                    (x.YOsiz = l(e, o + 16)),
                    (x.XTsiz = l(e, o + 20)),
                    (x.YTsiz = l(e, o + 24)),
                    (x.XTOsiz = l(e, o + 28)),
                    (x.YTOsiz = l(e, o + 32));
                  var w = c(e, o + 36);
                  x.Csiz = w;
                  var P = [];
                  m = o + 38;
                  for (var S = 0; S < w; S++) {
                    var T = {
                      precision: 1 + (127 & e[m]),
                      isSigned: !!(128 & e[m]),
                      XRsiz: e[m + 1],
                      YRsiz: e[m + 1],
                    };
                    r(T, x), P.push(T);
                  }
                  (a.SIZ = x),
                    (a.components = P),
                    i(a, P),
                    (a.QCC = []),
                    (a.COC = []);
                  break;
                case 65372:
                  y = c(e, o);
                  var A = {};
                  switch (((m = o + 2), 31 & (p = e[m++]))) {
                    case 0:
                      (v = 8), (g = !0);
                      break;
                    case 1:
                      (v = 16), (g = !1);
                      break;
                    case 2:
                      (v = 16), (g = !0);
                      break;
                    default:
                      throw new Error("Invalid SQcd value " + p);
                  }
                  for (
                    A.noQuantization = 8 === v,
                      A.scalarExpounded = g,
                      A.guardBits = p >> 5,
                      d = [];
                    m < y + o;

                  ) {
                    var D = {};
                    8 === v
                      ? ((D.epsilon = e[m++] >> 3), (D.mu = 0))
                      : ((D.epsilon = e[m] >> 3),
                        (D.mu = ((7 & e[m]) << 8) | e[m + 1]),
                        (m += 2)),
                      d.push(D);
                  }
                  (A.SPqcds = d),
                    a.mainHeader
                      ? (a.QCD = A)
                      : ((a.currentTile.QCD = A), (a.currentTile.QCC = []));
                  break;
                case 65373:
                  y = c(e, o);
                  var L,
                    z = {};
                  switch (
                    ((m = o + 2),
                    a.SIZ.Csiz < 257 ? (L = e[m++]) : ((L = c(e, m)), (m += 2)),
                    31 & (p = e[m++]))
                  ) {
                    case 0:
                      (v = 8), (g = !0);
                      break;
                    case 1:
                      (v = 16), (g = !1);
                      break;
                    case 2:
                      (v = 16), (g = !0);
                      break;
                    default:
                      throw new Error("Invalid SQcd value " + p);
                  }
                  for (
                    z.noQuantization = 8 === v,
                      z.scalarExpounded = g,
                      z.guardBits = p >> 5,
                      d = [];
                    m < y + o;

                  )
                    (D = {}),
                      8 === v
                        ? ((D.epsilon = e[m++] >> 3), (D.mu = 0))
                        : ((D.epsilon = e[m] >> 3),
                          (D.mu = ((7 & e[m]) << 8) | e[m + 1]),
                          (m += 2)),
                      d.push(D);
                  (z.SPqcds = d),
                    a.mainHeader ? (a.QCC[L] = z) : (a.currentTile.QCC[L] = z);
                  break;
                case 65362:
                  y = c(e, o);
                  var F = {};
                  m = o + 2;
                  var O = e[m++];
                  (F.entropyCoderWithCustomPrecincts = !!(1 & O)),
                    (F.sopMarkerUsed = !!(2 & O)),
                    (F.ephMarkerUsed = !!(4 & O)),
                    (F.progressionOrder = e[m++]),
                    (F.layersCount = c(e, m)),
                    (m += 2),
                    (F.multipleComponentTransform = e[m++]),
                    (F.decompositionLevelsCount = e[m++]),
                    (F.xcb = 2 + (15 & e[m++])),
                    (F.ycb = 2 + (15 & e[m++]));
                  var B = e[m++];
                  if (
                    ((F.selectiveArithmeticCodingBypass = !!(1 & B)),
                    (F.resetContextProbabilities = !!(2 & B)),
                    (F.terminationOnEachCodingPass = !!(4 & B)),
                    (F.verticalyStripe = !!(8 & B)),
                    (F.predictableTermination = !!(16 & B)),
                    (F.segmentationSymbolUsed = !!(32 & B)),
                    (F.reversibleTransformation = e[m++]),
                    F.entropyCoderWithCustomPrecincts)
                  ) {
                    for (var q = []; m < y + o; ) {
                      var R = e[m++];
                      q.push({ PPx: 15 & R, PPy: R >> 4 });
                    }
                    F.precinctsSizes = q;
                  }
                  var E = [];
                  if (
                    (F.selectiveArithmeticCodingBypass &&
                      E.push("selectiveArithmeticCodingBypass"),
                    F.resetContextProbabilities &&
                      E.push("resetContextProbabilities"),
                    F.terminationOnEachCodingPass &&
                      E.push("terminationOnEachCodingPass"),
                    F.verticalyStripe && E.push("verticalyStripe"),
                    F.predictableTermination &&
                      E.push("predictableTermination"),
                    E.length > 0)
                  )
                    throw (
                      ((s = !0),
                      new Error(
                        "Unsupported COD options (" + E.join(", ") + ")"
                      ))
                    );
                  a.mainHeader
                    ? (a.COD = F)
                    : ((a.currentTile.COD = F), (a.currentTile.COC = []));
                  break;
                case 65424:
                  (y = c(e, o)),
                    ((b = {}).index = c(e, o + 2)),
                    (b.length = l(e, o + 4)),
                    (b.dataEnd = b.length + o - 2),
                    (b.partIndex = e[o + 8]),
                    (b.partsCount = e[o + 9]),
                    (a.mainHeader = !1),
                    0 === b.partIndex &&
                      ((b.COD = a.COD),
                      (b.COC = a.COC.slice(0)),
                      (b.QCD = a.QCD),
                      (b.QCC = a.QCC.slice(0))),
                    (a.currentTile = b);
                  break;
                case 65427:
                  0 === (b = a.currentTile).partIndex && (M(a, b.index), k(a)),
                    C(a, e, o, (y = b.dataEnd - o));
                  break;
                case 65365:
                case 65367:
                case 65368:
                case 65380:
                  y = c(e, o);
                  break;
                case 65363:
                  throw new Error(
                    "Codestream code 0xFF53 (COC) is not implemented"
                  );
                default:
                  throw new Error("Unknown codestream code: " + h.toString(16));
              }
              o += y;
            }
          } catch (e) {
            s || this.failOnCorruptedImage
              ? f("JPX Error: " + e.message)
              : u("JPX: Trying to recover from: " + e.message);
          }
          (this.tiles = (function (e) {
            for (
              var t = e.SIZ,
                r = e.components,
                n = t.Csiz,
                i = [],
                a = 0,
                s = e.tiles.length;
              a < s;
              a++
            ) {
              var o,
                c = e.tiles[a],
                l = [];
              for (o = 0; o < n; o++) l[o] = I(e, c, o);
              var h,
                f,
                u,
                m,
                p,
                d,
                v,
                g,
                b,
                y,
                x,
                w,
                k,
                C,
                P,
                M = l[0],
                S = new Uint8Array(M.items.length * n),
                T = {
                  left: M.left,
                  top: M.top,
                  width: M.width,
                  height: M.height,
                  items: S,
                },
                A = 0;
              if (c.codingStyleDefaultParameters.multipleComponentTransform) {
                var D = 4 === n,
                  L = l[0].items,
                  z = l[1].items,
                  F = l[2].items,
                  O = D ? l[3].items : null;
                (h = r[0].precision - 8),
                  (f = 0.5 + (128 << h)),
                  (m = -(p = 0.5 * (u = 255 * (1 << h))));
                var B = c.components[0],
                  q = n - 3;
                if (
                  ((v = L.length),
                  B.codingStyleParameters.reversibleTransformation)
                )
                  for (d = 0; d < v; d++, A += q)
                    (g = L[d] + f),
                      (b = z[d]),
                      (y = F[d]),
                      (x = (w = g - ((y + b) >> 2)) + y),
                      (k = w + b),
                      (S[A++] = x <= 0 ? 0 : x >= u ? 255 : x >> h),
                      (S[A++] = w <= 0 ? 0 : w >= u ? 255 : w >> h),
                      (S[A++] = k <= 0 ? 0 : k >= u ? 255 : k >> h);
                else
                  for (d = 0; d < v; d++, A += q)
                    (g = L[d] + f),
                      (b = z[d]),
                      (y = F[d]),
                      (x = g + 1.402 * y),
                      (w = g - 0.34413 * b - 0.71414 * y),
                      (k = g + 1.772 * b),
                      (S[A++] = x <= 0 ? 0 : x >= u ? 255 : x >> h),
                      (S[A++] = w <= 0 ? 0 : w >= u ? 255 : w >> h),
                      (S[A++] = k <= 0 ? 0 : k >= u ? 255 : k >> h);
                if (D)
                  for (d = 0, A = 3; d < v; d++, A += 4)
                    (C = O[d]),
                      (S[A] = C <= m ? 0 : C >= p ? 255 : (C + f) >> h);
              } else
                for (o = 0; o < n; o++) {
                  var R = l[o].items;
                  for (
                    h = r[o].precision - 8,
                      f = 0.5 + (128 << h),
                      m = -(u = 127.5 * (1 << h)),
                      A = o,
                      d = 0,
                      v = R.length;
                    d < v;
                    d++
                  )
                    (P = R[d]),
                      (S[A] = P <= m ? 0 : P >= u ? 255 : (P + f) >> h),
                      (A += n);
                }
              i.push(T);
            }
            return i;
          })(a)),
            (this.width = a.SIZ.Xsiz - a.SIZ.XOsiz),
            (this.height = a.SIZ.Ysiz - a.SIZ.YOsiz),
            (this.componentsCount = a.SIZ.Csiz);
        },
      };
      var S = (function () {
          function e(e, t) {
            var r = s(Math.max(e, t)) + 1;
            this.levels = [];
            for (var n = 0; n < r; n++) {
              var i = { width: e, height: t, items: [] };
              this.levels.push(i),
                (e = Math.ceil(e / 2)),
                (t = Math.ceil(t / 2));
            }
          }
          return (
            (e.prototype = {
              reset: function (e, t) {
                for (var r, n = 0, i = 0; n < this.levels.length; ) {
                  var a = e + t * (r = this.levels[n]).width;
                  if (void 0 !== r.items[a]) {
                    i = r.items[a];
                    break;
                  }
                  (r.index = a), (e >>= 1), (t >>= 1), n++;
                }
                n--,
                  ((r = this.levels[n]).items[r.index] = i),
                  (this.currentLevel = n),
                  delete this.value;
              },
              incrementValue: function () {
                var e = this.levels[this.currentLevel];
                e.items[e.index]++;
              },
              nextLevel: function () {
                var e = this.currentLevel,
                  t = this.levels[e],
                  r = t.items[t.index];
                return --e < 0
                  ? ((this.value = r), !1)
                  : ((this.currentLevel = e),
                    ((t = this.levels[e]).items[t.index] = r),
                    !0);
              },
            }),
            e
          );
        })(),
        T = (function () {
          function e(e, t, r) {
            var n = s(Math.max(e, t)) + 1;
            this.levels = [];
            for (var i = 0; i < n; i++) {
              for (
                var a = new Uint8Array(e * t), o = 0, c = a.length;
                o < c;
                o++
              )
                a[o] = r;
              var l = { width: e, height: t, items: a };
              this.levels.push(l),
                (e = Math.ceil(e / 2)),
                (t = Math.ceil(t / 2));
            }
          }
          return (
            (e.prototype = {
              reset: function (e, t, r) {
                for (var n = 0; n < this.levels.length; ) {
                  var i = this.levels[n],
                    a = e + t * i.width;
                  i.index = a;
                  var s = i.items[a];
                  if (255 === s) break;
                  if (s > r)
                    return (this.currentLevel = n), this.propagateValues(), !1;
                  (e >>= 1), (t >>= 1), n++;
                }
                return (this.currentLevel = n - 1), !0;
              },
              incrementValue: function (e) {
                var t = this.levels[this.currentLevel];
                (t.items[t.index] = e + 1), this.propagateValues();
              },
              propagateValues: function () {
                for (
                  var e = this.currentLevel,
                    t = this.levels[e],
                    r = t.items[t.index];
                  --e >= 0;

                )
                  (t = this.levels[e]).items[t.index] = r;
              },
              nextLevel: function () {
                var e = this.currentLevel,
                  t = this.levels[e],
                  r = t.items[t.index];
                return (
                  (t.items[t.index] = 255),
                  !(--e < 0) &&
                    ((this.currentLevel = e),
                    ((t = this.levels[e]).items[t.index] = r),
                    !0)
                );
              },
            }),
            e
          );
        })(),
        A = (function () {
          var e = new Uint8Array([
              0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7,
              8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0,
              0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6,
              8, 0, 3, 7, 8, 0, 4, 7, 8,
            ]),
            t = new Uint8Array([
              0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7,
              7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0,
              0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3,
              4, 0, 6, 7, 7, 0, 8, 8, 8,
            ]),
            r = new Uint8Array([
              0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5,
              5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0,
              0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8,
              8, 0, 8, 8, 8, 0, 8, 8, 8,
            ]);
          function n(n, i, a, s, o) {
            (this.width = n),
              (this.height = i),
              (this.contextLabelTable = "HH" === a ? r : "HL" === a ? t : e);
            var c = n * i;
            (this.neighborsSignificance = new Uint8Array(c)),
              (this.coefficentsSign = new Uint8Array(c)),
              (this.coefficentsMagnitude =
                o > 14
                  ? new Uint32Array(c)
                  : o > 6
                  ? new Uint16Array(c)
                  : new Uint8Array(c)),
              (this.processingFlags = new Uint8Array(c));
            var l = new Uint8Array(c);
            if (0 !== s) for (var h = 0; h < c; h++) l[h] = s;
            (this.bitsDecoded = l), this.reset();
          }
          return (
            (n.prototype = {
              setDecoder: function (e) {
                this.decoder = e;
              },
              reset: function () {
                (this.contexts = new Int8Array(19)),
                  (this.contexts[0] = 8),
                  (this.contexts[17] = 92),
                  (this.contexts[18] = 6);
              },
              setNeighborsSignificance: function (e, t, r) {
                var n,
                  i = this.neighborsSignificance,
                  a = this.width,
                  s = this.height,
                  o = t > 0,
                  c = t + 1 < a;
                e > 0 &&
                  ((n = r - a),
                  o && (i[n - 1] += 16),
                  c && (i[n + 1] += 16),
                  (i[n] += 4)),
                  e + 1 < s &&
                    ((n = r + a),
                    o && (i[n - 1] += 16),
                    c && (i[n + 1] += 16),
                    (i[n] += 4)),
                  o && (i[r - 1] += 1),
                  c && (i[r + 1] += 1),
                  (i[r] |= 128);
              },
              runSignificancePropagationPass: function () {
                for (
                  var e = this.decoder,
                    t = this.width,
                    r = this.height,
                    n = this.coefficentsMagnitude,
                    i = this.coefficentsSign,
                    a = this.neighborsSignificance,
                    s = this.processingFlags,
                    o = this.contexts,
                    c = this.contextLabelTable,
                    l = this.bitsDecoded,
                    h = 0;
                  h < r;
                  h += 4
                )
                  for (var f = 0; f < t; f++)
                    for (var u = h * t + f, m = 0; m < 4; m++, u += t) {
                      var p = h + m;
                      if (p >= r) break;
                      if (((s[u] &= -2), !n[u] && a[u])) {
                        var d = c[a[u]];
                        if (e.readBit(o, d)) {
                          var v = this.decodeSignBit(p, f, u);
                          (i[u] = v),
                            (n[u] = 1),
                            this.setNeighborsSignificance(p, f, u),
                            (s[u] |= 2);
                        }
                        l[u]++, (s[u] |= 1);
                      }
                    }
              },
              decodeSignBit: function (e, t, r) {
                var n,
                  i,
                  a,
                  s,
                  o,
                  c,
                  l = this.width,
                  h = this.height,
                  f = this.coefficentsMagnitude,
                  u = this.coefficentsSign;
                (s = t > 0 && 0 !== f[r - 1]),
                  t + 1 < l && 0 !== f[r + 1]
                    ? ((a = u[r + 1]),
                      (n = s ? 1 - a - (i = u[r - 1]) : 1 - a - a))
                    : (n = s ? 1 - (i = u[r - 1]) - i : 0);
                var m = 3 * n;
                return (
                  (s = e > 0 && 0 !== f[r - l]),
                  e + 1 < h && 0 !== f[r + l]
                    ? ((a = u[r + l]),
                      (n = s ? 1 - a - (i = u[r - l]) + m : 1 - a - a + m))
                    : (n = s ? 1 - (i = u[r - l]) - i + m : m),
                  n >= 0
                    ? ((o = 9 + n),
                      (c = this.decoder.readBit(this.contexts, o)))
                    : ((o = 9 - n),
                      (c = 1 ^ this.decoder.readBit(this.contexts, o))),
                  c
                );
              },
              runMagnitudeRefinementPass: function () {
                for (
                  var e,
                    t = this.decoder,
                    r = this.width,
                    n = this.height,
                    i = this.coefficentsMagnitude,
                    a = this.neighborsSignificance,
                    s = this.contexts,
                    o = this.bitsDecoded,
                    c = this.processingFlags,
                    l = r * n,
                    h = 4 * r,
                    f = 0;
                  f < l;
                  f = e
                ) {
                  e = Math.min(l, f + h);
                  for (var u = 0; u < r; u++)
                    for (var m = f + u; m < e; m += r)
                      if (i[m] && 0 == (1 & c[m])) {
                        var p = 16;
                        if (0 != (2 & c[m]))
                          (c[m] ^= 2), (p = 0 === (127 & a[m]) ? 15 : 14);
                        var d = t.readBit(s, p);
                        (i[m] = (i[m] << 1) | d), o[m]++, (c[m] |= 1);
                      }
                }
              },
              runCleanupPass: function () {
                for (
                  var e,
                    t = this.decoder,
                    r = this.width,
                    n = this.height,
                    i = this.neighborsSignificance,
                    a = this.coefficentsMagnitude,
                    s = this.coefficentsSign,
                    o = this.contexts,
                    c = this.contextLabelTable,
                    l = this.bitsDecoded,
                    h = this.processingFlags,
                    f = r,
                    u = 2 * r,
                    m = 3 * r,
                    p = 0;
                  p < n;
                  p = e
                ) {
                  e = Math.min(p + 4, n);
                  for (var d = p * r, v = p + 3 < n, g = 0; g < r; g++) {
                    var b,
                      y = d + g,
                      x = 0,
                      w = y,
                      k = p;
                    if (
                      v &&
                      0 === h[y] &&
                      0 === h[y + f] &&
                      0 === h[y + u] &&
                      0 === h[y + m] &&
                      0 === i[y] &&
                      0 === i[y + f] &&
                      0 === i[y + u] &&
                      0 === i[y + m]
                    ) {
                      if (!t.readBit(o, 18)) {
                        l[y]++, l[y + f]++, l[y + u]++, l[y + m]++;
                        continue;
                      }
                      0 !== (x = (t.readBit(o, 17) << 1) | t.readBit(o, 17)) &&
                        ((k = p + x), (w += x * r)),
                        (b = this.decodeSignBit(k, g, w)),
                        (s[w] = b),
                        (a[w] = 1),
                        this.setNeighborsSignificance(k, g, w),
                        (h[w] |= 2),
                        (w = y);
                      for (var C = p; C <= k; C++, w += r) l[w]++;
                      x++;
                    }
                    for (k = p + x; k < e; k++, w += r)
                      if (!a[w] && 0 == (1 & h[w])) {
                        var P = c[i[w]];
                        1 === t.readBit(o, P) &&
                          ((b = this.decodeSignBit(k, g, w)),
                          (s[w] = b),
                          (a[w] = 1),
                          this.setNeighborsSignificance(k, g, w),
                          (h[w] |= 2)),
                          l[w]++;
                      }
                  }
                }
              },
              checkSegmentationSymbol: function () {
                var e = this.decoder,
                  t = this.contexts;
                10 !==
                  ((e.readBit(t, 17) << 3) |
                    (e.readBit(t, 17) << 2) |
                    (e.readBit(t, 17) << 1) |
                    e.readBit(t, 17)) &&
                  f("JPX Error: Invalid segmentation symbol");
              },
            }),
            n
          );
        })(),
        D = (function () {
          function e() {}
          return (
            (e.prototype.calculate = function (e, t, r) {
              for (var n = e[0], i = 1, a = e.length; i < a; i++)
                n = this.iterate(n, e[i], t, r);
              return n;
            }),
            (e.prototype.extend = function (e, t, r) {
              var n = t - 1,
                i = t + 1,
                a = t + r - 2,
                s = t + r;
              (e[n--] = e[i++]),
                (e[s++] = e[a--]),
                (e[n--] = e[i++]),
                (e[s++] = e[a--]),
                (e[n--] = e[i++]),
                (e[s++] = e[a--]),
                (e[n] = e[i]),
                (e[s] = e[a]);
            }),
            (e.prototype.iterate = function (e, t, r, n) {
              var i,
                a,
                s,
                o,
                c,
                l,
                h = e.width,
                f = e.height,
                u = e.items,
                m = t.width,
                p = t.height,
                d = t.items;
              for (s = 0, i = 0; i < f; i++)
                for (o = 2 * i * m, a = 0; a < h; a++, s++, o += 2) d[o] = u[s];
              u = e.items = null;
              var v = new Float32Array(m + 8);
              if (1 === m) {
                if (0 != (1 & r))
                  for (l = 0, s = 0; l < p; l++, s += m) d[s] *= 0.5;
              } else
                for (l = 0, s = 0; l < p; l++, s += m)
                  v.set(d.subarray(s, s + m), 4),
                    this.extend(v, 4, m),
                    this.filter(v, 4, m),
                    d.set(v.subarray(4, 4 + m), s);
              var g = 16,
                b = [];
              for (i = 0; i < g; i++) b.push(new Float32Array(p + 8));
              var y,
                x = 0;
              if (((e = 4 + p), 1 === p)) {
                if (0 != (1 & n)) for (c = 0; c < m; c++) d[c] *= 0.5;
              } else
                for (c = 0; c < m; c++) {
                  if (0 === x) {
                    for (
                      g = Math.min(m - c, g), s = c, o = 4;
                      o < e;
                      s += m, o++
                    )
                      for (y = 0; y < g; y++) b[y][o] = d[s + y];
                    x = g;
                  }
                  var w = b[--x];
                  if ((this.extend(w, 4, p), this.filter(w, 4, p), 0 === x))
                    for (s = c - g + 1, o = 4; o < e; s += m, o++)
                      for (y = 0; y < g; y++) d[s + y] = b[y][o];
                }
              return { width: m, height: p, items: d };
            }),
            e
          );
        })(),
        L = (function () {
          function e() {
            D.call(this);
          }
          return (
            (e.prototype = Object.create(D.prototype)),
            (e.prototype.filter = function (e, t, r) {
              var n,
                i,
                a,
                s,
                o = r >> 1,
                c = -1.586134342059924,
                l = -0.052980118572961,
                h = 0.882911075530934,
                f = 0.443506852043971,
                u = 1.230174104914001;
              for (n = (t |= 0) - 3, i = o + 4; i--; n += 2)
                e[n] *= 0.8128930661159609;
              for (
                a = f * e[(n = t - 2) - 1], i = o + 3;
                i-- && ((s = f * e[n + 1]), (e[n] = u * e[n] - a - s), i--);
                n += 2
              )
                (a = f * e[(n += 2) + 1]), (e[n] = u * e[n] - a - s);
              for (
                a = h * e[(n = t - 1) - 1], i = o + 2;
                i-- && ((s = h * e[n + 1]), (e[n] -= a + s), i--);
                n += 2
              )
                (a = h * e[(n += 2) + 1]), (e[n] -= a + s);
              for (
                a = l * e[(n = t) - 1], i = o + 1;
                i-- && ((s = l * e[n + 1]), (e[n] -= a + s), i--);
                n += 2
              )
                (a = l * e[(n += 2) + 1]), (e[n] -= a + s);
              if (0 !== o)
                for (
                  a = c * e[(n = t + 1) - 1], i = o;
                  i-- && ((s = c * e[n + 1]), (e[n] -= a + s), i--);
                  n += 2
                )
                  (a = c * e[(n += 2) + 1]), (e[n] -= a + s);
            }),
            e
          );
        })(),
        z = (function () {
          function e() {
            D.call(this);
          }
          return (
            (e.prototype = Object.create(D.prototype)),
            (e.prototype.filter = function (e, t, r) {
              var n,
                i,
                a = r >> 1;
              for (n = t |= 0, i = a + 1; i--; n += 2)
                e[n] -= (e[n - 1] + e[n + 1] + 2) >> 2;
              for (n = t + 1, i = a; i--; n += 2)
                e[n] += (e[n - 1] + e[n + 1]) >> 1;
            }),
            e
          );
        })();
      return t;
    })(),
    a = (function () {
      function e() {}
      function t(e, t, r) {
        (this.data = e), (this.start = t), (this.end = r);
      }
      function r(e, t, r) {
        var n = e.getContexts(t),
          i = 1;
        function a(e) {
          for (var t = 0, a = 0; a < e; a++) {
            var s = r.readBit(n, i);
            (i = i < 256 ? (i << 1) | s : (511 & ((i << 1) | s)) | 256),
              (t = (t << 1) | s);
          }
          return t >>> 0;
        }
        var s = a(1),
          o = a(1)
            ? a(1)
              ? a(1)
                ? a(1)
                  ? a(1)
                    ? a(32) + 4436
                    : a(12) + 340
                  : a(8) + 84
                : a(6) + 20
              : a(4) + 4
            : a(2);
        return 0 === s ? o : o > 0 ? -o : null;
      }
      function i(e, t, r) {
        for (var n = e.getContexts("IAID"), i = 1, a = 0; a < r; a++) {
          i = (i << 1) | t.readBit(n, i);
        }
        return r < 31 ? i & ((1 << r) - 1) : 2147483647 & i;
      }
      (e.prototype = {
        getContexts: function (e) {
          return e in this ? this[e] : (this[e] = new Int8Array(65536));
        },
      }),
        (t.prototype = {
          get decoder() {
            return h(this, "decoder", new n(this.data, this.start, this.end));
          },
          get contextCache() {
            return h(this, "contextCache", new e());
          },
        });
      var a = [
          "SymbolDictionary",
          null,
          null,
          null,
          "IntermediateTextRegion",
          null,
          "ImmediateTextRegion",
          "ImmediateLosslessTextRegion",
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          "patternDictionary",
          null,
          null,
          null,
          "IntermediateHalftoneRegion",
          null,
          "ImmediateHalftoneRegion",
          "ImmediateLosslessHalftoneRegion",
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          "IntermediateGenericRegion",
          null,
          "ImmediateGenericRegion",
          "ImmediateLosslessGenericRegion",
          "IntermediateGenericRefinementRegion",
          null,
          "ImmediateGenericRefinementRegion",
          "ImmediateLosslessGenericRefinementRegion",
          null,
          null,
          null,
          null,
          "PageInformation",
          "EndOfPage",
          "EndOfStripe",
          "EndOfFile",
          "Profiles",
          "Tables",
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          "Extension",
        ],
        u = [
          [
            { x: -1, y: -2 },
            { x: 0, y: -2 },
            { x: 1, y: -2 },
            { x: -2, y: -1 },
            { x: -1, y: -1 },
            { x: 0, y: -1 },
            { x: 1, y: -1 },
            { x: 2, y: -1 },
            { x: -4, y: 0 },
            { x: -3, y: 0 },
            { x: -2, y: 0 },
            { x: -1, y: 0 },
          ],
          [
            { x: -1, y: -2 },
            { x: 0, y: -2 },
            { x: 1, y: -2 },
            { x: 2, y: -2 },
            { x: -2, y: -1 },
            { x: -1, y: -1 },
            { x: 0, y: -1 },
            { x: 1, y: -1 },
            { x: 2, y: -1 },
            { x: -3, y: 0 },
            { x: -2, y: 0 },
            { x: -1, y: 0 },
          ],
          [
            { x: -1, y: -2 },
            { x: 0, y: -2 },
            { x: 1, y: -2 },
            { x: -2, y: -1 },
            { x: -1, y: -1 },
            { x: 0, y: -1 },
            { x: 1, y: -1 },
            { x: -2, y: 0 },
            { x: -1, y: 0 },
          ],
          [
            { x: -3, y: -1 },
            { x: -2, y: -1 },
            { x: -1, y: -1 },
            { x: 0, y: -1 },
            { x: 1, y: -1 },
            { x: -4, y: 0 },
            { x: -3, y: 0 },
            { x: -2, y: 0 },
            { x: -1, y: 0 },
          ],
        ],
        m = [
          {
            coding: [
              { x: 0, y: -1 },
              { x: 1, y: -1 },
              { x: -1, y: 0 },
            ],
            reference: [
              { x: 0, y: -1 },
              { x: 1, y: -1 },
              { x: -1, y: 0 },
              { x: 0, y: 0 },
              { x: 1, y: 0 },
              { x: -1, y: 1 },
              { x: 0, y: 1 },
              { x: 1, y: 1 },
            ],
          },
          {
            coding: [
              { x: -1, y: -1 },
              { x: 0, y: -1 },
              { x: 1, y: -1 },
              { x: -1, y: 0 },
            ],
            reference: [
              { x: 0, y: -1 },
              { x: -1, y: 0 },
              { x: 0, y: 0 },
              { x: 1, y: 0 },
              { x: 0, y: 1 },
              { x: 1, y: 1 },
            ],
          },
        ],
        p = [39717, 1941, 229, 405],
        d = [32, 8];
      function v(e, t, r, n, i, a, s, o) {
        if (
          (e && f("JBIG2 error: MMR encoding is not supported"),
          0 === n &&
            !a &&
            !i &&
            4 === s.length &&
            3 === s[0].x &&
            -1 === s[0].y &&
            -3 === s[1].x &&
            -1 === s[1].y &&
            2 === s[2].x &&
            -2 === s[2].y &&
            -2 === s[3].x &&
            -2 === s[3].y)
        )
          return (function (e, t, r) {
            var n,
              i,
              a,
              s,
              o,
              c,
              l,
              h = r.decoder,
              f = r.contextCache.getContexts("GB"),
              u = [];
            for (i = 0; i < t; i++)
              for (
                o = u[i] = new Uint8Array(e),
                  c = i < 1 ? o : u[i - 1],
                  n =
                    ((l = i < 2 ? o : u[i - 2])[0] << 13) |
                    (l[1] << 12) |
                    (l[2] << 11) |
                    (c[0] << 7) |
                    (c[1] << 6) |
                    (c[2] << 5) |
                    (c[3] << 4),
                  a = 0;
                a < e;
                a++
              )
                (o[a] = s = h.readBit(f, n)),
                  (n =
                    ((31735 & n) << 1) |
                    (a + 3 < e ? l[a + 3] << 11 : 0) |
                    (a + 4 < e ? c[a + 4] << 4 : 0) |
                    s);
            return u;
          })(t, r, o);
        var c = !!a,
          l = u[n].concat(s);
        l.sort(function (e, t) {
          return e.y - t.y || e.x - t.x;
        });
        var h,
          m,
          d = l.length,
          v = new Int8Array(d),
          g = new Int8Array(d),
          b = [],
          y = 0,
          x = 0,
          w = 0,
          k = 0;
        for (m = 0; m < d; m++)
          (v[m] = l[m].x),
            (g[m] = l[m].y),
            (x = Math.min(x, l[m].x)),
            (w = Math.max(w, l[m].x)),
            (k = Math.min(k, l[m].y)),
            m < d - 1 && l[m].y === l[m + 1].y && l[m].x === l[m + 1].x - 1
              ? (y |= 1 << (d - 1 - m))
              : b.push(m);
        var C = b.length,
          P = new Int8Array(C),
          I = new Int8Array(C),
          M = new Uint16Array(C);
        for (h = 0; h < C; h++)
          (m = b[h]),
            (P[h] = l[m].x),
            (I[h] = l[m].y),
            (M[h] = 1 << (d - 1 - m));
        for (
          var S,
            T,
            A,
            D,
            L,
            z = -x,
            F = -k,
            O = t - w,
            B = p[n],
            q = new Uint8Array(t),
            R = [],
            E = o.decoder,
            U = o.contextCache.getContexts("GB"),
            X = 0,
            H = 0,
            J = 0;
          J < r;
          J++
        ) {
          if (i)
            if ((X ^= E.readBit(U, B))) {
              R.push(q);
              continue;
            }
          for (q = new Uint8Array(q), R.push(q), S = 0; S < t; S++)
            if (c && a[J][S]) q[S] = 0;
            else {
              if (S >= z && S < O && J >= F)
                for (H = (H << 1) & y, m = 0; m < C; m++)
                  (T = J + I[m]),
                    (A = S + P[m]),
                    (D = R[T][A]) && (H |= D = M[m]);
              else
                for (H = 0, L = d - 1, m = 0; m < d; m++, L--)
                  (A = S + v[m]) >= 0 &&
                    A < t &&
                    (T = J + g[m]) >= 0 &&
                    (D = R[T][A]) &&
                    (H |= D << L);
              var _ = E.readBit(U, H);
              q[S] = _;
            }
        }
        return R;
      }
      function g(e, t, r, n, i, a, s, o, c) {
        var l = m[r].coding;
        0 === r && (l = l.concat([o[0]]));
        var h,
          u = l.length,
          p = new Int32Array(u),
          v = new Int32Array(u);
        for (h = 0; h < u; h++) (p[h] = l[h].x), (v[h] = l[h].y);
        var g = m[r].reference;
        0 === r && (g = g.concat([o[1]]));
        var b = g.length,
          y = new Int32Array(b),
          x = new Int32Array(b);
        for (h = 0; h < b; h++) (y[h] = g[h].x), (x[h] = g[h].y);
        for (
          var w = n[0].length,
            k = n.length,
            C = d[r],
            P = [],
            I = c.decoder,
            M = c.contextCache.getContexts("GR"),
            S = 0,
            T = 0;
          T < t;
          T++
        ) {
          if (s)
            (S ^= I.readBit(M, C)) &&
              f("JBIG2 error: prediction is not supported");
          var A = new Uint8Array(e);
          P.push(A);
          for (var D = 0; D < e; D++) {
            var L,
              z,
              F = 0;
            for (h = 0; h < u; h++)
              (L = T + v[h]),
                (z = D + p[h]),
                L < 0 || z < 0 || z >= e ? (F <<= 1) : (F = (F << 1) | P[L][z]);
            for (h = 0; h < b; h++)
              (L = T + x[h] + a),
                (z = D + y[h] + i),
                L < 0 || L >= k || z < 0 || z >= w
                  ? (F <<= 1)
                  : (F = (F << 1) | n[L][z]);
            var O = I.readBit(M, F);
            A[D] = O;
          }
        }
        return P;
      }
      function b(e, t, n, a, s, o, c, l, h, u, m, p, d, v, b, y, x) {
        e && f("JBIG2 error: huffman is not supported");
        var w,
          k,
          C = [];
        for (w = 0; w < a; w++) {
          if (((k = new Uint8Array(n)), s))
            for (var P = 0; P < n; P++) k[P] = s;
          C.push(k);
        }
        var I = x.decoder,
          M = x.contextCache,
          S = -r(M, "IADT", I),
          T = 0;
        for (w = 0; w < o; ) {
          S += r(M, "IADT", I);
          for (var A = (T += r(M, "IAFS", I)); ; ) {
            var D = c * S + (1 === c ? 0 : r(M, "IAIT", I)),
              L = i(M, I, h),
              z = t && r(M, "IARI", I),
              F = l[L],
              O = F[0].length,
              B = F.length;
            if (z) {
              var q = r(M, "IARDW", I),
                R = r(M, "IARDH", I);
              F = g(
                (O += q),
                (B += R),
                b,
                F,
                (q >> 1) + r(M, "IARDX", I),
                (R >> 1) + r(M, "IARDY", I),
                !1,
                y,
                x
              );
            }
            var E,
              U,
              X,
              H = D - (1 & p ? 0 : B),
              J = A - (2 & p ? O : 0);
            if (u) {
              for (E = 0; E < B; E++)
                if ((k = C[J + E])) {
                  X = F[E];
                  var _ = Math.min(n - H, O);
                  switch (d) {
                    case 0:
                      for (U = 0; U < _; U++) k[H + U] |= X[U];
                      break;
                    case 2:
                      for (U = 0; U < _; U++) k[H + U] ^= X[U];
                      break;
                    default:
                      f("JBIG2 error: operator " + d + " is not supported");
                  }
                }
              A += B - 1;
            } else {
              for (U = 0; U < B; U++)
                if ((k = C[H + U]))
                  switch (((X = F[U]), d)) {
                    case 0:
                      for (E = 0; E < O; E++) k[J + E] |= X[E];
                      break;
                    case 2:
                      for (E = 0; E < O; E++) k[J + E] ^= X[E];
                      break;
                    default:
                      f("JBIG2 error: operator " + d + " is not supported");
                  }
              A += O - 1;
            }
            w++;
            var N = r(M, "IADS", I);
            if (null === N) break;
            A += N + m;
          }
        }
        return C;
      }
      function y(e, t) {
        var r = {};
        r.number = l(e, t);
        var n = e[t + 4],
          i = 63 & n;
        a[i] || f("JBIG2 error: invalid segment type: " + i),
          (r.type = i),
          (r.typeName = a[i]),
          (r.deferredNonRetain = !!(128 & n));
        var s = !!(64 & n),
          o = e[t + 5],
          h = (o >> 5) & 7,
          u = [31 & o],
          m = t + 6;
        if (7 === o) {
          (h = 536870911 & l(e, m - 1)), (m += 3);
          var p = (h + 7) >> 3;
          for (u[0] = e[m++]; --p > 0; ) u.push(e[m++]);
        } else
          (5 !== o && 6 !== o) || f("JBIG2 error: invalid referred-to flags");
        r.retainBits = u;
        var d,
          v,
          g = r.number <= 256 ? 1 : r.number <= 65536 ? 2 : 4,
          b = [];
        for (d = 0; d < h; d++) {
          var y = 1 === g ? e[m] : 2 === g ? c(e, m) : l(e, m);
          b.push(y), (m += g);
        }
        if (
          ((r.referredTo = b),
          s
            ? ((r.pageAssociation = l(e, m)), (m += 4))
            : (r.pageAssociation = e[m++]),
          (r.length = l(e, m)),
          (m += 4),
          4294967295 === r.length)
        )
          if (38 === i) {
            var x = w(e, m),
              C = !!(1 & e[m + k]),
              P = new Uint8Array(6);
            for (
              C || ((P[0] = 255), (P[1] = 172)),
                P[2] = (x.height >>> 24) & 255,
                P[3] = (x.height >> 16) & 255,
                P[4] = (x.height >> 8) & 255,
                P[5] = 255 & x.height,
                d = m,
                v = e.length;
              d < v;
              d++
            ) {
              for (var I = 0; I < 6 && P[I] === e[d + I]; ) I++;
              if (6 === I) {
                r.length = d + 6;
                break;
              }
            }
            4294967295 === r.length &&
              f("JBIG2 error: segment end was not found");
          } else f("JBIG2 error: invalid unknown segment length");
        return (r.headerEnd = m), r;
      }
      function x(e, t, r, n) {
        for (var i = [], a = r; a < n; ) {
          var s = y(t, a);
          a = s.headerEnd;
          var o = { header: s, data: t };
          if (
            (e.randomAccess || ((o.start = a), (a += s.length), (o.end = a)),
            i.push(o),
            51 === s.type)
          )
            break;
        }
        if (e.randomAccess)
          for (var c = 0, l = i.length; c < l; c++)
            (i[c].start = a), (a += i[c].header.length), (i[c].end = a);
        return i;
      }
      function w(e, t) {
        return {
          width: l(e, t),
          height: l(e, t + 4),
          x: l(e, t + 8),
          y: l(e, t + 12),
          combinationOperator: 7 & e[t + 16],
        };
      }
      var k = 17;
      function C(e, t) {
        var r,
          n,
          i,
          a,
          s = e.header,
          h = e.data,
          u = e.start,
          m = e.end;
        switch (s.type) {
          case 0:
            var p = {},
              d = c(h, u);
            if (
              ((p.huffman = !!(1 & d)),
              (p.refinement = !!(2 & d)),
              (p.huffmanDHSelector = (d >> 2) & 3),
              (p.huffmanDWSelector = (d >> 4) & 3),
              (p.bitmapSizeSelector = (d >> 6) & 1),
              (p.aggregationInstancesSelector = (d >> 7) & 1),
              (p.bitmapCodingContextUsed = !!(256 & d)),
              (p.bitmapCodingContextRetained = !!(512 & d)),
              (p.template = (d >> 10) & 3),
              (p.refinementTemplate = (d >> 12) & 1),
              (u += 2),
              !p.huffman)
            ) {
              for (a = 0 === p.template ? 4 : 1, n = [], i = 0; i < a; i++)
                n.push({ x: o(h, u), y: o(h, u + 1) }), (u += 2);
              p.at = n;
            }
            if (p.refinement && !p.refinementTemplate) {
              for (n = [], i = 0; i < 2; i++)
                n.push({ x: o(h, u), y: o(h, u + 1) }), (u += 2);
              p.refinementAt = n;
            }
            (p.numberOfExportedSymbols = l(h, u)),
              (u += 4),
              (p.numberOfNewSymbols = l(h, u)),
              (u += 4),
              (r = [p, s.number, s.referredTo, h, u, m]);
            break;
          case 6:
          case 7:
            var v = {};
            v.info = w(h, u);
            var g = c(h, (u += k));
            if (
              ((u += 2),
              (v.huffman = !!(1 & g)),
              (v.refinement = !!(2 & g)),
              (v.stripSize = 1 << ((g >> 2) & 3)),
              (v.referenceCorner = (g >> 4) & 3),
              (v.transposed = !!(64 & g)),
              (v.combinationOperator = (g >> 7) & 3),
              (v.defaultPixelValue = (g >> 9) & 1),
              (v.dsOffset = (g << 17) >> 27),
              (v.refinementTemplate = (g >> 15) & 1),
              v.huffman)
            ) {
              var b = c(h, u);
              (u += 2),
                (v.huffmanFS = 3 & b),
                (v.huffmanDS = (b >> 2) & 3),
                (v.huffmanDT = (b >> 4) & 3),
                (v.huffmanRefinementDW = (b >> 6) & 3),
                (v.huffmanRefinementDH = (b >> 8) & 3),
                (v.huffmanRefinementDX = (b >> 10) & 3),
                (v.huffmanRefinementDY = (b >> 12) & 3),
                (v.huffmanRefinementSizeSelector = !!(14 & b));
            }
            if (v.refinement && !v.refinementTemplate) {
              for (n = [], i = 0; i < 2; i++)
                n.push({ x: o(h, u), y: o(h, u + 1) }), (u += 2);
              v.refinementAt = n;
            }
            (v.numberOfSymbolInstances = l(h, u)),
              (u += 4),
              v.huffman && f("JBIG2 error: huffman is not supported"),
              (r = [v, s.referredTo, h, u, m]);
            break;
          case 38:
          case 39:
            var y = {};
            (y.info = w(h, u)), (u += k);
            var x = h[u++];
            if (
              ((y.mmr = !!(1 & x)),
              (y.template = (x >> 1) & 3),
              (y.prediction = !!(8 & x)),
              !y.mmr)
            ) {
              for (a = 0 === y.template ? 4 : 1, n = [], i = 0; i < a; i++)
                n.push({ x: o(h, u), y: o(h, u + 1) }), (u += 2);
              y.at = n;
            }
            r = [y, h, u, m];
            break;
          case 48:
            var C = {
              width: l(h, u),
              height: l(h, u + 4),
              resolutionX: l(h, u + 8),
              resolutionY: l(h, u + 12),
            };
            4294967295 === C.height && delete C.height;
            var P = h[u + 16];
            c(h, u + 17),
              (C.lossless = !!(1 & P)),
              (C.refinement = !!(2 & P)),
              (C.defaultPixelValue = (P >> 2) & 1),
              (C.combinationOperator = (P >> 3) & 3),
              (C.requiresBuffer = !!(32 & P)),
              (C.combinationOperatorOverride = !!(64 & P)),
              (r = [C]);
            break;
          case 49:
          case 50:
          case 51:
          case 62:
            break;
          default:
            f(
              "JBIG2 error: segment type " +
                s.typeName +
                "(" +
                s.type +
                ") is not implemented"
            );
        }
        var I = "on" + s.typeName;
        I in t && t[I].apply(t, r);
      }
      function P(e, t) {
        for (var r = 0, n = e.length; r < n; r++) C(e[r], t);
      }
      function I() {}
      function M() {}
      return (
        (I.prototype = {
          onPageInformation: function (e) {
            this.currentPageInfo = e;
            var t = (e.width + 7) >> 3,
              r = new Uint8Array(t * e.height);
            if (e.defaultPixelValue)
              for (var n = 0, i = r.length; n < i; n++) r[n] = 255;
            this.buffer = r;
          },
          drawBitmap: function (e, t) {
            var r,
              n,
              i,
              a,
              s = this.currentPageInfo,
              o = e.width,
              c = e.height,
              l = (s.width + 7) >> 3,
              h = s.combinationOperatorOverride
                ? e.combinationOperator
                : s.combinationOperator,
              u = this.buffer,
              m = 128 >> (7 & e.x),
              p = e.y * l + (e.x >> 3);
            switch (h) {
              case 0:
                for (r = 0; r < c; r++) {
                  for (i = m, a = p, n = 0; n < o; n++)
                    t[r][n] && (u[a] |= i), (i >>= 1) || ((i = 128), a++);
                  p += l;
                }
                break;
              case 2:
                for (r = 0; r < c; r++) {
                  for (i = m, a = p, n = 0; n < o; n++)
                    t[r][n] && (u[a] ^= i), (i >>= 1) || ((i = 128), a++);
                  p += l;
                }
                break;
              default:
                f("JBIG2 error: operator " + h + " is not supported");
            }
          },
          onImmediateGenericRegion: function (e, r, n, i) {
            var a = e.info,
              s = new t(r, n, i),
              o = v(
                e.mmr,
                a.width,
                a.height,
                e.template,
                e.prediction,
                null,
                e.at,
                s
              );
            this.drawBitmap(a, o);
          },
          onImmediateLosslessGenericRegion: function () {
            this.onImmediateGenericRegion.apply(this, arguments);
          },
          onSymbolDictionary: function (e, n, a, o, c, l) {
            e.huffman && f("JBIG2 error: huffman is not supported");
            var h = this.symbols;
            h || (this.symbols = h = {});
            for (var u = [], m = 0, p = a.length; m < p; m++)
              u = u.concat(h[a[m]]);
            var d = new t(o, c, l);
            h[n] = (function (e, t, n, a, o, c, l, h, u, m, p) {
              e && f("JBIG2 error: huffman is not supported");
              for (
                var d = [],
                  y = 0,
                  x = s(n.length + a),
                  w = p.decoder,
                  k = p.contextCache;
                d.length < a;

              ) {
                y += r(k, "IADH", w);
                for (var C = 0; ; ) {
                  var P,
                    I = r(k, "IADW", w);
                  if (null === I) break;
                  if (((C += I), t)) {
                    var M = r(k, "IAAI", w);
                    if (M > 1)
                      P = b(
                        e,
                        t,
                        C,
                        y,
                        0,
                        M,
                        1,
                        n.concat(d),
                        x,
                        0,
                        0,
                        1,
                        0,
                        0,
                        u,
                        m,
                        p
                      );
                    else {
                      var S = i(k, w, x),
                        T = r(k, "IARDX", w),
                        A = r(k, "IARDY", w);
                      P = g(
                        C,
                        y,
                        u,
                        S < n.length ? n[S] : d[S - n.length],
                        T,
                        A,
                        !1,
                        m,
                        p
                      );
                    }
                  } else P = v(!1, C, y, l, !1, null, h, p);
                  d.push(P);
                }
              }
              for (
                var D = [], L = [], z = !1, F = n.length + a;
                L.length < F;

              ) {
                for (var O = r(k, "IAEX", w); O--; ) L.push(z);
                z = !z;
              }
              for (var B = 0, q = n.length; B < q; B++) L[B] && D.push(n[B]);
              for (var R = 0; R < a; B++, R++) L[B] && D.push(d[R]);
              return D;
            })(
              e.huffman,
              e.refinement,
              u,
              e.numberOfNewSymbols,
              e.numberOfExportedSymbols,
              0,
              e.template,
              e.at,
              e.refinementTemplate,
              e.refinementAt,
              d
            );
          },
          onImmediateTextRegion: function (e, r, n, i, a) {
            for (
              var o = e.info, c = this.symbols, l = [], h = 0, f = r.length;
              h < f;
              h++
            )
              l = l.concat(c[r[h]]);
            var u = s(l.length),
              m = new t(n, i, a),
              p = b(
                e.huffman,
                e.refinement,
                o.width,
                o.height,
                e.defaultPixelValue,
                e.numberOfSymbolInstances,
                e.stripSize,
                l,
                u,
                e.transposed,
                e.dsOffset,
                e.referenceCorner,
                e.combinationOperator,
                0,
                e.refinementTemplate,
                e.refinementAt,
                m
              );
            this.drawBitmap(o, p);
          },
          onImmediateLosslessTextRegion: function () {
            this.onImmediateTextRegion.apply(this, arguments);
          },
        }),
        (M.prototype = {
          parseChunks: function (e) {
            return (function (e) {
              for (var t = new I(), r = 0, n = e.length; r < n; r++) {
                var i = e[r];
                P(x({}, i.data, i.start, i.end), t);
              }
              return t.buffer;
            })(e);
          },
        }),
        M
      );
    })();
  function s(e) {
    for (var t = 1, r = 0; e > t; ) (t <<= 1), r++;
    return r;
  }
  function o(e, t) {
    return (e[t] << 24) >> 24;
  }
  function c(e, t) {
    return (e[t] << 8) | e[t + 1];
  }
  function l(e, t) {
    return ((e[t] << 24) | (e[t + 1] << 16) | (e[t + 2] << 8) | e[t + 3]) >>> 0;
  }
  function h(e, t, r) {
    return (
      Object.defineProperty(e, t, {
        value: r,
        enumerable: !0,
        configurable: !0,
        writable: !1,
      }),
      r
    );
  }
  var f = function () {
      throw (
        (console.error.apply(console, arguments),
        new Error("PDFJS error: " + arguments[0]))
      );
    },
    u = function () {
      console.warn.apply(console, arguments);
    },
    m = function () {
      console.info.apply(console, arguments);
    };
  (a.prototype.parse = function (e) {
    var t = 0,
      r = e.length;
    (151 === e[t] &&
      74 === e[t + 1] &&
      66 === e[t + 2] &&
      50 === e[t + 3] &&
      13 === e[t + 4] &&
      10 === e[t + 5] &&
      26 === e[t + 6] &&
      10 === e[t + 7]) ||
      f("JBIG2 error: invalid header");
    var n = {};
    t += 8;
    var i = e[t++];
    (n.randomAccess = !(1 & i)),
      2 & i || ((n.numberOfPages = l(e, t)), (t += 4));
    for (
      var a = this.parseChunks([{ data: e, start: t, end: r }]),
        s = a.currentPageInfo.width,
        o = a.currentPageInfo.height,
        c = a.buffer,
        h = ((e = new Uint8Array(s * o)), 0),
        u = 0,
        m = 0;
      m < o;
      m++
    )
      for (var p, d = 0, v = 0; v < s; v++)
        d || ((d = 128), (p = c[u++])), (e[h++] = p & d ? 0 : 255), (d >>= 1);
    (this.width = s), (this.height = o), (this.data = e);
  }),
    (e.JpegImage = r),
    (e.JpxImage = i),
    (e.Jbig2Image = a);
})(PDFJS || (PDFJS = {}));

(function () {
  var o,
    X = 0,
    e = null,
    n = null;
  o = window.FFT = {};
  var f = {
    o: function (G) {
      if (G !== 0 && (G & (G - 1)) === 0) {
        X = G;
        f.B();
        f.q();
        f.i();
      } else {
        throw new Error("init: radix-2 required");
      }
    },
    X: function (G, B) {
      f.G(G, B, 1);
    },
    e: function (G, B) {
      var j = 1 / X;
      f.G(G, B, -1);
      for (var q = 0; q < X; q++) {
        G[q] *= j;
        B[q] *= j;
      }
    },
    n: function (G, B) {
      var j = [],
        q = [],
        i = 0;
      for (var m = 0; m < X; m++) {
        i = m * X;
        for (var Z = 0; Z < X; Z++) {
          j[Z] = G[Z + i];
          q[Z] = B[Z + i];
        }
        f.X(j, q);
        for (var p = 0; p < X; p++) {
          G[p + i] = j[p];
          B[p + i] = q[p];
        }
      }
      for (var C = 0; C < X; C++) {
        for (var a = 0; a < X; a++) {
          i = C + a * X;
          j[a] = G[i];
          q[a] = B[i];
        }
        f.X(j, q);
        for (var r = 0; r < X; r++) {
          i = C + r * X;
          G[i] = j[r];
          B[i] = q[r];
        }
      }
    },
    f: function (G, B) {
      var j = [],
        q = [],
        i = 0;
      for (var m = 0; m < X; m++) {
        i = m * X;
        for (var Z = 0; Z < X; Z++) {
          j[Z] = G[Z + i];
          q[Z] = B[Z + i];
        }
        f.e(j, q);
        for (var p = 0; p < X; p++) {
          G[p + i] = j[p];
          B[p + i] = q[p];
        }
      }
      for (var C = 0; C < X; C++) {
        for (var a = 0; a < X; a++) {
          i = C + a * X;
          j[a] = G[i];
          q[a] = B[i];
        }
        f.e(j, q);
        for (var r = 0; r < X; r++) {
          i = C + r * X;
          G[i] = j[r];
          B[i] = q[r];
        }
      }
    },
    G: function (G, B, j) {
      var q,
        i,
        m,
        Z,
        p,
        C,
        a,
        r,
        M,
        R = X >> 2;
      for (var P = 0; P < X; P++) {
        Z = e[P];
        if (P < Z) {
          p = G[P];
          G[P] = G[Z];
          G[Z] = p;
          p = B[P];
          B[P] = B[Z];
          B[Z] = p;
        }
      }
      for (var y = 1; y < X; y <<= 1) {
        i = 0;
        q = X / (y << 1);
        for (var x = 0; x < y; x++) {
          C = n[i + R];
          a = j * n[i];
          for (var t = x; t < X; t += y << 1) {
            m = t + y;
            r = C * G[m] + a * B[m];
            M = C * B[m] - a * G[m];
            G[m] = G[t] - r;
            G[t] += r;
            B[m] = B[t] - M;
            B[t] += M;
          }
          i += q;
        }
      }
    },
    B: function () {
      var G = Uint32Array;
      if (X <= 256) G = Uint8Array;
      else if (X <= 65536) G = Uint16Array;
      e = new G(X);
      n = new Float64Array(X * 1.25);
    },
    j: function () {},
    q: function () {
      var G = 0,
        B = 0,
        q = 0;
      e[0] = 0;
      while (++G < X) {
        q = X >> 1;
        while (q <= B) {
          B -= q;
          q >>= 1;
        }
        B += q;
        e[G] = B;
      }
    },
    i: function () {
      var G = X >> 1,
        B = X >> 2,
        j = X >> 3,
        q = G + B,
        i = Math.sin(Math.PI / X),
        m = 2 * i * i,
        Z = Math.sqrt(m * (2 - m)),
        p = (n[B] = 1),
        C = (n[0] = 0);
      i = 2 * m;
      for (var a = 1; a < j; a++) {
        p -= m;
        m += i * p;
        C += Z;
        Z -= i * C;
        n[a] = C;
        n[B - a] = p;
      }
      if (j !== 0) {
        n[j] = Math.sqrt(0.5);
      }
      for (var r = 0; r < B; r++) {
        n[G - r] = n[r];
      }
      for (var M = 0; M < q; M++) {
        n[M + G] = -n[M];
      }
    },
  };
  o.init = f.o;
  o.fft2d = f.n;
  o.ifft2d = f.f;
}).call(this);

(function (r) {
  "object" === typeof exports && "undefined" !== typeof module
    ? (module.exports = r())
    : "function" === typeof define && define.amd
    ? define([], r)
    : (("undefined" !== typeof window
        ? window
        : "undefined" !== typeof global
        ? global
        : "undefined" !== typeof self
        ? self
        : this
      ).acorn = r());
})(function () {
  return (function a(l, f, c) {
    function g(d, n) {
      if (!f[d]) {
        if (!l[d]) {
          var e = "function" == typeof require && require;
          if (!n && e) return e(d, !0);
          if (b) return b(d, !0);
          e = Error("Cannot find module '" + d + "'");
          throw ((e.code = "MODULE_NOT_FOUND"), e);
        }
        e = f[d] = { exports: {} };
        l[d][0].call(
          e.exports,
          function (b) {
            var e = l[d][1][b];
            return g(e ? e : b);
          },
          e,
          e.exports,
          a,
          l,
          f,
          c
        );
      }
      return f[d].exports;
    }
    for (
      var b = "function" == typeof require && require, d = 0;
      d < c.length;
      d++
    )
      g(c[d]);
    return g;
  })(
    {
      1: [
        function (a, l, f) {
          var c = a("./tokentype");
          a = a("./state").Parser.prototype;
          a.checkPropClash = function (b, c) {
            if (
              !(
                6 <= this.options.ecmaVersion &&
                (b.computed || b.method || b.shorthand)
              )
            ) {
              var d = b.key;
              switch (d.type) {
                case "Identifier":
                  var a = d.name;
                  break;
                case "Literal":
                  a = String(d.value);
                  break;
                default:
                  return;
              }
              var e = b.kind;
              if (6 <= this.options.ecmaVersion)
                "__proto__" === a &&
                  "init" === e &&
                  (c.proto &&
                    this.raiseRecoverable(
                      d.start,
                      "Redefinition of __proto__ property"
                    ),
                  (c.proto = !0));
              else {
                a = "$" + a;
                var m = c[a];
                m
                  ? ((a = "init" !== e),
                    (((!this.strict && !a) || !m[e]) && a ^ m.init) ||
                      this.raiseRecoverable(
                        d.start,
                        "Redefinition of property"
                      ))
                  : (m = c[a] = { init: !1, get: !1, set: !1 });
                m[e] = !0;
              }
            }
          };
          a.parseExpression = function (b, a) {
            var d = this.start,
              n = this.startLoc,
              e = this.parseMaybeAssign(b, a);
            if (this.type === c.types.comma) {
              d = this.startNodeAt(d, n);
              for (d.expressions = [e]; this.eat(c.types.comma); )
                d.expressions.push(this.parseMaybeAssign(b, a));
              return this.finishNode(d, "SequenceExpression");
            }
            return e;
          };
          a.parseMaybeAssign = function (b, a, h) {
            if (this.inGenerator && this.isContextual("yield"))
              return this.parseYield();
            var d = !1;
            a || ((a = { shorthandAssign: 0, trailingComma: 0 }), (d = !0));
            var e = this.start,
              m = this.startLoc;
            if (this.type == c.types.parenL || this.type == c.types.name)
              this.potentialArrowAt = this.start;
            var p = this.parseMaybeConditional(b, a);
            h && (p = h.call(this, p, e, m));
            if (this.type.isAssign)
              return (
                d && this.checkPatternErrors(a, !0),
                (h = this.startNodeAt(e, m)),
                (h.operator = this.value),
                (h.left = this.type === c.types.eq ? this.toAssignable(p) : p),
                (a.shorthandAssign = 0),
                this.checkLVal(p),
                this.next(),
                (h.right = this.parseMaybeAssign(b)),
                this.finishNode(h, "AssignmentExpression")
              );
            d && this.checkExpressionErrors(a, !0);
            return p;
          };
          a.parseMaybeConditional = function (b, a) {
            var d = this.start,
              n = this.startLoc,
              e = this.parseExprOps(b, a);
            return this.checkExpressionErrors(a)
              ? e
              : this.eat(c.types.question)
              ? ((d = this.startNodeAt(d, n)),
                (d.test = e),
                (d.consequent = this.parseMaybeAssign()),
                this.expect(c.types.colon),
                (d.alternate = this.parseMaybeAssign(b)),
                this.finishNode(d, "ConditionalExpression"))
              : e;
          };
          a.parseExprOps = function (b, c) {
            var a = this.start,
              d = this.startLoc,
              e = this.parseMaybeUnary(c, !1);
            return this.checkExpressionErrors(c)
              ? e
              : this.parseExprOp(e, a, d, -1, b);
          };
          a.parseExprOp = function (b, a, h, n, e) {
            var d = this.type.binop;
            if (null != d && (!e || this.type !== c.types._in) && d > n) {
              var p =
                  this.type === c.types.logicalOR ||
                  this.type === c.types.logicalAND,
                g = this.value;
              this.next();
              var k = this.start,
                q = this.startLoc,
                d = this.parseExprOp(
                  this.parseMaybeUnary(null, !1),
                  k,
                  q,
                  d,
                  e
                );
              b = this.buildBinary(a, h, b, d, g, p);
              return this.parseExprOp(b, a, h, n, e);
            }
            return b;
          };
          a.buildBinary = function (b, c, a, n, e, m) {
            b = this.startNodeAt(b, c);
            b.left = a;
            b.operator = e;
            b.right = n;
            return this.finishNode(
              b,
              m ? "LogicalExpression" : "BinaryExpression"
            );
          };
          a.parseMaybeUnary = function (b, a) {
            var d = this.start,
              n = this.startLoc;
            if (this.type.prefix) {
              var e = this.startNode();
              var m = this.type === c.types.incDec;
              e.operator = this.value;
              e.prefix = !0;
              this.next();
              e.argument = this.parseMaybeUnary(null, !0);
              this.checkExpressionErrors(b, !0);
              m
                ? this.checkLVal(e.argument)
                : this.strict &&
                  "delete" === e.operator &&
                  "Identifier" === e.argument.type
                ? this.raiseRecoverable(
                    e.start,
                    "Deleting local variable in strict mode"
                  )
                : (a = !0);
              m = this.finishNode(
                e,
                m ? "UpdateExpression" : "UnaryExpression"
              );
            } else {
              m = this.parseExprSubscripts(b);
              if (this.checkExpressionErrors(b)) return m;
              for (; this.type.postfix && !this.canInsertSemicolon(); )
                (e = this.startNodeAt(d, n)),
                  (e.operator = this.value),
                  (e.prefix = !1),
                  (e.argument = m),
                  this.checkLVal(m),
                  this.next(),
                  (m = this.finishNode(e, "UpdateExpression"));
            }
            return !a && this.eat(c.types.starstar)
              ? this.buildBinary(
                  d,
                  n,
                  m,
                  this.parseMaybeUnary(null, !1),
                  "**",
                  !1
                )
              : m;
          };
          a.parseExprSubscripts = function (b) {
            var c = this.start,
              a = this.startLoc,
              n = this.parseExprAtom(b),
              e =
                "ArrowFunctionExpression" === n.type &&
                ")" !== this.input.slice(this.lastTokStart, this.lastTokEnd);
            return this.checkExpressionErrors(b) || e
              ? n
              : this.parseSubscripts(n, c, a);
          };
          a.parseSubscripts = function (b, a, h, n) {
            for (var e; ; )
              if (this.eat(c.types.dot))
                (e = this.startNodeAt(a, h)),
                  (e.object = b),
                  (e.property = this.parseIdent(!0)),
                  (e.computed = !1),
                  (b = this.finishNode(e, "MemberExpression"));
              else if (this.eat(c.types.bracketL))
                (e = this.startNodeAt(a, h)),
                  (e.object = b),
                  (e.property = this.parseExpression()),
                  (e.computed = !0),
                  this.expect(c.types.bracketR),
                  (b = this.finishNode(e, "MemberExpression"));
              else if (!n && this.eat(c.types.parenL))
                (e = this.startNodeAt(a, h)),
                  (e.callee = b),
                  (e.arguments = this.parseExprList(c.types.parenR, !1)),
                  (b = this.finishNode(e, "CallExpression"));
              else if (this.type === c.types.backQuote)
                (e = this.startNodeAt(a, h)),
                  (e.tag = b),
                  (e.quasi = this.parseTemplate()),
                  (b = this.finishNode(e, "TaggedTemplateExpression"));
              else return b;
          };
          a.parseExprAtom = function (b) {
            var a = this.potentialArrowAt == this.start;
            switch (this.type) {
              case c.types._super:
                this.inFunction ||
                  this.raise(
                    this.start,
                    "'super' outside of function or class"
                  );
              case c.types._this:
                return (
                  (b =
                    this.type === c.types._this ? "ThisExpression" : "Super"),
                  (a = this.startNode()),
                  this.next(),
                  this.finishNode(a, b)
                );
              case c.types.name:
                b = this.start;
                var h = this.startLoc,
                  n = this.parseIdent(this.type !== c.types.name);
                return a &&
                  !this.canInsertSemicolon() &&
                  this.eat(c.types.arrow)
                  ? this.parseArrowExpression(this.startNodeAt(b, h), [n])
                  : n;
              case c.types.regexp:
                return (
                  (b = this.value),
                  (a = this.parseLiteral(b.value)),
                  (a.regex = { pattern: b.pattern, flags: b.flags }),
                  a
                );
              case c.types.num:
              case c.types.string:
                return this.parseLiteral(this.value);
              case c.types._null:
              case c.types._true:
              case c.types._false:
                return (
                  (a = this.startNode()),
                  (a.value =
                    this.type === c.types._null
                      ? null
                      : this.type === c.types._true),
                  (a.raw = this.type.keyword),
                  this.next(),
                  this.finishNode(a, "Literal")
                );
              case c.types.parenL:
                return this.parseParenAndDistinguishExpression(a);
              case c.types.bracketL:
                return (
                  (a = this.startNode()),
                  this.next(),
                  (a.elements = this.parseExprList(
                    c.types.bracketR,
                    !0,
                    !0,
                    b
                  )),
                  this.finishNode(a, "ArrayExpression")
                );
              case c.types.braceL:
                return this.parseObj(!1, b);
              case c.types._function:
                return (
                  (a = this.startNode()), this.next(), this.parseFunction(a, !1)
                );
              case c.types._class:
                return this.parseClass(this.startNode(), !1);
              case c.types._new:
                return this.parseNew();
              case c.types.backQuote:
                return this.parseTemplate();
              default:
                this.unexpected();
            }
          };
          a.parseLiteral = function (b) {
            var a = this.startNode();
            a.value = b;
            a.raw = this.input.slice(this.start, this.end);
            this.next();
            return this.finishNode(a, "Literal");
          };
          a.parseParenExpression = function () {
            this.expect(c.types.parenL);
            var b = this.parseExpression();
            this.expect(c.types.parenR);
            return b;
          };
          a.parseParenAndDistinguishExpression = function (b) {
            var a = this.start,
              h = this.startLoc;
            if (6 <= this.options.ecmaVersion) {
              this.next();
              for (
                var n = this.start,
                  e = this.startLoc,
                  m = [],
                  p = !0,
                  g = { shorthandAssign: 0, trailingComma: 0 },
                  k = void 0,
                  q = void 0;
                this.type !== c.types.parenR;

              )
                if (
                  (p ? (p = !1) : this.expect(c.types.comma),
                  this.type === c.types.ellipsis)
                ) {
                  k = this.start;
                  m.push(this.parseParenItem(this.parseRest()));
                  break;
                } else
                  this.type !== c.types.parenL || q || (q = this.start),
                    m.push(this.parseMaybeAssign(!1, g, this.parseParenItem));
              var p = this.start,
                f = this.startLoc;
              this.expect(c.types.parenR);
              if (b && !this.canInsertSemicolon() && this.eat(c.types.arrow))
                return (
                  this.checkPatternErrors(g, !0),
                  q && this.unexpected(q),
                  this.parseParenArrowList(a, h, m)
                );
              m.length || this.unexpected(this.lastTokStart);
              k && this.unexpected(k);
              this.checkExpressionErrors(g, !0);
              1 < m.length
                ? ((b = this.startNodeAt(n, e)),
                  (b.expressions = m),
                  this.finishNodeAt(b, "SequenceExpression", p, f))
                : (b = m[0]);
            } else b = this.parseParenExpression();
            return this.options.preserveParens
              ? ((a = this.startNodeAt(a, h)),
                (a.expression = b),
                this.finishNode(a, "ParenthesizedExpression"))
              : b;
          };
          a.parseParenItem = function (b) {
            return b;
          };
          a.parseParenArrowList = function (b, a, c) {
            return this.parseArrowExpression(this.startNodeAt(b, a), c);
          };
          var g = [];
          a.parseNew = function () {
            var b = this.startNode(),
              a = this.parseIdent(!0);
            if (6 <= this.options.ecmaVersion && this.eat(c.types.dot))
              return (
                (b.meta = a),
                (b.property = this.parseIdent(!0)),
                "target" !== b.property.name &&
                  this.raiseRecoverable(
                    b.property.start,
                    "The only valid meta property for new is new.target"
                  ),
                this.inFunction ||
                  this.raiseRecoverable(
                    b.start,
                    "new.target can only be used in functions"
                  ),
                this.finishNode(b, "MetaProperty")
              );
            var a = this.start,
              h = this.startLoc;
            b.callee = this.parseSubscripts(this.parseExprAtom(), a, h, !0);
            this.eat(c.types.parenL)
              ? (b.arguments = this.parseExprList(c.types.parenR, !1))
              : (b.arguments = g);
            return this.finishNode(b, "NewExpression");
          };
          a.parseTemplateElement = function () {
            var b = this.startNode();
            b.value = {
              raw: this.input
                .slice(this.start, this.end)
                .replace(/\r\n?/g, "\n"),
              cooked: this.value,
            };
            this.next();
            b.tail = this.type === c.types.backQuote;
            return this.finishNode(b, "TemplateElement");
          };
          a.parseTemplate = function () {
            var b = this.startNode();
            this.next();
            b.expressions = [];
            var a = this.parseTemplateElement();
            for (b.quasis = [a]; !a.tail; )
              this.expect(c.types.dollarBraceL),
                b.expressions.push(this.parseExpression()),
                this.expect(c.types.braceR),
                b.quasis.push((a = this.parseTemplateElement()));
            this.next();
            return this.finishNode(b, "TemplateLiteral");
          };
          a.parseObj = function (b, a) {
            var d = this.startNode(),
              n = !0,
              e = {};
            d.properties = [];
            for (this.next(); !this.eat(c.types.braceR); ) {
              if (n) n = !1;
              else if (
                (this.expect(c.types.comma),
                this.afterTrailingComma(c.types.braceR))
              )
                break;
              var m = this.startNode(),
                p = void 0,
                g = void 0,
                k = void 0;
              if (6 <= this.options.ecmaVersion) {
                m.method = !1;
                m.shorthand = !1;
                if (b || a) (g = this.start), (k = this.startLoc);
                b || (p = this.eat(c.types.star));
              }
              this.parsePropertyName(m);
              this.parsePropertyValue(m, b, p, g, k, a);
              this.checkPropClash(m, e);
              d.properties.push(this.finishNode(m, "Property"));
            }
            return this.finishNode(d, b ? "ObjectPattern" : "ObjectExpression");
          };
          a.parsePropertyValue = function (b, a, h, n, e, m) {
            this.eat(c.types.colon)
              ? ((b.value = a
                  ? this.parseMaybeDefault(this.start, this.startLoc)
                  : this.parseMaybeAssign(!1, m)),
                (b.kind = "init"))
              : 6 <= this.options.ecmaVersion && this.type === c.types.parenL
              ? (a && this.unexpected(),
                (b.kind = "init"),
                (b.method = !0),
                (b.value = this.parseMethod(h)))
              : 5 <= this.options.ecmaVersion &&
                !b.computed &&
                "Identifier" === b.key.type &&
                ("get" === b.key.name || "set" === b.key.name) &&
                this.type != c.types.comma &&
                this.type != c.types.braceR
              ? ((h || a) && this.unexpected(),
                (b.kind = b.key.name),
                this.parsePropertyName(b),
                (b.value = this.parseMethod(!1)),
                b.value.params.length !== ("get" === b.kind ? 0 : 1) &&
                  ((a = b.value.start),
                  "get" === b.kind
                    ? this.raiseRecoverable(a, "getter should have no params")
                    : this.raiseRecoverable(
                        a,
                        "setter should have exactly one param"
                      )),
                "set" === b.kind &&
                  "RestElement" === b.value.params[0].type &&
                  this.raiseRecoverable(
                    b.value.params[0].start,
                    "Setter cannot use rest params"
                  ))
              : 6 <= this.options.ecmaVersion &&
                !b.computed &&
                "Identifier" === b.key.type
              ? ((b.kind = "init"),
                a
                  ? ((this.keywords.test(b.key.name) ||
                      (this.strict
                        ? this.reservedWordsStrictBind
                        : this.reservedWords
                      ).test(b.key.name) ||
                      (this.inGenerator && "yield" == b.key.name)) &&
                      this.raiseRecoverable(
                        b.key.start,
                        "Binding " + b.key.name
                      ),
                    (b.value = this.parseMaybeDefault(n, e, b.key)))
                  : this.type === c.types.eq && m
                  ? (m.shorthandAssign || (m.shorthandAssign = this.start),
                    (b.value = this.parseMaybeDefault(n, e, b.key)))
                  : (b.value = b.key),
                (b.shorthand = !0))
              : this.unexpected();
          };
          a.parsePropertyName = function (b) {
            if (6 <= this.options.ecmaVersion) {
              if (this.eat(c.types.bracketL))
                return (
                  (b.computed = !0),
                  (b.key = this.parseMaybeAssign()),
                  this.expect(c.types.bracketR),
                  b.key
                );
              b.computed = !1;
            }
            return (b.key =
              this.type === c.types.num || this.type === c.types.string
                ? this.parseExprAtom()
                : this.parseIdent(!0));
          };
          a.initFunction = function (b) {
            b.id = null;
            6 <= this.options.ecmaVersion &&
              ((b.generator = !1), (b.expression = !1));
          };
          a.parseMethod = function (b) {
            var a = this.startNode(),
              h = this.inGenerator;
            this.inGenerator = b;
            this.initFunction(a);
            this.expect(c.types.parenL);
            a.params = this.parseBindingList(c.types.parenR, !1, !1);
            6 <= this.options.ecmaVersion && (a.generator = b);
            this.parseFunctionBody(a, !1);
            this.inGenerator = h;
            return this.finishNode(a, "FunctionExpression");
          };
          a.parseArrowExpression = function (b, a) {
            var c = this.inGenerator;
            this.inGenerator = !1;
            this.initFunction(b);
            b.params = this.toAssignableList(a, !0);
            this.parseFunctionBody(b, !0);
            this.inGenerator = c;
            return this.finishNode(b, "ArrowFunctionExpression");
          };
          a.parseFunctionBody = function (b, a) {
            var d = a && this.type !== c.types.braceL;
            if (d) (b.body = this.parseMaybeAssign()), (b.expression = !0);
            else {
              var n = this.inFunction,
                e = this.labels;
              this.inFunction = !0;
              this.labels = [];
              b.body = this.parseBlock(!0);
              b.expression = !1;
              this.inFunction = n;
              this.labels = e;
            }
            this.strict ||
            (!d && b.body.body.length && this.isUseStrict(b.body.body[0]))
              ? ((d = this.strict),
                (this.strict = !0),
                b.id && this.checkLVal(b.id, !0),
                this.checkParams(b),
                (this.strict = d))
              : a && this.checkParams(b);
          };
          a.checkParams = function (b) {
            for (var a = {}, c = 0; c < b.params.length; c++)
              this.checkLVal(b.params[c], !0, a);
          };
          a.parseExprList = function (b, a, h, n) {
            for (var e = [], d = !0; !this.eat(b); ) {
              if (d) d = !1;
              else if (
                (this.expect(c.types.comma), a && this.afterTrailingComma(b))
              )
                break;
              if (h && this.type === c.types.comma) var p = null;
              else
                this.type === c.types.ellipsis
                  ? ((p = this.parseSpread(n)),
                    this.type === c.types.comma &&
                      n &&
                      !n.trailingComma &&
                      (n.trailingComma = this.lastTokStart))
                  : (p = this.parseMaybeAssign(!1, n));
              e.push(p);
            }
            return e;
          };
          a.parseIdent = function (b) {
            var a = this.startNode();
            b && "never" == this.options.allowReserved && (b = !1);
            this.type === c.types.name
              ? (!b &&
                  (this.strict
                    ? this.reservedWordsStrict
                    : this.reservedWords
                  ).test(this.value) &&
                  (6 <= this.options.ecmaVersion ||
                    -1 ==
                      this.input.slice(this.start, this.end).indexOf("\\")) &&
                  this.raiseRecoverable(
                    this.start,
                    "The keyword '" + this.value + "' is reserved"
                  ),
                !b &&
                  this.inGenerator &&
                  "yield" === this.value &&
                  this.raiseRecoverable(
                    this.start,
                    "Can not use 'yield' as identifier inside a generator"
                  ),
                (a.name = this.value))
              : b && this.type.keyword
              ? (a.name = this.type.keyword)
              : this.unexpected();
            this.next();
            return this.finishNode(a, "Identifier");
          };
          a.parseYield = function () {
            var b = this.startNode();
            this.next();
            this.type == c.types.semi ||
            this.canInsertSemicolon() ||
            (this.type != c.types.star && !this.type.startsExpr)
              ? ((b.delegate = !1), (b.argument = null))
              : ((b.delegate = this.eat(c.types.star)),
                (b.argument = this.parseMaybeAssign()));
            return this.finishNode(b, "YieldExpression");
          };
        },
        { "./state": 10, "./tokentype": 14 },
      ],
      2: [
        function (a, l, f) {
          function c(b, a) {
            for (var e = 65536, c = 0; c < a.length; c += 2) {
              e += a[c];
              if (e > b) return !1;
              e += a[c + 1];
              if (e >= b) return !0;
            }
          }
          f.__esModule = !0;
          f.isIdentifierStart = function (b, a) {
            return 65 > b
              ? 36 === b
              : 91 > b
              ? !0
              : 97 > b
              ? 95 === b
              : 123 > b
              ? !0
              : 65535 >= b
              ? 170 <= b && g.test(String.fromCharCode(b))
              : !1 === a
              ? !1
              : c(b, d);
          };
          f.isIdentifierChar = function (a, e) {
            return 48 > a
              ? 36 === a
              : 58 > a
              ? !0
              : 65 > a
              ? !1
              : 91 > a
              ? !0
              : 97 > a
              ? 95 === a
              : 123 > a
              ? !0
              : 65535 >= a
              ? 170 <= a && b.test(String.fromCharCode(a))
              : !1 === e
              ? !1
              : c(a, d) || c(a, h);
          };
          f.reservedWords = {
            3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",
            5: "class enum extends super const export import",
            6: "enum",
            7: "enum",
            strict:
              "implements interface let package private protected public static yield",
            strictBind: "eval arguments",
          };
          f.keywords = {
            5: "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this",
            6: "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this const class extends export import super",
          };
          a =
            "\u00aa\u00b5\u00ba\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u037f\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u052f\u0531-\u0556\u0559\u0561-\u0587\u05d0-\u05ea\u05f0-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u08a0-\u08b4\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0af9\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c39\u0c3d\u0c58-\u0c5a\u0c60\u0c61\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d5f-\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f5\u13f8-\u13fd\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f8\u1700-\u170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1877\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191e\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4b\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1ce9-\u1cec\u1cee-\u1cf1\u1cf5\u1cf6\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2118-\u211d\u2124\u2126\u2128\u212a-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309b-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312d\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fd5\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua69d\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua7ad\ua7b0-\ua7b7\ua7f7-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua8fd\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\ua9e0-\ua9e4\ua9e6-\ua9ef\ua9fa-\ua9fe\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa7e-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uab30-\uab5a\uab5c-\uab65\uab70-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc";
          var g = new RegExp("[" + a + "]"),
            b = new RegExp(
              "[" +
                a +
                "\u200c\u200d\u00b7\u0300-\u036f\u0387\u0483-\u0487\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610-\u061a\u064b-\u0669\u0670\u06d6-\u06dc\u06df-\u06e4\u06e7\u06e8\u06ea-\u06ed\u06f0-\u06f9\u0711\u0730-\u074a\u07a6-\u07b0\u07c0-\u07c9\u07eb-\u07f3\u0816-\u0819\u081b-\u0823\u0825-\u0827\u0829-\u082d\u0859-\u085b\u08e3-\u0903\u093a-\u093c\u093e-\u094f\u0951-\u0957\u0962\u0963\u0966-\u096f\u0981-\u0983\u09bc\u09be-\u09c4\u09c7\u09c8\u09cb-\u09cd\u09d7\u09e2\u09e3\u09e6-\u09ef\u0a01-\u0a03\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a66-\u0a71\u0a75\u0a81-\u0a83\u0abc\u0abe-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ae2\u0ae3\u0ae6-\u0aef\u0b01-\u0b03\u0b3c\u0b3e-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b56\u0b57\u0b62\u0b63\u0b66-\u0b6f\u0b82\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd7\u0be6-\u0bef\u0c00-\u0c03\u0c3e-\u0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c62\u0c63\u0c66-\u0c6f\u0c81-\u0c83\u0cbc\u0cbe-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0ce2\u0ce3\u0ce6-\u0cef\u0d01-\u0d03\u0d3e-\u0d44\u0d46-\u0d48\u0d4a-\u0d4d\u0d57\u0d62\u0d63\u0d66-\u0d6f\u0d82\u0d83\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0de6-\u0def\u0df2\u0df3\u0e31\u0e34-\u0e3a\u0e47-\u0e4e\u0e50-\u0e59\u0eb1\u0eb4-\u0eb9\u0ebb\u0ebc\u0ec8-\u0ecd\u0ed0-\u0ed9\u0f18\u0f19\u0f20-\u0f29\u0f35\u0f37\u0f39\u0f3e\u0f3f\u0f71-\u0f84\u0f86\u0f87\u0f8d-\u0f97\u0f99-\u0fbc\u0fc6\u102b-\u103e\u1040-\u1049\u1056-\u1059\u105e-\u1060\u1062-\u1064\u1067-\u106d\u1071-\u1074\u1082-\u108d\u108f-\u109d\u135d-\u135f\u1369-\u1371\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17b4-\u17d3\u17dd\u17e0-\u17e9\u180b-\u180d\u1810-\u1819\u18a9\u1920-\u192b\u1930-\u193b\u1946-\u194f\u19d0-\u19da\u1a17-\u1a1b\u1a55-\u1a5e\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1ab0-\u1abd\u1b00-\u1b04\u1b34-\u1b44\u1b50-\u1b59\u1b6b-\u1b73\u1b80-\u1b82\u1ba1-\u1bad\u1bb0-\u1bb9\u1be6-\u1bf3\u1c24-\u1c37\u1c40-\u1c49\u1c50-\u1c59\u1cd0-\u1cd2\u1cd4-\u1ce8\u1ced\u1cf2-\u1cf4\u1cf8\u1cf9\u1dc0-\u1df5\u1dfc-\u1dff\u203f\u2040\u2054\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2cef-\u2cf1\u2d7f\u2de0-\u2dff\u302a-\u302f\u3099\u309a\ua620-\ua629\ua66f\ua674-\ua67d\ua69e\ua69f\ua6f0\ua6f1\ua802\ua806\ua80b\ua823-\ua827\ua880\ua881\ua8b4-\ua8c4\ua8d0-\ua8d9\ua8e0-\ua8f1\ua900-\ua909\ua926-\ua92d\ua947-\ua953\ua980-\ua983\ua9b3-\ua9c0\ua9d0-\ua9d9\ua9e5\ua9f0-\ua9f9\uaa29-\uaa36\uaa43\uaa4c\uaa4d\uaa50-\uaa59\uaa7b-\uaa7d\uaab0\uaab2-\uaab4\uaab7\uaab8\uaabe\uaabf\uaac1\uaaeb-\uaaef\uaaf5\uaaf6\uabe3-\uabea\uabec\uabed\uabf0-\uabf9\ufb1e\ufe00-\ufe0f\ufe20-\ufe2f\ufe33\ufe34\ufe4d-\ufe4f\uff10-\uff19\uff3f]"
            );
          a = null;
          var d = [
              0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28,
              4, 48, 48, 31, 17, 26, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157,
              99, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1,
              4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55,
              7, 1, 65, 0, 16, 3, 2, 2, 2, 26, 45, 28, 4, 28, 36, 7, 2, 27, 28,
              53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 785, 52, 76,
              44, 33, 24, 27, 35, 42, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36,
              17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3,
              21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 287, 47, 21, 1, 2, 0,
              185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 86, 25, 391, 63, 32, 0,
              449, 56, 1288, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582,
              8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 881, 68,
              12, 0, 67, 12, 16481, 1, 3071, 106, 6, 12, 4, 8, 8, 9, 5991, 84,
              2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3,
              7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2,
              30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 4149,
              196, 1340, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7,
              0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2,
              0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2,
              4, 2, 16, 4421, 42710, 42, 4148, 12, 221, 3, 5761, 10591, 541,
            ],
            h = [
              509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0,
              166, 1, 1306, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37,
              13, 2, 9, 52, 0, 13, 2, 49, 13, 10, 2, 4, 9, 83, 11, 168, 11, 6,
              9, 7, 3, 57, 0, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 316,
              19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84,
              14, 5, 9, 423, 9, 20855, 9, 135, 4, 60, 6, 26, 9, 1016, 45, 17, 3,
              19723, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513,
              54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 3617, 6, 792618, 239,
            ];
        },
        {},
      ],
      3: [
        function (a, l, f) {
          f.__esModule = !0;
          f.parse = function (a, b) {
            return new c.Parser(b, a).parse();
          };
          f.parseExpressionAt = function (a, b, d) {
            a = new c.Parser(d, a, b);
            a.nextToken();
            return a.parseExpression();
          };
          f.tokenizer = function (a, b) {
            return new c.Parser(b, a);
          };
          var c = a("./state");
          a("./parseutil");
          a("./statement");
          a("./lval");
          a("./expression");
          a("./location");
          f.Parser = c.Parser;
          f.plugins = c.plugins;
          l = a("./options");
          f.defaultOptions = l.defaultOptions;
          l = a("./locutil");
          f.Position = l.Position;
          f.SourceLocation = l.SourceLocation;
          f.getLineInfo = l.getLineInfo;
          l = a("./node");
          f.Node = l.Node;
          l = a("./tokentype");
          f.TokenType = l.TokenType;
          f.tokTypes = l.types;
          l = a("./tokencontext");
          f.TokContext = l.TokContext;
          f.tokContexts = l.types;
          l = a("./identifier");
          f.isIdentifierChar = l.isIdentifierChar;
          f.isIdentifierStart = l.isIdentifierStart;
          l = a("./tokenize");
          f.Token = l.Token;
          a = a("./whitespace");
          f.isNewLine = a.isNewLine;
          f.lineBreak = a.lineBreak;
          f.lineBreakG = a.lineBreakG;
          f.version = "3.1.0";
        },
        {
          "./expression": 1,
          "./identifier": 2,
          "./location": 4,
          "./locutil": 5,
          "./lval": 6,
          "./node": 7,
          "./options": 8,
          "./parseutil": 9,
          "./state": 10,
          "./statement": 11,
          "./tokencontext": 12,
          "./tokenize": 13,
          "./tokentype": 14,
          "./whitespace": 16,
        },
      ],
      4: [
        function (a, l, f) {
          l = a("./state");
          var c = a("./locutil");
          a = l.Parser.prototype;
          a.raise = function (a, b) {
            var d = c.getLineInfo(this.input, a);
            b += " (" + d.line + ":" + d.column + ")";
            var h = new SyntaxError(b);
            h.pos = a;
            h.loc = d;
            h.raisedAt = this.pos;
            throw h;
          };
          a.raiseRecoverable = a.raise;
          a.curPosition = function () {
            if (this.options.locations)
              return new c.Position(this.curLine, this.pos - this.lineStart);
          };
        },
        { "./locutil": 5, "./state": 10 },
      ],
      5: [
        function (a, l, f) {
          function c(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          f.__esModule = !0;
          f.getLineInfo = function (a, c) {
            for (var d = 1, e = 0; ; ) {
              g.lineBreakG.lastIndex = e;
              var m = g.lineBreakG.exec(a);
              if (m && m.index < c) ++d, (e = m.index + m[0].length);
              else return new b(d, c - e);
            }
          };
          var g = a("./whitespace"),
            b = (function () {
              function a(b, d) {
                c(this, a);
                this.line = b;
                this.column = d;
              }
              a.prototype.offset = function (b) {
                return new a(this.line, this.column + b);
              };
              return a;
            })();
          f.Position = b;
          f.SourceLocation = function h(a, b, m) {
            c(this, h);
            this.start = b;
            this.end = m;
            null !== a.sourceFile && (this.source = a.sourceFile);
          };
        },
        { "./whitespace": 16 },
      ],
      6: [
        function (a, l, f) {
          var c = a("./tokentype");
          l = a("./state");
          var g = a("./util");
          a = l.Parser.prototype;
          a.toAssignable = function (a, c) {
            if (6 <= this.options.ecmaVersion && a)
              switch (a.type) {
                case "Identifier":
                case "ObjectPattern":
                case "ArrayPattern":
                  break;
                case "ObjectExpression":
                  a.type = "ObjectPattern";
                  for (var b = 0; b < a.properties.length; b++) {
                    var d = a.properties[b];
                    "init" !== d.kind &&
                      this.raise(
                        d.key.start,
                        "Object pattern can't contain getter or setter"
                      );
                    this.toAssignable(d.value, c);
                  }
                  break;
                case "ArrayExpression":
                  a.type = "ArrayPattern";
                  this.toAssignableList(a.elements, c);
                  break;
                case "AssignmentExpression":
                  if ("=" === a.operator)
                    (a.type = "AssignmentPattern"), delete a.operator;
                  else {
                    this.raise(
                      a.left.end,
                      "Only '=' operator can be used for specifying default value."
                    );
                    break;
                  }
                case "AssignmentPattern":
                  "YieldExpression" === a.right.type &&
                    this.raise(
                      a.right.start,
                      "Yield expression cannot be a default value"
                    );
                  break;
                case "ParenthesizedExpression":
                  a.expression = this.toAssignable(a.expression, c);
                  break;
                case "MemberExpression":
                  if (!c) break;
                default:
                  this.raise(a.start, "Assigning to rvalue");
              }
            return a;
          };
          a.toAssignableList = function (a, c) {
            var b = a.length;
            if (b) {
              var d = a[b - 1];
              if (d && "RestElement" == d.type) --b;
              else if (d && "SpreadElement" == d.type) {
                d.type = "RestElement";
                var e = d.argument;
                this.toAssignable(e, c);
                "Identifier" !== e.type &&
                  "MemberExpression" !== e.type &&
                  "ArrayPattern" !== e.type &&
                  this.unexpected(e.start);
                --b;
              }
              c &&
                "RestElement" === d.type &&
                "Identifier" !== d.argument.type &&
                this.unexpected(d.argument.start);
            }
            for (d = 0; d < b; d++) (e = a[d]) && this.toAssignable(e, c);
            return a;
          };
          a.parseSpread = function (a) {
            var b = this.startNode();
            this.next();
            b.argument = this.parseMaybeAssign(a);
            return this.finishNode(b, "SpreadElement");
          };
          a.parseRest = function (a) {
            var b = this.startNode();
            this.next();
            b.argument = a
              ? this.type === c.types.name
                ? this.parseIdent()
                : this.unexpected()
              : this.type === c.types.name || this.type === c.types.bracketL
              ? this.parseBindingAtom()
              : this.unexpected();
            return this.finishNode(b, "RestElement");
          };
          a.parseBindingAtom = function () {
            if (6 > this.options.ecmaVersion) return this.parseIdent();
            switch (this.type) {
              case c.types.name:
                return this.parseIdent();
              case c.types.bracketL:
                var a = this.startNode();
                this.next();
                a.elements = this.parseBindingList(c.types.bracketR, !0, !0);
                return this.finishNode(a, "ArrayPattern");
              case c.types.braceL:
                return this.parseObj(!0);
              default:
                this.unexpected();
            }
          };
          a.parseBindingList = function (a, d, h, n) {
            for (var b = [], m = !0; !this.eat(a); )
              if (
                (m ? (m = !1) : this.expect(c.types.comma),
                d && this.type === c.types.comma)
              )
                b.push(null);
              else if (h && this.afterTrailingComma(a)) break;
              else if (this.type === c.types.ellipsis) {
                d = this.parseRest(n);
                this.parseBindingListItem(d);
                b.push(d);
                this.type === c.types.comma &&
                  this.raise(
                    this.start,
                    "Comma is not permitted after the rest element"
                  );
                this.expect(a);
                break;
              } else {
                var p = this.parseMaybeDefault(this.start, this.startLoc);
                this.parseBindingListItem(p);
                b.push(p);
              }
            return b;
          };
          a.parseBindingListItem = function (a) {
            return a;
          };
          a.parseMaybeDefault = function (a, d, h) {
            h = h || this.parseBindingAtom();
            if (6 > this.options.ecmaVersion || !this.eat(c.types.eq)) return h;
            a = this.startNodeAt(a, d);
            a.left = h;
            a.right = this.parseMaybeAssign();
            return this.finishNode(a, "AssignmentPattern");
          };
          a.checkLVal = function (a, c, h) {
            switch (a.type) {
              case "Identifier":
                this.strict &&
                  this.reservedWordsStrictBind.test(a.name) &&
                  this.raiseRecoverable(
                    a.start,
                    (c ? "Binding " : "Assigning to ") +
                      a.name +
                      " in strict mode"
                  );
                h &&
                  (g.has(h, a.name) &&
                    this.raiseRecoverable(a.start, "Argument name clash"),
                  (h[a.name] = !0));
                break;
              case "MemberExpression":
                c &&
                  this.raiseRecoverable(
                    a.start,
                    (c ? "Binding" : "Assigning to") + " member expression"
                  );
                break;
              case "ObjectPattern":
                for (var b = 0; b < a.properties.length; b++)
                  this.checkLVal(a.properties[b].value, c, h);
                break;
              case "ArrayPattern":
                for (b = 0; b < a.elements.length; b++) {
                  var e = a.elements[b];
                  e && this.checkLVal(e, c, h);
                }
                break;
              case "AssignmentPattern":
                this.checkLVal(a.left, c, h);
                break;
              case "RestElement":
                this.checkLVal(a.argument, c, h);
                break;
              case "ParenthesizedExpression":
                this.checkLVal(a.expression, c, h);
                break;
              default:
                this.raise(
                  a.start,
                  (c ? "Binding" : "Assigning to") + " rvalue"
                );
            }
          };
        },
        { "./state": 10, "./tokentype": 14, "./util": 15 },
      ],
      7: [
        function (a, l, f) {
          function c(a, b, c, e) {
            a.type = b;
            a.end = c;
            this.options.locations && (a.loc.end = e);
            this.options.ranges && (a.range[1] = c);
            return a;
          }
          f.__esModule = !0;
          l = a("./state");
          var g = a("./locutil"),
            b = function h(a, b, c) {
              if (!(this instanceof h))
                throw new TypeError("Cannot call a class as a function");
              this.type = "";
              this.start = b;
              this.end = 0;
              a.options.locations && (this.loc = new g.SourceLocation(a, c));
              a.options.directSourceFile &&
                (this.sourceFile = a.options.directSourceFile);
              a.options.ranges && (this.range = [b, 0]);
            };
          f.Node = b;
          a = l.Parser.prototype;
          a.startNode = function () {
            return new b(this, this.start, this.startLoc);
          };
          a.startNodeAt = function (a, c) {
            return new b(this, a, c);
          };
          a.finishNode = function (a, b) {
            return c.call(this, a, b, this.lastTokEnd, this.lastTokEndLoc);
          };
          a.finishNodeAt = function (a, b, e, m) {
            return c.call(this, a, b, e, m);
          };
        },
        { "./locutil": 5, "./state": 10 },
      ],
      8: [
        function (a, l, f) {
          function c(a, c) {
            return function (e, m, d, h, k, q) {
              e = { type: e ? "Block" : "Line", value: m, start: d, end: h };
              a.locations && (e.loc = new b.SourceLocation(this, k, q));
              a.ranges && (e.range = [d, h]);
              c.push(e);
            };
          }
          f.__esModule = !0;
          f.getOptions = function (a) {
            var b = {},
              e;
            for (e in d) b[e] = a && g.has(a, e) ? a[e] : d[e];
            null == b.allowReserved && (b.allowReserved = 5 > b.ecmaVersion);
            g.isArray(b.onToken) &&
              (function () {
                var a = b.onToken;
                b.onToken = function (b) {
                  return a.push(b);
                };
              })();
            g.isArray(b.onComment) && (b.onComment = c(b, b.onComment));
            return b;
          };
          var g = a("./util"),
            b = a("./locutil"),
            d = {
              ecmaVersion: 6,
              sourceType: "script",
              onInsertedSemicolon: null,
              onTrailingComma: null,
              allowReserved: null,
              allowReturnOutsideFunction: !1,
              allowImportExportEverywhere: !1,
              allowHashBang: !1,
              locations: !1,
              onToken: null,
              onComment: null,
              ranges: !1,
              program: null,
              sourceFile: null,
              directSourceFile: null,
              preserveParens: !1,
              plugins: {},
            };
          f.defaultOptions = d;
        },
        { "./locutil": 5, "./util": 15 },
      ],
      9: [
        function (a, l, f) {
          var c = a("./tokentype");
          l = a("./state");
          var g = a("./whitespace");
          a = l.Parser.prototype;
          a.isUseStrict = function (a) {
            return (
              5 <= this.options.ecmaVersion &&
              "ExpressionStatement" === a.type &&
              "Literal" === a.expression.type &&
              "use strict" === a.expression.raw.slice(1, -1)
            );
          };
          a.eat = function (a) {
            return this.type === a ? (this.next(), !0) : !1;
          };
          a.isContextual = function (a) {
            return this.type === c.types.name && this.value === a;
          };
          a.eatContextual = function (a) {
            return this.value === a && this.eat(c.types.name);
          };
          a.expectContextual = function (a) {
            this.eatContextual(a) || this.unexpected();
          };
          a.canInsertSemicolon = function () {
            return (
              this.type === c.types.eof ||
              this.type === c.types.braceR ||
              g.lineBreak.test(this.input.slice(this.lastTokEnd, this.start))
            );
          };
          a.insertSemicolon = function () {
            if (this.canInsertSemicolon()) {
              if (this.options.onInsertedSemicolon)
                this.options.onInsertedSemicolon(
                  this.lastTokEnd,
                  this.lastTokEndLoc
                );
              return !0;
            }
          };
          a.semicolon = function () {
            this.eat(c.types.semi) ||
              this.insertSemicolon() ||
              this.unexpected();
          };
          a.afterTrailingComma = function (a) {
            if (this.type == a) {
              if (this.options.onTrailingComma)
                this.options.onTrailingComma(
                  this.lastTokStart,
                  this.lastTokStartLoc
                );
              this.next();
              return !0;
            }
          };
          a.expect = function (a) {
            this.eat(a) || this.unexpected();
          };
          a.unexpected = function (a) {
            this.raise(null != a ? a : this.start, "Unexpected token");
          };
          a.checkPatternErrors = function (a, c) {
            var b = a && a.trailingComma;
            if (!c) return !!b;
            b && this.raise(b, "Comma is not permitted after the rest element");
          };
          a.checkExpressionErrors = function (a, c) {
            var b = a && a.shorthandAssign;
            if (!c) return !!b;
            b &&
              this.raise(
                b,
                "Shorthand property assignments are valid only in destructuring patterns"
              );
          };
        },
        { "./state": 10, "./tokentype": 14, "./whitespace": 16 },
      ],
      10: [
        function (a, l, f) {
          function c(a) {
            return new RegExp("^(" + a.replace(/ /g, "|") + ")$");
          }
          f.__esModule = !0;
          var g = a("./identifier"),
            b = a("./tokentype"),
            d = a("./whitespace"),
            h = a("./options"),
            n = {};
          f.plugins = n;
          a = (function () {
            function a(e, p, f) {
              if (!(this instanceof a))
                throw new TypeError("Cannot call a class as a function");
              this.options = e = h.getOptions(e);
              this.sourceFile = e.sourceFile;
              this.keywords = c(g.keywords[6 <= e.ecmaVersion ? 6 : 5]);
              var k = e.allowReserved
                ? ""
                : g.reservedWords[e.ecmaVersion] +
                  ("module" == e.sourceType ? " await" : "");
              this.reservedWords = c(k);
              k = (k ? k + " " : "") + g.reservedWords.strict;
              this.reservedWordsStrict = c(k);
              this.reservedWordsStrictBind = c(
                k + " " + g.reservedWords.strictBind
              );
              this.input = String(p);
              this.containsEsc = !1;
              this.loadPlugins(e.plugins);
              f
                ? ((this.pos = f),
                  (this.lineStart = Math.max(
                    0,
                    this.input.lastIndexOf("\n", f)
                  )),
                  (this.curLine = this.input
                    .slice(0, this.lineStart)
                    .split(d.lineBreak).length))
                : ((this.pos = this.lineStart = 0), (this.curLine = 1));
              this.type = b.types.eof;
              this.value = null;
              this.start = this.end = this.pos;
              this.startLoc = this.endLoc = this.curPosition();
              this.lastTokEndLoc = this.lastTokStartLoc = null;
              this.lastTokStart = this.lastTokEnd = this.pos;
              this.context = this.initialContext();
              this.exprAllowed = !0;
              this.strict = this.inModule = "module" === e.sourceType;
              this.potentialArrowAt = -1;
              this.inFunction = this.inGenerator = !1;
              this.labels = [];
              0 === this.pos &&
                e.allowHashBang &&
                "#!" === this.input.slice(0, 2) &&
                this.skipLineComment(2);
            }
            a.prototype.isKeyword = function (a) {
              return this.keywords.test(a);
            };
            a.prototype.isReservedWord = function (a) {
              return this.reservedWords.test(a);
            };
            a.prototype.extend = function (a, b) {
              this[a] = b(this[a]);
            };
            a.prototype.loadPlugins = function (a) {
              for (var b in a) {
                var c = n[b];
                if (!c) throw Error("Plugin '" + b + "' not found");
                c(this, a[b]);
              }
            };
            a.prototype.parse = function () {
              var a = this.options.program || this.startNode();
              this.nextToken();
              return this.parseTopLevel(a);
            };
            return a;
          })();
          f.Parser = a;
        },
        {
          "./identifier": 2,
          "./options": 8,
          "./tokentype": 14,
          "./whitespace": 16,
        },
      ],
      11: [
        function (a, l, f) {
          var c = a("./tokentype");
          l = a("./state");
          var g = a("./whitespace"),
            b = a("./identifier");
          a = l.Parser.prototype;
          a.parseTopLevel = function (a) {
            var b = !0;
            a.body || (a.body = []);
            for (; this.type !== c.types.eof; ) {
              var e = this.parseStatement(!0, !0);
              a.body.push(e);
              b && (this.isUseStrict(e) && this.setStrict(!0), (b = !1));
            }
            this.next();
            6 <= this.options.ecmaVersion &&
              (a.sourceType = this.options.sourceType);
            return this.finishNode(a, "Program");
          };
          var d = { kind: "loop" },
            h = { kind: "switch" };
          a.isLet = function () {
            if (
              this.type !== c.types.name ||
              6 > this.options.ecmaVersion ||
              "let" != this.value
            )
              return !1;
            g.skipWhiteSpace.lastIndex = this.pos;
            var a = g.skipWhiteSpace.exec(this.input),
              a = this.pos + a[0].length,
              d = this.input.charCodeAt(a);
            if (91 === d || 123 == d) return !0;
            if (b.isIdentifierStart(d, !0)) {
              for (
                d = a + 1;
                b.isIdentifierChar(this.input.charCodeAt(d, !0));
                ++d
              );
              a = this.input.slice(a, d);
              if (!this.isKeyword(a)) return !0;
            }
            return !1;
          };
          a.parseStatement = function (a, b) {
            var e = this.type,
              d = this.startNode(),
              k = void 0;
            this.isLet() && ((e = c.types._var), (k = "let"));
            switch (e) {
              case c.types._break:
              case c.types._continue:
                return this.parseBreakContinueStatement(d, e.keyword);
              case c.types._debugger:
                return this.parseDebuggerStatement(d);
              case c.types._do:
                return this.parseDoStatement(d);
              case c.types._for:
                return this.parseForStatement(d);
              case c.types._function:
                return (
                  !a && 6 <= this.options.ecmaVersion && this.unexpected(),
                  this.parseFunctionStatement(d)
                );
              case c.types._class:
                return a || this.unexpected(), this.parseClass(d, !0);
              case c.types._if:
                return this.parseIfStatement(d);
              case c.types._return:
                return this.parseReturnStatement(d);
              case c.types._switch:
                return this.parseSwitchStatement(d);
              case c.types._throw:
                return this.parseThrowStatement(d);
              case c.types._try:
                return this.parseTryStatement(d);
              case c.types._const:
              case c.types._var:
                return (
                  (k = k || this.value),
                  a || "var" == k || this.unexpected(),
                  this.parseVarStatement(d, k)
                );
              case c.types._while:
                return this.parseWhileStatement(d);
              case c.types._with:
                return this.parseWithStatement(d);
              case c.types.braceL:
                return this.parseBlock();
              case c.types.semi:
                return this.parseEmptyStatement(d);
              case c.types._export:
              case c.types._import:
                return (
                  this.options.allowImportExportEverywhere ||
                    (b ||
                      this.raise(
                        this.start,
                        "'import' and 'export' may only appear at the top level"
                      ),
                    this.inModule ||
                      this.raise(
                        this.start,
                        "'import' and 'export' may appear only with 'sourceType: module'"
                      )),
                  e === c.types._import
                    ? this.parseImport(d)
                    : this.parseExport(d)
                );
              default:
                var k = this.value,
                  m = this.parseExpression();
                return e === c.types.name &&
                  "Identifier" === m.type &&
                  this.eat(c.types.colon)
                  ? this.parseLabeledStatement(d, k, m)
                  : this.parseExpressionStatement(d, m);
            }
          };
          a.parseBreakContinueStatement = function (a, b) {
            var e = "break" == b;
            this.next();
            this.eat(c.types.semi) || this.insertSemicolon()
              ? (a.label = null)
              : this.type !== c.types.name
              ? this.unexpected()
              : ((a.label = this.parseIdent()), this.semicolon());
            for (var d = 0; d < this.labels.length; ++d) {
              var k = this.labels[d];
              if (null == a.label || k.name === a.label.name) {
                if (null != k.kind && (e || "loop" === k.kind)) break;
                if (a.label && e) break;
              }
            }
            d === this.labels.length && this.raise(a.start, "Unsyntactic " + b);
            return this.finishNode(
              a,
              e ? "BreakStatement" : "ContinueStatement"
            );
          };
          a.parseDebuggerStatement = function (a) {
            this.next();
            this.semicolon();
            return this.finishNode(a, "DebuggerStatement");
          };
          a.parseDoStatement = function (a) {
            this.next();
            this.labels.push(d);
            a.body = this.parseStatement(!1);
            this.labels.pop();
            this.expect(c.types._while);
            a.test = this.parseParenExpression();
            6 <= this.options.ecmaVersion
              ? this.eat(c.types.semi)
              : this.semicolon();
            return this.finishNode(a, "DoWhileStatement");
          };
          a.parseForStatement = function (a) {
            this.next();
            this.labels.push(d);
            this.expect(c.types.parenL);
            if (this.type === c.types.semi) return this.parseFor(a, null);
            var b = this.isLet();
            if (
              this.type === c.types._var ||
              this.type === c.types._const ||
              b
            ) {
              var e = this.startNode(),
                b = b ? "let" : this.value;
              this.next();
              this.parseVar(e, !0, b);
              this.finishNode(e, "VariableDeclaration");
              return !(
                this.type === c.types._in ||
                (6 <= this.options.ecmaVersion && this.isContextual("of"))
              ) ||
                1 !== e.declarations.length ||
                ("var" !== b && e.declarations[0].init)
                ? this.parseFor(a, e)
                : this.parseForIn(a, e);
            }
            e = { shorthandAssign: 0, trailingComma: 0 };
            b = this.parseExpression(!0, e);
            if (
              this.type === c.types._in ||
              (6 <= this.options.ecmaVersion && this.isContextual("of"))
            )
              return (
                this.checkPatternErrors(e, !0),
                this.toAssignable(b),
                this.checkLVal(b),
                this.parseForIn(a, b)
              );
            this.checkExpressionErrors(e, !0);
            return this.parseFor(a, b);
          };
          a.parseFunctionStatement = function (a) {
            this.next();
            return this.parseFunction(a, !0);
          };
          a.parseIfStatement = function (a) {
            this.next();
            a.test = this.parseParenExpression();
            a.consequent = this.parseStatement(!1);
            a.alternate = this.eat(c.types._else)
              ? this.parseStatement(!1)
              : null;
            return this.finishNode(a, "IfStatement");
          };
          a.parseReturnStatement = function (a) {
            this.inFunction ||
              this.options.allowReturnOutsideFunction ||
              this.raise(this.start, "'return' outside of function");
            this.next();
            this.eat(c.types.semi) || this.insertSemicolon()
              ? (a.argument = null)
              : ((a.argument = this.parseExpression()), this.semicolon());
            return this.finishNode(a, "ReturnStatement");
          };
          a.parseSwitchStatement = function (a) {
            this.next();
            a.discriminant = this.parseParenExpression();
            a.cases = [];
            this.expect(c.types.braceL);
            this.labels.push(h);
            for (var b, e = !1; this.type != c.types.braceR; )
              if (
                this.type === c.types._case ||
                this.type === c.types._default
              ) {
                var d = this.type === c.types._case;
                b && this.finishNode(b, "SwitchCase");
                a.cases.push((b = this.startNode()));
                b.consequent = [];
                this.next();
                d
                  ? (b.test = this.parseExpression())
                  : (e &&
                      this.raiseRecoverable(
                        this.lastTokStart,
                        "Multiple default clauses"
                      ),
                    (e = !0),
                    (b.test = null));
                this.expect(c.types.colon);
              } else
                b || this.unexpected(),
                  b.consequent.push(this.parseStatement(!0));
            b && this.finishNode(b, "SwitchCase");
            this.next();
            this.labels.pop();
            return this.finishNode(a, "SwitchStatement");
          };
          a.parseThrowStatement = function (a) {
            this.next();
            g.lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) &&
              this.raise(this.lastTokEnd, "Illegal newline after throw");
            a.argument = this.parseExpression();
            this.semicolon();
            return this.finishNode(a, "ThrowStatement");
          };
          var n = [];
          a.parseTryStatement = function (a) {
            this.next();
            a.block = this.parseBlock();
            a.handler = null;
            if (this.type === c.types._catch) {
              var b = this.startNode();
              this.next();
              this.expect(c.types.parenL);
              b.param = this.parseBindingAtom();
              this.checkLVal(b.param, !0);
              this.expect(c.types.parenR);
              b.body = this.parseBlock();
              a.handler = this.finishNode(b, "CatchClause");
            }
            a.finalizer = this.eat(c.types._finally) ? this.parseBlock() : null;
            a.handler ||
              a.finalizer ||
              this.raise(a.start, "Missing catch or finally clause");
            return this.finishNode(a, "TryStatement");
          };
          a.parseVarStatement = function (a, b) {
            this.next();
            this.parseVar(a, !1, b);
            this.semicolon();
            return this.finishNode(a, "VariableDeclaration");
          };
          a.parseWhileStatement = function (a) {
            this.next();
            a.test = this.parseParenExpression();
            this.labels.push(d);
            a.body = this.parseStatement(!1);
            this.labels.pop();
            return this.finishNode(a, "WhileStatement");
          };
          a.parseWithStatement = function (a) {
            this.strict && this.raise(this.start, "'with' in strict mode");
            this.next();
            a.object = this.parseParenExpression();
            a.body = this.parseStatement(!1);
            return this.finishNode(a, "WithStatement");
          };
          a.parseEmptyStatement = function (a) {
            this.next();
            return this.finishNode(a, "EmptyStatement");
          };
          a.parseLabeledStatement = function (a, b, d) {
            for (var e = 0; e < this.labels.length; ++e)
              this.labels[e].name === b &&
                this.raise(d.start, "Label '" + b + "' is already declared");
            for (
              var k = this.type.isLoop
                  ? "loop"
                  : this.type === c.types._switch
                  ? "switch"
                  : null,
                e = this.labels.length - 1;
              0 <= e;
              e--
            ) {
              var q = this.labels[e];
              if (q.statementStart == a.start)
                (q.statementStart = this.start), (q.kind = k);
              else break;
            }
            this.labels.push({ name: b, kind: k, statementStart: this.start });
            a.body = this.parseStatement(!0);
            this.labels.pop();
            a.label = d;
            return this.finishNode(a, "LabeledStatement");
          };
          a.parseExpressionStatement = function (a, b) {
            a.expression = b;
            this.semicolon();
            return this.finishNode(a, "ExpressionStatement");
          };
          a.parseBlock = function (a) {
            var b = this.startNode(),
              e = !0,
              d = void 0;
            b.body = [];
            for (this.expect(c.types.braceL); !this.eat(c.types.braceR); ) {
              var k = this.parseStatement(!0);
              b.body.push(k);
              e &&
                a &&
                this.isUseStrict(k) &&
                ((d = this.strict), this.setStrict((this.strict = !0)));
              e = !1;
            }
            !1 === d && this.setStrict(!1);
            return this.finishNode(b, "BlockStatement");
          };
          a.parseFor = function (a, b) {
            a.init = b;
            this.expect(c.types.semi);
            a.test = this.type === c.types.semi ? null : this.parseExpression();
            this.expect(c.types.semi);
            a.update =
              this.type === c.types.parenR ? null : this.parseExpression();
            this.expect(c.types.parenR);
            a.body = this.parseStatement(!1);
            this.labels.pop();
            return this.finishNode(a, "ForStatement");
          };
          a.parseForIn = function (a, b) {
            var e =
              this.type === c.types._in ? "ForInStatement" : "ForOfStatement";
            this.next();
            a.left = b;
            a.right = this.parseExpression();
            this.expect(c.types.parenR);
            a.body = this.parseStatement(!1);
            this.labels.pop();
            return this.finishNode(a, e);
          };
          a.parseVar = function (a, b, d) {
            a.declarations = [];
            for (a.kind = d; ; ) {
              var e = this.startNode();
              this.parseVarId(e);
              this.eat(c.types.eq)
                ? (e.init = this.parseMaybeAssign(b))
                : "const" !== d ||
                  this.type === c.types._in ||
                  (6 <= this.options.ecmaVersion && this.isContextual("of"))
                ? "Identifier" == e.id.type ||
                  (b && (this.type === c.types._in || this.isContextual("of")))
                  ? (e.init = null)
                  : this.raise(
                      this.lastTokEnd,
                      "Complex binding patterns require an initialization value"
                    )
                : this.unexpected();
              a.declarations.push(this.finishNode(e, "VariableDeclarator"));
              if (!this.eat(c.types.comma)) break;
            }
            return a;
          };
          a.parseVarId = function (a) {
            a.id = this.parseBindingAtom();
            this.checkLVal(a.id, !0);
          };
          a.parseFunction = function (a, b, d) {
            this.initFunction(a);
            6 <= this.options.ecmaVersion &&
              (a.generator = this.eat(c.types.star));
            var e = this.inGenerator;
            this.inGenerator = a.generator;
            if (b || this.type === c.types.name) a.id = this.parseIdent();
            this.parseFunctionParams(a);
            this.parseFunctionBody(a, d);
            this.inGenerator = e;
            return this.finishNode(
              a,
              b ? "FunctionDeclaration" : "FunctionExpression"
            );
          };
          a.parseFunctionParams = function (a) {
            this.expect(c.types.parenL);
            a.params = this.parseBindingList(c.types.parenR, !1, !1, !0);
          };
          a.parseClass = function (a, b) {
            this.next();
            this.parseClassId(a, b);
            this.parseClassSuper(a);
            var e = this.startNode(),
              d = !1;
            e.body = [];
            for (this.expect(c.types.braceL); !this.eat(c.types.braceR); )
              if (!this.eat(c.types.semi)) {
                var k = this.startNode(),
                  q = this.eat(c.types.star),
                  h = this.type === c.types.name && "static" === this.value;
                this.parsePropertyName(k);
                k["static"] = h && this.type !== c.types.parenL;
                k["static"] &&
                  (q && this.unexpected(),
                  (q = this.eat(c.types.star)),
                  this.parsePropertyName(k));
                k.kind = "method";
                h = !1;
                if (!k.computed) {
                  var f = k.key;
                  q ||
                    "Identifier" !== f.type ||
                    this.type === c.types.parenL ||
                    ("get" !== f.name && "set" !== f.name) ||
                    ((h = !0),
                    (k.kind = f.name),
                    (f = this.parsePropertyName(k)));
                  !k["static"] &&
                    (("Identifier" === f.type && "constructor" === f.name) ||
                      ("Literal" === f.type && "constructor" === f.value)) &&
                    (d &&
                      this.raise(
                        f.start,
                        "Duplicate constructor in the same class"
                      ),
                    h &&
                      this.raise(
                        f.start,
                        "Constructor can't have get/set modifier"
                      ),
                    q &&
                      this.raise(f.start, "Constructor can't be a generator"),
                    (k.kind = "constructor"),
                    (d = !0));
                }
                this.parseClassMethod(e, k, q);
                h &&
                  (k.value.params.length !== ("get" === k.kind ? 0 : 1) &&
                    ((q = k.value.start),
                    "get" === k.kind
                      ? this.raiseRecoverable(q, "getter should have no params")
                      : this.raiseRecoverable(
                          q,
                          "setter should have exactly one param"
                        )),
                  "set" === k.kind &&
                    "RestElement" === k.value.params[0].type &&
                    this.raise(
                      k.value.params[0].start,
                      "Setter cannot use rest params"
                    ));
              }
            a.body = this.finishNode(e, "ClassBody");
            return this.finishNode(
              a,
              b ? "ClassDeclaration" : "ClassExpression"
            );
          };
          a.parseClassMethod = function (a, b, c) {
            b.value = this.parseMethod(c);
            a.body.push(this.finishNode(b, "MethodDefinition"));
          };
          a.parseClassId = function (a, b) {
            a.id =
              this.type === c.types.name
                ? this.parseIdent()
                : b
                ? this.unexpected()
                : null;
          };
          a.parseClassSuper = function (a) {
            a.superClass = this.eat(c.types._extends)
              ? this.parseExprSubscripts()
              : null;
          };
          a.parseExport = function (a) {
            this.next();
            if (this.eat(c.types.star))
              return (
                this.expectContextual("from"),
                (a.source =
                  this.type === c.types.string
                    ? this.parseExprAtom()
                    : this.unexpected()),
                this.semicolon(),
                this.finishNode(a, "ExportAllDeclaration")
              );
            if (this.eat(c.types._default)) {
              var b = this.type == c.types.parenL,
                e = this.parseMaybeAssign(),
                d = !0;
              b ||
                ("FunctionExpression" != e.type &&
                  "ClassExpression" != e.type) ||
                ((d = !1),
                e.id &&
                  (e.type =
                    "FunctionExpression" == e.type
                      ? "FunctionDeclaration"
                      : "ClassDeclaration"));
              a.declaration = e;
              d && this.semicolon();
              return this.finishNode(a, "ExportDefaultDeclaration");
            }
            if (this.shouldParseExportStatement())
              (a.declaration = this.parseStatement(!0)),
                (a.specifiers = []),
                (a.source = null);
            else {
              a.declaration = null;
              a.specifiers = this.parseExportSpecifiers();
              if (this.eatContextual("from"))
                a.source =
                  this.type === c.types.string
                    ? this.parseExprAtom()
                    : this.unexpected();
              else {
                for (b = 0; b < a.specifiers.length; b++)
                  (this.keywords.test(a.specifiers[b].local.name) ||
                    this.reservedWords.test(a.specifiers[b].local.name)) &&
                    this.unexpected(a.specifiers[b].local.start);
                a.source = null;
              }
              this.semicolon();
            }
            return this.finishNode(a, "ExportNamedDeclaration");
          };
          a.shouldParseExportStatement = function () {
            return this.type.keyword || this.isLet();
          };
          a.parseExportSpecifiers = function () {
            var a = [],
              b = !0;
            for (this.expect(c.types.braceL); !this.eat(c.types.braceR); ) {
              if (b) b = !1;
              else if (
                (this.expect(c.types.comma),
                this.afterTrailingComma(c.types.braceR))
              )
                break;
              var d = this.startNode();
              d.local = this.parseIdent(this.type === c.types._default);
              d.exported = this.eatContextual("as")
                ? this.parseIdent(!0)
                : d.local;
              a.push(this.finishNode(d, "ExportSpecifier"));
            }
            return a;
          };
          a.parseImport = function (a) {
            this.next();
            this.type === c.types.string
              ? ((a.specifiers = n), (a.source = this.parseExprAtom()))
              : ((a.specifiers = this.parseImportSpecifiers()),
                this.expectContextual("from"),
                (a.source =
                  this.type === c.types.string
                    ? this.parseExprAtom()
                    : this.unexpected()));
            this.semicolon();
            return this.finishNode(a, "ImportDeclaration");
          };
          a.parseImportSpecifiers = function () {
            var a = [],
              b = !0;
            if (this.type === c.types.name) {
              var d = this.startNode();
              d.local = this.parseIdent();
              this.checkLVal(d.local, !0);
              a.push(this.finishNode(d, "ImportDefaultSpecifier"));
              if (!this.eat(c.types.comma)) return a;
            }
            if (this.type === c.types.star)
              return (
                (d = this.startNode()),
                this.next(),
                this.expectContextual("as"),
                (d.local = this.parseIdent()),
                this.checkLVal(d.local, !0),
                a.push(this.finishNode(d, "ImportNamespaceSpecifier")),
                a
              );
            for (this.expect(c.types.braceL); !this.eat(c.types.braceR); ) {
              if (b) b = !1;
              else if (
                (this.expect(c.types.comma),
                this.afterTrailingComma(c.types.braceR))
              )
                break;
              d = this.startNode();
              d.imported = this.parseIdent(!0);
              this.eatContextual("as")
                ? (d.local = this.parseIdent())
                : ((d.local = d.imported),
                  this.isKeyword(d.local.name) &&
                    this.unexpected(d.local.start),
                  this.reservedWordsStrict.test(d.local.name) &&
                    this.raise(
                      d.local.start,
                      "The keyword '" + d.local.name + "' is reserved"
                    ));
              this.checkLVal(d.local, !0);
              a.push(this.finishNode(d, "ImportSpecifier"));
            }
            return a;
          };
        },
        {
          "./identifier": 2,
          "./state": 10,
          "./tokentype": 14,
          "./whitespace": 16,
        },
      ],
      12: [
        function (a, l, f) {
          f.__esModule = !0;
          l = a("./state");
          var c = a("./tokentype"),
            g = a("./whitespace");
          a = function h(a, b, c, f) {
            if (!(this instanceof h))
              throw new TypeError("Cannot call a class as a function");
            this.token = a;
            this.isExpr = !!b;
            this.preserveSpace = !!c;
            this.override = f;
          };
          f.TokContext = a;
          var b = {
            b_stat: new a("{", !1),
            b_expr: new a("{", !0),
            b_tmpl: new a("${", !0),
            p_stat: new a("(", !1),
            p_expr: new a("(", !0),
            q_tmpl: new a("`", !0, !0, function (a) {
              return a.readTmplToken();
            }),
            f_expr: new a("function", !0),
          };
          f.types = b;
          f = l.Parser.prototype;
          f.initialContext = function () {
            return [b.b_stat];
          };
          f.braceIsBlock = function (a) {
            if (a === c.types.colon) {
              var f = this.curContext();
              if (f === b.b_stat || f === b.b_expr) return !f.isExpr;
            }
            return a === c.types._return
              ? g.lineBreak.test(this.input.slice(this.lastTokEnd, this.start))
              : a === c.types._else ||
                a === c.types.semi ||
                a === c.types.eof ||
                a === c.types.parenR
              ? !0
              : a == c.types.braceL
              ? this.curContext() === b.b_stat
              : !this.exprAllowed;
          };
          f.updateContext = function (a) {
            var b,
              e = this.type;
            e.keyword && a == c.types.dot
              ? (this.exprAllowed = !1)
              : (b = e.updateContext)
              ? b.call(this, a)
              : (this.exprAllowed = e.beforeExpr);
          };
          c.types.parenR.updateContext = c.types.braceR.updateContext =
            function () {
              if (1 == this.context.length) this.exprAllowed = !0;
              else {
                var a = this.context.pop();
                a === b.b_stat && this.curContext() === b.f_expr
                  ? (this.context.pop(), (this.exprAllowed = !1))
                  : (this.exprAllowed = a === b.b_tmpl ? !0 : !a.isExpr);
              }
            };
          c.types.braceL.updateContext = function (a) {
            this.context.push(this.braceIsBlock(a) ? b.b_stat : b.b_expr);
            this.exprAllowed = !0;
          };
          c.types.dollarBraceL.updateContext = function () {
            this.context.push(b.b_tmpl);
            this.exprAllowed = !0;
          };
          c.types.parenL.updateContext = function (a) {
            this.context.push(
              a === c.types._if ||
                a === c.types._for ||
                a === c.types._with ||
                a === c.types._while
                ? b.p_stat
                : b.p_expr
            );
            this.exprAllowed = !0;
          };
          c.types.incDec.updateContext = function () {};
          c.types._function.updateContext = function (a) {
            !a.beforeExpr ||
              a === c.types.semi ||
              a === c.types._else ||
              (a === c.types.colon && this.curContext() === b.b_stat) ||
              this.context.push(b.f_expr);
            this.exprAllowed = !1;
          };
          c.types.backQuote.updateContext = function () {
            this.curContext() === b.q_tmpl
              ? this.context.pop()
              : this.context.push(b.q_tmpl);
            this.exprAllowed = !1;
          };
        },
        { "./state": 10, "./tokentype": 14, "./whitespace": 16 },
      ],
      13: [
        function (a, l, f) {
          function c(a, b, c, d) {
            try {
              return new RegExp(a, b);
            } catch (t) {
              if (void 0 !== c)
                throw (
                  (t instanceof SyntaxError &&
                    d.raise(
                      c,
                      "Error parsing regular expression: " + t.message
                    ),
                  t)
                );
            }
          }
          function g(a) {
            if (65535 >= a) return String.fromCharCode(a);
            a -= 65536;
            return String.fromCharCode((a >> 10) + 55296, (a & 1023) + 56320);
          }
          f.__esModule = !0;
          var b = a("./identifier"),
            d = a("./tokentype");
          l = a("./state");
          var h = a("./locutil"),
            n = a("./whitespace"),
            e = function k(a) {
              if (!(this instanceof k))
                throw new TypeError("Cannot call a class as a function");
              this.type = a.type;
              this.value = a.value;
              this.start = a.start;
              this.end = a.end;
              a.options.locations &&
                (this.loc = new h.SourceLocation(a, a.startLoc, a.endLoc));
              a.options.ranges && (this.range = [a.start, a.end]);
            };
          f.Token = e;
          a = l.Parser.prototype;
          var m =
            "object" == typeof Packages &&
            "[object JavaPackage]" == Object.prototype.toString.call(Packages);
          a.next = function () {
            if (this.options.onToken) this.options.onToken(new e(this));
            this.lastTokEnd = this.end;
            this.lastTokStart = this.start;
            this.lastTokEndLoc = this.endLoc;
            this.lastTokStartLoc = this.startLoc;
            this.nextToken();
          };
          a.getToken = function () {
            this.next();
            return new e(this);
          };
          "undefined" !== typeof Symbol &&
            (a[Symbol.iterator] = function () {
              var a = this;
              return {
                next: function () {
                  var b = a.getToken();
                  return { done: b.type === d.types.eof, value: b };
                },
              };
            });
          a.setStrict = function (a) {
            this.strict = a;
            if (this.type === d.types.num || this.type === d.types.string) {
              this.pos = this.start;
              if (this.options.locations)
                for (; this.pos < this.lineStart; )
                  (this.lineStart =
                    this.input.lastIndexOf("\n", this.lineStart - 2) + 1),
                    --this.curLine;
              this.nextToken();
            }
          };
          a.curContext = function () {
            return this.context[this.context.length - 1];
          };
          a.nextToken = function () {
            var a = this.curContext();
            (a && a.preserveSpace) || this.skipSpace();
            this.start = this.pos;
            this.options.locations && (this.startLoc = this.curPosition());
            if (this.pos >= this.input.length)
              return this.finishToken(d.types.eof);
            if (a.override) return a.override(this);
            this.readToken(this.fullCharCodeAtPos());
          };
          a.readToken = function (a) {
            return b.isIdentifierStart(a, 6 <= this.options.ecmaVersion) ||
              92 === a
              ? this.readWord()
              : this.getTokenFromCode(a);
          };
          a.fullCharCodeAtPos = function () {
            var a = this.input.charCodeAt(this.pos);
            if (55295 >= a || 57344 <= a) return a;
            var b = this.input.charCodeAt(this.pos + 1);
            return (a << 10) + b - 56613888;
          };
          a.skipBlockComment = function () {
            var a = this.options.onComment && this.curPosition(),
              b = this.pos,
              c = this.input.indexOf("*/", (this.pos += 2));
            -1 === c && this.raise(this.pos - 2, "Unterminated comment");
            this.pos = c + 2;
            if (this.options.locations) {
              n.lineBreakG.lastIndex = b;
              for (
                var d = void 0;
                (d = n.lineBreakG.exec(this.input)) && d.index < this.pos;

              )
                ++this.curLine, (this.lineStart = d.index + d[0].length);
            }
            if (this.options.onComment)
              this.options.onComment(
                !0,
                this.input.slice(b + 2, c),
                b,
                this.pos,
                a,
                this.curPosition()
              );
          };
          a.skipLineComment = function (a) {
            for (
              var b = this.pos,
                c = this.options.onComment && this.curPosition(),
                d = this.input.charCodeAt((this.pos += a));
              this.pos < this.input.length &&
              10 !== d &&
              13 !== d &&
              8232 !== d &&
              8233 !== d;

            )
              ++this.pos, (d = this.input.charCodeAt(this.pos));
            if (this.options.onComment)
              this.options.onComment(
                !1,
                this.input.slice(b + a, this.pos),
                b,
                this.pos,
                c,
                this.curPosition()
              );
          };
          a.skipSpace = function () {
            a: for (; this.pos < this.input.length; ) {
              var a = this.input.charCodeAt(this.pos);
              switch (a) {
                case 32:
                case 160:
                  ++this.pos;
                  break;
                case 13:
                  10 === this.input.charCodeAt(this.pos + 1) && ++this.pos;
                case 10:
                case 8232:
                case 8233:
                  ++this.pos;
                  this.options.locations &&
                    (++this.curLine, (this.lineStart = this.pos));
                  break;
                case 47:
                  switch (this.input.charCodeAt(this.pos + 1)) {
                    case 42:
                      this.skipBlockComment();
                      break;
                    case 47:
                      this.skipLineComment(2);
                      break;
                    default:
                      break a;
                  }
                  break;
                default:
                  if (
                    (8 < a && 14 > a) ||
                    (5760 <= a &&
                      n.nonASCIIwhitespace.test(String.fromCharCode(a)))
                  )
                    ++this.pos;
                  else break a;
              }
            }
          };
          a.finishToken = function (a, b) {
            this.end = this.pos;
            this.options.locations && (this.endLoc = this.curPosition());
            var c = this.type;
            this.type = a;
            this.value = b;
            this.updateContext(c);
          };
          a.readToken_dot = function () {
            var a = this.input.charCodeAt(this.pos + 1);
            if (48 <= a && 57 >= a) return this.readNumber(!0);
            var b = this.input.charCodeAt(this.pos + 2);
            if (6 <= this.options.ecmaVersion && 46 === a && 46 === b)
              return (this.pos += 3), this.finishToken(d.types.ellipsis);
            ++this.pos;
            return this.finishToken(d.types.dot);
          };
          a.readToken_slash = function () {
            var a = this.input.charCodeAt(this.pos + 1);
            return this.exprAllowed
              ? (++this.pos, this.readRegexp())
              : 61 === a
              ? this.finishOp(d.types.assign, 2)
              : this.finishOp(d.types.slash, 1);
          };
          a.readToken_mult_modulo_exp = function (a) {
            var b = this.input.charCodeAt(this.pos + 1),
              c = 1;
            a = 42 === a ? d.types.star : d.types.modulo;
            7 <= this.options.ecmaVersion &&
              42 === b &&
              (++c,
              (a = d.types.starstar),
              (b = this.input.charCodeAt(this.pos + 2)));
            return 61 === b
              ? this.finishOp(d.types.assign, c + 1)
              : this.finishOp(a, c);
          };
          a.readToken_pipe_amp = function (a) {
            var b = this.input.charCodeAt(this.pos + 1);
            return b === a
              ? this.finishOp(
                  124 === a ? d.types.logicalOR : d.types.logicalAND,
                  2
                )
              : 61 === b
              ? this.finishOp(d.types.assign, 2)
              : this.finishOp(
                  124 === a ? d.types.bitwiseOR : d.types.bitwiseAND,
                  1
                );
          };
          a.readToken_caret = function () {
            return 61 === this.input.charCodeAt(this.pos + 1)
              ? this.finishOp(d.types.assign, 2)
              : this.finishOp(d.types.bitwiseXOR, 1);
          };
          a.readToken_plus_min = function (a) {
            var b = this.input.charCodeAt(this.pos + 1);
            return b === a
              ? 45 == b &&
                62 == this.input.charCodeAt(this.pos + 2) &&
                n.lineBreak.test(this.input.slice(this.lastTokEnd, this.pos))
                ? (this.skipLineComment(3), this.skipSpace(), this.nextToken())
                : this.finishOp(d.types.incDec, 2)
              : 61 === b
              ? this.finishOp(d.types.assign, 2)
              : this.finishOp(d.types.plusMin, 1);
          };
          a.readToken_lt_gt = function (a) {
            var b = this.input.charCodeAt(this.pos + 1),
              c = 1;
            if (b === a)
              return (
                (c =
                  62 === a && 62 === this.input.charCodeAt(this.pos + 2)
                    ? 3
                    : 2),
                61 === this.input.charCodeAt(this.pos + c)
                  ? this.finishOp(d.types.assign, c + 1)
                  : this.finishOp(d.types.bitShift, c)
              );
            if (
              33 == b &&
              60 == a &&
              45 == this.input.charCodeAt(this.pos + 2) &&
              45 == this.input.charCodeAt(this.pos + 3)
            )
              return (
                this.inModule && this.unexpected(),
                this.skipLineComment(4),
                this.skipSpace(),
                this.nextToken()
              );
            61 === b && (c = 2);
            return this.finishOp(d.types.relational, c);
          };
          a.readToken_eq_excl = function (a) {
            var b = this.input.charCodeAt(this.pos + 1);
            return 61 === b
              ? this.finishOp(
                  d.types.equality,
                  61 === this.input.charCodeAt(this.pos + 2) ? 3 : 2
                )
              : 61 === a && 62 === b && 6 <= this.options.ecmaVersion
              ? ((this.pos += 2), this.finishToken(d.types.arrow))
              : this.finishOp(61 === a ? d.types.eq : d.types.prefix, 1);
          };
          a.getTokenFromCode = function (a) {
            switch (a) {
              case 46:
                return this.readToken_dot();
              case 40:
                return ++this.pos, this.finishToken(d.types.parenL);
              case 41:
                return ++this.pos, this.finishToken(d.types.parenR);
              case 59:
                return ++this.pos, this.finishToken(d.types.semi);
              case 44:
                return ++this.pos, this.finishToken(d.types.comma);
              case 91:
                return ++this.pos, this.finishToken(d.types.bracketL);
              case 93:
                return ++this.pos, this.finishToken(d.types.bracketR);
              case 123:
                return ++this.pos, this.finishToken(d.types.braceL);
              case 125:
                return ++this.pos, this.finishToken(d.types.braceR);
              case 58:
                return ++this.pos, this.finishToken(d.types.colon);
              case 63:
                return ++this.pos, this.finishToken(d.types.question);
              case 96:
                if (6 > this.options.ecmaVersion) break;
                ++this.pos;
                return this.finishToken(d.types.backQuote);
              case 48:
                a = this.input.charCodeAt(this.pos + 1);
                if (120 === a || 88 === a) return this.readRadixNumber(16);
                if (6 <= this.options.ecmaVersion) {
                  if (111 === a || 79 === a) return this.readRadixNumber(8);
                  if (98 === a || 66 === a) return this.readRadixNumber(2);
                }
              case 49:
              case 50:
              case 51:
              case 52:
              case 53:
              case 54:
              case 55:
              case 56:
              case 57:
                return this.readNumber(!1);
              case 34:
              case 39:
                return this.readString(a);
              case 47:
                return this.readToken_slash();
              case 37:
              case 42:
                return this.readToken_mult_modulo_exp(a);
              case 124:
              case 38:
                return this.readToken_pipe_amp(a);
              case 94:
                return this.readToken_caret();
              case 43:
              case 45:
                return this.readToken_plus_min(a);
              case 60:
              case 62:
                return this.readToken_lt_gt(a);
              case 61:
              case 33:
                return this.readToken_eq_excl(a);
              case 126:
                return this.finishOp(d.types.prefix, 1);
            }
            this.raise(this.pos, "Unexpected character '" + g(a) + "'");
          };
          a.finishOp = function (a, b) {
            var c = this.input.slice(this.pos, this.pos + b);
            this.pos += b;
            return this.finishToken(a, c);
          };
          var p = !!c("\uffff", "u");
          a.readRegexp = function () {
            for (var a = this, b = void 0, e = void 0, f = this.pos; ; ) {
              this.pos >= this.input.length &&
                this.raise(f, "Unterminated regular expression");
              var g = this.input.charAt(this.pos);
              n.lineBreak.test(g) &&
                this.raise(f, "Unterminated regular expression");
              if (b) b = !1;
              else {
                if ("[" === g) e = !0;
                else if ("]" === g && e) e = !1;
                else if ("/" === g && !e) break;
                b = "\\" === g;
              }
              ++this.pos;
            }
            b = this.input.slice(f, this.pos);
            ++this.pos;
            e = this.readWord1();
            g = b;
            if (e) {
              var h = /^[gim]*$/;
              6 <= this.options.ecmaVersion && (h = /^[gimuy]*$/);
              h.test(e) || this.raise(f, "Invalid regular expression flag");
              0 <= e.indexOf("u") &&
                !p &&
                ((g = g.replace(/\\u\{([0-9a-fA-F]+)\}/g, function (b, c, d) {
                  c = Number("0x" + c);
                  1114111 < c && a.raise(f + d + 3, "Code point out of bounds");
                  return "x";
                })),
                (g = g.replace(
                  /\\u([a-fA-F0-9]{4})|[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
                  "x"
                )));
            }
            h = null;
            m || (c(g, void 0, f, this), (h = c(b, e)));
            return this.finishToken(d.types.regexp, {
              pattern: b,
              flags: e,
              value: h,
            });
          };
          a.readInt = function (a, b) {
            for (
              var c = this.pos, d = 0, e = 0, f = null == b ? Infinity : b;
              e < f;
              ++e
            ) {
              var k = this.input.charCodeAt(this.pos),
                k =
                  97 <= k
                    ? k - 97 + 10
                    : 65 <= k
                    ? k - 65 + 10
                    : 48 <= k && 57 >= k
                    ? k - 48
                    : Infinity;
              if (k >= a) break;
              ++this.pos;
              d = d * a + k;
            }
            return this.pos === c || (null != b && this.pos - c !== b)
              ? null
              : d;
          };
          a.readRadixNumber = function (a) {
            this.pos += 2;
            var c = this.readInt(a);
            null == c &&
              this.raise(this.start + 2, "Expected number in radix " + a);
            b.isIdentifierStart(this.fullCharCodeAtPos()) &&
              this.raise(this.pos, "Identifier directly after number");
            return this.finishToken(d.types.num, c);
          };
          a.readNumber = function (a) {
            var c = this.pos,
              e = !1,
              f = 48 === this.input.charCodeAt(this.pos);
            a || null !== this.readInt(10) || this.raise(c, "Invalid number");
            a = this.input.charCodeAt(this.pos);
            46 === a &&
              (++this.pos,
              this.readInt(10),
              (e = !0),
              (a = this.input.charCodeAt(this.pos)));
            if (69 === a || 101 === a)
              (a = this.input.charCodeAt(++this.pos)),
                (43 !== a && 45 !== a) || ++this.pos,
                null === this.readInt(10) && this.raise(c, "Invalid number"),
                (e = !0);
            b.isIdentifierStart(this.fullCharCodeAtPos()) &&
              this.raise(this.pos, "Identifier directly after number");
            a = this.input.slice(c, this.pos);
            var k = void 0;
            e
              ? (k = parseFloat(a))
              : f && 1 !== a.length
              ? /[89]/.test(a) || this.strict
                ? this.raise(c, "Invalid number")
                : (k = parseInt(a, 8))
              : (k = parseInt(a, 10));
            return this.finishToken(d.types.num, k);
          };
          a.readCodePoint = function () {
            if (123 === this.input.charCodeAt(this.pos)) {
              6 > this.options.ecmaVersion && this.unexpected();
              var a = ++this.pos;
              var b = this.readHexChar(
                this.input.indexOf("}", this.pos) - this.pos
              );
              ++this.pos;
              1114111 < b && this.raise(a, "Code point out of bounds");
            } else b = this.readHexChar(4);
            return b;
          };
          a.readString = function (a) {
            for (var b = "", c = ++this.pos; ; ) {
              this.pos >= this.input.length &&
                this.raise(this.start, "Unterminated string constant");
              var e = this.input.charCodeAt(this.pos);
              if (e === a) break;
              92 === e
                ? ((b += this.input.slice(c, this.pos)),
                  (b += this.readEscapedChar(!1)),
                  (c = this.pos))
                : (n.isNewLine(e) &&
                    this.raise(this.start, "Unterminated string constant"),
                  ++this.pos);
            }
            b += this.input.slice(c, this.pos++);
            return this.finishToken(d.types.string, b);
          };
          a.readTmplToken = function () {
            for (var a = "", b = this.pos; ; ) {
              this.pos >= this.input.length &&
                this.raise(this.start, "Unterminated template");
              var c = this.input.charCodeAt(this.pos);
              if (
                96 === c ||
                (36 === c && 123 === this.input.charCodeAt(this.pos + 1))
              ) {
                if (this.pos === this.start && this.type === d.types.template) {
                  if (36 === c)
                    return (
                      (this.pos += 2), this.finishToken(d.types.dollarBraceL)
                    );
                  ++this.pos;
                  return this.finishToken(d.types.backQuote);
                }
                a += this.input.slice(b, this.pos);
                return this.finishToken(d.types.template, a);
              }
              if (92 === c)
                (a += this.input.slice(b, this.pos)),
                  (a += this.readEscapedChar(!0)),
                  (b = this.pos);
              else if (n.isNewLine(c)) {
                a += this.input.slice(b, this.pos);
                ++this.pos;
                switch (c) {
                  case 13:
                    10 === this.input.charCodeAt(this.pos) && ++this.pos;
                  case 10:
                    a += "\n";
                    break;
                  default:
                    a += String.fromCharCode(c);
                }
                this.options.locations &&
                  (++this.curLine, (this.lineStart = this.pos));
                b = this.pos;
              } else ++this.pos;
            }
          };
          a.readEscapedChar = function (a) {
            var b = this.input.charCodeAt(++this.pos);
            ++this.pos;
            switch (b) {
              case 110:
                return "\n";
              case 114:
                return "\r";
              case 120:
                return String.fromCharCode(this.readHexChar(2));
              case 117:
                return g(this.readCodePoint());
              case 116:
                return "\t";
              case 98:
                return "\b";
              case 118:
                return "\x0B";
              case 102:
                return "\f";
              case 13:
                10 === this.input.charCodeAt(this.pos) && ++this.pos;
              case 10:
                return (
                  this.options.locations &&
                    ((this.lineStart = this.pos), ++this.curLine),
                  ""
                );
              default:
                if (48 <= b && 55 >= b) {
                  var b = this.input
                      .substr(this.pos - 1, 3)
                      .match(/^[0-7]+/)[0],
                    c = parseInt(b, 8);
                  255 < c && ((b = b.slice(0, -1)), (c = parseInt(b, 8)));
                  "0" !== b &&
                    (this.strict || a) &&
                    this.raise(this.pos - 2, "Octal literal in strict mode");
                  this.pos += b.length - 1;
                  return String.fromCharCode(c);
                }
                return String.fromCharCode(b);
            }
          };
          a.readHexChar = function (a) {
            var b = this.pos;
            a = this.readInt(16, a);
            null === a && this.raise(b, "Bad character escape sequence");
            return a;
          };
          a.readWord1 = function () {
            this.containsEsc = !1;
            for (
              var a = "",
                c = !0,
                d = this.pos,
                e = 6 <= this.options.ecmaVersion;
              this.pos < this.input.length;

            ) {
              var f = this.fullCharCodeAtPos();
              if (b.isIdentifierChar(f, e)) this.pos += 65535 >= f ? 1 : 2;
              else if (92 === f)
                (this.containsEsc = !0),
                  (a += this.input.slice(d, this.pos)),
                  (d = this.pos),
                  117 != this.input.charCodeAt(++this.pos) &&
                    this.raise(
                      this.pos,
                      "Expecting Unicode escape sequence \\uXXXX"
                    ),
                  ++this.pos,
                  (f = this.readCodePoint()),
                  (c ? b.isIdentifierStart : b.isIdentifierChar)(f, e) ||
                    this.raise(d, "Invalid Unicode escape"),
                  (a += g(f)),
                  (d = this.pos);
              else break;
              c = !1;
            }
            return a + this.input.slice(d, this.pos);
          };
          a.readWord = function () {
            var a = this.readWord1(),
              b = d.types.name;
            (6 <= this.options.ecmaVersion || !this.containsEsc) &&
              this.keywords.test(a) &&
              (b = d.keywords[a]);
            return this.finishToken(b, a);
          };
        },
        {
          "./identifier": 2,
          "./locutil": 5,
          "./state": 10,
          "./tokentype": 14,
          "./whitespace": 16,
        },
      ],
      14: [
        function (a, l, f) {
          function c(a, c) {
            return new b(a, { beforeExpr: !0, binop: c });
          }
          function g(a) {
            var c =
              1 >= arguments.length || void 0 === arguments[1]
                ? {}
                : arguments[1];
            c.keyword = a;
            h[a] = d["_" + a] = new b(a, c);
          }
          f.__esModule = !0;
          var b = function e(a) {
            var b =
              1 >= arguments.length || void 0 === arguments[1]
                ? {}
                : arguments[1];
            if (!(this instanceof e))
              throw new TypeError("Cannot call a class as a function");
            this.label = a;
            this.keyword = b.keyword;
            this.beforeExpr = !!b.beforeExpr;
            this.startsExpr = !!b.startsExpr;
            this.isLoop = !!b.isLoop;
            this.isAssign = !!b.isAssign;
            this.prefix = !!b.prefix;
            this.postfix = !!b.postfix;
            this.binop = b.binop || null;
            this.updateContext = null;
          };
          f.TokenType = b;
          a = { beforeExpr: !0 };
          l = { startsExpr: !0 };
          var d = {
            num: new b("num", l),
            regexp: new b("regexp", l),
            string: new b("string", l),
            name: new b("name", l),
            eof: new b("eof"),
            bracketL: new b("[", { beforeExpr: !0, startsExpr: !0 }),
            bracketR: new b("]"),
            braceL: new b("{", { beforeExpr: !0, startsExpr: !0 }),
            braceR: new b("}"),
            parenL: new b("(", { beforeExpr: !0, startsExpr: !0 }),
            parenR: new b(")"),
            comma: new b(",", a),
            semi: new b(";", a),
            colon: new b(":", a),
            dot: new b("."),
            question: new b("?", a),
            arrow: new b("=>", a),
            template: new b("template"),
            ellipsis: new b("...", a),
            backQuote: new b("`", l),
            dollarBraceL: new b("${", { beforeExpr: !0, startsExpr: !0 }),
            eq: new b("=", { beforeExpr: !0, isAssign: !0 }),
            assign: new b("_=", { beforeExpr: !0, isAssign: !0 }),
            incDec: new b("++/--", { prefix: !0, postfix: !0, startsExpr: !0 }),
            prefix: new b("prefix", {
              beforeExpr: !0,
              prefix: !0,
              startsExpr: !0,
            }),
            logicalOR: c("||", 1),
            logicalAND: c("&&", 2),
            bitwiseOR: c("|", 3),
            bitwiseXOR: c("^", 4),
            bitwiseAND: c("&", 5),
            equality: c("==/!=", 6),
            relational: c("</>", 7),
            bitShift: c("<</>>", 8),
            plusMin: new b("+/-", {
              beforeExpr: !0,
              binop: 9,
              prefix: !0,
              startsExpr: !0,
            }),
            modulo: c("%", 10),
            star: c("*", 10),
            slash: c("/", 10),
            starstar: new b("**", { beforeExpr: !0 }),
          };
          f.types = d;
          var h = {};
          f.keywords = h;
          g("break");
          g("case", a);
          g("catch");
          g("continue");
          g("debugger");
          g("default", a);
          g("do", { isLoop: !0, beforeExpr: !0 });
          g("else", a);
          g("finally");
          g("for", { isLoop: !0 });
          g("function", l);
          g("if");
          g("return", a);
          g("switch");
          g("throw", a);
          g("try");
          g("var");
          g("const");
          g("while", { isLoop: !0 });
          g("with");
          g("new", { beforeExpr: !0, startsExpr: !0 });
          g("this", l);
          g("super", l);
          g("class");
          g("extends", a);
          g("export");
          g("import");
          g("null", l);
          g("true", l);
          g("false", l);
          g("in", { beforeExpr: !0, binop: 7 });
          g("instanceof", { beforeExpr: !0, binop: 7 });
          g("typeof", { beforeExpr: !0, prefix: !0, startsExpr: !0 });
          g("void", { beforeExpr: !0, prefix: !0, startsExpr: !0 });
          g("delete", { beforeExpr: !0, prefix: !0, startsExpr: !0 });
        },
        {},
      ],
      15: [
        function (a, l, f) {
          f.__esModule = !0;
          f.isArray = function (a) {
            return "[object Array]" === Object.prototype.toString.call(a);
          };
          f.has = function (a, f) {
            return Object.prototype.hasOwnProperty.call(a, f);
          };
        },
        {},
      ],
      16: [
        function (a, l, f) {
          f.__esModule = !0;
          f.isNewLine = function (a) {
            return 10 === a || 13 === a || 8232 === a || 8233 == a;
          };
          a = /\r\n?|\n|\u2028|\u2029/;
          f.lineBreak = a;
          f.lineBreakG = new RegExp(a.source, "g");
          f.nonASCIIwhitespace =
            /[\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff]/;
          f.skipWhiteSpace = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;
        },
        {},
      ],
    },
    {},
    [3]
  )(3);
});
var CR3Parser = (() => {
  const t = (t, e) => {
      const n =
        ((t.buf[t.pos >> 3] << (24 + (7 & t.pos))) |
          (t.buf[(t.pos + 8) >> 3] << (16 + (7 & t.pos))) |
          (t.buf[(t.pos + 16) >> 3] << (8 + (7 & t.pos))) |
          (t.buf[(t.pos + 24) >> 3] << (7 & t.pos))) >>>
        (32 - e);
      return (t.pos += e), n;
    },
    e = (t) => (t.buf[t.pos >> 3] >> (7 - (7 & t.pos++))) & 1,
    n = (e, n, a) => {
      let i = e.pos,
        s = (e.buf[e.pos >> 3] << (24 + (7 & e.pos))) >>> 24;
      if (!s)
        for (e.pos += 8 - (7 & e.pos); !(s = e.buf[e.pos >> 3]); e.pos += 8);
      e.pos += Math.clz32(s) - 23;
      const r = e.pos - i - 1;
      return r >= n ? t(e, a) : e.k ? (r << e.k) | t(e, e.k) : r;
    },
    a = (t, e, n) => {
      let a = t;
      return (
        e >>> t > 2 && ++a,
        e >>> t > 5 && ++a,
        e < (1 << t) >>> 1 && --a,
        Math.min(a, n)
      );
    },
    i = (t) => -(1 & t) ^ (t >>> 1),
    s = new Uint8Array([40, 45, 51, 57, 64, 72]),
    r = (t) =>
      t >= 36
        ? s[t % 6] << (Math.floor(t / 6) - 6)
        : s[t % 6] >> (6 - Math.floor(t / 6)),
    o = (t, e) => {
      if (!t.qp) return [];
      const s = { buf: e.subarray(t.offset), pos: 0, k: 0, s: 0 },
        o = (t.planeWidth >> 3) + +(!0 & t.planeWidth),
        l = (t.planeHeight >> 1) + (1 & t.planeHeight),
        f = new Int32Array(l * o);
      let h = 0;
      for (let t = 0; t < o; ++t) {
        const e = n(s, 23, 8);
        (s.k = a(s.k, e, 7)), (f[t] = h += i(e));
      }
      let p = 0,
        c = 0,
        u = 0;
      for (let t = 1; t < l; ++t) {
        const e = t * o,
          r = e - o + 1;
        let l = (h = p = f[e - o]),
          g = p - c;
        for (let t = 0; t < o - 1; ++t) {
          u = f[r + t];
          const o = g < 0 == c < h ? h + g : g < 0 == h < p ? h : p,
            l = n(s, 23, 8);
          (g = u - p),
            (c = p),
            (p = u),
            (s.k = a(s.k, (l + (Math.abs(g) << 1)) >>> 1, 7)),
            (f[e + t] = h = o + i(l));
        }
        const b = g < 0 == c < h ? h + g : g < 0 == h < p ? h : p,
          d = n(s, 23, 8);
        (s.k = a(s.k, d, 7)), (f[e + o - 1] = b + i(d)), (c = l);
      }
      const g = (t.planeHeight >> 3) + +(!0 & t.planeHeight),
        b = (t.planeHeight >> 2) + +(!0 & t.planeHeight),
        d = (l - 1) * o,
        w = [];
      switch (t.wavelets) {
        case 3: {
          const e = new Int32Array(g * o);
          for (let n = 0; n < t.planeHeight >> 3; ++n) {
            const t = n * o,
              a = (n << 2) * o,
              i = a + o,
              s = i + o,
              l = s + o;
            for (let n = 0; n < o; ++n) {
              const o = f[a + n] + f[i + n] + f[s + n] + f[l + n] + 16;
              e[t + n] = r((3 * +(o < 0) + o) >> 2);
            }
          }
          if (!0 & t.planeHeight) {
            const n = (t.planeHeight >> 3) * o,
              a = (-4 & l) * o,
              i = Math.min(a + o, d),
              s = Math.min(i + o, d),
              h = d;
            for (let t = 0; t < o; ++t) {
              const o = f[a + t] + f[i + t] + f[s + t] + f[h + t] + 16;
              e[n + t] = r((3 * +(o < 0) + o) >> 2);
            }
          }
          w.push(e);
        }
        case 2: {
          const e = new Int32Array(b * o);
          for (let n = 0; n < t.planeHeight >> 2; ++n) {
            const t = n * o,
              a = (n << 1) * o,
              i = a + o;
            for (let n = 0; n < o; ++n)
              e[t + n] = r((f[a + n] + f[i + n] + 8) >> 1);
          }
          if (!0 & t.planeHeight) {
            const n = (t.planeHeight >> 2) * o,
              a = (-2 & l) * o,
              i = d;
            for (let t = 0; t < o; ++t)
              e[n + t] = r((f[a + t] + f[i + t] + 8) >> 1);
          }
          w.push(e);
        }
        case 1: {
          const t = l * o;
          for (let e = 0; e < t; ++e) f[e] = r(f[e] + 4);
          w.push(f);
        }
      }
      return w;
    },
    l = new Uint8Array([
      0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8,
      9, 10, 11, 12, 13, 14, 15,
    ]),
    f = new Uint16Array(32);
  for (let t = 0; t < 32; ++t) f[t] = 1 << l[t];
  const h = (n, a) => {
      let i = a - 1;
      for (; i && e(n); ) (i -= f[n.s]), i < 0 ? (i = 0) : n.s < 31 && ++n.s;
      return i && (l[n.s] && (i -= t(n, l[n.s])), n.s && --n.s), a - i;
    },
    p = (t, s, r, o, l, f, p) => {
      r[0] = 0;
      let c = 1;
      if (o)
        if (f)
          for (; c < l; ++c) {
            let s = r[c - 1];
            if (Math.abs(s) <= p) {
              if (e(t)) {
                const e = c + h(t, l - c + 1);
                for (; c < e; ++c) r[c] = s;
                if (c > l) break;
              }
              s = 0;
            }
            const o = n(t, 41, 21);
            t.k = a(t.k, o, 15);
            const u = i(o);
            r[c] = s + (u << f) + (u >> 31);
          }
        else
          for (; c < l; ++c) {
            let s = r[c - 1];
            if (!s && e(t)) {
              const e = c + h(t, l - c + 1);
              for (; c < e; ++c) r[c] = 0;
              if (c > l) break;
            }
            const o = n(t, 41, 21);
            (t.k = a(t.k, o, 15)), (r[c] = s + i(o));
          }
      else
        for (; c < l; ++c) {
          let o = 0;
          if (!r[c - 1]) {
            if (e(t)) {
              const e = c + h(t, l - c + 1);
              for (; c < e; ++c) r[c] = s[c - 1] = 0;
              if (c > l) break;
            }
            o = 1;
          }
          const f = n(t, 41, 21);
          (s[c - 1] = t.k = a(t.k, f, 15)), (r[c] = i(f + o));
        }
      if (c == l) {
        const e = r[c - 1],
          l = n(t, 41, 21);
        s[c - 1] = t.k = a(t.k, l, 15);
        const h = i(l);
        r[c++] =
          (o && (!f || Math.abs(e) <= p) ? e : 0) +
          (o && f ? (h << f) + (h >> 31) : h);
      }
      r[c] = o ? r[c - 1] + 1 : 0;
    },
    c = (t, s, r, o, l, f, p) => {
      let c = 1,
        u = 0;
      if (o)
        if (f) {
          r[0] = s[1];
          let o = !1,
            g = r[0],
            b = g,
            d = g,
            w = 0;
          for (; c < l; ++c) {
            w = s[c + 1];
            let m = b;
            if (
              (Math.abs(w - b) > p && (o = !0)) ||
              ((o || Math.abs(d - g) > p) && !(o = !1))
            ) {
              let t = g,
                e = b;
              g > b && ((t = b), (e = g)),
                (m = d >= e ? t : d <= t ? e : g + b - d);
            } else {
              if (e(t)) {
                const e = c + h(t, l - c + 1);
                for (; c < e; ++c) r[c] = g;
                if (c >= l) {
                  u = 1;
                  break;
                }
                (b = s[c]), (d = s[c - 1]), (w = s[c + 1]);
              }
              o = Math.abs(w - b) > p;
            }
            const y = n(t, 41, 21);
            t.k = a(
              t.k,
              (y +
                (Math.abs(w > b ? (w - b + p - 1) >> f : -((w - b + p) >> f)) <<
                  1)) >>>
                1,
              15
            );
            const v = i(y);
            (g = r[c] = m + (v << f) + (v >> 31)), (d = b), (b = w);
          }
        } else {
          r[0] = s[1];
          let o = r[0],
            f = o,
            p = s[0],
            g = 0;
          for (; c < l; ++c) {
            g = s[c + 1];
            let b = 0;
            if (o == f && o == g) {
              if (e(t)) {
                const e = c + h(t, l - c + 1);
                for (; c < e; ++c) r[c] = o;
                if (c >= l) {
                  u = 1;
                  break;
                }
                (f = s[c]), (p = s[c - 1]), (g = s[c + 1]);
              }
              b = f;
            } else {
              let t = o,
                e = f;
              o > f && ((t = f), (e = o)),
                (b = p >= e ? t : p <= t ? e : o + f - p);
            }
            const d = n(t, 41, 21);
            (t.k = a(t.k, (d + Math.abs((g - f) << 1)) >>> 1, 15)),
              (o = r[c] = b + i(d)),
              (p = f),
              (f = g);
          }
        }
      else {
        r[0] = 0;
        let o = 0,
          f = s[1],
          p = 0;
        for (; c < l; ++c) {
          p = s[c + 1];
          let g = 0;
          if (!(p | f | o)) {
            if (e(t)) {
              const e = c + h(t, l - c + 1);
              for (; c < e; ++c) r[c] = s[c - 1] = 0;
              if (c >= l) {
                u = 1;
                break;
              }
              (f = s[c]), (p = s[c + 1]);
            }
            g = 1;
          }
          const b = n(t, 41, 21);
          let d = a(t.k, b, 15);
          r[c] - d > 1 && ++d,
            (t.k = s[c - 1] = d),
            (o = r[c] = i(b + g)),
            (f = p);
        }
      }
      if (c == l) {
        let e = 0;
        if (o) {
          let t = (e = s[c]);
          if (!u) {
            let n = r[c - 1],
              a = s[c - 1],
              i = n,
              o = t;
            n > t && ((i = t), (o = n)),
              (e = a >= o ? i : a <= i ? o : n + t - a);
          }
        }
        const l = n(t, 41, 21),
          h = i(o ? l : l + u);
        (s[c - 1] = t.k = a(t.k, l, 15)),
          (r[c++] = e + (o && f ? (h << f) + (h >> 31) : h));
      }
      o && (r[c] = r[c - 1] + 1);
    },
    u = (t, e, s, o, l, f, h, p) => {
      const c = l.width,
        u = l.height,
        g = l.xs,
        b = l.xe,
        d = l.ys,
        w = l.ye,
        m = p[h];
      if (l.partial && !m) {
        const t = n(e, 23, 8);
        (l.qParam += i(t)), (e.k = a(e.k, t, 7));
      }
      let y = 0;
      if (m) {
        const e =
            (+(!0 & f) + (f >> 3)) *
            (o < d ? 0 : o < u - w ? o - d : u - d - w - 1),
          n = l.qBase,
          a = l.qMulti,
          i = Math.max(Math.min(n + ((a * m[e]) >> 3), 1474560), 1);
        for (; y < g; ++y) s[y] = i * t[y + 1];
        const r = c - b - 1;
        for (; y < r; ++y) {
          const i = n + ((a * m[e + ((y - g) >> h)]) >> 3);
          s[y] = Math.max(Math.min(i, 1474560), 1) * t[y + 1];
        }
        const p = Math.max(Math.min(n + ((a * m[e + ((y - g) >> h)]) >> 3)));
        for (; y < c; ++y) s[y] = p * t[y + 1];
      } else {
        const e = r(l.qParam);
        for (; y < c; ++y) s[y] = t[y + 1] * e;
      }
    },
    g = (t, e, n, a, i) => {
      let s = 1,
        r = 0,
        o = 0,
        l = e[0],
        f = (n[0] = t[0] - ((l + (a.left ? (l = e[(o = 1)]) : l) + 2) >> 2));
      const h = i - 2;
      for (; s < h; s += 2) {
        const a = e[++o],
          i = t[++r] - ((l + a + 2) >> 2);
        (n[s] = l + ((i + f) >> 1)), (n[s + 1] = f = i), (l = a);
      }
      if (a.right || 1 & i) {
        const o = t[r + 1] - ((l + (a.right ? e[s + 1] : l) + 2) >> 2);
        (n[s] = l + ((o + f) >> 1)), 1 & i && (n[s + 1] = o);
      } else n[s] = l + f;
    },
    b = (t, e, n, a) => {
      const i = (i, s, r) => {
          const o = e.bandState[i],
            l = o.prevLineBuf;
          (o.prevLineBuf = o.lineBuf),
            (o.lineBuf = l),
            r
              ? c(
                  o.state,
                  o.prevLineBuf,
                  o.lineBuf,
                  o.partial,
                  o.w,
                  o.rb,
                  o.rbm
                )
              : p(
                  o.state,
                  o.prevLineBuf,
                  o.lineBuf,
                  o.partial,
                  o.w,
                  o.rb,
                  o.rbm
                ),
            u(o.lineBuf, o.state, s, r, e.plane.bands[i], t.planeWidth, a, n);
        },
        s = 3 * a,
        r = a < t.wavelets - 1 ? e.plane.bands[s + 5].width : t.planeWidth;
      let o = e.tmpL;
      a ? (b(t, e, n, a - 1), (o = e.out[(a << 1) - 1])) : i(0, o, 0);
      const l = e.curH[a],
        f = e.nextH[a],
        h = e.out[1 + (a << 1)],
        d = e.tmpH;
      if (
        (i(s + 1, d, 0),
        g(o, d, h, t, r),
        (o = e.tmpL),
        i(s + 2, o, 0),
        i(s + 3, d, 0),
        g(o, d, t.above ? l : f, t, r),
        t.above)
      ) {
        i(s + 2, o, 1), i(s + 3, d, 1), g(o, d, f, t, r);
        for (let t = 0; t < r; ++t) h[t] -= (l[t] + f[t] + 2) >> 2;
      } else for (let t = 0; t < r; ++t) h[t] -= (f[t] + 1) >> 1;
    },
    d = (t, e, n, a, i) => {
      const s = (s, r, o) => {
          const l = n.bandState[s],
            f = l.prevLineBuf;
          (l.prevLineBuf = l.lineBuf),
            (l.lineBuf = f),
            c(l.state, l.prevLineBuf, l.lineBuf, l.partial, l.w, l.rb, l.rbm),
            u(
              l.lineBuf,
              l.state,
              r,
              e + 1 + o,
              n.plane.bands[s],
              t.planeWidth,
              i,
              a
            );
        },
        r = 3 * i,
        o = i < t.wavelets - 1 ? n.plane.bands[r + 4].height : t.planeHeight,
        l = i < t.wavelets - 1 ? n.plane.bands[r + 5].width : t.planeWidth,
        f = n.nextH[i],
        h = n.curH[i],
        p = n.out[i << 1],
        b = n.out[1 + (i << 1)],
        w = n.tmpH,
        m = e << 1 > o - 4 && !t.below;
      if (m && !(1 & o)) {
        for (let t = 0; t < l; ++t) p[t] = f[t] + b[t];
        return;
      }
      let y = n.tmpL;
      if (
        (i
          ? 1 & e
            ? (y = n.out[(i << 1) - 1])
            : (d(t, e >> 1, n, a, i - 1), (y = n.out[(i - 1) << 1]))
          : s(0, y, 0),
        s(r + 1, w, 0),
        g(y, w, p, t, l),
        m)
      )
        for (let t = 0; t < l; ++t)
          b[t] = f[t] + (((p[t] -= (f[t] + 1) >> 1) + b[t]) >> 1);
      else {
        (y = n.tmpL),
          s(r + 2, y, +t.above),
          s(r + 3, w, +t.above),
          g(y, w, h, t, l);
        for (let t = 0; t < l; ++t)
          b[t] = f[t] + (((p[t] -= (f[t] + h[t] + 2) >> 2) + b[t]) >> 1);
      }
      (n.out[i << 1] = b),
        (n.out[1 + (i << 1)] = p),
        (n.nextH[i] = h),
        (n.curH[i] = f);
    },
    w = (t, e, n, a, i, s, r, o) => {
      const { left: l, top: f, width: h, height: p } = n;
      if (0 == e.encType) {
        const n = 1 << (e.medianBits - 1),
          c = (1 << e.medianBits) - 1;
        for (let e = 0; e < 2; ++e) {
          const u = i + 2 * s + e - f;
          if (!(u < 0 || u >= p))
            for (let i = 0; i < 2; ++i) {
              const s = o[2 * e + i],
                f = u * h + a + i - l,
                p = Math.min((l - a + h + 1 - i) >> 1, r);
              for (let e = Math.max((l - a + 1 - i) >> 1, 0); e < p; ++e)
                t[f + (e << 1)] = Math.min(Math.max(n + s[e], 0), c);
            }
        }
      } else if (3 == e.encType) {
        const n = 1 << (e.medianBits + 9),
          c = (1 << e.medianBits) - 1,
          u = i + 2 * s - f;
        if (u < -1 || u >= p) return;
        const g = Math.max((l - a + 1) >> 1, 0),
          b = Math.min((l - a + h + 1) >> 1, r),
          d = o[0],
          w = o[1],
          m = o[2],
          y = o[3];
        let v = u * h + a - l;
        if (-1 == u || u == p - 1) {
          const e = -1 == u;
          for (let a = g; a < b; ++a) {
            const i = d[a],
              s = w[a],
              r = m[a],
              o = y[a],
              l = v + (a << 1);
            let f = n + (i << 10) - 168 * s - 585 * o;
            (f = f < 0 ? -(((512 - f) >> 9) & -2) : ((f + 512) >> 9) & -2),
              e
                ? ((t[l + h] = Math.min(Math.max((f - r + 1) >> 1, 0), c)),
                  (t[l + h + 1] = Math.min(
                    Math.max((n + (i << 10) + 1927 * s + 512) >> 10, 0),
                    c
                  )))
                : ((t[l] = Math.min(
                    Math.max((n + (i << 10) + 1510 * o + 512) >> 10, 0),
                    c
                  )),
                  (t[l + 1] = Math.min(Math.max((r + f + 1) >> 1, 0), c)));
          }
        } else
          for (let e = g; e < b; ++e) {
            const a = d[e],
              i = w[e],
              s = m[e],
              r = y[e],
              o = v + (e << 1);
            let l = n + (a << 10) - 168 * i - 585 * r;
            (l = l < 0 ? -(((512 - l) >> 9) & -2) : ((l + 512) >> 9) & -2),
              (t[o] = Math.min(
                Math.max((n + (a << 10) + 1510 * r + 512) >> 10, 0),
                c
              )),
              (t[o + 1] = Math.min(Math.max((s + l + 1) >> 1, 0), c)),
              (t[o + h] = Math.min(Math.max((l - s + 1) >> 1, 0), c)),
              (t[o + h + 1] = Math.min(
                Math.max((n + (a << 10) + 1927 * i + 512) >> 10, 0),
                c
              ));
          }
      }
    },
    m = new Uint8Array([
      1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1,
      1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1,
      1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 2, 2, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1,
      1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 2, 2, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1,
      1, 1, 1, 0, 1, 0, 1, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2,
      1, 1, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ]),
    y = (t, e, n, a) => {
      const i = Math.ceil(t.width / t.tileWidth),
        s = Math.ceil(t.height / t.tileHeight),
        r = [],
        l = new DataView(e.buffer, e.byteOffset, t.headerSize);
      let f = 0;
      for (let e = 0, n = 0; n < s; ++n)
        for (let a = 0; a < i; ++a) {
          if (65297 != (16 | l.getUint16(e)))
            throw new Error("invalid tile header");
          const o = l.getUint16(e + 2),
            h = l.getInt32(e + 4);
          if (n * i + a != l.getUint16(e + 8))
            throw new Error("invalid tile index");
          let p = !1,
            c = 0,
            u = 0;
          16 == o &&
            ((p = !0), (c = l.getInt32(e + 12)), (u = l.getUint16(e + 16))),
            (e += o + 4);
          const g = 0 != n,
            b = n != s - 1,
            d = 0 != a,
            w = a != i - 1,
            y = w ? t.tileWidth : t.width - (i - 1) * t.tileWidth,
            v = b ? t.tileHeight : t.height - (s - 1) * t.tileHeight,
            M = y >> 1,
            k = v >> 1,
            B = [];
          let U = 0;
          for (let n = 0; n < t.planes; ++n) {
            if (65298 != (16 | l.getUint16(e)))
              throw new Error("invalid plane header");
            const a = l.getUint16(e + 2),
              i = l.getInt32(e + 4),
              s = l.getUint8(e + 8);
            if (n != s >> 4) throw new Error("invalid plane index");
            const r = (s >> 3) & 1,
              o = (s >> 1) & 3;
            e += a + 4;
            const f = 48 * (t.wavelets - 1) + 6 * (7 & M),
              h = 48 * (t.wavelets - 1) + 6 * (7 & k),
              p = [];
            let c = 0;
            const u = (t, n, a, i, s, r, o) => {
              const f = l.getUint16(e);
              if (65299 != (16 | f)) throw new Error("invalid subband header");
              const h = l.getUint16(e + 2),
                u = l.getInt32(e + 4),
                g = l.getUint16(e + 8);
              if (t != g >> 12) throw new Error("invalid subband index");
              if (65283 == f) {
                const t = (g >> 11) & 1,
                  e = (g >> 3) & 255;
                p.push({
                  offset: c,
                  partial: 1 == t,
                  qParam: e,
                  qBase: 0,
                  qMulti: 0,
                  width: n,
                  height: a,
                  xs: i,
                  xe: s,
                  ys: r,
                  ye: o,
                });
              } else {
                const t = l.getUint16(e + 10),
                  f = l.getInt32(e + 12);
                p.push({
                  offset: c,
                  partial: !1,
                  qParam: 0,
                  qBase: f,
                  qMulti: t,
                  width: n,
                  height: a,
                  xs: i,
                  xe: s,
                  ys: r,
                  ye: o,
                });
              }
              (c += u), (e += h + 4);
            };
            if (t.wavelets)
              for (let e = t.wavelets; e > 0; --e) {
                const n = (M + (1 << (e - 1)) - 1) >> (e - 1),
                  a = (k + (1 << (e - 1)) - 1) >> (e - 1),
                  i = 1 & n,
                  s = 1 & a,
                  r = (n + 1) >> 1,
                  o = (a + 1) >> 1,
                  l = f + (e << 1) - 2,
                  p = h + (e << 1) - 2;
                let c = +d,
                  y = +g,
                  v = w ? m[l] : 0,
                  B = b ? m[p] : 0,
                  U = w ? m[l + 1] : 0,
                  x = b ? m[p + 1] : 0;
                e == t.wavelets && u(0, r + U, o + x, 0, U, 0, x);
                for (let n = 0; n < 3; ++n)
                  u(
                    3 * (t.wavelets - e) + n + 1,
                    1 & n ? r + U : r + c + v - i,
                    n ? o + y + B - s : o + x,
                    1 & n ? 0 : c,
                    1 & n ? U : v,
                    n ? y : 0,
                    n ? B : x
                  );
              }
            else u(0, M, k, 0, 0, 0, 0);
            B.push({ offset: U, partial: 1 == r, roundedBits: o, bands: p }),
              (U += i);
          }
          r.push({
            offset: f,
            above: g,
            below: b,
            left: d,
            right: w,
            qp: p,
            qpSize: c,
            qpPad: u,
            width: y,
            height: v,
            planeWidth: M,
            planeHeight: k,
            wavelets: t.wavelets,
            x: a * t.tileWidth,
            y: n * t.tileHeight,
            planes: B,
          }),
            (f += h);
        }
      ((t, e, n, a, i) => {
        const s = 2 + (t.tileWidth >> 1);
        if (t.wavelets) {
          const s = (t.tileWidth + 14) >> 2,
            r = s << 1,
            l = 14 * (t.tileWidth >> 1) + 22 * t.wavelets,
            f = new Int32Array(r + t.planes * l),
            h = f.subarray(0, s),
            p = f.subarray(s, r);
          for (const s of e) {
            const e = o(s, n),
              c = (s.planeHeight - 1) >> 1,
              u = s.planes.map((a, i) => {
                let o = r + i * l;
                const c = [],
                  u = [],
                  g = [];
                for (let e = t.wavelets - 1; e >= 0; --e) {
                  const t = 3 + (s.planeWidth >> e);
                  c.push(f.subarray(o, (o += t))),
                    u.push(f.subarray(o, (o += t))),
                    g.push(f.subarray(o, (o += t)), f.subarray(o, (o += t)));
                }
                const d = a.bands.map((t, e) => {
                    const i = t.width + 2,
                      r = a.roundedBits,
                      l = 1 << (r - 1);
                    return {
                      lineBuf: f.subarray(o, (o += i)),
                      prevLineBuf: f.subarray(o, (o += i)),
                      state: {
                        buf: n.subarray(
                          s.offset + s.qpSize + s.qpPad + a.offset + t.offset
                        ),
                        pos: 0,
                        k: 0,
                        s: 0,
                      },
                      partial: a.partial && !e,
                      rb: r,
                      rbm: l,
                      w: t.width,
                    };
                  }),
                  w = {
                    plane: a,
                    nextH: u,
                    curH: c,
                    out: g,
                    tmpH: p,
                    tmpL: h,
                    bandState: d,
                  };
                return b(s, w, e, t.wavelets - 1), w;
              });
            w(
              a,
              t,
              i,
              s.x,
              s.y,
              0,
              s.planeWidth,
              u.map((e) => e.out[(t.wavelets << 1) - 1])
            );
            for (let n = 0; n < c; ++n) {
              for (const a of u) d(s, n, a, e, t.wavelets - 1);
              w(
                a,
                t,
                i,
                s.x,
                s.y,
                1 + (n << 1),
                s.planeWidth,
                u.map((e) => e.out[(t.wavelets - 1) << 1])
              ),
                2 + (n << 1) < s.planeHeight &&
                  w(
                    a,
                    t,
                    i,
                    s.x,
                    s.y,
                    2 + (n << 1),
                    s.planeWidth,
                    u.map((e) => e.out[(t.wavelets << 1) - 1])
                  );
            }
          }
        } else {
          const r = new Int32Array((t.planes * s) << 1);
          for (const o of e) {
            const e = o.planes.map((t, e) => {
              const a = t.bands[0],
                i = t.partial,
                l = {
                  buf: n.subarray(o.offset + t.offset + a.offset),
                  pos: 0,
                  k: 0,
                  s: 0,
                },
                f = (e << 1) * s,
                h = r.subarray(f, f + s),
                c = r.subarray(f + s, f + (s << 1)),
                u = t.roundedBits,
                g = 1 << (u - 1),
                b = a.width;
              return (
                p(l, c, h, i, b, u, g),
                {
                  lineBuf: h,
                  prevLineBuf: c,
                  state: l,
                  partial: i,
                  rb: u,
                  rbm: g,
                  w: b,
                }
              );
            });
            w(
              a,
              t,
              i,
              o.x,
              o.y,
              0,
              o.planeWidth,
              e.map((t) => t.lineBuf.subarray(1, -1))
            );
            for (let n = 1; n < o.planeHeight; ++n) {
              for (const t of e) {
                const e = t.prevLineBuf;
                (t.prevLineBuf = t.lineBuf),
                  (t.lineBuf = e),
                  c(
                    t.state,
                    t.prevLineBuf,
                    t.lineBuf,
                    t.partial,
                    t.w,
                    t.rb,
                    t.rbm
                  );
              }
              w(
                a,
                t,
                i,
                o.x,
                o.y,
                n,
                o.planeWidth,
                e.map((t) => t.lineBuf.subarray(1, -1))
              );
            }
          }
        }
      })(
        t,
        r,
        new Uint8Array(
          e.buffer,
          e.byteOffset + t.headerSize,
          e.byteLength - t.headerSize
        ),
        n,
        a
      );
    },
    v = (t) => {
      const e = {};
      for (let n = 0; n < t.byteLength; ) {
        let a = t.getInt32(n),
          i = n + a,
          s = String.fromCharCode(
            t.getUint8(n + 4),
            t.getUint8(n + 5),
            t.getUint8(n + 6),
            t.getUint8(n + 7)
          );
        1 == a && ((a = t.getInt32(n + 12)), (i = n + a), (n += 8)),
          (n += 8),
          e[s] || (e[s] = []),
          e[s].push(new DataView(t.buffer, t.byteOffset + n, i - n)),
          (n = i);
      }
      return e;
    };
  return class {
    constructor(t, e, n) {
      this.src = new DataView(t, e, n);
      const a = v(this.src),
        i = v(a.moov[0]);
      this.tracks = i.trak
        .map((t) => {
          const e = {},
            n = [],
            a = v(v(v(v(t).mdia[0]).minf[0]).stbl[0]),
            i = a.stsz[0],
            s = a.co64[0],
            r = Math.min(i.getInt32(8), s.getInt32(4)),
            o = i.getInt32(4);
          for (let t = 0; t < r; ++t)
            n.push({
              size: o || i.getInt32(12 + 4 * t),
              offset: s.getInt32(12 + 8 * t),
            });
          const l = a.stsd[0],
            f = v(new DataView(l.buffer, l.byteOffset + 8, l.byteLength - 8));
          if (!f.CRAW) return null;
          const h = f.CRAW[0];
          (e.width = h.getUint16(24)), (e.height = h.getUint16(26));
          const p = v(
            new DataView(h.buffer, h.byteOffset + 82, h.byteLength - 82)
          );
          if (p.JPEG) e.type = "jpeg";
          else if (p.CMP1) {
            const t = p.CMP1[0];
            (e.width = t.getInt32(8)),
              (e.height = t.getInt32(12)),
              (e.tileWidth = t.getInt32(16)),
              (e.tileHeight = t.getInt32(20));
            const n = t.getUint8(26);
            if (((e.wavelets = 15 & n), 0 != e.wavelets && 3 != e.wavelets))
              throw new TypeError("expected 0 or 3 wavelet levels");
            e.encType = n >> 4;
            const a = t.getUint8(25);
            if (((e.planes = a >> 4), 4 != e.planes))
              throw new TypeError("expected 4 planes");
            switch (15 & a) {
              case 0:
                e.layout = "rggb";
                break;
              case 1:
                e.layout = "grbg";
                break;
              case 2:
                e.layout = "gbrg";
                break;
              case 3:
                e.layout = "bggr";
            }
            (e.bitDepth = t.getUint8(24)),
              (e.medianBits = e.bitDepth),
              (e.headerSize = t.getInt32(28));
            if (t.getUint8(32) >> 7) {
              (t.getUint8(56) >> 6) & 1 && (e.medianBits = t.getUint8(84));
            }
            const i = p.CDI1[0],
              s = v(new DataView(i.buffer, i.byteOffset + 4, i.byteLength - 4))
                .IAD1[0],
              r = s.getUint16(10);
            (e.type = 2 == r ? "big" : 0 == r ? "small" : "unknown"),
              (e.fullCrop = {
                left: 0,
                top: 0,
                width: e.width,
                height: e.height,
              }),
              (e.recommendedCrop = {
                left: s.getUint16(16),
                top: s.getUint16(18),
              }),
              (e.recommendedCrop.width =
                s.getUint16(20) - e.recommendedCrop.left + 1),
              (e.recommendedCrop.height =
                s.getUint16(22) - e.recommendedCrop.top + 1),
              "big" == e.type &&
                ((e.activeArea = {
                  left: s.getUint16(40),
                  top: s.getUint16(42),
                }),
                (e.activeArea.width =
                  Math.min(s.getUint16(44) - 1, e.width) - e.activeArea.left),
                (e.activeArea.height =
                  Math.min(s.getUint16(46) - 1, e.width) - e.activeArea.top));
          } else e.type = "unknown";
          return { meta: e, samples: n };
        })
        .filter((t) => t);
    }
    getTrack(t = "big") {
      return this.tracks.find((e) => e.meta.type == t);
    }
    extractCFA(
      t = this.getTrack("big"),
      e = 0,
      n = t.meta.fullCrop,
      a = new Uint16Array(n.width * n.height)
    ) {
      if ("big" != t.meta.type && "small" != t.meta.type)
        throw new TypeError("expected raw track");
      const i = t.samples[e],
        s = new Uint8Array(
          this.src.buffer,
          this.src.byteOffset + i.offset,
          i.size
        );
      return y(t.meta, s, a, n), a;
    }
  };
})();

var UPNG = (function () {
  var f = {
    nextZero: function (O, i) {
      while (O[i] != 0) i++;
      return i;
    },
    readUshort: function (O, i) {
      return (O[i] << 8) | O[i + 1];
    },
    writeUshort: function (O, i, h) {
      O[i] = (h >> 8) & 255;
      O[i + 1] = h & 255;
    },
    readUint: function (O, i) {
      return (
        O[i] * (256 * 256 * 256) +
        ((O[i + 1] << 16) | (O[i + 2] << 8) | O[i + 3])
      );
    },
    writeUint: function (O, i, h) {
      O[i] = (h >> 24) & 255;
      O[i + 1] = (h >> 16) & 255;
      O[i + 2] = (h >> 8) & 255;
      O[i + 3] = h & 255;
    },
    readASCII: function (O, i, h) {
      var N = "";
      for (var d = 0; d < h; d++) N += String.fromCharCode(O[i + d]);
      return N;
    },
    writeASCII: function (O, i, h) {
      for (var N = 0; N < h.length; N++) O[i + N] = h.charCodeAt(N);
    },
    readBytes: function (O, i, h) {
      var N = [];
      for (var X = 0; X < h; X++) N.push(O[i + X]);
      return N;
    },
    pad: function (O) {
      return O.length < 2 ? "0" + O : O;
    },
    readUTF8: function (O, i, h) {
      var N = "",
        d;
      for (var Q = 0; Q < h; Q++) N += "%" + f.pad(O[i + Q].toString(16));
      try {
        d = decodeURIComponent(N);
      } catch (ag) {
        return f.readASCII(O, i, h);
      }
      return d;
    },
    writeUTF8: function (O, i, R) {
      var h = new window.TextEncoder("utf8"),
        N = h.encode(O);
      if (i) i.set(N, R);
      return N.length;
    },
  };
  function av(O) {
    var i = O.width,
      R = O.height;
    if (O.tabs.acTL == null) return [ai(O.data, i, R, O).buffer];
    var h = [];
    if (O.frames[0].data == null) O.frames[0].data = O.data;
    var N = i * R * 4,
      X = new Uint8Array(N),
      d = new Uint8Array(N),
      Q = new Uint8Array(N);
    for (var A = 0; A < O.frames.length; A++) {
      var q = O.frames[A],
        s = q.rect.x,
        a = q.rect.y,
        V = q.rect.width,
        M = q.rect.height,
        b = ai(q.data, V, M, O);
      if (A != 0) for (var S = 0; S < N; S++) Q[S] = X[S];
      if (q.blend == 0) aa(b, V, M, X, i, R, s, a, 0);
      else if (q.blend == 1) aa(b, V, M, X, i, R, s, a, 1);
      h.push(X.buffer.slice(0));
      if (q.dispose == 0) {
      } else if (q.dispose == 1) aa(d, V, M, X, i, R, s, a, 0);
      else if (q.dispose == 2) for (var S = 0; S < N; S++) X[S] = Q[S];
    }
    return h;
  }
  function ai(O, i, R, h) {
    var N = i * R,
      X = af(h),
      d = Math.ceil((i * X) / 8),
      Q = new Uint8Array(N * 4),
      A = new Uint32Array(Q.buffer),
      q = h.ctype,
      s = h.depth,
      a = f.readUshort,
      V = Date.now();
    if (q == 6) {
      var M = N << 2;
      if (s == 8)
        for (var b = 0; b < M; b += 4) {
          Q[b] = O[b];
          Q[b + 1] = O[b + 1];
          Q[b + 2] = O[b + 2];
          Q[b + 3] = O[b + 3];
        }
      if (s == 16)
        for (var b = 0; b < M; b++) {
          Q[b] = O[b << 1];
        }
    } else if (q == 2) {
      var S = h.tabs.tRNS;
      if (S == null) {
        if (s == 8)
          for (var b = 0; b < N; b++) {
            var D = b * 3;
            A[b] = (255 << 24) | (O[D + 2] << 16) | (O[D + 1] << 8) | O[D];
          }
        if (s == 16)
          for (var b = 0; b < N; b++) {
            var D = b * 6;
            A[b] = (255 << 24) | (O[D + 4] << 16) | (O[D + 2] << 8) | O[D];
          }
      } else {
        var u = S[0],
          E = S[1],
          m = S[2];
        if (s == 8)
          for (var b = 0; b < N; b++) {
            var J = b << 2,
              D = b * 3;
            A[b] = (255 << 24) | (O[D + 2] << 16) | (O[D + 1] << 8) | O[D];
            if (O[D] == u && O[D + 1] == E && O[D + 2] == m) Q[J + 3] = 0;
          }
        if (s == 16)
          for (var b = 0; b < N; b++) {
            var J = b << 2,
              D = b * 6;
            A[b] = (255 << 24) | (O[D + 4] << 16) | (O[D + 2] << 8) | O[D];
            if (a(O, D) == u && a(O, D + 2) == E && a(O, D + 4) == m)
              Q[J + 3] = 0;
          }
      }
    } else if (q == 3) {
      var c = h.tabs.PLTE,
        F = h.tabs.tRNS,
        n = F ? F.length : 0;
      if (s == 1)
        for (var Y = 0; Y < R; Y++) {
          var K = Y * d,
            _ = Y * i;
          for (var b = 0; b < i; b++) {
            var J = (_ + b) << 2,
              l = (O[K + (b >> 3)] >> (7 - ((b & 7) << 0))) & 1,
              p = 3 * l;
            Q[J] = c[p];
            Q[J + 1] = c[p + 1];
            Q[J + 2] = c[p + 2];
            Q[J + 3] = l < n ? F[l] : 255;
          }
        }
      if (s == 2)
        for (var Y = 0; Y < R; Y++) {
          var K = Y * d,
            _ = Y * i;
          for (var b = 0; b < i; b++) {
            var J = (_ + b) << 2,
              l = (O[K + (b >> 2)] >> (6 - ((b & 3) << 1))) & 3,
              p = 3 * l;
            Q[J] = c[p];
            Q[J + 1] = c[p + 1];
            Q[J + 2] = c[p + 2];
            Q[J + 3] = l < n ? F[l] : 255;
          }
        }
      if (s == 4)
        for (var Y = 0; Y < R; Y++) {
          var K = Y * d,
            _ = Y * i;
          for (var b = 0; b < i; b++) {
            var J = (_ + b) << 2,
              l = (O[K + (b >> 1)] >> (4 - ((b & 1) << 2))) & 15,
              p = 3 * l;
            Q[J] = c[p];
            Q[J + 1] = c[p + 1];
            Q[J + 2] = c[p + 2];
            Q[J + 3] = l < n ? F[l] : 255;
          }
        }
      if (s == 8)
        for (var b = 0; b < N; b++) {
          var J = b << 2,
            l = O[b],
            p = 3 * l;
          Q[J] = c[p];
          Q[J + 1] = c[p + 1];
          Q[J + 2] = c[p + 2];
          Q[J + 3] = l < n ? F[l] : 255;
        }
    } else if (q == 4) {
      if (s == 8)
        for (var b = 0; b < N; b++) {
          var J = b << 2,
            o = b << 1,
            g = O[o];
          Q[J] = g;
          Q[J + 1] = g;
          Q[J + 2] = g;
          Q[J + 3] = O[o + 1];
        }
      if (s == 16)
        for (var b = 0; b < N; b++) {
          var J = b << 2,
            o = b << 2,
            g = O[o];
          Q[J] = g;
          Q[J + 1] = g;
          Q[J + 2] = g;
          Q[J + 3] = O[o + 2];
        }
    } else if (q == 0) {
      var u = h.tabs.tRNS ? h.tabs.tRNS : -1;
      for (var Y = 0; Y < R; Y++) {
        var y = Y * d,
          T = Y * i;
        if (s == 1)
          for (var L = 0; L < i; L++) {
            var g = 255 * ((O[y + (L >>> 3)] >>> (7 - (L & 7))) & 1),
              z = g == u * 255 ? 0 : 255;
            A[T + L] = (z << 24) | (g << 16) | (g << 8) | g;
          }
        else if (s == 2)
          for (var L = 0; L < i; L++) {
            var g = 85 * ((O[y + (L >>> 2)] >>> (6 - ((L & 3) << 1))) & 3),
              z = g == u * 85 ? 0 : 255;
            A[T + L] = (z << 24) | (g << 16) | (g << 8) | g;
          }
        else if (s == 4)
          for (var L = 0; L < i; L++) {
            var g = 17 * ((O[y + (L >>> 1)] >>> (4 - ((L & 1) << 2))) & 15),
              z = g == u * 17 ? 0 : 255;
            A[T + L] = (z << 24) | (g << 16) | (g << 8) | g;
          }
        else if (s == 8)
          for (var L = 0; L < i; L++) {
            var g = O[y + L],
              z = g == u ? 0 : 255;
            A[T + L] = (z << 24) | (g << 16) | (g << 8) | g;
          }
        else if (s == 16)
          for (var L = 0; L < i; L++) {
            var g = O[y + (L << 1)],
              z = a(O, y + (L << 1)) == u ? 0 : 255;
            A[T + L] = (z << 24) | (g << 16) | (g << 8) | g;
          }
      }
    }
    return Q;
  }
  function aj(O) {
    var i = new Uint8Array(O),
      R = 8,
      h = f,
      N = h.readUshort,
      X = h.readUint,
      d = { tabs: {}, frames: [] },
      Q = new Uint8Array(i.length),
      A = 0,
      ac,
      q = 0,
      s = [137, 80, 78, 71, 13, 10, 26, 10];
    for (var a = 0; a < 8; a++)
      if (i[a] != s[a]) throw "The input is not a PNG file!";
    while (R < i.length) {
      var V = h.readUint(i, R);
      R += 4;
      var M = h.readASCII(i, R, 4);
      R += 4;
      if (M == "IHDR") {
        au(i, R, d);
      } else if (M == "iCCP") {
        var b = R,
          m = !0;
        while (i[b] != 0) b++;
        var S = h.readASCII(i, R, b - R),
          D = i[b + 1],
          u = b + 4,
          E = i.slice(u, R + V);
        for (var a = 0; a < E.length - 4; a++)
          if (E[a] + E[a + 1] + E[a + 2] + E[a + 3] == 0) m = !1;
        d.tabs[M] = m ? ao(E) : E;
      } else if (M == "CgBI") {
        d.tabs[M] = i.slice(R, R + 4);
      } else if (M == "IDAT") {
        for (var a = 0; a < V; a++) Q[A + a] = i[R + a];
        A += V;
      } else if (M == "acTL") {
        d.tabs[M] = { num_frames: X(i, R), num_plays: X(i, R + 4) };
        ac = new Uint8Array(i.length);
      } else if (M == "fcTL") {
        if (q != 0) {
          var J = d.frames[d.frames.length - 1];
          J.data = ag(d, ac.slice(0, q), J.rect.width, J.rect.height);
          q = 0;
        }
        var c = {
            x: X(i, R + 12),
            y: X(i, R + 16),
            width: X(i, R + 4),
            height: X(i, R + 8),
          },
          F = N(i, R + 22);
        F = N(i, R + 20) / (F == 0 ? 100 : F);
        var n = {
          rect: c,
          delay: Math.round(F * 1e3),
          dispose: i[R + 24],
          blend: i[R + 25],
        };
        d.frames.push(n);
      } else if (M == "fdAT") {
        for (var a = 0; a < V - 4; a++) ac[q + a] = i[R + a + 4];
        q += V - 4;
      } else if (M == "pHYs") {
        d.tabs[M] = [h.readUint(i, R), h.readUint(i, R + 4), i[R + 8]];
      } else if (M == "cHRM") {
        d.tabs[M] = [];
        for (var a = 0; a < 8; a++) d.tabs[M].push(h.readUint(i, R + a * 4));
      } else if (M == "tEXt" || M == "zTXt") {
        if (d.tabs[M] == null) d.tabs[M] = {};
        var Y = h.nextZero(i, R),
          K = h.readASCII(i, R, Y - R),
          _,
          l = R + V - Y - 1;
        if (M == "tEXt") _ = h.readASCII(i, Y + 1, l);
        else {
          var p = G(i.slice(Y + 2, Y + 2 + l));
          _ = h.readUTF8(p, 0, p.length);
        }
        d.tabs[M][K] = _;
      } else if (M == "iTXt") {
        if (d.tabs[M] == null) d.tabs[M] = {};
        var Y = 0,
          b = R,
          _;
        Y = h.nextZero(i, b);
        var K = h.readASCII(i, b, Y - b);
        b = Y + 1;
        var o = i[b],
          g = i[b + 1];
        b += 2;
        Y = h.nextZero(i, b);
        var y = h.readASCII(i, b, Y - b);
        b = Y + 1;
        Y = h.nextZero(i, b);
        var T = h.readUTF8(i, b, Y - b);
        b = Y + 1;
        var l = V - (b - R);
        if (o == 0) _ = h.readUTF8(i, b, l);
        else {
          var p = G(i.slice(b, b + l));
          _ = h.readUTF8(p, 0, p.length);
        }
        d.tabs[M][K] = _;
      } else if (M == "PLTE") {
        d.tabs[M] = h.readBytes(i, R, V);
      } else if (M == "hIST") {
        var L = d.tabs.PLTE.length / 3;
        d.tabs[M] = [];
        for (var a = 0; a < L; a++) d.tabs[M].push(N(i, R + a * 2));
      } else if (M == "tRNS") {
        if (d.ctype == 3) d.tabs[M] = h.readBytes(i, R, V);
        else if (d.ctype == 0) d.tabs[M] = N(i, R);
        else if (d.ctype == 2) d.tabs[M] = [N(i, R), N(i, R + 2), N(i, R + 4)];
      } else if (M == "gAMA") d.tabs[M] = h.readUint(i, R) / 1e5;
      else if (M == "sRGB") d.tabs[M] = i[R];
      else if (M == "bKGD") {
        if (d.ctype == 0 || d.ctype == 4) d.tabs[M] = [N(i, R)];
        else if (d.ctype == 2 || d.ctype == 6)
          d.tabs[M] = [N(i, R), N(i, R + 2), N(i, R + 4)];
        else if (d.ctype == 3) d.tabs[M] = i[R];
      } else if (M == "IEND") {
        break;
      }
      R += V;
      var z = h.readUint(i, R);
      R += 4;
    }
    if (q != 0) {
      var J = d.frames[d.frames.length - 1];
      J.data = ag(d, ac.slice(0, q), J.rect.width, J.rect.height);
    }
    d.data = ag(d, Q, d.width, d.height);
    delete d.compress;
    delete d.interlace;
    delete d.filter;
    return d;
  }
  function ag(O, i, R, h) {
    var N = Date.now(),
      X = af(O),
      d = Math.ceil((R * X) / 8),
      Q = new Uint8Array((d + 1 + O.interlace) * h);
    if (O.tabs.CgBI) i = ao(i, Q);
    else i = G(i, Q);
    var N = Date.now();
    if (O.interlace == 0) i = a8(i, O, 0, R, h);
    else if (O.interlace == 1) i = an(i, O);
    return i;
  }
  function G(O, i) {
    var R = ao(new Uint8Array(O.buffer, 2, O.length - 6), i);
    return R;
  }
  var ao = (function () {
    var O = (function () {
      var D = Uint16Array,
        E = Uint32Array;
      return {
        m: new D(16),
        v: new D(16),
        d: [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
        o: [
          3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51,
          59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 999, 999, 999,
        ],
        z: [
          0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4,
          4, 5, 5, 5, 5, 0, 0, 0, 0,
        ],
        B: new D(32),
        p: [
          1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385,
          513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385,
          24577, 65535, 65535,
        ],
        w: [
          0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10,
          10, 11, 11, 12, 12, 13, 13, 0, 0,
        ],
        h: new E(32),
        g: new D(512),
        s: [],
        A: new D(32),
        t: [],
        k: new D(32768),
        c: [],
        a: [],
        n: new D(32768),
        e: [],
        C: new D(512),
        b: [],
        i: new D(1 << 15),
        r: new E(286),
        f: new E(30),
        l: new E(19),
        u: new E(15e3),
        q: new D(1 << 16),
        j: new D(1 << 15),
      };
    })();
    function i(D, E) {
      var J = D.length,
        c,
        F,
        n,
        Y,
        K,
        _ = O.v;
      for (var Y = 0; Y <= E; Y++) _[Y] = 0;
      for (Y = 1; Y < J; Y += 2) _[D[Y]]++;
      var l = O.m;
      c = 0;
      _[0] = 0;
      for (F = 1; F <= E; F++) {
        c = (c + _[F - 1]) << 1;
        l[F] = c;
      }
      for (n = 0; n < J; n += 2) {
        K = D[n + 1];
        if (K != 0) {
          D[n] = l[K];
          l[K]++;
        }
      }
    }
    function R(D, E, J) {
      var c = D.length,
        F = O.i;
      for (var n = 0; n < c; n += 2)
        if (D[n + 1] != 0) {
          var Y = n >> 1,
            K = D[n + 1],
            _ = (Y << 4) | K,
            l = E - K,
            p = D[n] << l,
            o = p + (1 << l);
          while (p != o) {
            var g = F[p] >>> (15 - E);
            J[g] = _;
            p++;
          }
        }
    }
    function h(D, E) {
      var J = O.i,
        c = 15 - E;
      for (var F = 0; F < D.length; F += 2) {
        var n = D[F] << (E - D[F + 1]);
        D[F] = J[n] >>> c;
      }
    }
    (function () {
      var D = 1 << 15;
      for (var E = 0; E < D; E++) {
        var J = E;
        J = ((J & 2863311530) >>> 1) | ((J & 1431655765) << 1);
        J = ((J & 3435973836) >>> 2) | ((J & 858993459) << 2);
        J = ((J & 4042322160) >>> 4) | ((J & 252645135) << 4);
        J = ((J & 4278255360) >>> 8) | ((J & 16711935) << 8);
        O.i[E] = ((J >>> 16) | (J << 16)) >>> 17;
      }
      function c(F, n, Y) {
        while (n-- != 0) F.push(0, Y);
      }
      for (var E = 0; E < 32; E++) {
        O.B[E] = (O.o[E] << 3) | O.z[E];
        O.h[E] = (O.p[E] << 4) | O.w[E];
      }
      c(O.s, 144, 8);
      c(O.s, 255 - 143, 9);
      c(O.s, 279 - 255, 7);
      c(O.s, 287 - 279, 8);
      i(O.s, 9);
      R(O.s, 9, O.g);
      h(O.s, 9);
      c(O.t, 32, 5);
      i(O.t, 5);
      R(O.t, 5, O.A);
      h(O.t, 5);
      c(O.b, 19, 0);
      c(O.c, 286, 0);
      c(O.e, 30, 0);
      c(O.a, 320, 0);
    })();
    function N(D, E, J) {
      return (
        ((D[E >>> 3] | (D[(E >>> 3) + 1] << 8)) >>> (E & 7)) & ((1 << J) - 1)
      );
    }
    function X(D, E, J) {
      return (
        ((D[E >>> 3] | (D[(E >>> 3) + 1] << 8) | (D[(E >>> 3) + 2] << 16)) >>>
          (E & 7)) &
        ((1 << J) - 1)
      );
    }
    function Q(D, E) {
      return (
        (D[E >>> 3] | (D[(E >>> 3) + 1] << 8) | (D[(E >>> 3) + 2] << 16)) >>>
        (E & 7)
      );
    }
    function A(D, E) {
      return (
        (D[E >>> 3] |
          (D[(E >>> 3) + 1] << 8) |
          (D[(E >>> 3) + 2] << 16) |
          (D[(E >>> 3) + 3] << 24)) >>>
        (E & 7)
      );
    }
    function q(D, E) {
      var J = Uint8Array,
        c = 0,
        F = 0,
        n = 0,
        Y = 0,
        K = 0,
        _ = 0,
        l = 0,
        p = 0,
        o = 0,
        g,
        y;
      if (D[0] == 3 && D[1] == 0) return E ? E : new J(0);
      var T = E == null;
      if (T) E = new J((D.length >>> 2) << 3);
      while (c == 0) {
        c = X(D, o, 1);
        F = X(D, o + 1, 2);
        o += 3;
        if (F == 0) {
          if ((o & 7) != 0) o += 8 - (o & 7);
          var L = (o >>> 3) + 4,
            z = D[L - 4] | (D[L - 3] << 8);
          if (T) E = s(E, p + z);
          E.set(new J(D.buffer, D.byteOffset + L, z), p);
          o = (L + z) << 3;
          p += z;
          continue;
        }
        if (T) E = s(E, p + (1 << 17));
        if (F == 1) {
          g = O.g;
          y = O.A;
          _ = (1 << 9) - 1;
          l = (1 << 5) - 1;
        }
        if (F == 2) {
          n = N(D, o, 5) + 257;
          Y = N(D, o + 5, 5) + 1;
          K = N(D, o + 10, 4) + 4;
          o += 14;
          var C = o,
            P = 1;
          for (var x = 0; x < 38; x += 2) {
            O.b[x] = 0;
            O.b[x + 1] = 0;
          }
          for (var x = 0; x < K; x++) {
            var I = N(D, o + x * 3, 3);
            O.b[(O.d[x] << 1) + 1] = I;
            if (I > P) P = I;
          }
          o += 3 * K;
          i(O.b, P);
          R(O.b, P, O.C);
          g = O.k;
          y = O.n;
          o = a(O.C, (1 << P) - 1, n + Y, D, o, O.a);
          var v = V(O.a, 0, n, O.c);
          _ = (1 << v) - 1;
          var B = V(O.a, n, Y, O.e);
          l = (1 << B) - 1;
          i(O.c, v);
          R(O.c, v, g);
          i(O.e, B);
          R(O.e, B, y);
        }
        while (!0) {
          var U = g[Q(D, o) & _];
          o += U & 15;
          var k = U >>> 4;
          if (k >>> 8 == 0) {
            E[p++] = k;
          } else if (k == 256) {
            break;
          } else {
            var Z = p + k - 254;
            if (k > 264) {
              var W = O.B[k - 257];
              Z = p + (W >>> 3) + N(D, o, W & 7);
              o += W & 7;
            }
            var t = y[Q(D, o) & l];
            o += t & 15;
            var w = t >>> 4,
              $ = O.h[w],
              H = ($ >>> 4) + X(D, o, $ & 15);
            o += $ & 15;
            if (T) E = s(E, p + (1 << 17));
            while (p < Z) {
              E[p] = E[p++ - H];
              E[p] = E[p++ - H];
              E[p] = E[p++ - H];
              E[p] = E[p++ - H];
            }
            p = Z;
          }
        }
      }
      return E.length == p ? E : E.slice(0, p);
    }
    function s(D, E) {
      var J = D.length;
      if (E <= J) return D;
      var c = new Uint8Array(Math.max(J << 1, E));
      c.set(D, 0);
      return c;
    }
    function a(D, E, J, c, F, n) {
      var Y = 0;
      while (Y < J) {
        var K = D[Q(c, F) & E];
        F += K & 15;
        var _ = K >>> 4;
        if (_ <= 15) {
          n[Y] = _;
          Y++;
        } else {
          var l = 0,
            p = 0;
          if (_ == 16) {
            p = 3 + N(c, F, 2);
            F += 2;
            l = n[Y - 1];
          } else if (_ == 17) {
            p = 3 + N(c, F, 3);
            F += 3;
          } else if (_ == 18) {
            p = 11 + N(c, F, 7);
            F += 7;
          }
          var o = Y + p;
          while (Y < o) {
            n[Y] = l;
            Y++;
          }
        }
      }
      return F;
    }
    function V(D, E, J, c) {
      var F = 0,
        n = 0,
        Y = c.length >>> 1;
      while (n < J) {
        var K = D[n + E];
        c[n << 1] = 0;
        c[(n << 1) + 1] = K;
        if (K > F) F = K;
        n++;
      }
      while (n < Y) {
        c[n << 1] = 0;
        c[(n << 1) + 1] = 0;
        n++;
      }
      return F;
    }
    return q;
  })();
  function an(O, i) {
    var R = i.width,
      h = i.height,
      N = af(i),
      X = N >> 3,
      d = Math.ceil((R * N) / 8),
      Q = new Uint8Array(h * d),
      A = 0,
      q = [0, 0, 4, 0, 2, 0, 1],
      s = [0, 4, 0, 2, 0, 1, 0],
      a = [8, 8, 8, 4, 4, 2, 2],
      V = [8, 8, 4, 4, 2, 2, 1],
      M = 0;
    while (M < 7) {
      var b = a[M],
        S = V[M],
        D = 0,
        u = 0,
        E = q[M],
        c = 0;
      while (E < h) {
        E += b;
        u++;
      }
      var m = s[M];
      while (m < R) {
        m += S;
        D++;
      }
      var J = Math.ceil((D * N) / 8);
      a8(O, i, A, D, u);
      var F = q[M];
      while (F < h) {
        var n = s[M],
          Y = (A + c * J) << 3;
        while (n < R) {
          if (N == 1) {
            var K = O[Y >> 3];
            K = (K >> (7 - (Y & 7))) & 1;
            Q[F * d + (n >> 3)] |= K << (7 - ((n & 7) << 0));
          }
          if (N == 2) {
            var K = O[Y >> 3];
            K = (K >> (6 - (Y & 7))) & 3;
            Q[F * d + (n >> 2)] |= K << (6 - ((n & 3) << 1));
          }
          if (N == 4) {
            var K = O[Y >> 3];
            K = (K >> (4 - (Y & 7))) & 15;
            Q[F * d + (n >> 1)] |= K << (4 - ((n & 1) << 2));
          }
          if (N >= 8) {
            var _ = F * d + n * X;
            for (var l = 0; l < X; l++) Q[_ + l] = O[(Y >> 3) + l];
          }
          Y += N;
          n += S;
        }
        c++;
        F += b;
      }
      if (D * u != 0) A += u * (1 + J);
      M = M + 1;
    }
    return Q;
  }
  function af(O) {
    var i = [1, null, 3, 1, 2, null, 4][O.ctype];
    return i * O.depth;
  }
  function a8(O, i, R, h, N) {
    var X = af(i),
      d = Math.ceil((h * X) / 8),
      Q,
      A,
      s = 0;
    X = Math.ceil(X / 8);
    var q = O[R];
    if (q > 1) O[R] = [0, 0, 1][q - 2];
    if (q == 3)
      for (s = X; s < d; s++)
        O[s + 1] = (O[s + 1] + (O[s + 1 - X] >>> 1)) & 255;
    for (var a = 0; a < N; a++) {
      Q = R + a * d;
      A = Q + a + 1;
      q = O[A - 1];
      s = 0;
      if (q == 0) for (; s < d; s++) O[Q + s] = O[A + s];
      else if (q == 1) {
        for (; s < X; s++) O[Q + s] = O[A + s];
        for (; s < d; s++) O[Q + s] = O[A + s] + O[Q + s - X];
      } else if (q == 2) {
        for (; s < d; s++) O[Q + s] = O[A + s] + O[Q + s - d];
      } else if (q == 3) {
        for (; s < X; s++) O[Q + s] = O[A + s] + (O[Q + s - d] >>> 1);
        for (; s < d; s++)
          O[Q + s] = O[A + s] + ((O[Q + s - d] + O[Q + s - X]) >>> 1);
      } else {
        for (; s < X; s++) O[Q + s] = O[A + s] + ak(0, O[Q + s - d], 0);
        for (; s < d; s++)
          O[Q + s] =
            O[A + s] + ak(O[Q + s - X], O[Q + s - d], O[Q + s - X - d]);
      }
    }
    return O;
  }
  function ak(O, i, R) {
    var h = O + i - R,
      N = h - O,
      X = h - i,
      d = h - R;
    if (N * N <= X * X && N * N <= d * d) return O;
    else if (X * X <= d * d) return i;
    return R;
  }
  function au(O, i, R) {
    R.width = f.readUint(O, i);
    i += 4;
    R.height = f.readUint(O, i);
    i += 4;
    R.depth = O[i];
    i++;
    R.ctype = O[i];
    i++;
    R.compress = O[i];
    i++;
    R.filter = O[i];
    i++;
    R.interlace = O[i];
    i++;
  }
  function aa(O, i, R, h, N, X, d, Q, A) {
    var ac = Math.min(i, N),
      q = Math.min(R, X),
      s = 0,
      a = 0;
    for (var V = 0; V < q; V++)
      for (var M = 0; M < ac; M++) {
        if (d >= 0 && Q >= 0) {
          s = (V * i + M) << 2;
          a = ((Q + V) * N + d + M) << 2;
        } else {
          s = ((-Q + V) * i - d + M) << 2;
          a = (V * N + M) << 2;
        }
        if (A == 0) {
          h[a] = O[s];
          h[a + 1] = O[s + 1];
          h[a + 2] = O[s + 2];
          h[a + 3] = O[s + 3];
        } else if (A == 1) {
          var b = O[s + 3] * (1 / 255),
            S = O[s] * b,
            D = O[s + 1] * b,
            u = O[s + 2] * b,
            E = h[a + 3] * (1 / 255),
            m = h[a] * E,
            J = h[a + 1] * E,
            c = h[a + 2] * E,
            F = 1 - b,
            n = b + E * F,
            Y = n == 0 ? 0 : 1 / n;
          h[a + 3] = 255 * n;
          h[a + 0] = (S + m * F) * Y;
          h[a + 1] = (D + J * F) * Y;
          h[a + 2] = (u + c * F) * Y;
        } else if (A == 2) {
          var b = O[s + 3],
            S = O[s],
            D = O[s + 1],
            u = O[s + 2],
            E = h[a + 3],
            m = h[a],
            J = h[a + 1],
            c = h[a + 2];
          if (b == E && S == m && D == J && u == c) {
            h[a] = 0;
            h[a + 1] = 0;
            h[a + 2] = 0;
            h[a + 3] = 0;
          } else {
            h[a] = S;
            h[a + 1] = D;
            h[a + 2] = u;
            h[a + 3] = b;
          }
        } else if (A == 3) {
          var b = O[s + 3],
            S = O[s],
            D = O[s + 1],
            u = O[s + 2],
            E = h[a + 3],
            m = h[a],
            J = h[a + 1],
            c = h[a + 2];
          if (b == E && S == m && D == J && u == c) continue;
          if (b < 220 && E > 20) return !1;
        }
      }
    return !0;
  }
  return { decode: aj, toRGBA8: av, _paeth: ak, _copyTile: aa, _bin: f };
})();
(function () {
  var f = UPNG._copyTile,
    av = UPNG._bin,
    ai = UPNG._paeth,
    aj = {
      table: (function () {
        var J = new Uint32Array(256);
        for (var c = 0; c < 256; c++) {
          var F = c;
          for (var n = 0; n < 8; n++) {
            if (F & 1) F = 3988292384 ^ (F >>> 1);
            else F = F >>> 1;
          }
          J[c] = F;
        }
        return J;
      })(),
      update: function (J, c, F, n) {
        for (var Y = 0; Y < n; Y++)
          J = aj.table[(J ^ c[F + Y]) & 255] ^ (J >>> 8);
        return J;
      },
      crc: function (J, c, F) {
        return aj.update(4294967295, J, c, F) ^ 4294967295;
      },
    };
  function ag(J, c, F, n) {
    c[F] += (J[0] * n) >> 4;
    c[F + 1] += (J[1] * n) >> 4;
    c[F + 2] += (J[2] * n) >> 4;
    c[F + 3] += (J[3] * n) >> 4;
  }
  function G(J) {
    return Math.max(0, Math.min(255, J));
  }
  function ao(J, c) {
    var F = J[0] - c[0],
      n = J[1] - c[1],
      Y = J[2] - c[2],
      _ = J[3] - c[3];
    return F * F + n * n + Y * Y + _ * _;
  }
  function an(J, c, F, n, Y, _, l) {
    if (l == null) l = 1;
    var p = n.length,
      o = [],
      g = [],
      B = 4;
    for (var y = 0; y < p; y++) {
      var T = n[y];
      o.push([
        (T >>> 0) & 255,
        (T >>> 8) & 255,
        (T >>> 16) & 255,
        (T >>> 24) & 255,
      ]);
    }
    for (var y = 0; y < p; y++) {
      var L = 4294967295,
        z = 0;
      for (var C = 0; C < p; C++) {
        var P = ao(o[y], o[C]);
        if (C != y && P < L) {
          L = P;
          z = C;
        }
      }
      var x = Math.sqrt(L) / 2;
      g[y] = ~~(x * x);
    }
    var I = new Uint32Array(Y.buffer),
      v = new Int16Array(c * F * 4),
      U = [0, 8, 2, 10, 12, 4, 14, 6, 3, 11, 1, 9, 15, 7, 13, 5];
    for (var y = 0; y < U.length; y++)
      U[y] = 255 * (-0.5 + (U[y] + 0.5) / (B * B));
    for (var k = 0; k < F; k++) {
      for (var Z = 0; Z < c; Z++) {
        var y = (k * c + Z) * 4,
          W,
          z = 0,
          t = 16777215;
        if (l != 2)
          W = [
            G(J[y] + v[y]),
            G(J[y + 1] + v[y + 1]),
            G(J[y + 2] + v[y + 2]),
            G(J[y + 3] + v[y + 3]),
          ];
        else {
          var P = U[(k & (B - 1)) * B + (Z & (B - 1))];
          W = [G(J[y] + P), G(J[y + 1] + P), G(J[y + 2] + P), G(J[y + 3] + P)];
        }
        for (var C = 0; C < p; C++) {
          var w = ao(W, o[C]);
          if (w < t) {
            t = w;
            z = C;
          }
        }
        var $ = o[z],
          H = [W[0] - $[0], W[1] - $[1], W[2] - $[2], W[3] - $[3]];
        if (l == 1) {
          if (Z != c - 1) ag(H, v, y + 4, 7);
          if (k != F - 1) {
            if (Z != 0) ag(H, v, y + 4 * c - 4, 3);
            ag(H, v, y + 4 * c, 5);
            if (Z != c - 1) ag(H, v, y + 4 * c + 4, 1);
          }
        }
        _[y >> 2] = z;
        I[y >> 2] = n[z];
      }
    }
  }
  function af(J, c, F, n, Y, _, l) {
    if (n == null) n = 0;
    if (l == null) l = !1;
    var p = aa(J, c, F, n, [!1, !1, !1, 0, l, !1]);
    au(p, !1, n != 0);
    return ak(p, c, F, Y, _);
  }
  function a8(J, c, F, n, Y, _, l, p, o) {
    var g = {
        ctype: 0 + (n == 1 ? 0 : 2) + (Y == 0 ? 0 : 4),
        depth: _,
        frames: [],
      },
      y = Date.now(),
      T = (n + Y) * _,
      L = T * c;
    for (var z = 0; z < J.length; z++)
      g.frames.push({
        rect: { x: 0, y: 0, width: c, height: F },
        img: new Uint8Array(J[z]),
        blend: 0,
        dispose: 1,
        bpp: Math.ceil(T / 8),
        bpl: Math.ceil(L / 8),
      });
    au(g, o, o);
    var C = ak(g, c, F, l, p);
    return C;
  }
  function ak(J, c, F, n, Y) {
    if (Y == null) Y = {};
    var _ = aj.crc,
      l = av.writeUint,
      p = av.writeUshort,
      o = av.writeASCII,
      g = 8,
      y = J.frames.length > 1,
      T = !1,
      L,
      z = 8 + (16 + 5 + 4) + (y ? 20 : 0),
      a9 = 0;
    if (Y.sRGB != null) z += 8 + 1 + 4;
    if (Y.pHYs != null) z += 8 + 9 + 4;
    if (Y.iCCP != null) {
      L = pako.deflate(Y.iCCP);
      z += 8 + 11 + 2 + L.length + 4;
    }
    if (Y.iTXt != null) {
      var C = Y.iTXt,
        P = Object.keys(C)[0],
        x = C[P];
      z += 8 + P.length + 5 + av.writeUTF8(x) + 4;
    }
    if (J.ctype == 3) {
      var I = J.plte.length;
      for (var v = 0; v < I; v++) if (J.plte[v] >>> 24 != 255) T = !0;
      z += 8 + I * 3 + 4 + (T ? 8 + I * 1 + 4 : 0);
    }
    for (var B = 0; B < J.frames.length; B++) {
      var U = J.frames[B];
      if (y) z += 38;
      z += U.cimg.length + 12;
      if (B != 0) z += 4;
    }
    z += 12;
    var k = new Uint8Array(z),
      Z = [137, 80, 78, 71, 13, 10, 26, 10];
    for (var v = 0; v < 8; v++) k[v] = Z[v];
    l(k, g, 13);
    g += 4;
    o(k, g, "IHDR");
    g += 4;
    l(k, g, c);
    g += 4;
    l(k, g, F);
    g += 4;
    k[g] = J.depth;
    g++;
    k[g] = J.ctype;
    g++;
    k[g] = 0;
    g++;
    k[g] = 0;
    g++;
    k[g] = 0;
    g++;
    l(k, g, _(k, g - 17, 17));
    g += 4;
    if (Y.sRGB != null) {
      l(k, g, 1);
      g += 4;
      o(k, g, "sRGB");
      g += 4;
      k[g] = Y.sRGB;
      g++;
      l(k, g, _(k, g - 5, 5));
      g += 4;
    }
    if (Y.iCCP != null) {
      var W = 11 + 2 + L.length;
      l(k, g, W);
      g += 4;
      o(k, g, "iCCP");
      g += 4;
      o(k, g, "ICC profile");
      g += 11;
      g += 2;
      k.set(L, g);
      g += L.length;
      l(k, g, _(k, g - (W + 4), W + 4));
      g += 4;
    }
    if (Y.pHYs != null) {
      l(k, g, 9);
      g += 4;
      o(k, g, "pHYs");
      g += 4;
      l(k, g, Y.pHYs[0]);
      g += 4;
      l(k, g, Y.pHYs[1]);
      g += 4;
      k[g] = Y.pHYs[2];
      g++;
      l(k, g, _(k, g - 13, 13));
      g += 4;
    }
    if (Y.iTXt != null) {
      var C = Y.iTXt;
      l(k, g, 0);
      g += 4;
      o(k, g, "iTXt");
      g += 4;
      var t = g,
        P = Object.keys(C)[0],
        x = C[P];
      o(k, g, P);
      g += P.length;
      g += 5;
      av.writeUTF8(x, k, g);
      g += av.writeUTF8(x);
      l(k, t - 8, g - t);
      l(k, g, _(k, t - 4, g - t + 4));
      g += 4;
    }
    if (y) {
      l(k, g, 8);
      g += 4;
      o(k, g, "acTL");
      g += 4;
      l(k, g, J.frames.length);
      g += 4;
      l(k, g, Y.loop != null ? Y.loop : 0);
      g += 4;
      l(k, g, _(k, g - 12, 12));
      g += 4;
    }
    if (J.ctype == 3) {
      var I = J.plte.length;
      l(k, g, I * 3);
      g += 4;
      o(k, g, "PLTE");
      g += 4;
      for (var v = 0; v < I; v++) {
        var w = v * 3,
          $ = J.plte[v],
          H = $ & 255,
          a2 = ($ >>> 8) & 255,
          j = ($ >>> 16) & 255;
        k[g + w + 0] = H;
        k[g + w + 1] = a2;
        k[g + w + 2] = j;
      }
      g += I * 3;
      l(k, g, _(k, g - I * 3 - 4, I * 3 + 4));
      g += 4;
      if (T) {
        l(k, g, I);
        g += 4;
        o(k, g, "tRNS");
        g += 4;
        for (var v = 0; v < I; v++) k[g + v] = (J.plte[v] >>> 24) & 255;
        g += I;
        l(k, g, _(k, g - I - 4, I + 4));
        g += 4;
      }
    }
    for (var B = 0; B < J.frames.length; B++) {
      var U = J.frames[B];
      if (y) {
        l(k, g, 26);
        g += 4;
        o(k, g, "fcTL");
        g += 4;
        l(k, g, a9++);
        g += 4;
        l(k, g, U.rect.width);
        g += 4;
        l(k, g, U.rect.height);
        g += 4;
        l(k, g, U.rect.x);
        g += 4;
        l(k, g, U.rect.y);
        g += 4;
        p(k, g, n[B]);
        g += 2;
        p(k, g, 1e3);
        g += 2;
        k[g] = U.dispose;
        g++;
        k[g] = U.blend;
        g++;
        l(k, g, _(k, g - 30, 30));
        g += 4;
      }
      var aq = U.cimg,
        I = aq.length;
      l(k, g, I + (B == 0 ? 0 : 4));
      g += 4;
      var e = g;
      o(k, g, B == 0 ? "IDAT" : "fdAT");
      g += 4;
      if (B != 0) {
        l(k, g, a9++);
        g += 4;
      }
      k.set(aq, g);
      g += I;
      l(k, g, _(k, e, g - e));
      g += 4;
    }
    l(k, g, 0);
    g += 4;
    o(k, g, "IEND");
    g += 4;
    l(k, g, _(k, g - 4, 4));
    g += 4;
    return k.buffer;
  }
  function au(J, c, F) {
    for (var n = 0; n < J.frames.length; n++) {
      var Y = J.frames[n],
        _ = Y.rect.width,
        l = Y.rect.height,
        p = new Uint8Array(l * Y.bpl + l);
      Y.cimg = h(Y.img, _, l, Y.bpp, Y.bpl, p, c, F);
    }
  }
  function aa(J, c, F, n, Y) {
    var _ = Y[0],
      l = Y[1],
      p = Y[2],
      o = Y[3],
      g = Y[4],
      y = Y[5],
      T = 6,
      L = 8,
      z = 255;
    for (var C = 0; C < J.length; C++) {
      var P = new Uint8Array(J[C]),
        x = P.length;
      for (var I = 0; I < x; I += 4) z &= P[I + 3];
    }
    var v = z != 255,
      B = O(J, c, F, _, l, p),
      U = {},
      k = [],
      Z = [];
    if (n != 0) {
      var W = [],
        $ = 0;
      for (var I = 0; I < B.length; I++) W.push(B[I].img.buffer);
      var t = m(W),
        w = X(t, n);
      for (var I = 0; I < w.plte.length; I++) k.push(w.plte[I].est.rgba);
      for (var I = 0; I < B.length; I++) {
        var H = B[I],
          a2 = H.img.length,
          j = new Uint8Array(w.inds.buffer, $ >> 2, a2 >> 2);
        Z.push(j);
        var a9 = new Uint8Array(w.abuf, $, a2);
        if (y) an(H.img, H.rect.width, H.rect.height, k, a9, j);
        H.img.set(a9);
        $ += a2;
      }
    } else {
      for (var C = 0; C < B.length; C++) {
        var H = B[C],
          aq = new Uint32Array(H.img.buffer),
          e = H.rect.width,
          x = aq.length,
          j = new Uint8Array(x);
        Z.push(j);
        for (var I = 0; I < x; I++) {
          var a6 = aq[I];
          if (I != 0 && a6 == aq[I - 1]) j[I] = j[I - 1];
          else if (I > e && a6 == aq[I - e]) j[I] = j[I - e];
          else {
            var a7 = U[a6];
            if (a7 == null) {
              U[a6] = a7 = k.length;
              k.push(a6);
              if (k.length >= 300) break;
            }
            j[I] = a7;
          }
        }
      }
    }
    var a4 = k.length;
    if (a4 <= 256 && g == !1) {
      if (a4 <= 2) L = 1;
      else if (a4 <= 4) L = 2;
      else if (a4 <= 16) L = 4;
      else L = 8;
      L = Math.max(L, o);
    }
    for (var C = 0; C < B.length; C++) {
      var H = B[C],
        as = H.rect.x,
        ap = H.rect.y,
        e = H.rect.width,
        ar = H.rect.height,
        a5 = H.img,
        a0 = new Uint32Array(a5.buffer),
        ah = 4 * e,
        ad = 4;
      if (a4 <= 256 && g == !1) {
        ah = Math.ceil((L * e) / 8);
        var a3 = new Uint8Array(ah * ar),
          at = Z[C];
        for (var ae = 0; ae < ar; ae++) {
          var I = ae * ah,
            ab = ae * e;
          if (L == 8) for (var r = 0; r < e; r++) a3[I + r] = at[ab + r];
          else if (L == 4)
            for (var r = 0; r < e; r++)
              a3[I + (r >> 1)] |= at[ab + r] << (4 - (r & 1) * 4);
          else if (L == 2)
            for (var r = 0; r < e; r++)
              a3[I + (r >> 2)] |= at[ab + r] << (6 - (r & 3) * 2);
          else if (L == 1)
            for (var r = 0; r < e; r++)
              a3[I + (r >> 3)] |= at[ab + r] << (7 - (r & 7) * 1);
        }
        a5 = a3;
        T = 3;
        ad = 1;
      } else if (v == !1 && B.length == 1) {
        var a3 = new Uint8Array(e * ar * 3),
          a1 = e * ar;
        for (var I = 0; I < a1; I++) {
          var am = I * 3,
            al = I * 4;
          a3[am] = a5[al];
          a3[am + 1] = a5[al + 1];
          a3[am + 2] = a5[al + 2];
        }
        a5 = a3;
        T = 2;
        ad = 3;
        ah = 3 * e;
      }
      H.img = a5;
      H.bpl = ah;
      H.bpp = ad;
    }
    return { ctype: T, depth: L, plte: k, frames: B };
  }
  function O(J, c, F, n, Y, _) {
    var l = [],
      ar = 0;
    for (var p = 0; p < J.length; p++) {
      var o = new Uint8Array(J[p]),
        g = new Uint32Array(o.buffer),
        y,
        T = 0,
        L = 0,
        z = c,
        C = F,
        P = n ? 1 : 0;
      if (p != 0) {
        var x = _ || n || p == 1 || l[p - 2].dispose != 0 ? 1 : 2,
          I = 0,
          v = 1e9;
        for (var B = 0; B < x; B++) {
          var U = new Uint8Array(J[p - 1 - B]),
            k = new Uint32Array(J[p - 1 - B]),
            Z = c,
            W = F,
            t = -1,
            w = -1;
          for (var $ = 0; $ < F; $++)
            for (var H = 0; H < c; H++) {
              var a2 = $ * c + H;
              if (g[a2] != k[a2]) {
                if (H < Z) Z = H;
                if (H > t) t = H;
                if ($ < W) W = $;
                if ($ > w) w = $;
              }
            }
          if (t == -1) Z = W = t = w = 0;
          if (Y) {
            if ((Z & 1) == 1) Z--;
            if ((W & 1) == 1) W--;
          }
          var j = (t - Z + 1) * (w - W + 1);
          if (j < v) {
            v = j;
            I = B;
            T = Z;
            L = W;
            z = t - Z + 1;
            C = w - W + 1;
          }
        }
        var U = new Uint8Array(J[p - 1 - I]);
        if (I == 1) l[p - 1].dispose = 2;
        y = new Uint8Array(z * C * 4);
        f(U, c, F, y, z, C, -T, -L, 0);
        P = f(o, c, F, y, z, C, -T, -L, 3) ? 1 : 0;
        if (P == 1) R(o, c, F, y, { x: T, y: L, width: z, height: C });
        else f(o, c, F, y, z, C, -T, -L, 0);
      } else y = o.slice(0);
      l.push({
        rect: { x: T, y: L, width: z, height: C },
        img: y,
        blend: P,
        dispose: 0,
      });
    }
    if (n)
      for (var p = 0; p < l.length; p++) {
        var a9 = l[p];
        if (a9.blend == 1) continue;
        var aq = a9.rect,
          e = l[p - 1].rect,
          a6 = Math.min(aq.x, e.x),
          a7 = Math.min(aq.y, e.y),
          a4 = Math.max(aq.x + aq.width, e.x + e.width),
          as = Math.max(aq.y + aq.height, e.y + e.height),
          ap = { x: a6, y: a7, width: a4 - a6, height: as - a7 };
        l[p - 1].dispose = 1;
        if (p - 1 != 0) i(J, c, F, l, p - 1, ap, Y);
        i(J, c, F, l, p, ap, Y);
      }
    if (J.length != 1)
      for (var a2 = 0; a2 < l.length; a2++) {
        var a9 = l[a2];
        ar += a9.rect.width * a9.rect.height;
      }
    return l;
  }
  function i(J, c, F, n, Y, _, l) {
    var p = Uint8Array,
      o = Uint32Array,
      g = new p(J[Y - 1]),
      y = new o(J[Y - 1]),
      T = Y + 1 < J.length ? new p(J[Y + 1]) : null,
      L = new p(J[Y]),
      z = new o(L.buffer),
      C = c,
      P = F,
      x = -1,
      I = -1;
    for (var v = 0; v < _.height; v++)
      for (var B = 0; B < _.width; B++) {
        var U = _.x + B,
          k = _.y + v,
          Z = k * c + U,
          W = z[Z];
        if (
          W == 0 ||
          (n[Y - 1].dispose == 0 &&
            y[Z] == W &&
            (T == null || T[Z * 4 + 3] != 0))
        ) {
        } else {
          if (U < C) C = U;
          if (U > x) x = U;
          if (k < P) P = k;
          if (k > I) I = k;
        }
      }
    if (x == -1) C = P = x = I = 0;
    if (l) {
      if ((C & 1) == 1) C--;
      if ((P & 1) == 1) P--;
    }
    _ = { x: C, y: P, width: x - C + 1, height: I - P + 1 };
    var t = n[Y];
    t.rect = _;
    t.blend = 1;
    t.img = new Uint8Array(_.width * _.height * 4);
    if (n[Y - 1].dispose == 0) {
      f(g, c, F, t.img, _.width, _.height, -_.x, -_.y, 0);
      R(L, c, F, t.img, _);
    } else f(L, c, F, t.img, _.width, _.height, -_.x, -_.y, 0);
  }
  function R(J, c, F, n, Y) {
    f(J, c, F, n, Y.width, Y.height, -Y.x, -Y.y, 2);
  }
  function h(J, c, F, n, Y, _, l, p) {
    var o = [],
      g = [0, 1, 2, 3, 4],
      P,
      x = 1e9;
    if (l) g = [0];
    else if (c * F > 5e5 || n == 1) g = [p ? 0 : 1];
    var y = l ? { level: 0 } : null,
      T = _.length > 1e7 && window.UZIP != null ? window.UZIP : pako,
      L = Date.now();
    for (var z = 0; z < g.length; z++) {
      for (var C = 0; C < F; C++) N(_, J, C, Y, n, g[z]);
      o.push(T.deflate(_, y));
    }
    for (var z = 0; z < o.length; z++)
      if (o[z].length < x) {
        P = z;
        x = o[z].length;
      }
    return o[P];
  }
  function N(J, c, F, n, Y, _) {
    var l = F * n,
      p = l + F;
    J[p] = _;
    p++;
    if (_ == 0) {
      if (n < 500) for (var o = 0; o < n; o++) J[p + o] = c[l + o];
      else J.set(new Uint8Array(c.buffer, l, n), p);
    } else if (_ == 1) {
      for (var o = 0; o < Y; o++) J[p + o] = c[l + o];
      for (var o = Y; o < n; o++)
        J[p + o] = (c[l + o] - c[l + o - Y] + 256) & 255;
    } else if (F == 0) {
      for (var o = 0; o < Y; o++) J[p + o] = c[l + o];
      if (_ == 2) for (var o = Y; o < n; o++) J[p + o] = c[l + o];
      if (_ == 3)
        for (var o = Y; o < n; o++)
          J[p + o] = (c[l + o] - (c[l + o - Y] >> 1) + 256) & 255;
      if (_ == 4)
        for (var o = Y; o < n; o++)
          J[p + o] = (c[l + o] - ai(c[l + o - Y], 0, 0) + 256) & 255;
    } else {
      if (_ == 2) {
        for (var o = 0; o < n; o++)
          J[p + o] = (c[l + o] + 256 - c[l + o - n]) & 255;
      }
      if (_ == 3) {
        for (var o = 0; o < Y; o++)
          J[p + o] = (c[l + o] + 256 - (c[l + o - n] >> 1)) & 255;
        for (var o = Y; o < n; o++)
          J[p + o] =
            (c[l + o] + 256 - ((c[l + o - n] + c[l + o - Y]) >> 1)) & 255;
      }
      if (_ == 4) {
        for (var o = 0; o < Y; o++)
          J[p + o] = (c[l + o] + 256 - ai(0, c[l + o - n], 0)) & 255;
        for (var o = Y; o < n; o++)
          J[p + o] =
            (c[l + o] +
              256 -
              ai(c[l + o - Y], c[l + o - n], c[l + o - Y - n])) &
            255;
      }
    }
  }
  function X(J, c, F) {
    var n = Date.now(),
      Y = new Uint8Array(J),
      _ = Y.slice(0),
      l = new Uint32Array(_.buffer),
      p = q(_, c),
      o = p[0],
      g = p[1],
      y = g.length,
      T = new Uint32Array(y),
      L = new Uint8Array(T.buffer),
      x;
    for (var z = 0; z < y; z++) T[z] = g[z].est.rgba;
    var C = Y.length,
      P = new Uint8Array(C >> 2);
    if (y <= 60) {
      ac(Y, P, L);
      d(P, l, T);
    } else if (Y.length < 32e6)
      for (var z = 0; z < C; z += 4) {
        var I = Y[z] * (1 / 255),
          v = Y[z + 1] * (1 / 255),
          B = Y[z + 2] * (1 / 255),
          U = Y[z + 3] * (1 / 255);
        x = s(o, I, v, B, U);
        P[z >> 2] = x.ind;
        l[z >> 2] = x.est.rgba;
      }
    else
      for (var z = 0; z < C; z += 4) {
        var I = Y[z] * (1 / 255),
          v = Y[z + 1] * (1 / 255),
          B = Y[z + 2] * (1 / 255),
          U = Y[z + 3] * (1 / 255);
        x = o;
        while (x.left) x = a(x.est, I, v, B, U) <= 0 ? x.left : x.right;
        P[z >> 2] = x.ind;
        l[z >> 2] = x.est.rgba;
      }
    if (F || Y.length * y < 10 * 4e6) {
      var k = 1e9;
      for (var z = 0; z < 10; z++) {
        var Z = Q(Y, P, L);
        if (Z / k > 0.997) break;
        k = Z;
      }
      for (var z = 0; z < y; z++) g[z].est.rgba = T[z];
      d(P, l, T);
    }
    return { abuf: _.buffer, inds: P, plte: g };
  }
  function d(J, c, F) {
    for (var n = 0; n < J.length; n++) c[n] = F[J[n]];
  }
  function Q(J, c, F) {
    A(J, c, F);
    var n = ac(J, c, F);
    return n;
  }
  function A(J, c, F) {
    var n = F.length >>> 2,
      Y = new Uint32Array(n * 4),
      _ = new Uint32Array(n);
    for (var l = 0; l < J.length; l += 4) {
      var p = c[l >>> 2],
        o = p * 4;
      _[p]++;
      Y[o] += J[l];
      Y[o + 1] += J[l + 1];
      Y[o + 2] += J[l + 2];
      Y[o + 3] += J[l + 3];
    }
    for (var l = 0; l < F.length; l++) F[l] = Math.round(Y[l] / _[l >>> 2]);
  }
  function ac(J, c, F) {
    var n = 0,
      Y = F.length >>> 2,
      _ = [];
    for (var l = 0; l < Y; l++) {
      var p = l * 4,
        o = F[p],
        g = F[p + 1],
        y = F[p + 2],
        T = F[p + 3],
        L = 0,
        z = 1e9;
      for (var C = 0; C < Y; C++) {
        if (l == C) continue;
        var P = C * 4,
          x = o - F[P],
          I = g - F[P + 1],
          v = y - F[P + 2],
          B = T - F[P + 3],
          U = x * x + I * I + v * v + B * B;
        if (U < z) {
          z = U;
          L = C;
        }
      }
      _[l] = Math.sqrt(z) * 0.5;
      _[l] = _[l] * _[l];
    }
    for (var l = 0; l < J.length; l += 4) {
      var o = J[l],
        g = J[l + 1],
        y = J[l + 2],
        T = J[l + 3],
        L = c[l >>> 2],
        p = L * 4,
        x = o - F[p],
        I = g - F[p + 1],
        v = y - F[p + 2],
        B = T - F[p + 3],
        z = x * x + I * I + v * v + B * B;
      if (z > _[L])
        for (var C = 0; C < Y; C++) {
          p = C * 4;
          x = o - F[p];
          I = g - F[p + 1];
          v = y - F[p + 2];
          B = T - F[p + 3];
          var U = x * x + I * I + v * v + B * B;
          if (U < z) {
            z = U;
            L = C;
            if (z < _[C]) break;
          }
        }
      c[l >>> 2] = L;
      n += z;
    }
    return n / (J.length >>> 2);
  }
  function q(J, c, F) {
    if (F == null) F = 1e-4;
    var n = new Uint32Array(J.buffer),
      Y = {
        i0: 0,
        i1: J.length,
        bst: null,
        est: null,
        tdst: 0,
        left: null,
        right: null,
      };
    Y.bst = D(J, Y.i0, Y.i1);
    Y.est = u(Y.bst);
    var _ = [Y];
    while (_.length < c) {
      var l = 0,
        p = 0;
      for (var o = 0; o < _.length; o++)
        if (_[o].est.L > l) {
          l = _[o].est.L;
          p = o;
        }
      if (l < F) break;
      var g = _[p],
        y = M(J, n, g.i0, g.i1, g.est.e, g.est.eMq255),
        T = g.i0 >= y || g.i1 <= y;
      if (T) {
        g.est.L = 0;
        continue;
      }
      var L = {
        i0: g.i0,
        i1: y,
        bst: null,
        est: null,
        tdst: 0,
        left: null,
        right: null,
      };
      L.bst = D(J, L.i0, L.i1);
      L.est = u(L.bst);
      var z = {
        i0: y,
        i1: g.i1,
        bst: null,
        est: null,
        tdst: 0,
        left: null,
        right: null,
      };
      z.bst = { R: [], m: [], N: g.bst.N - L.bst.N };
      for (var o = 0; o < 16; o++) z.bst.R[o] = g.bst.R[o] - L.bst.R[o];
      for (var o = 0; o < 4; o++) z.bst.m[o] = g.bst.m[o] - L.bst.m[o];
      z.est = u(z.bst);
      g.left = L;
      g.right = z;
      _[p] = L;
      _.push(z);
    }
    _.sort(function (C, P) {
      return P.bst.N - C.bst.N;
    });
    for (var o = 0; o < _.length; o++) _[o].ind = o;
    return [Y, _];
  }
  function s(J, c, F, n, Y) {
    if (J.left == null) {
      J.tdst = V(J.est.q, c, F, n, Y);
      return J;
    }
    var _ = a(J.est, c, F, n, Y),
      l = J.left,
      p = J.right;
    if (_ > 0) {
      l = J.right;
      p = J.left;
    }
    var o = s(l, c, F, n, Y);
    if (o.tdst <= _ * _) return o;
    var g = s(p, c, F, n, Y);
    return g.tdst < o.tdst ? g : o;
  }
  function a(J, c, F, n, Y) {
    var _ = J.e;
    return _[0] * c + _[1] * F + _[2] * n + _[3] * Y - J.eMq;
  }
  function V(J, c, F, n, Y) {
    var _ = c - J[0],
      l = F - J[1],
      p = n - J[2],
      o = Y - J[3];
    return _ * _ + l * l + p * p + o * o;
  }
  function M(J, c, F, n, Y, _) {
    n -= 4;
    var l = 0;
    while (F < n) {
      while (b(J, F, Y) <= _) F += 4;
      while (b(J, n, Y) > _) n -= 4;
      if (F >= n) break;
      var p = c[F >> 2];
      c[F >> 2] = c[n >> 2];
      c[n >> 2] = p;
      F += 4;
      n -= 4;
    }
    while (b(J, F, Y) > _) F -= 4;
    return F + 4;
  }
  function b(J, c, F) {
    return J[c] * F[0] + J[c + 1] * F[1] + J[c + 2] * F[2] + J[c + 3] * F[3];
  }
  function D(J, c, F) {
    var n = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      Y = [0, 0, 0, 0],
      G = (F - c) >> 2;
    for (var _ = c; _ < F; _ += 4) {
      var l = J[_] * (1 / 255),
        p = J[_ + 1] * (1 / 255),
        g = J[_ + 2] * (1 / 255),
        y = J[_ + 3] * (1 / 255);
      Y[0] += l;
      Y[1] += p;
      Y[2] += g;
      Y[3] += y;
      n[0] += l * l;
      n[1] += l * p;
      n[2] += l * g;
      n[3] += l * y;
      n[5] += p * p;
      n[6] += p * g;
      n[7] += p * y;
      n[10] += g * g;
      n[11] += g * y;
      n[15] += y * y;
    }
    n[4] = n[1];
    n[8] = n[2];
    n[9] = n[6];
    n[12] = n[3];
    n[13] = n[7];
    n[14] = n[11];
    return { R: n, m: Y, N: G };
  }
  function u(D) {
    var J = D.R,
      c = D.m,
      G = D.N,
      F = c[0],
      n = c[1],
      Y = c[2],
      _ = c[3],
      l = G == 0 ? 0 : 1 / G,
      p = [
        J[0] - F * F * l,
        J[1] - F * n * l,
        J[2] - F * Y * l,
        J[3] - F * _ * l,
        J[4] - n * F * l,
        J[5] - n * n * l,
        J[6] - n * Y * l,
        J[7] - n * _ * l,
        J[8] - Y * F * l,
        J[9] - Y * n * l,
        J[10] - Y * Y * l,
        J[11] - Y * _ * l,
        J[12] - _ * F * l,
        J[13] - _ * n * l,
        J[14] - _ * Y * l,
        J[15] - _ * _ * l,
      ],
      g = p,
      y = E,
      T = [Math.random(), Math.random(), Math.random(), Math.random()],
      L = 0,
      z = 0;
    if (G != 0)
      for (var C = 0; C < 16; C++) {
        T = y.multVec(g, T);
        z = Math.sqrt(y.dot(T, T));
        T = y.sml(1 / z, T);
        if (C != 0 && Math.abs(z - L) < 1e-9) break;
        L = z;
      }
    var P = [F * l, n * l, Y * l, _ * l],
      x = y.dot(y.sml(255, P), T);
    return {
      Cov: p,
      q: P,
      e: T,
      L: L,
      eMq255: x,
      eMq: y.dot(T, P),
      rgba:
        ((Math.round(255 * P[3]) << 24) |
          (Math.round(255 * P[2]) << 16) |
          (Math.round(255 * P[1]) << 8) |
          (Math.round(255 * P[0]) << 0)) >>>
        0,
    };
  }
  var E = {
    multVec: function (J, c) {
      return [
        J[0] * c[0] + J[1] * c[1] + J[2] * c[2] + J[3] * c[3],
        J[4] * c[0] + J[5] * c[1] + J[6] * c[2] + J[7] * c[3],
        J[8] * c[0] + J[9] * c[1] + J[10] * c[2] + J[11] * c[3],
        J[12] * c[0] + J[13] * c[1] + J[14] * c[2] + J[15] * c[3],
      ];
    },
    dot: function (J, c) {
      return J[0] * c[0] + J[1] * c[1] + J[2] * c[2] + J[3] * c[3];
    },
    sml: function (J, c) {
      return [J * c[0], J * c[1], J * c[2], J * c[3]];
    },
  };
  function m(J) {
    var c = 0,
      Y = 0;
    for (var F = 0; F < J.length; F++) c += J[F].byteLength;
    var n = new Uint8Array(c);
    for (var F = 0; F < J.length; F++) {
      var _ = new Uint8Array(J[F]),
        l = _.length;
      for (var p = 0; p < l; p += 4) {
        var o = _[p],
          g = _[p + 1],
          y = _[p + 2],
          T = _[p + 3];
        if (T == 0) o = g = y = 0;
        n[Y + p] = o;
        n[Y + p + 1] = g;
        n[Y + p + 2] = y;
        n[Y + p + 3] = T;
      }
      Y += l;
    }
    return n.buffer;
  }
  UPNG.encode = af;
  UPNG.encodeLL = a8;
  UPNG.encode.compress = aa;
  UPNG.encode.dither = an;
  UPNG.quantize = X;
  UPNG.quantize.findNearest = ac;
  UPNG.quantize.getKDtree = q;
  UPNG.quantize.getNearest = s;
})();

var UTEX = (function () {
  function v(W, _, x, P, G) {
    var C = new Uint8Array(4 * 4 * 4);
    for (var w = 0; w < G; w += 4)
      for (var q = 0; q < P; q += 4) {
        i(W, _, C);
        e(x, P, G, q, w, C);
        _ += 8;
      }
    return _;
  }
  function aw(W, _, x, P, G) {
    var C = new Uint8Array(4 * 4 * 4);
    for (var w = 0; w < G; w += 4)
      for (var q = 0; q < P; q += 4) {
        i(W, _ + 8, C);
        e(x, P, G, q, w, C);
        _ += 16;
      }
    return _;
  }
  function n(W, _, x, P, G) {
    var C = new Uint8Array(4 * 4 * 4);
    for (var w = 0; w < G; w += 4)
      for (var q = 0; q < P; q += 4) {
        g(W, _, C);
        e(x, P, G, q, w, C);
        _ += 8;
      }
    return _;
  }
  function j(W, _, x, P, G) {
    var C = new Uint8Array(16 * 4),
      w = 0;
    for (var q = 0; q < x; q += 4)
      for (var h = 0; h < _; h += 4) {
        D(W, _, x, h, q, C);
        w += O(P, G, C);
        G += 8;
      }
    return G;
  }
  function I(W, _, x, P, G) {
    var C = { S: _ * 8 },
      w = new Uint8Array(4 * 4 * 4);
    for (var q = 0; q < G; q += 4)
      for (var h = 0; h < P; h += 4) {
        g(W, _ + 8, w, !0);
        for (var m = 0; m < 64; m += 4) {
          var E = B(W, C, 4);
          w[m + 3] = 255 * (E / 15);
        }
        e(x, P, G, h, q, w);
        _ += 16;
        C.S += 64;
      }
    return _;
  }
  function f(W, _) {
    var x = [W, _];
    if (W > _)
      x.push(
        (6 / 7) * W + (1 / 7) * _,
        (5 / 7) * W + (2 / 7) * _,
        (4 / 7) * W + (3 / 7) * _,
        (3 / 7) * W + (4 / 7) * _,
        (2 / 7) * W + (5 / 7) * _,
        (1 / 7) * W + (6 / 7) * _
      );
    else
      x.push(
        (4 / 5) * W + (1 / 5) * _,
        (3 / 5) * W + (2 / 5) * _,
        (2 / 5) * W + (3 / 5) * _,
        (1 / 5) * W + (4 / 5) * _,
        0,
        255
      );
    return x;
  }
  function K(W, _, x, P, G) {
    var C = f(W[_], W[_ + 1]);
    x.S += 16;
    for (var w = 0; w < 64; w += 4) {
      var q = B(W, x, 3);
      P[w + G] = C[q];
    }
  }
  function a3(W, _, x, P, G) {
    var C = { S: _ * 8 },
      w = new Uint8Array(4 * 4 * 4);
    w.fill(255);
    for (var q = 0; q < G; q += 4)
      for (var h = 0; h < P; h += 4) {
        K(W, _, C, w, 1);
        _ += 8;
        K(W, _, C, w, 0);
        _ += 8;
        e(x, P, G, h, q, w);
      }
    return _;
  }
  function ah(W, _, x, P, G) {
    var C = { S: _ * 8 },
      w = new Uint8Array(4 * 4 * 4);
    for (var q = 0; q < G; q += 4)
      for (var h = 0; h < P; h += 4) {
        g(W, _ + 8, w, !0);
        K(W, _, C, w, 3);
        C.S += 64;
        e(x, P, G, h, q, w);
        _ += 16;
      }
    return _;
  }
  function M(W, _, x, P, G) {
    var C = new Uint8Array(16 * 4);
    for (var w = 0; w < x; w += 4)
      for (var q = 0; q < _; q += 4) {
        D(W, _, x, q, w, C);
        var h = C[3],
          m = C[3];
        for (var E = 7; E < 64; E += 4) {
          var R = C[E];
          if (R < h) h = R;
          else if (m < R) m = R;
        }
        P[G] = m;
        P[G + 1] = h;
        G += 2;
        var k = f(m, h),
          L = (G + 2) << 3;
        for (var E = 0; E < 64; E += 32) {
          var b = 0,
            L = 0;
          for (var X = 0; X < 32; X += 4) {
            var u = 0,
              z = 500,
              R = C[E + X + 3];
            for (var J = 0; J < 8; J++) {
              var r = Math.abs(k[J] - R);
              if (r < z) {
                z = r;
                u = J;
              }
            }
            b = b | (u << L);
            L += 3;
          }
          P[G] = b;
          P[G + 1] = b >> 8;
          P[G + 2] = b >> 16;
          G += 3;
        }
        O(P, G, C, !0);
        G += 8;
      }
    return G;
  }
  var t = new Uint8Array(16);
  function i(W, _, x) {
    var P = (W[_ + 1] << 8) | W[_],
      G = (W[_ + 3] << 8) | W[_ + 2],
      C = (P & 31) * (255 / 31),
      w = ((P >>> 5) & 31) * (255 / 31),
      q = (P >> 10) * (255 / 31),
      h = (G & 31) * (255 / 31),
      m = ((G >>> 5) & 63) * (255 / 63),
      E = (G >> 11) * (255 / 31),
      R = t;
    R[0] = Q(q);
    R[1] = Q(w);
    R[2] = Q(C);
    R[3] = 255;
    R[12] = Q(E);
    R[13] = Q(m);
    R[14] = Q(h);
    R[15] = 255;
    var k = 2 / 3,
      L = 1 - k;
    R[4] = Q(k * q + L * E);
    R[5] = Q(k * w + L * m);
    R[6] = Q(k * C + L * h);
    R[7] = 255;
    k = 1 / 3;
    L = 1 - k;
    R[8] = Q(k * q + L * E);
    R[9] = Q(k * w + L * m);
    R[10] = Q(k * C + L * h);
    R[11] = 255;
    a2(W, x, R, _);
  }
  function Z(W, _, x) {
    var P = (x & 63488) >>> 11,
      G = (x & 2016) >>> 5,
      C = (x & 31) >>> 0;
    W[_ + 0] = (P * 33) >>> 2;
    W[_ + 1] = (G * 65) >>> 4;
    W[_ + 2] = (C * 33) >>> 2;
  }
  function c(W, _, x) {
    return (
      (Q(W * (31 / 255)) << 11) | (Q(_ * (63 / 255)) << 5) | Q(x * (31 / 255))
    );
  }
  function A(W, _, x) {
    return (W * (64 - x) + _ * x + 32) >> 6;
  }
  function o(W, _, x, P) {
    _[x] = A(W[0], W[4], P);
    _[x + 1] = A(W[1], W[5], P);
    _[x + 2] = A(W[2], W[6], P);
    _[x + 3] = 255;
  }
  function g(W, _, x, P) {
    var G = (W[_ + 1] << 8) | W[_],
      C = (W[_ + 3] << 8) | W[_ + 2],
      w = U(G, C, P);
    a2(W, x, w, _);
  }
  function U(W, _, x) {
    var P = t;
    Z(P, 0, W);
    P[3] = 255;
    Z(P, 4, _);
    P[7] = 255;
    if (_ < W || x) {
      o(P, P, 8, 21);
      o(P, P, 12, 43);
    } else {
      o(P, P, 8, 32);
      P[12] = 0;
      P[13] = 0;
      P[14] = 0;
      P[15] = 0;
    }
    return P;
  }
  function a2(W, _, x, P) {
    var G = (P + 4) << 3;
    for (var C = 0; C < 64; C += 4) {
      var w = (W[G >> 3] >> (G & 7)) & 3;
      G += 2;
      w = w << 2;
      _[C] = x[w];
      _[C + 1] = x[w + 1];
      _[C + 2] = x[w + 2];
      _[C + 3] = x[w + 3];
    }
  }
  function Q(W) {
    return ~~(0.5 + W);
  }
  function $(W, _) {
    for (var x = 0; x < 3; x++) _[x] = _[x + 3] = W[x];
    for (var x = 0; x < 64; x += 4) {
      var P = W[x],
        G = W[x + 1],
        C = W[x + 2];
      if (P < _[0]) _[0] = P;
      if (G < _[1]) _[1] = G;
      if (C < _[2]) _[2] = C;
      if (P > _[3]) _[3] = P;
      if (G > _[4]) _[4] = G;
      if (C > _[5]) _[5] = C;
    }
  }
  function ac(W, _, x) {
    for (var P = 0; P < 3; P++) {
      var G = Q((W[P + 3] - W[P]) * x),
        C = W[P] + G,
        w = W[P + 3] - G;
      _[P] = C < 0 ? 0 : C > 255 ? 255 : C;
      _[P + 3] = w < 0 ? 0 : w > 255 ? 255 : w;
    }
  }
  function O(W, _, x, P) {
    var G = 0,
      C = 0,
      w = 1e9,
      q = [0, 0, 0, 0, 0, 0],
      h = 255;
    for (var m = 3; m < 64; m += 4) h &= x[m];
    var E = P ? !1 : h < 128;
    if (!1) {
      $(x, E);
      ac(E, 1 / 11);
    } else {
      var R = q.slice(0);
      $(x, R);
      var k = -1,
        L = -1;
      for (var b = -0.1; b < 0.3; b += 0.005) {
        ac(R, q, b);
        var X = c(q[0], q[1], q[2]),
          u = c(q[3], q[4], q[5]);
        if (X == k && u == L) continue;
        k = X;
        L = u;
        var z = s(W, _, x, E, X, u);
        if (z < w) {
          G = X;
          C = u;
          w = z;
        }
      }
      Y(x, q);
      var X = c(q[0], q[1], q[2]),
        u = c(q[3], q[4], q[5]);
      z = s(W, _, x, E, X, u);
      if (z < w) {
        G = X;
        C = u;
        w = z;
      }
    }
    var J = s(W, _, x, E, G, C);
    return J;
  }
  function s(W, _, x, P, G, C) {
    if (G < C != P) {
      var w = G;
      G = C;
      C = w;
    }
    W[_ + 0] = G & 255;
    W[_ + 1] = G >> 8;
    W[_ + 2] = C & 255;
    W[_ + 3] = C >> 8;
    var q = U(G, C),
      h = _ * 8 + 32,
      m = 0;
    W[_ + 4] = 0;
    W[_ + 5] = 0;
    W[_ + 6] = 0;
    W[_ + 7] = 0;
    var E = a1;
    for (var R = 0; R < 64; R += 4) {
      var k = x[R],
        L = x[R + 1],
        b = x[R + 2],
        X = x[R + 3],
        u = E(k, L, b, q[0], q[1], q[2]),
        z = E(k, L, b, q[4], q[5], q[6]),
        J = E(k, L, b, q[8], q[9], q[10]),
        r = E(k, L, b, q[12], q[13], q[14]),
        F = Math.min(Math.min(u, z), Math.min(J, r)),
        a = 0;
      m += F;
      if (P && X < 128) a = 3;
      else if (F == z) a = 1;
      else if (F == J) a = 2;
      else if (F == r) a = 3;
      W[h >> 3] |= a << (h & 7);
      h += 2;
    }
    return m;
  }
  function D(W, _, x, P, G, C) {
    for (var w = 0; w < 4; w++) {
      var q = ((G + w) * _ + P) << 2,
        h = w << 4;
      C[h + 0] = W[q + 0];
      C[h + 1] = W[q + 1];
      C[h + 2] = W[q + 2];
      C[h + 3] = W[q + 3];
      C[h + 4] = W[q + 4];
      C[h + 5] = W[q + 5];
      C[h + 6] = W[q + 6];
      C[h + 7] = W[q + 7];
      C[h + 8] = W[q + 8];
      C[h + 9] = W[q + 9];
      C[h + 10] = W[q + 10];
      C[h + 11] = W[q + 11];
      C[h + 12] = W[q + 12];
      C[h + 13] = W[q + 13];
      C[h + 14] = W[q + 14];
      C[h + 15] = W[q + 15];
    }
  }
  function e(W, _, x, P, G, C) {
    for (var w = 0; w < 4; w++) {
      var q = ((G + w) * _ + P) << 2,
        h = w << 4;
      W[q + 0] = C[h + 0];
      W[q + 1] = C[h + 1];
      W[q + 2] = C[h + 2];
      W[q + 3] = C[h + 3];
      W[q + 4] = C[h + 4];
      W[q + 5] = C[h + 5];
      W[q + 6] = C[h + 6];
      W[q + 7] = C[h + 7];
      W[q + 8] = C[h + 8];
      W[q + 9] = C[h + 9];
      W[q + 10] = C[h + 10];
      W[q + 11] = C[h + 11];
      W[q + 12] = C[h + 12];
      W[q + 13] = C[h + 13];
      W[q + 14] = C[h + 14];
      W[q + 15] = C[h + 15];
    }
  }
  function B(W, _, x) {
    var P = 0,
      G = x;
    while (x != 0) {
      P = P | (y(W, _) << (G - x));
      x--;
    }
    return P;
  }
  function y(W, _) {
    var x = _.S;
    _.S++;
    return (W[x >> 3] >> (x & 7)) & 1;
  }
  function am(W, _, x) {
    var P = _ >> 1,
      G = x >> 1,
      C = new Uint8Array(P * G * 4);
    for (var w = 0; w < G; w++)
      for (var q = 0; q < P; q++) {
        var h = (w * P + q) << 2,
          m = ((w << 1) * _ + (q << 1)) << 2,
          E = W[m + 3],
          R = W[m + 7],
          k = W[m] * E + W[m + 4] * R,
          L = W[m + 1] * E + W[m + 5] * R,
          b = W[m + 2] * E + W[m + 6] * R;
        m += _ << 2;
        var X = W[m + 3],
          u = W[m + 7];
        k += W[m] * X + W[m + 4] * u;
        L += W[m + 1] * X + W[m + 5] * u;
        b += W[m + 2] * X + W[m + 6] * u;
        var a = (E + R + X + u + 2) >> 2,
          p = a == 0 ? 0 : 0.25 / a;
        C[h] = ~~(k * p + 0.5);
        C[h + 1] = ~~(L * p + 0.5);
        C[h + 2] = ~~(b * p + 0.5);
        C[h + 3] = a;
      }
    return C;
  }
  function a1(W, _, x, P, G, C) {
    var w = W - P,
      q = _ - G,
      h = x - C;
    return w * w + q * q + h * h;
  }
  function Y(W, _) {
    var x = a1,
      P = 0,
      G = 0,
      C = 0;
    for (var w = 0; w < 64; w += 4) {
      var q = W[w],
        h = W[w + 1],
        m = W[w + 2];
      for (var E = w + 4; E < 64; E += 4) {
        var R = x(q, h, m, W[E], W[E + 1], W[E + 2]);
        if (R > C) {
          C = R;
          P = w;
          G = E;
        }
      }
    }
    for (var w = 0; w < 3; w++) {
      _[w] = W[P + w];
      _[w + 3] = W[G + w];
    }
  }
  var N = new ArrayBuffer(4),
    aj = new Uint8Array(N),
    an = new Uint32Array(N),
    aa = new Uint16Array(N),
    ae = {
      c: function (W, _) {
        aj[0] = W[_ + 0];
        aj[1] = W[_ + 1];
        return aa[0];
      },
      H: function (W, _) {
        aj[0] = W[_ + 0];
        aj[1] = W[_ + 1];
        aj[2] = W[_ + 2];
        aj[3] = W[_ + 3];
        return an[0];
      },
      s: function (W, _, x) {
        an[0] = x;
        W[_ + 0] = aj[0];
        W[_ + 1] = aj[1];
        W[_ + 2] = aj[2];
        W[_ + 3] = aj[3];
      },
      B: function (W, _, x) {
        var P = "";
        for (var G = 0; G < x; G++) P += String.fromCharCode(W[_ + G]);
        return P;
      },
      h: function (W, _, x) {
        for (var P = 0; P < x.length; P++) W[_ + P] = x.charCodeAt(P);
      },
      J: B,
      _: D,
      G: e,
      a7: a1,
    };
  return {
    readBC1: n,
    readBC2: I,
    $: n,
    q: I,
    j: ah,
    W: a3,
    i: v,
    X: aw,
    u: j,
    D: M,
    w: am,
    M: ae,
  };
})();
(function () {
  var v = [
      ["0000000000000000"],
split(
        " "
      ),
      "0011001102212222 0001001122112221 0000200122112211 0222002200110111 0000000011221122 0011001100220022 0022002211111111 0011001122112211 0000000011112222 0000111111112222 0000111122222222 0012001200120012 0112011201120112 0122012201220122 0011011211221222 0011200122002220 0001001101121122 0111001120012200 0000112211221122 0022002200221111 0111011102220222 0001000122212221 0000001101220122 0000110022102210 0122012200110000 0012001211222222 0110122112210110 0000011012211221 0022110211020022 0110011020022222 0011012201220011 0000200022112221 0000000211221222 0222002200120011 0011001200220222 0120012001200120 0000111122220000 0120120120120120 0120201212010120 0011220011220011 0011112222000011 0101010122222222 0000000021212121 0022112200221122 0022001100220011 0220122102201221 0101222222220101 0000212121212121 0101010101012222 0222011102220111 0002111200021112 0000211221122112 0222011101110222 0002111211120002 0110011001102222 0000000021122112 0110011022222222 0022001100110022 0022112211220022 0000000000002112 0002000100020001 0222122202221222 0101222222222222 0111201122012220".split(
        " "
      ),
    ],
    aw = [],
    O,
    s,
    D,
    e,
    B,
    y,
    am,
    a1,
    Y;
  for (var n = 0; n < v.length; n++) {
    aw.push([]);
    for (var j = 0; j < v[n].length; j++) {
      var I = [];
      aw[n].push(I);
      var f = [];
      for (var K = 0; K < n + 1; K++) {
        I.push([]);
        f.push([]);
      }
      var a3 = v[n][j],
        i = (v[n][j] = new Uint8Array(16));
      for (var K = 0; K < 16; K++) {
        var Z = (i[K] = a3.charCodeAt(K) - 48);
        I[Z].push(K);
      }
    }
  }
  var c = [
      [[0, 0, 0]],
      [
        [0, 15, 0],
        [0, 15, 0],
        [0, 15, 0],
        [0, 15, 0],
        [0, 15, 0],
        [0, 15, 0],
        [0, 15, 0],
        [0, 15, 0],
        [0, 15, 0],
        [0, 15, 0],
        [0, 15, 0],
        [0, 15, 0],
        [0, 15, 0],
        [0, 15, 0],
        [0, 15, 0],
        [0, 15, 0],
        [0, 15, 0],
        [0, 2, 0],
        [0, 8, 0],
        [0, 2, 0],
        [0, 2, 0],
        [0, 8, 0],
        [0, 8, 0],
        [0, 15, 0],
        [0, 2, 0],
        [0, 8, 0],
        [0, 2, 0],
        [0, 2, 0],
        [0, 8, 0],
        [0, 8, 0],
        [0, 2, 0],
        [0, 2, 0],
        [0, 15, 0],
        [0, 15, 0],
        [0, 6, 0],
        [0, 8, 0],
        [0, 2, 0],
        [0, 8, 0],
        [0, 15, 0],
        [0, 15, 0],
        [0, 2, 0],
        [0, 8, 0],
        [0, 2, 0],
        [0, 2, 0],
        [0, 2, 0],
        [0, 15, 0],
        [0, 15, 0],
        [0, 6, 0],
        [0, 6, 0],
        [0, 2, 0],
        [0, 6, 0],
        [0, 8, 0],
        [0, 15, 0],
        [0, 15, 0],
        [0, 2, 0],
        [0, 2, 0],
        [0, 15, 0],
        [0, 15, 0],
        [0, 15, 0],
        [0, 15, 0],
        [0, 15, 0],
        [0, 2, 0],
        [0, 2, 0],
        [0, 15, 0],
      ],
      [
        [0, 3, 15],
        [0, 3, 8],
        [0, 15, 8],
        [0, 15, 3],
        [0, 8, 15],
        [0, 3, 15],
        [0, 15, 3],
        [0, 15, 8],
        [0, 8, 15],
        [0, 8, 15],
        [0, 6, 15],
        [0, 6, 15],
        [0, 6, 15],
        [0, 5, 15],
        [0, 3, 15],
        [0, 3, 8],
        [0, 3, 15],
        [0, 3, 8],
        [0, 8, 15],
        [0, 15, 3],
        [0, 3, 15],
        [0, 3, 8],
        [0, 6, 15],
        [0, 10, 8],
        [0, 5, 3],
        [0, 8, 15],
        [0, 8, 6],
        [0, 6, 10],
        [0, 8, 15],
        [0, 5, 15],
        [0, 15, 10],
        [0, 15, 8],
        [0, 8, 15],
        [0, 15, 3],
        [0, 3, 15],
        [0, 5, 10],
        [0, 6, 10],
        [0, 10, 8],
        [0, 8, 9],
        [0, 15, 10],
        [0, 15, 6],
        [0, 3, 15],
        [0, 15, 8],
        [0, 5, 15],
        [0, 15, 3],
        [0, 15, 6],
        [0, 15, 6],
        [0, 15, 8],
        [0, 3, 15],
        [0, 15, 3],
        [0, 5, 15],
        [0, 5, 15],
        [0, 5, 15],
        [0, 8, 15],
        [0, 5, 15],
        [0, 10, 15],
        [0, 5, 15],
        [0, 10, 15],
        [0, 8, 15],
        [0, 13, 15],
        [0, 15, 3],
        [0, 12, 15],
        [0, 3, 15],
        [0, 3, 8],
      ],
    ],
    A = [];
  for (var o = 0; o < 3; o++) {
    var g = (A[o] = []),
      U = c[o];
    for (var n = 0; n < U.length; n++) {
      var Q = U[n],
        $ = (g[n] = new Uint8Array(16));
      $[Q[0]] = $[Q[1]] = $[Q[2]] = 1;
    }
  }
  var ac = [
    null,
    null,
    [0, 21, 43, 64],
    [0, 9, 18, 27, 37, 46, 55, 64],
    [0, 4, 9, 13, 17, 21, 26, 30, 34, 38, 43, 47, 51, 55, 60, 64],
  ];
  function N(E) {
    O = E;
    s = [4, 6, 6, 6, 0, 0, 0, 6][O];
    D = [4, 6, 5, 7, 5, 7, 7, 5][O];
    e = [0, 0, 0, 0, 6, 8, 7, 5][O];
    B = [1, 1, 0, 1, 0, 0, 1, 1][O];
    y = [6, 4, 6, 4, 2, 2, 2, 4][O];
    am = y >>> 1;
    a1 = [3, 3, 2, 2, 2, 2, 4, 2][O];
    Y = [0, 0, 0, 0, 3, 2, 0, 0][O];
  }
  function aj(E, R) {
    E <<= 8 - R;
    E |= E >> R;
    return E;
  }
  function an(E, R, k) {
    return (E * (64 - k) + R * k + 32) >> 6;
  }
  function aa(E, R, k, L, b, X) {
    var u = UTEX.M.J,
      z = { S: 0 },
      J = new Uint8Array(4 * 4 * 4);
    for (var r = 0; r < b; r += 4)
      for (var F = 0; F < L; F += 4) {
        var a = 0;
        while (((E[R] >> a) & 1) != 1) a++;
        N(a);
        z.S = (R << 3) + O + 1;
        var p = O == 4 || O == 5 ? u(E, z, 2) : 0,
          T = O == 4 ? u(E, z, 1) : 0,
          ad = u(E, z, s),
          H = new Uint8Array(24);
        for (var n = 0; n < 4; n++) {
          var S = n == 3 ? e : D;
          for (var j = 0; j < y; j++) H[n * y + j] = u(E, z, S);
        }
        for (var j = 0; j < y; j++) {
          if (O == 1 && (j & 1) == 1) z.S--;
          var ay = u(E, z, B);
          for (var n = 0; n < 3; n++) W(H, n * y + j, B, ay);
          if (e != 0) W(H, 3 * y + j, B, ay);
        }
        D += B;
        if (e != 0) e += B;
        for (var n = 0; n < 4; n++) {
          var S = n == 3 ? e : D;
          for (var j = 0; j < y; j++) H[n * y + j] = aj(H[n * y + j], S);
        }
        if (e == 0) for (var j = 0; j < y; j++) H[3 * y + j] = 255;
        var a9 = v[am - 1][ad],
          V = c[am - 1][ad],
          d = z.S,
          a6 = d + 16 * a1 - am;
        if (T == 1) {
          var au = d;
          d = a6;
          a6 = au;
          au = a1;
          a1 = Y;
          Y = au;
        }
        var a7 = ac[a1];
        z.S = d;
        for (var n = 0; n < 64; n += 4) {
          var l = a9[n >> 2],
            a4 = V[l] == n >> 2 ? 1 : 0,
            ar = z.S % (16 * 8),
            ag = u(E, z, a1 - a4),
            ak = a7[ag];
          J[n] = an(H[0 * y + 2 * l], H[0 * y + 2 * l + 1], ak);
          J[n + 1] = an(H[1 * y + 2 * l], H[1 * y + 2 * l + 1], ak);
          J[n + 2] = an(H[2 * y + 2 * l], H[2 * y + 2 * l + 1], ak);
          J[n + 3] = an(H[3 * y + 2 * l], H[3 * y + 2 * l + 1], ak);
        }
        a7 = ac[Y];
        z.S = a6;
        if (Y != 0)
          for (var n = 0; n < 64; n += 4) {
            var l = a9[n >> 2],
              a4 = V[l] == n >> 2 ? 1 : 0,
              ag = u(E, z, Y - a4),
              ak = a7[ag];
            J[n + 3] = an(H[3 * y + 2 * l], H[3 * y + 2 * l + 1], ak);
          }
        if (p != 0) _(J, p);
        UTEX.M.G(k, L, b, F, r, J);
        R += 16;
      }
    return R;
  }
  function ae(E) {
    return ~~(0.5 + E);
  }
  function W(E, n, B, R) {
    E[n] = (E[n] << B) | R;
  }
  function _(E, R) {
    for (var n = 0; n < 64; n += 4) {
      var k = E[n + R - 1];
      E[n + R - 1] = E[n + 3];
      E[n + 3] = k;
    }
  }
  var x = [];
  for (var n = 0; n < 4; n++) x[n] = new Uint8Array(n * 8);
  function P(E, am, I) {
    var R = x[am];
    for (var Z = 0; Z < am; Z++) {
      var k = I[Z],
        L = k.length,
        b = k[0] << 2,
        X = E[b],
        u = E[b + 1],
        z = E[b + 2],
        J = E[b + 3],
        r = X,
        F = u,
        a = z,
        p = J;
      for (var n = 1; n < L; n++) {
        b = k[n] << 2;
        var T = E[b],
          ad = E[b + 1],
          H = E[b + 2],
          i = E[b + 3];
        if (T < X) X = T;
        else if (T > r) r = T;
        if (ad < u) u = ad;
        else if (ad > F) F = ad;
        if (H < z) z = H;
        else if (H > a) a = H;
        if (i < J) J = i;
        else if (i > p) p = i;
      }
      var S = Z << 3;
      R[S] = X;
      R[S + 1] = u;
      R[S + 2] = z;
      R[S + 3] = J;
      R[S + 4] = r;
      R[S + 5] = F;
      R[S + 6] = a;
      R[S + 7] = p;
    }
    return R;
  }
  function G(E) {
    var R = E[0] + E[4] - E[8] - E[12],
      k = E[1] + E[5] - E[9] - E[13],
      L = E[2] + E[6] - E[10] - E[14],
      b = E[3] + E[7] - E[11] - E[15];
    return R * R + k * k + L * L + b * b;
  }
  function C(E, R, k) {
    k = k << (R & 7);
    var L = R >>> 3;
    E[L] |= k;
    E[L + 1] |= k >>> 8;
  }
  function w(E, R, k, L) {
    var b = 1e9,
      X = 0,
      $ = new Uint8Array(16),
      u = new Uint8Array(24),
      z = 255,
      J = 0;
    for (var n = 0; n < 64; n += 4) {
      var r = k[n + 3];
      if (r < z) z = r;
      if (r > J) J = r;
    }
    var F = z < 255,
      a = F ? [4, 5, 6, 7] : [1, 3, 6],
      p = {},
      T = new Uint8Array(8);
    for (var ad = 0; ad < a.length; ad++) {
      N(a[ad]);
      var H = e != 0 && Y == 0 && F,
        S = B == 1 && O > 3 ? 1 : 0,
        ay = B == 0 || O > 3 || O == 1,
        a9 = O == 1 ? 2 : B * y,
        V = am == 1 ? [0] : p[am + "," + s],
        d,
        a6 = O + 1 + s + y * (3 * D + e) + a9;
      if (O == 4 || O == 5) {
        a6 += 2;
        if (O == 4) a6++;
      }
      if (V == null) {
        var au = aw[am - 1];
        V = p[am + "," + s] = [0, 0, 0, 0, 0];
        d = [-1, -1, -1, -1, -1];
        for (var a7 = 0; a7 < 1 << s; a7++) {
          var I = au[a7],
            l = V.length - 1;
          d[l] = G(P(k, am, I));
          V[l] = a7;
          while (l != 0 && d[l - 1] < d[l]) {
            var a4 = d[l];
            d[l] = d[l - 1];
            d[l - 1] = a4;
            var a4 = V[l];
            V[l] = V[l - 1];
            V[l - 1] = a4;
            l--;
          }
        }
        V.pop();
      }
      for (var ar = 0; ar < V.length; ar++) {
        var a7 = V[ar],
          ag = 0,
          ak = 0,
          ab = a6,
          ai = 0;
        $.fill(0);
        var ao = v[am - 1][a7],
          I = aw[am - 1][a7],
          ax = c[am - 1][a7],
          a8 = A[am - 1][a7],
          at = P(k, am, I),
          as = e == 0 ? 3 : 4;
        for (var Z = 0; Z < y; Z++) {
          T[6] = T[7] = 0;
          for (var n = 0; n < as; n++) {
            var ap = n == 3 ? e : D,
              a5 = at[(Z << 2) + n] >>> (7 - ap);
            T[6 + (a5 & 1)]++;
          }
          var al = (T[Z] = ay ? S : T[6] > T[7] ? 0 : 1);
          for (var n = 0; n < as; n++) {
            var ap = n == 3 ? e : D,
              a5 = at[(Z << 2) + n] >>> (8 - ap);
            u[n * y + Z] = aj((a5 << B) | al, ap + B);
          }
        }
        for (var Z = 0; Z < am; Z++) {
          var a0 = ax[Z] * 4,
            l = (H ? q(k, a0, u, Z) : h(k, a0, u, Z)) & 255;
          if (l >>> (a1 - 1) == 1) {
            for (var n = 0; n < as; n++) {
              var j = n * y + Z * 2,
                a4 = u[j];
              u[j] = u[j + 1];
              u[j + 1] = a4;
              a4 = T[Z * 2];
              T[Z * 2] = T[Z * 2 + 1];
              T[Z * 2 + 1] = a4;
            }
          }
          if (Y == 0) continue;
          var l = m(k, a0, u, Z) & 255;
          if (l >>> (Y - 1) == 1) {
            var j = 3 * y + Z * 2,
              a4 = u[j];
            u[j] = u[j + 1];
            u[j + 1] = a4;
          }
        }
        for (var n = 0; n < 64; n += 4) {
          var Z = ao[n >> 2],
            aq = H ? q(k, n, u, Z) : h(k, n, u, Z),
            l = aq & 255;
          ai += aq >>> 8;
          C($, ab, l);
          ab += a1 - a8[n >>> 2];
        }
        if (Y != 0)
          for (var n = 0; n < 64; n += 4) {
            var Z = ao[n >> 2],
              aq = m(k, n, u, Z),
              l = aq & 255;
            ai += aq >>> 8;
            C($, ab, l);
            ab += Y - a8[n >>> 2];
          }
        if (ai < b) {
          ab = 0;
          C($, ab, 1 << O);
          ab += O + 1;
          C($, ab, a7);
          ab += s;
          if (O == 4 || O == 5) {
            C($, ab, ag);
            ab += 2;
            if (O == 4) {
              C($, ab, ak);
              ab += 1;
            }
          }
          for (var n = 0; n < as; n++) {
            var ap = n == 3 ? e : D;
            for (var Z = 0; Z < y; Z++) {
              var a5 = u[n * y + Z] >>> (8 - ap);
              C($, ab, a5);
              ab += ap;
            }
          }
          for (var n = 0; n < a9; n++) C($, ab + n, T[n]);
          ab += a9;
          b = ai;
          E.set($, R);
          X = O;
        }
      }
    }
    return b;
  }
  function q(E, j, R, Z) {
    var k = E[j],
      L = E[j + 1],
      b = E[j + 2],
      i = E[j + 3],
      X = 2 * Z,
      u = y + 2 * Z,
      z = 2 * y + 2 * Z,
      J = 3 * y + 2 * Z,
      r = R[X],
      F = R[X + 1],
      a = R[u],
      p = R[u + 1],
      T = R[z],
      ad = R[z + 1],
      H = R[J],
      S = R[J + 1],
      ay = 0,
      top = (1 << a1) - 1;
    if (r != F || a != p || T != ad || H != S) {
      var a9 = F - r,
        V = p - a,
        d = ad - T,
        a6 = S - H,
        au = (k - r) * a9 + (L - a) * V + (b - T) * d + (i - H) * a6,
        a7 = (0.999999999 * au) / (a9 * a9 + V * V + d * d + a6 * a6);
      a7 = a7 < 0 ? 0 : a7 > 1 ? 1 : a7;
      ay = ae(a7 * top);
    }
    var l = ac[a1][ay];
    a9 = an(r, F, l) - k;
    V = an(a, p, l) - L;
    d = an(T, ad, l) - b;
    a6 = an(H, S, l) - i;
    var a4 = a9 * a9 + V * V + d * d + a6 * a6;
    return (a4 << 8) | ay;
  }
  function h(E, j, R, Z) {
    var k = E[j],
      L = E[j + 1],
      b = E[j + 2],
      X = 2 * Z,
      u = y + 2 * Z,
      z = 2 * y + 2 * Z,
      J = R[X],
      r = R[X + 1],
      F = R[u],
      a = R[u + 1],
      p = R[z],
      T = R[z + 1],
      ad = 0,
      top = (1 << a1) - 1;
    if (J != r || F != a || p != T) {
      var H = r - J,
        S = a - F,
        ay = T - p,
        a9 = (k - J) * H + (L - F) * S + (b - p) * ay,
        V = (0.999999999 * a9) / (H * H + S * S + ay * ay);
      V = V < 0 ? 0 : V > 1 ? 1 : V;
      ad = ae(V * top);
    }
    var d = ac[a1][ad];
    H = an(J, r, d) - k;
    S = an(F, a, d) - L;
    ay = an(p, T, d) - b;
    var a6 = H * H + S * S + ay * ay;
    return (a6 << 8) | ad;
  }
  function m(E, j, R, Z) {
    var i = E[j + 3],
      k = 3 * y + 2 * Z,
      L = R[k],
      b = R[k + 1],
      X = 0,
      top = (1 << Y) - 1;
    if (L != b) {
      var u = b - L,
        r = (i - L) * u,
        F = (0.999999999 * r) / (u * u);
      F = F < 0 ? 0 : F > 1 ? 1 : F;
      X = ae(F * top);
    }
    var a = ac[Y][X];
    u = an(L, b, a) - i;
    var p = u * u;
    return (p << 8) | X;
  }
  function af(E, R, k, L, b) {
    var X = Date.now(),
      u = b;
    for (var n = 0; n < 1; n++) {
      var z = new Uint8Array(16 * 4 + 16 * 4),
        J = 0;
      b = u;
      for (var r = 0; r < k; r += 4)
        for (var F = 0; F < R; F += 4) {
          UTEX.M._(E, R, k, F, r, z);
          J += w(L, b, z, F == 80 && r == 160);
          b += 16;
        }
    }
    return b;
  }
  UTEX.P = aa;
  UTEX.m = af;
})();
UTEX.DDS = (function () {
  var v = {
    F: 1,
    t: 2,
    e: 4,
    o: 8,
    L: 4096,
    v: 131072,
    r: 524288,
    a8: 8388608,
    Y: 1,
    C: 2,
    A: 4,
    K: 32,
    z: 64,
    a9: 512,
    N: 131072,
    V: 8,
    O: 4194304,
    b: 4096,
  };
  function aw(M) {
    var t = new Uint8Array(M),
      i = 0,
      Z = UTEX.M.B(t, i, 4),
      c,
      A,
      o,
      B;
    i += 4;
    c = j(t, i);
    i += 124;
    A = c.p;
    if (A.Z & v.A && A.k == "DX10") {
      o = a3(t, i);
      i += 20;
    }
    var g = c.width,
      U = c.height,
      a2 = [],
      Q = A.k,
      $ = A.g,
      ac = {
        DXT1: "BC1",
        DXT3: "BC2",
        DXT5: "BC3",
        DX10: "BC7",
        ATI2: "BC5",
        BC5U: "BC5",
        BC5S: "BC5",
        "BC7 ": "BC7",
      };
    if (ac[Q]) Q = ac[Q];
    if (o) {
      var s = o.I;
      if (27 <= s && s <= 29) Q = "R8G8B8A8";
      else if (70 <= s && s <= 72) Q = "BC1";
      else if (73 <= s && s <= 75) Q = "BC2";
      else if (76 <= s && s <= 78) Q = "BC3";
      else if (82 <= s && s <= 84) Q = "BC5";
      else if (97 <= s && s <= 99) Q = "BC7";
      else console.log("Unknown DX10 format", s);
    }
    var D = Math.max(1, c.n),
      e = (A.Z & v.Y) != 0;
    for (var y = 0; y < D; y++) {
      var a1 = g * U,
        Y = a1 * 4,
        N = new Uint8Array(Y);
      if (!1) {
      } else if (Q == "BC1") i = UTEX.$(t, i, N, g, U);
      else if (Q == "BC2") i = UTEX.q(t, i, N, g, U);
      else if (Q == "BC3") i = UTEX.j(t, i, N, g, U);
      else if (Q == "BC5") i = UTEX.W(t, i, N, g, U);
      else if (Q == "BC7") i = UTEX.P(t, i, N, g, U);
      else if (Q == "ATC ") i = UTEX.i(t, i, N, g, U);
      else if (Q == "ATCA") i = UTEX.X(t, i, N, g, U);
      else if (Q == "ATCI") i = UTEX.X(t, i, N, g, U);
      else if (Q == "R8G8B8A8") {
        N.set(new Uint8Array(t.buffer, i, Y));
        i += Y;
      } else if (A.Z & v.z) {
        var aj = A.a,
          an = 255 / aj,
          aa = A.d,
          ae = 255 / aa,
          W = A.l,
          _ = 255 / W,
          x = A.T,
          P = 255 / x;
        if ($ == 32) {
          for (var G = 0; G < Y; G += 4) {
            var C =
              (t[i + G + 3] << 24) |
              (t[i + G + 2] << 16) |
              (t[i + G + 1] << 8) |
              t[i + G];
            N[G + 0] = (C & aj) * an;
            N[G + 1] = (C & aa) * ae;
            N[G + 2] = (C & W) * _;
            N[G + 3] = e ? (C & x) * P : 255;
          }
          i += Y;
        } else if ($ == 24) {
          for (var G = 0; G < Y; G += 4) {
            var w = (G >>> 2) * 3,
              C = (t[i + w + 2] << 16) | (t[i + w + 1] << 8) | t[i + w];
            N[G + 0] = (C & aj) * an;
            N[G + 1] = (C & aa) * ae;
            N[G + 2] = (C & W) * _;
            N[G + 3] = 255;
          }
          i += 3 * a1;
        } else if ($ == 16) {
          for (var G = 0; G < Y; G += 4) {
            var C = (t[i + (G >> 1) + 1] << 8) | t[i + (G >> 1)];
            N[G + 0] = (C & aj) * an;
            N[G + 1] = (C & aa) * ae;
            N[G + 2] = (C & W) * _;
            N[G + 3] = e ? (C & x) * P : 255;
          }
          i += Y >>> 1;
        } else throw "unknown bit count " + $;
      } else if (A.Z & v.C || e || A.Z & v.N) {
        if ($ == 8) {
          if (A.Z & v.C) {
            for (var G = 0; G < Y; G += 4) N[G + 3] = t[i + (G >> 2)];
          } else {
            N.fill(255);
            for (var G = 0; G < Y; G += 4)
              N[G] = N[G + 1] = N[G + 2] = t[i + (G >> 2)];
          }
          i += Y >>> 2;
        } else if ($ == 16) {
          N.fill(255);
          for (var G = 0; G < Y; G += 4)
            N[G] = N[G + 1] = N[G + 2] = t[i + (G >> 1)];
          i += Y >>> 1;
        } else throw "unknown bit count " + $;
      } else if (A.Z & v.z && $ == 24) {
        for (var G = 0; G < a1; G++) {
          var h = G * 4,
            w = G * 3;
          N[h + 0] = t[i + w];
          N[h + 1] = t[i + w + 1];
          N[h + 2] = t[i + w + 2];
          N[h + 3] = 255;
        }
      } else if (A.Z & v.K && $ == 8) {
        if (y == 0) {
          B = t.slice(i, i + 1024);
          i += 1024;
        }
        for (var G = 0; G < a1; G++) {
          var h = G * 4,
            m = 4 * t[i + G];
          N[h + 0] = B[m];
          N[h + 1] = B[m + 1];
          N[h + 2] = B[m + 2];
          N[h + 3] = B[m + 3];
        }
        i += g * U;
      } else {
        console.log(
          "unknown texture format, head flags: ",
          c.Z.toString(2),
          "pixelFormat flags: ",
          A.Z.toString(2)
        );
        throw "e";
      }
      a2.push({ width: g, height: U, image: N.buffer });
      g = g >>> 1;
      U = U >>> 1;
    }
    return a2;
  }
  function n(M, t, i, Z) {
    if (Z == null) Z = [0, !0, !1];
    var M = new Uint8Array(M),
      c = ["BC1", "BC3", "BC7", "NON"][Z[0]],
      A = Z[1],
      o = Z[2],
      g = new Uint8Array(124 + t * i * 6),
      U = 0,
      a2 = 0;
    UTEX.M.h(g, U, "DDS ");
    U += 4;
    I(g, t, i, A, c, o, U);
    U += 124;
    if (c == "BC7" || o) {
      ah(g, c, o, U);
      U += 20;
    }
    while (t * i != 0) {
      if (c == "NON") {
        g.set(M, U);
        U += M.length;
      }
      if (c == "BC1") U = UTEX.u(M, t, i, g, U);
      if (c == "BC3") U = UTEX.D(M, t, i, g, U);
      if (c == "BC7") U = UTEX.m(M, t, i, g, U);
      M = UTEX.w(M, t, i);
      t = t >> 1;
      i = i >> 1;
      a2++;
      if (!A) break;
    }
    g[28] = a2;
    return g.buffer.slice(0, U);
  }
  function j(M, t) {
    var i = {},
      Z = UTEX.M.H,
      c = Z(M, t);
    t += 4;
    if (c != 124) throw c;
    i.Z = Z(M, t);
    t += 4;
    i.height = Z(M, t);
    t += 4;
    i.width = Z(M, t);
    t += 4;
    i.pitch = Z(M, t);
    t += 4;
    i.depth = Z(M, t);
    t += 4;
    i.n = Z(M, t);
    t += 4;
    t += 11 * 4;
    i.p = f(M, t);
    t += 32;
    i.a2 = Z(M, t);
    t += 4;
    i.a6 = Z(M, t);
    t += 4;
    i.ae = Z(M, t);
    t += 4;
    i.a4 = Z(M, t);
    t += 4;
    if (Z(M, t) != 0) console.log("not zeros", Z(M, t).toString(16));
    t += 4;
    return i;
  }
  function I(M, t, i, Z, c, A, o) {
    var g = UTEX.M.s,
      U = v.F | v.t | v.e | v.L,
      $ = 1;
    U |= v.v | (c ? v.r : v.o);
    var a2 = (Z ? v.O : 0) | v.b | (Z ? v.V : 0),
      Q = c == "NON" ? t * i * 4 : ((t * i) >>> 1) * (c == "BC1" ? 1 : 2);
    g(M, o, 124);
    o += 4;
    g(M, o, U);
    o += 4;
    g(M, o, i);
    o += 4;
    g(M, o, t);
    o += 4;
    g(M, o, Q);
    o += 4;
    g(M, o, $);
    o += 4;
    g(M, o, 10);
    o += 4;
    o += 11 * 4;
    K(M, c, A, o);
    o += 32;
    g(M, o, a2);
    o += 4;
    o += 4 * 4;
  }
  function f(M, t) {
    var i = {},
      Z = UTEX.M.H,
      c = Z(M, t);
    t += 4;
    if (c != 32 && c != 0) throw c;
    i.Z = Z(M, t);
    t += 4;
    i.k = UTEX.M.B(M, t, 4);
    t += 4;
    i.g = Z(M, t);
    t += 4;
    i.a = Z(M, t);
    t += 4;
    i.d = Z(M, t);
    t += 4;
    i.l = Z(M, t);
    t += 4;
    i.T = Z(M, t);
    t += 4;
    return i;
  }
  function K(M, t, i, Z) {
    var c = UTEX.M.s,
      A = t != "NON" || i ? v.A : v.Y | v.z;
    c(M, Z, 32);
    Z += 4;
    c(M, Z, A);
    Z += 4;
    var o = i
      ? "DX10"
      : { NON: "    ", BC1: "DXT1", BC3: "DXT5", BC7: "DX10" }[t];
    UTEX.M.h(M, Z, o);
    Z += 4;
    if (t == "NON") {
      c(M, Z, 32);
      for (var g = 0; g < 4; g++) c(M, Z + 4 + g * 4, 255 << (g * 8));
    }
    Z += 5 * 4;
  }
  function a3(M, t) {
    var i = {},
      Z = UTEX.M.H;
    i.I = Z(M, t);
    t += 4;
    i.ab = Z(M, t);
    t += 4;
    i.aa = Z(M, t);
    t += 4;
    i.a3 = Z(M, t);
    t += 4;
    i.ad = Z(M, t);
    t += 4;
    return i;
  }
  function ah(M, t, i, Z) {
    var c = UTEX.M.s,
      A = { NON: 28, BC1: 71, BC3: 77, BC7: 98 }[t];
    if (i) A++;
    c(M, Z, A);
    Z += 4;
    c(M, Z, 3);
    Z += 4;
    c(M, Z, 0);
    Z += 4;
    c(M, Z, 1);
    Z += 4;
    c(M, Z, 0);
    Z += 4;
  }
  return { encode: n, decode: aw };
})();
UTEX.VTF = (function () {
  var v = {};
  function aw(j) {
    var I = new Uint8Array(j),
      f = 0,
      K = {};
    f = n(I, f, K);
    var a3 = K.f,
      ah = K.R;
    if (a3 * ah != 0) {
      var M = new Uint8Array(a3 * ah * 4);
      f = UTEX.$(I, f, M, a3, ah);
    }
    var t = K.Q,
      i = K.a5,
      Z = [];
    for (var c = 0; c < i; c++) {
      var A = K.width >>> (i - 1 - c),
        o = K.height >>> (i - 1 - c);
      for (var g = 0; g < K.frames; g++) {
        var M = new Uint8Array(A * o * 4);
        if (t == 0 || t == 12) {
          var U = f,
            a2 = t == 0 ? [0, 1, 2, 3] : [2, 1, 0, 3],
            Q = a2[0],
            $ = a2[1],
            ac = a2[2],
            s = a2[3];
          for (var D = 0; D < M.length; D += 4) {
            M[D + Q] = I[U++];
            M[D + $] = I[U++];
            M[D + ac] = I[U++];
            M[D + s] = I[U++];
          }
          f += A * o * 4;
        } else if (t == 2) {
          for (var D = 0; D < M.length; D += 4) {
            M[D] = I[f++];
            M[D + 1] = I[f++];
            M[D + 2] = I[f++];
            M[D + 3] = 255;
          }
        } else if (t == 3) {
          for (var D = 0; D < M.length; D += 4) {
            M[D + 2] = I[f++];
            M[D + 1] = I[f++];
            M[D] = I[f++];
            M[D + 3] = 255;
          }
        } else if (t == 13) f = UTEX.$(I, f, M, A, o);
        else if (t == 14) f = UTEX.q(I, f, M, A, o);
        else if (t == 15) f = UTEX.j(I, f, M, A, o);
        else throw t;
        Z.push({ width: A, height: o, image: M.buffer });
      }
    }
    return Z;
  }
  function n(j, I, f) {
    var K = UTEX.M.H,
      a3 = UTEX.M.c,
      ah = UTEX.M.B(j, I, 4);
    I += 4;
    var M = K(j, I);
    I += 4;
    var t = K(j, I);
    I += 4;
    var i = K(j, I);
    I += 4;
    f.width = a3(j, I);
    I += 2;
    f.height = a3(j, I);
    I += 2;
    f.Z = K(j, I);
    I += 4;
    f.frames = a3(j, I);
    I += 2;
    f.a1 = a3(j, I);
    I += 2;
    I += 4;
    I += 12;
    I += 4;
    I += 4;
    f.Q = K(j, I);
    I += 4;
    f.a5 = j[I++];
    f.a0 = K(j, I);
    I += 4;
    f.f = j[I++];
    f.R = j[I++];
    if (t >= 2) {
      f.depth = a3(j, I);
      I += 2;
      if (t >= 3) {
        I += 3;
        f.ac = K(j, I);
        I += 4;
      }
    }
    return i;
  }
  return { decode: aw };
})();

(function () {
  var t = {};
  if (typeof module == "object") {
    module.exports = t;
  } else {
    self.UTIF = t;
  }
  function aH() {
    if (typeof process == "undefined" || process.env.NODE_ENV == "development")
      console.log.apply(console, arguments);
  }
  (function (t) {
    (function () {
      "use strict";
      var v = (function p() {
          function v(K) {
            this.message = "JPEG error: " + K;
          }
          v.prototype = new Error();
          v.prototype.name = "JpegError";
          v.constructor = v;
          return v;
        })(),
        k = (function Y() {
          var K = new Uint8Array([
              0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19,
              26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49,
              56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52,
              45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63,
            ]),
            u = 4017,
            J = 799,
            $ = 3406,
            E = 2276,
            P = 1567,
            s = 3784,
            Q = 5793,
            w = 2896;
          function k(_) {
            if (_ == null) _ = {};
            if (_.w == null) _.w = -1;
            this.V = _.n;
            this.N = _.w;
          }
          function C(_, q) {
            var l = 0,
              h = [],
              g,
              I,
              m = 16,
              D;
            while (m > 0 && !_[m - 1]) {
              m--;
            }
            h.push({ children: [], index: 0 });
            var B = h[0];
            for (g = 0; g < m; g++) {
              for (I = 0; I < _[g]; I++) {
                B = h.pop();
                B.children[B.index] = q[l];
                while (B.index > 0) {
                  B = h.pop();
                }
                B.index++;
                h.push(B);
                while (h.length <= g) {
                  h.push((D = { children: [], index: 0 }));
                  B.children[B.index] = D.children;
                  B = D;
                }
                l++;
              }
              if (g + 1 < m) {
                h.push((D = { children: [], index: 0 }));
                B.children[B.index] = D.children;
                B = D;
              }
            }
            return h[0].children;
          }
          function c(_, q, l) {
            return 64 * ((_.P + 1) * q + l);
          }
          function n(_, q, l, h, g, I, m, D, B, e) {
            if (e == null) e = !1;
            var av = l.m,
              G = l.Z,
              X = q,
              aT = 0,
              d = 0,
              i = 0,
              b = 0,
              aK,
              a = 0,
              W,
              j,
              r,
              H,
              ai,
              b4,
              a_ = 0,
              aA,
              b3,
              aE,
              aI;
            function au() {
              if (d > 0) {
                d--;
                return (aT >> d) & 1;
              }
              aT = _[q++];
              if (aT === 255) {
                var aD = _[q++];
                if (aD) {
                  if (aD === 220 && e) {
                    q += 2;
                    var ab = V(_, q);
                    q += 2;
                    if (ab > 0 && ab !== l.s) {
                      throw new DNLMarkerError(
                        "Found DNL marker (0xFFDC) while parsing scan data",
                        ab
                      );
                    }
                  } else if (aD === 217) {
                    if (e) {
                      var a$ = a * 8;
                      if (a$ > 0 && a$ < l.s / 10) {
                        throw new DNLMarkerError(
                          "Found EOI marker (0xFFD9) while parsing scan data, " +
                            "possibly caused by incorrect `scanLines` parameter",
                          a$
                        );
                      }
                    }
                    throw new EOIMarkerError(
                      "Found EOI marker (0xFFD9) while parsing scan data"
                    );
                  }
                  throw new v("unexpected marker");
                }
              }
              d = 7;
              return aT >>> 7;
            }
            function b2(aD) {
              var ab = aD;
              while (!0) {
                ab = ab[au()];
                switch (typeof ab) {
                  case "number":
                    return ab;
                  case "object":
                    continue;
                }
                throw new v("invalid huffman sequence");
              }
            }
            function aq(aD) {
              var ai = 0;
              while (aD > 0) {
                ai = (ai << 1) | au();
                aD--;
              }
              return ai;
            }
            function ad(aD) {
              if (aD === 1) {
                return au() === 1 ? 1 : -1;
              }
              var ai = aq(aD);
              if (ai >= 1 << (aD - 1)) {
                return ai;
              }
              return ai + (-1 << aD) + 1;
            }
            function aB(W, aD) {
              var ab = b2(W.J),
                a$ = ab === 0 ? 0 : ad(ab),
                H = 1;
              W.D[aD] = W.Q += a$;
              while (H < 64) {
                var as = b2(W.i),
                  a2 = as & 15,
                  bc = as >> 4;
                if (a2 === 0) {
                  if (bc < 15) {
                    break;
                  }
                  H += 16;
                  continue;
                }
                H += bc;
                var b1 = K[H];
                W.D[aD + b1] = ad(a2);
                H++;
              }
            }
            function aR(W, aD) {
              var ab = b2(W.J),
                a$ = ab === 0 ? 0 : ad(ab) << B;
              W.D[aD] = W.Q += a$;
            }
            function aJ(W, aD) {
              W.D[aD] |= au() << B;
            }
            function a9(W, aD) {
              if (i > 0) {
                i--;
                return;
              }
              var H = I,
                ab = m;
              while (H <= ab) {
                var a$ = b2(W.i),
                  as = a$ & 15,
                  a2 = a$ >> 4;
                if (as === 0) {
                  if (a2 < 15) {
                    i = aq(a2) + (1 << a2) - 1;
                    break;
                  }
                  H += 16;
                  continue;
                }
                H += a2;
                var bc = K[H];
                W.D[aD + bc] = ad(as) * (1 << B);
                H++;
              }
            }
            function aL(W, aD) {
              var H = I,
                ab = m,
                a$ = 0,
                as,
                a2;
              while (H <= ab) {
                var bc = aD + K[H],
                  b1 = W.D[bc] < 0 ? -1 : 1;
                switch (b) {
                  case 0:
                    a2 = b2(W.i);
                    as = a2 & 15;
                    a$ = a2 >> 4;
                    if (as === 0) {
                      if (a$ < 15) {
                        i = aq(a$) + (1 << a$);
                        b = 4;
                      } else {
                        a$ = 16;
                        b = 1;
                      }
                    } else {
                      if (as !== 1) {
                        throw new v("invalid ACn encoding");
                      }
                      aK = ad(as);
                      b = a$ ? 2 : 3;
                    }
                    continue;
                  case 1:
                  case 2:
                    if (W.D[bc]) {
                      W.D[bc] += b1 * (au() << B);
                    } else {
                      a$--;
                      if (a$ === 0) {
                        b = b === 2 ? 3 : 0;
                      }
                    }
                    break;
                  case 3:
                    if (W.D[bc]) {
                      W.D[bc] += b1 * (au() << B);
                    } else {
                      W.D[bc] = aK << B;
                      b = 0;
                    }
                    break;
                  case 4:
                    if (W.D[bc]) {
                      W.D[bc] += b1 * (au() << B);
                    }
                    break;
                }
                H++;
              }
              if (b === 4) {
                i--;
                if (i === 0) {
                  b = 0;
                }
              }
            }
            function aj(W, aD, a_, ab, a$) {
              var as = (a_ / av) | 0,
                a2 = a_ % av;
              a = as * W.A + ab;
              var bc = a2 * W.h + a$,
                b1 = c(W, a, bc);
              aD(W, b1);
            }
            function ax(W, aD, a_) {
              a = (a_ / W.P) | 0;
              var ab = a_ % W.P,
                a$ = c(W, a, ab);
              aD(W, a$);
            }
            var an = h.length;
            if (G) {
              if (I === 0) {
                b4 = D === 0 ? aR : aJ;
              } else {
                b4 = D === 0 ? a9 : aL;
              }
            } else {
              b4 = aB;
            }
            if (an === 1) {
              b3 = h[0].P * h[0].c;
            } else {
              b3 = av * l.R;
            }
            while (a_ <= b3) {
              var a3 = g ? Math.min(b3 - a_, g) : b3;
              if (a3 > 0) {
                for (j = 0; j < an; j++) {
                  h[j].Q = 0;
                }
                i = 0;
                if (an === 1) {
                  W = h[0];
                  for (ai = 0; ai < a3; ai++) {
                    ax(W, b4, a_);
                    a_++;
                  }
                } else {
                  for (ai = 0; ai < a3; ai++) {
                    for (j = 0; j < an; j++) {
                      W = h[j];
                      aE = W.h;
                      aI = W.A;
                      for (r = 0; r < aI; r++) {
                        for (H = 0; H < aE; H++) {
                          aj(W, b4, a_, r, H);
                        }
                      }
                    }
                    a_++;
                  }
                }
              }
              d = 0;
              aA = T(_, q);
              if (!aA) {
                break;
              }
              if (aA.u) {
                var b8 = a3 > 0 ? "unexpected" : "excessive";
                q = aA.offset;
              }
              if (aA.M >= 65488 && aA.M <= 65495) {
                q += 2;
              } else {
                break;
              }
            }
            return q - X;
          }
          function o(_, q, l) {
            var h = _.$,
              g = _.D,
              I,
              m,
              D,
              B,
              e,
              av,
              G,
              X,
              aT,
              d,
              i,
              b,
              aK,
              a,
              W,
              aP,
              j;
            if (!h) {
              throw new v("missing required Quantization Table.");
            }
            for (var r = 0; r < 64; r += 8) {
              aT = g[q + r];
              d = g[q + r + 1];
              i = g[q + r + 2];
              b = g[q + r + 3];
              aK = g[q + r + 4];
              a = g[q + r + 5];
              W = g[q + r + 6];
              aP = g[q + r + 7];
              aT *= h[r];
              if ((d | i | b | aK | a | W | aP) === 0) {
                j = (Q * aT + 512) >> 10;
                l[r] = j;
                l[r + 1] = j;
                l[r + 2] = j;
                l[r + 3] = j;
                l[r + 4] = j;
                l[r + 5] = j;
                l[r + 6] = j;
                l[r + 7] = j;
                continue;
              }
              d *= h[r + 1];
              i *= h[r + 2];
              b *= h[r + 3];
              aK *= h[r + 4];
              a *= h[r + 5];
              W *= h[r + 6];
              aP *= h[r + 7];
              I = (Q * aT + 128) >> 8;
              m = (Q * aK + 128) >> 8;
              D = i;
              B = W;
              e = (w * (d - aP) + 128) >> 8;
              X = (w * (d + aP) + 128) >> 8;
              av = b << 4;
              G = a << 4;
              I = (I + m + 1) >> 1;
              m = I - m;
              j = (D * s + B * P + 128) >> 8;
              D = (D * P - B * s + 128) >> 8;
              B = j;
              e = (e + G + 1) >> 1;
              G = e - G;
              X = (X + av + 1) >> 1;
              av = X - av;
              I = (I + B + 1) >> 1;
              B = I - B;
              m = (m + D + 1) >> 1;
              D = m - D;
              j = (e * E + X * $ + 2048) >> 12;
              e = (e * $ - X * E + 2048) >> 12;
              X = j;
              j = (av * J + G * u + 2048) >> 12;
              av = (av * u - G * J + 2048) >> 12;
              G = j;
              l[r] = I + X;
              l[r + 7] = I - X;
              l[r + 1] = m + G;
              l[r + 6] = m - G;
              l[r + 2] = D + av;
              l[r + 5] = D - av;
              l[r + 3] = B + e;
              l[r + 4] = B - e;
            }
            for (var H = 0; H < 8; ++H) {
              aT = l[H];
              d = l[H + 8];
              i = l[H + 16];
              b = l[H + 24];
              aK = l[H + 32];
              a = l[H + 40];
              W = l[H + 48];
              aP = l[H + 56];
              if ((d | i | b | aK | a | W | aP) === 0) {
                j = (Q * aT + 8192) >> 14;
                if (j < -2040) {
                  j = 0;
                } else if (j >= 2024) {
                  j = 255;
                } else {
                  j = (j + 2056) >> 4;
                }
                g[q + H] = j;
                g[q + H + 8] = j;
                g[q + H + 16] = j;
                g[q + H + 24] = j;
                g[q + H + 32] = j;
                g[q + H + 40] = j;
                g[q + H + 48] = j;
                g[q + H + 56] = j;
                continue;
              }
              I = (Q * aT + 2048) >> 12;
              m = (Q * aK + 2048) >> 12;
              D = i;
              B = W;
              e = (w * (d - aP) + 2048) >> 12;
              X = (w * (d + aP) + 2048) >> 12;
              av = b;
              G = a;
              I = ((I + m + 1) >> 1) + 4112;
              m = I - m;
              j = (D * s + B * P + 2048) >> 12;
              D = (D * P - B * s + 2048) >> 12;
              B = j;
              e = (e + G + 1) >> 1;
              G = e - G;
              X = (X + av + 1) >> 1;
              av = X - av;
              I = (I + B + 1) >> 1;
              B = I - B;
              m = (m + D + 1) >> 1;
              D = m - D;
              j = (e * E + X * $ + 2048) >> 12;
              e = (e * $ - X * E + 2048) >> 12;
              X = j;
              j = (av * J + G * u + 2048) >> 12;
              av = (av * u - G * J + 2048) >> 12;
              G = j;
              aT = I + X;
              aP = I - X;
              d = m + G;
              W = m - G;
              i = D + av;
              a = D - av;
              b = B + e;
              aK = B - e;
              if (aT < 16) {
                aT = 0;
              } else if (aT >= 4080) {
                aT = 255;
              } else {
                aT >>= 4;
              }
              if (d < 16) {
                d = 0;
              } else if (d >= 4080) {
                d = 255;
              } else {
                d >>= 4;
              }
              if (i < 16) {
                i = 0;
              } else if (i >= 4080) {
                i = 255;
              } else {
                i >>= 4;
              }
              if (b < 16) {
                b = 0;
              } else if (b >= 4080) {
                b = 255;
              } else {
                b >>= 4;
              }
              if (aK < 16) {
                aK = 0;
              } else if (aK >= 4080) {
                aK = 255;
              } else {
                aK >>= 4;
              }
              if (a < 16) {
                a = 0;
              } else if (a >= 4080) {
                a = 255;
              } else {
                a >>= 4;
              }
              if (W < 16) {
                W = 0;
              } else if (W >= 4080) {
                W = 255;
              } else {
                W >>= 4;
              }
              if (aP < 16) {
                aP = 0;
              } else if (aP >= 4080) {
                aP = 255;
              } else {
                aP >>= 4;
              }
              g[q + H] = aT;
              g[q + H + 8] = d;
              g[q + H + 16] = i;
              g[q + H + 24] = b;
              g[q + H + 32] = aK;
              g[q + H + 40] = a;
              g[q + H + 48] = W;
              g[q + H + 56] = aP;
            }
          }
          function M(_, q) {
            var l = q.P,
              h = q.c,
              g = new Int16Array(64);
            for (var I = 0; I < h; I++) {
              for (var m = 0; m < l; m++) {
                var D = c(q, I, m);
                o(q, D, g);
              }
            }
            return q.D;
          }
          function T(_, q, l) {
            if (l == null) l = q;
            var h = _.length - 1,
              g = l < q ? l : q;
            if (q >= h) {
              return null;
            }
            var I = V(_, q);
            if (I >= 65472 && I <= 65534) {
              return { u: null, M: I, offset: q };
            }
            var m = V(_, g);
            while (!(m >= 65472 && m <= 65534)) {
              if (++g >= h) {
                return null;
              }
              m = V(_, g);
            }
            return { u: I.toString(16), M: m, offset: g };
          }
          k.prototype = {
            parse(_, q) {
              if (q == null) q = {};
              var l = q.F,
                h = 0,
                g = null,
                I = null,
                m,
                D,
                B = 0;
              function e() {
                var bc = V(_, h);
                h += 2;
                var b1 = h + bc - 2,
                  d = T(_, b1, h);
                if (d && d.u) {
                  b1 = d.offset;
                }
                var aU = _.subarray(h, b1);
                h += aU.length;
                return aU;
              }
              function av(m) {
                var bc = Math.ceil(m.o / 8 / m.X),
                  b1 = Math.ceil(m.s / 8 / m.B);
                for (var i = 0; i < m.W.length; i++) {
                  a9 = m.W[i];
                  var aU = Math.ceil((Math.ceil(m.o / 8) * a9.h) / m.X),
                    aC = Math.ceil((Math.ceil(m.s / 8) * a9.A) / m.B),
                    ay = bc * a9.h,
                    af = b1 * a9.A,
                    aQ = 64 * af * (ay + 1);
                  a9.D = new Int16Array(aQ);
                  a9.P = aU;
                  a9.c = aC;
                }
                m.m = bc;
                m.R = b1;
              }
              var G = [],
                X = [],
                aT = [],
                d = V(_, h);
              h += 2;
              if (d !== 65496) {
                throw new v("SOI not found");
              }
              d = V(_, h);
              h += 2;
              markerLoop: while (d !== 65497) {
                var i, b, aK;
                switch (d) {
                  case 65504:
                  case 65505:
                  case 65506:
                  case 65507:
                  case 65508:
                  case 65509:
                  case 65510:
                  case 65511:
                  case 65512:
                  case 65513:
                  case 65514:
                  case 65515:
                  case 65516:
                  case 65517:
                  case 65518:
                  case 65519:
                  case 65534:
                    var a = e();
                    if (d === 65504) {
                      if (
                        a[0] === 74 &&
                        a[1] === 70 &&
                        a[2] === 73 &&
                        a[3] === 70 &&
                        a[4] === 0
                      ) {
                        g = {
                          version: { d: a[5], T: a[6] },
                          K: a[7],
                          j: (a[8] << 8) | a[9],
                          H: (a[10] << 8) | a[11],
                          S: a[12],
                          I: a[13],
                          C: a.subarray(14, 14 + 3 * a[12] * a[13]),
                        };
                      }
                    }
                    if (d === 65518) {
                      if (
                        a[0] === 65 &&
                        a[1] === 100 &&
                        a[2] === 111 &&
                        a[3] === 98 &&
                        a[4] === 101
                      ) {
                        I = {
                          version: (a[5] << 8) | a[6],
                          k: (a[7] << 8) | a[8],
                          q: (a[9] << 8) | a[10],
                          a: a[11],
                        };
                      }
                    }
                    break;
                  case 65499:
                    var W = V(_, h),
                      aP;
                    h += 2;
                    var j = W + h - 2;
                    while (h < j) {
                      var r = _[h++],
                        H = new Uint16Array(64);
                      if (r >> 4 === 0) {
                        for (b = 0; b < 64; b++) {
                          aP = K[b];
                          H[aP] = _[h++];
                        }
                      } else if (r >> 4 === 1) {
                        for (b = 0; b < 64; b++) {
                          aP = K[b];
                          H[aP] = V(_, h);
                          h += 2;
                        }
                      } else {
                        throw new v("DQT - invalid table spec");
                      }
                      G[r & 15] = H;
                    }
                    break;
                  case 65472:
                  case 65473:
                  case 65474:
                    if (m) {
                      throw new v("Only single frame JPEGs supported");
                    }
                    h += 2;
                    m = {};
                    m.G = d === 65473;
                    m.Z = d === 65474;
                    m.precision = _[h++];
                    var ai = V(_, h),
                      b4,
                      a_ = 0,
                      aA = 0;
                    h += 2;
                    m.s = l || ai;
                    m.o = V(_, h);
                    h += 2;
                    m.W = [];
                    m._ = {};
                    var b3 = _[h++];
                    for (i = 0; i < b3; i++) {
                      b4 = _[h];
                      var aE = _[h + 1] >> 4,
                        aI = _[h + 1] & 15;
                      if (a_ < aE) {
                        a_ = aE;
                      }
                      if (aA < aI) {
                        aA = aI;
                      }
                      var au = _[h + 2];
                      aK = m.W.push({ h: aE, A: aI, L: au, $: null });
                      m._[b4] = aK - 1;
                      h += 3;
                    }
                    m.X = a_;
                    m.B = aA;
                    av(m);
                    break;
                  case 65476:
                    var b2 = V(_, h);
                    h += 2;
                    for (i = 2; i < b2; ) {
                      var aq = _[h++],
                        ad = new Uint8Array(16),
                        aB = 0;
                      for (b = 0; b < 16; b++, h++) {
                        aB += ad[b] = _[h];
                      }
                      var aR = new Uint8Array(aB);
                      for (b = 0; b < aB; b++, h++) {
                        aR[b] = _[h];
                      }
                      i += 17 + aB;
                      (aq >> 4 === 0 ? aT : X)[aq & 15] = C(ad, aR);
                    }
                    break;
                  case 65501:
                    h += 2;
                    D = V(_, h);
                    h += 2;
                    break;
                  case 65498:
                    var aJ = ++B === 1 && !l,
                      a9;
                    h += 2;
                    var aL = _[h++],
                      aj = [];
                    for (i = 0; i < aL; i++) {
                      var ax = _[h++],
                        an = m._[ax];
                      a9 = m.W[an];
                      a9.index = ax;
                      var a3 = _[h++];
                      a9.J = aT[a3 >> 4];
                      a9.i = X[a3 & 15];
                      aj.push(a9);
                    }
                    var b8 = _[h++],
                      aD = _[h++],
                      ab = _[h++];
                    try {
                      var a$ = n(_, h, m, aj, D, b8, aD, ab >> 4, ab & 15, aJ);
                      h += a$;
                    } catch (ex) {
                      if (ex instanceof DNLMarkerError) {
                        return this.parse(_, { F: ex.s });
                      } else if (ex instanceof EOIMarkerError) {
                        break markerLoop;
                      }
                      throw ex;
                    }
                    break;
                  case 65500:
                    h += 4;
                    break;
                  case 65535:
                    if (_[h] !== 255) {
                      h--;
                    }
                    break;
                  default:
                    var as = T(_, h - 2, h - 3);
                    if (as && as.u) {
                      h = as.offset;
                      break;
                    }
                    if (h >= _.length - 1) {
                      break markerLoop;
                    }
                    throw new v(
                      "JpegImage.parse - unknown marker: " + d.toString(16)
                    );
                }
                d = V(_, h);
                h += 2;
              }
              this.width = m.o;
              this.height = m.s;
              this.g = g;
              this.b = I;
              this.W = [];
              for (i = 0; i < m.W.length; i++) {
                a9 = m.W[i];
                var a2 = G[a9.L];
                if (a2) {
                  a9.$ = a2;
                }
                this.W.push({
                  index: a9.index,
                  e: M(m, a9),
                  l: a9.h / m.X,
                  t: a9.A / m.B,
                  P: a9.P,
                  c: a9.c,
                });
              }
              this.p = this.W.length;
              return undefined;
            },
            Y(_, q, l) {
              if (l == null) l = !1;
              var h = this.width / _,
                g = this.height / q,
                I,
                m,
                D,
                B,
                e,
                av,
                G,
                X,
                aT,
                d,
                i = 0,
                b,
                aK = this.W.length,
                a = _ * q * aK,
                W = new Uint8ClampedArray(a),
                aP = new Uint32Array(_),
                j = 4294967288,
                r;
              for (G = 0; G < aK; G++) {
                I = this.W[G];
                m = I.l * h;
                D = I.t * g;
                i = G;
                b = I.e;
                B = (I.P + 1) << 3;
                if (m !== r) {
                  for (e = 0; e < _; e++) {
                    X = 0 | (e * m);
                    aP[e] = ((X & j) << 3) | (X & 7);
                  }
                  r = m;
                }
                for (av = 0; av < q; av++) {
                  X = 0 | (av * D);
                  d = (B * (X & j)) | ((X & 7) << 3);
                  for (e = 0; e < _; e++) {
                    W[i] = b[d + aP[e]];
                    i += aK;
                  }
                }
              }
              var H = this.V;
              if (!l && aK === 4 && !H) {
                H = new Int32Array([
                  -256, 255, -256, 255, -256, 255, -256, 255,
                ]);
              }
              if (H) {
                for (G = 0; G < a; ) {
                  for (X = 0, aT = 0; X < aK; X++, G++, aT += 2) {
                    W[G] = ((W[G] * H[aT]) >> 8) + H[aT + 1];
                  }
                }
              }
              return W;
            },
            get f() {
              if (this.b) {
                return !!this.b.a;
              }
              if (this.p === 3) {
                if (this.N === 0) {
                  return !1;
                } else if (
                  this.W[0].index === 82 &&
                  this.W[1].index === 71 &&
                  this.W[2].index === 66
                ) {
                  return !1;
                }
                return !0;
              }
              if (this.N === 1) {
                return !0;
              }
              return !1;
            },
            z: function Z(_) {
              var q, l, h;
              for (var g = 0, I = _.length; g < I; g += 3) {
                q = _[g];
                l = _[g + 1];
                h = _[g + 2];
                _[g] = q - 179.456 + 1.402 * h;
                _[g + 1] = q + 135.459 - 0.344 * l - 0.714 * h;
                _[g + 2] = q - 226.816 + 1.772 * l;
              }
              return _;
            },
            O: function S(_) {
              var q,
                l,
                h,
                g,
                I = 0;
              for (var m = 0, D = _.length; m < D; m += 4) {
                q = _[m];
                l = _[m + 1];
                h = _[m + 2];
                g = _[m + 3];
                _[I++] =
                  -122.67195406894 +
                  l *
                    (-660635669420364e-19 * l +
                      0.000437130475926232 * h -
                      54080610064599e-18 * q +
                      0.00048449797120281 * g -
                      0.154362151871126) +
                  h *
                    (-0.000957964378445773 * h +
                      0.000817076911346625 * q -
                      0.00477271405408747 * g +
                      1.53380253221734) +
                  q *
                    (0.000961250184130688 * q -
                      0.00266257332283933 * g +
                      0.48357088451265) +
                  g * (-0.000336197177618394 * g + 0.484791561490776);
                _[I++] =
                  107.268039397724 +
                  l *
                    (219927104525741e-19 * l -
                      0.000640992018297945 * h +
                      0.000659397001245577 * q +
                      0.000426105652938837 * g -
                      0.176491792462875) +
                  h *
                    (-0.000778269941513683 * h +
                      0.00130872261408275 * q +
                      0.000770482631801132 * g -
                      0.151051492775562) +
                  q *
                    (0.00126935368114843 * q -
                      0.00265090189010898 * g +
                      0.25802910206845) +
                  g * (-0.000318913117588328 * g - 0.213742400323665);
                _[I++] =
                  -20.810012546947 +
                  l *
                    (-0.000570115196973677 * l -
                      263409051004589e-19 * h +
                      0.0020741088115012 * q -
                      0.00288260236853442 * g +
                      0.814272968359295) +
                  h *
                    (-153496057440975e-19 * h -
                      0.000132689043961446 * q +
                      0.000560833691242812 * g -
                      0.195152027534049) +
                  q *
                    (0.00174418132927582 * q -
                      0.00255243321439347 * g +
                      0.116935020465145) +
                  g * (-0.000343531996510555 * g + 0.24165260232407);
              }
              return _.subarray(0, I);
            },
            r: function L(_) {
              var q, l, h;
              for (var g = 0, I = _.length; g < I; g += 4) {
                q = _[g];
                l = _[g + 1];
                h = _[g + 2];
                _[g] = 434.456 - q - 1.402 * h;
                _[g + 1] = 119.541 - q + 0.344 * l + 0.714 * h;
                _[g + 2] = 481.816 - q - 1.772 * l;
              }
              return _;
            },
            U: function x(_) {
              var q,
                l,
                h,
                g,
                I = 0;
              for (var m = 0, D = _.length; m < D; m += 4) {
                q = _[m];
                l = _[m + 1];
                h = _[m + 2];
                g = _[m + 3];
                _[I++] =
                  255 +
                  q *
                    (-6747147073602441e-20 * q +
                      0.0008379262121013727 * l +
                      0.0002894718188643294 * h +
                      0.003264231057537806 * g -
                      1.1185611867203937) +
                  l *
                    (26374107616089404e-21 * l -
                      8626949158638572e-20 * h -
                      0.0002748769067499491 * g -
                      0.02155688794978967) +
                  h *
                    (-3878099212869363e-20 * h -
                      0.0003267808279485286 * g +
                      0.0686742238595345) -
                  g * (0.0003361971776183937 * g + 0.7430659151342254);
                _[I++] =
                  255 +
                  q *
                    (0.00013596372813588848 * q +
                      0.000924537132573585 * l +
                      0.00010567359618683593 * h +
                      0.0004791864687436512 * g -
                      0.3109689587515875) +
                  l *
                    (-0.00023545346108370344 * l +
                      0.0002702845253534714 * h +
                      0.0020200308977307156 * g -
                      0.7488052167015494) +
                  h *
                    (6834815998235662e-20 * h +
                      0.00015168452363460973 * g -
                      0.09751927774728933) -
                  g * (0.0003189131175883281 * g + 0.7364883807733168);
                _[I++] =
                  255 +
                  q *
                    (13598650411385308e-21 * q +
                      0.00012423956175490851 * l +
                      0.0004751985097583589 * h -
                      36729317476630424e-22 * g -
                      0.05562186980264034) +
                  l *
                    (0.00016141380598724676 * l +
                      0.0009692239130725186 * h +
                      0.0007782692450036253 * g -
                      0.44015232367526463) +
                  h *
                    (5.068882914068769e-7 * h +
                      0.0017778369011375071 * g -
                      0.7591454649749609) -
                  g * (0.0003435319965105553 * g + 0.7063770186160144);
              }
              return _.subarray(0, I);
            },
            getData: function (_) {
              var q = _.width,
                l = _.height,
                h = _.forceRGB,
                g = _.isSourcePDF;
              if (this.p > 4) {
                throw new v("Unsupported color mode");
              }
              var I = this.Y(q, l, g);
              if (this.p === 1 && h) {
                var m = I.length,
                  D = new Uint8ClampedArray(m * 3),
                  B = 0;
                for (var e = 0; e < m; e++) {
                  var av = I[e];
                  D[B++] = av;
                  D[B++] = av;
                  D[B++] = av;
                }
                return D;
              } else if (this.p === 3 && this.f) {
                return this.z(I);
              } else if (this.p === 4) {
                if (this.f) {
                  if (h) {
                    return this.O(I);
                  }
                  return this.r(I);
                } else if (h) {
                  return this.U(I);
                }
              }
              return I;
            },
          };
          return k;
        })();
      function f(K, u) {
        return (K[u] << 24) >> 24;
      }
      function V(K, u) {
        return (K[u] << 8) | K[u + 1];
      }
      function U(K, u) {
        return (
          ((K[u] << 24) | (K[u + 1] << 16) | (K[u + 2] << 8) | K[u + 3]) >>> 0
        );
      }
      t.JpegDecoder = k;
    })();
    t.encodeImage = function (v, k, p, Y) {
      var f = Math.round(v.byteLength / (k * p * 4)),
        U = f * 8,
        K = new Uint8Array(v),
        E = 1e6,
        F = 0;
      if (U == 16) {
        K = K.slice(0);
        for (var u = 0; u < K.length; u += 2) {
          var J = K[u];
          K[u] = K[u + 1];
          K[u + 1] = J;
        }
      }
      var $ = window && window.pako ? 8 : 1,
        P = Math.min(p, 2 * ((E / (k * 4 * f)) >>> 1)),
        N = [],
        s = [],
        Q = [],
        w = 1e3 + (Y ? 1e3 : 0) + Math.ceil(p / P) * 8;
      for (var C = 0; C < p; C += P) {
        var n = C * k * 4 * f,
          M = Math.min(K.length, (C + P) * k * 4 * f) - n,
          T = new Uint8Array(K.buffer, n, M);
        if ($ == 8) T = pako.deflate(T);
        N.push(T);
        s.push(w + F);
        Q.push(T.length);
        F += T.length;
      }
      var Z = {
        t256: [k],
        t257: [p],
        t258: [U, U, U, U],
        t259: [$],
        t262: [2],
        t273: s,
        t277: [4],
        t278: [P],
        t279: Q,
        t282: [[72, 1]],
        t283: [[72, 1]],
        t284: [1],
        t286: [[0, 1]],
        t287: [[0, 1]],
        t296: [1],
        t305: ["Photopea (UTIF.js)"],
        t338: [1],
      };
      if (Y) for (var u in Y) Z[u] = Y[u];
      var S = new Uint8Array(t.encode([Z])),
        L = new Uint8Array(w + F);
      L.set(S, 0);
      for (var u = 0; u < N.length; u++) L.set(N[u], s[u]);
      return L.buffer;
    };
    t.encode = function (v) {
      var k = !1,
        p = new Uint8Array(2e4),
        Y = 4,
        f = k ? t._binLE : t._binBE,
        V = 8;
      p[0] = p[1] = k ? 73 : 77;
      f.writeUshort(p, 2, 42);
      f.writeUint(p, Y, V);
      Y += 4;
      for (var U = 0; U < v.length; U++) {
        var K = t._writeIFD(f, t._types.basic, p, V, v[U]);
        V = K[1];
        if (U < v.length - 1) {
          if ((V & 3) != 0) V += 4 - (V & 3);
          f.writeUint(p, K[0], V);
        }
      }
      return p.slice(0, V).buffer;
    };
    t.decode = function (v, k) {
      if (k == null) k = { parseMN: !0, debug: !1 };
      var p = new Uint8Array(v),
        Y = 0,
        f = t._binBE.readASCII(p, Y, 2);
      Y += 2;
      var V = f == "II" ? t._binLE : t._binBE,
        U = V.readUshort(p, Y);
      Y += 2;
      var K = V.readUint(p, Y);
      Y += 4;
      var u = [];
      while (!0) {
        var J = V.readUshort(p, K),
          $ = V.readUshort(p, K + 4);
        if (J != 0)
          if ($ < 1 || 13 < $) {
            aH("error in TIFF");
            break;
          }
        t._readIFD(V, p, K, u, 0, k);
        K = V.readUint(p, K + 2 + J * 12);
        if (K == 0) break;
      }
      return u;
    };
    t.decodeImage = function (v, k, p) {
      if (k.data) return;
      var Y = new Uint8Array(v),
        f = t._binBE.readASCII(Y, 0, 2),
        Q = 0;
      if (k.t256 == null) return;
      k.isLE = f == "II";
      k.width = k.t256[0];
      k.height = k.t257[0];
      var V = k.t259 ? k.t259[0] : 1,
        U = k.t266 ? k.t266[0] : 1;
      if (V == 7 && k.t258 && k.t258.length != 3 && k.t258[0] == 8) {
        k.t258 = [8, 8, 8];
        k.t277 = [3];
      }
      var K = k.t258 ? k.t258[0] : 1,
        u = k.t277 ? k.t277[0] : 1,
        J = k.t284 ? k.t284[0] : 1;
      if (u != 3) J = 1;
      if (J == 2) aH("PlanarConfiguration 2 should not be used!");
      var $ = K * u;
      if (V == 1 && k.t279 != null && k.t278 && k.t262[0] == 32803) {
        $ = Math.round((k.t279[0] * 8) / (k.width * k.t278[0]));
      }
      if (k.t50885 && k.t50885[0] == 4) $ = k.t258[0] * 3;
      var E = Math.ceil((k.width * $) / 8) * 8,
        P = k.t273;
      if (P == null || k.t322) P = k.t324;
      var N = k.t279;
      if (V == 1 && P.length == 1) N = [k.height * (E >>> 3)];
      if (N == null || k.t322) N = k.t325;
      var s = new Uint8Array(k.height * (E >>> 3));
      if (k.t322 != null) {
        var F = k.t322[0],
          z = k.t323[0],
          w = Math.floor((k.width + F - 1) / F),
          C = Math.floor((k.height + z - 1) / z),
          c = new Uint8Array(Math.ceil((F * z * $) / 8) | 0);
        console.log("====", w, C);
        for (var n = 0; n < C; n++)
          for (var M = 0; M < w; M++) {
            var T = n * w + M;
            c.fill(0);
            t.decode._decompress(k, p, Y, P[T], N[T], V, c, 0, U, F, z);
            if (V == 6) s = c;
            else
              t._copyTile(
                c,
                Math.ceil((F * $) / 8) | 0,
                z,
                s,
                Math.ceil((k.width * $) / 8) | 0,
                k.height,
                Math.ceil((M * F * $) / 8) | 0,
                n * z
              );
          }
        Q = s.length * 8;
      } else {
        if (P == null) return;
        var Z = k.t278 ? k.t278[0] : k.height;
        Z = Math.min(Z, k.height);
        for (var T = 0; T < P.length; T++) {
          if (J == 1) {
            var S = Math.ceil(Q / 8) | 0;
            t.decode._decompress(k, p, Y, P[T], N[T], V, s, S, U, k.width, Z);
          } else {
            var L = new Uint8Array(k.width * Z);
            t.decode._decompress(k, p, Y, P[T], N[T], V, L, 0, U, k.width, Z);
            var x = Math.ceil(P.length / 3),
              S = (T % x) * k.width * Z * 3,
              _ = Math.floor(T / x);
            for (var q = 0; q < L.length; q++) s[S + q * 3 + _] = L[q];
          }
          Q += E * Z;
        }
        Q = Math.min(Q, s.length * 8);
      }
      k.data = new Uint8Array(s.buffer, 0, Math.ceil(Q / 8) | 0);
    };
    t.decode._decompress = function (v, k, p, Y, f, V, U, K, u, J, $) {
      if (v.t271 && v.t271[0] == "Panasonic") {
        if (v.t45 && (v.t45[0] == 6 || v.t45[0] == 8)) V = 34316;
        else if (V == 34828) V = 1;
      }
      if (!1) {
      } else if (V == 1) for (var E = 0; E < f; E++) U[K + E] = p[Y + E];
      else if (V == 2) t.decode._decodeG2(p, Y, f, U, K, J, u);
      else if (V == 3)
        t.decode._decodeG3(
          p,
          Y,
          f,
          U,
          K,
          J,
          u,
          v.t292 ? (v.t292[0] & 1) == 1 : !1
        );
      else if (V == 4) t.decode._decodeG4(p, Y, f, U, K, J, u);
      else if (V == 5) t.decode._decodeLZW(p, Y, f, U, K, 8);
      else if (V == 6) t.decode._decodeOldJPEG(v, p, Y, f, U, K);
      else if (V == 7 || V == 34892) t.decode._decodeNewJPEG(v, p, Y, f, U, K);
      else if (V == 8 || V == 32946) {
        var P = new Uint8Array(p.buffer, Y + 2, f - 6),
          N = t._inflateRaw(P);
        if (K + N.length <= U.length) U.set(N, K);
      } else if (V == 9) t.decode._decodeVC5(p, Y, f, U, K, v.t33422);
      else if (V == 32767) t.decode._decodeARW(v, p, Y, f, U, K);
      else if (V == 32773) t.decode._decodePackBits(p, Y, f, U, K);
      else if (V == 32809) t.decode._decodeThunder(p, Y, f, U, K);
      else if (V == 34316) t.decode._decodePanasonic(v, p, Y, f, U, K);
      else if (V == 34713) t.decode._decodeNikon(v, k, p, Y, f, U, K);
      else if (V == 34676) t.decode._decodeLogLuv32(v, p, Y, f, U, K);
      else aH("Unknown compression", V);
      var s = v.t284 ? v.t284[0] : 1,
        Q = v.t258 ? Math.min(32, v.t258[0]) : 1,
        F = s == 2 ? 1 : v.t277 ? v.t277[0] : 1,
        z = (Q * F) >>> 3,
        w = Math.ceil((Q * F * J) / 8);
      if (Q == 16 && !v.isLE && v.t33422 == null)
        for (var C = 0; C < $; C++) {
          var n = K + C * w;
          for (var M = 1; M < w; M += 2) {
            var T = U[n + M];
            U[n + M] = U[n + M - 1];
            U[n + M - 1] = T;
          }
        }
      if (v.t317 && v.t317[0] == 2) {
        for (var C = 0; C < $; C++) {
          var Z = K + C * w;
          if (Q == 16)
            for (var E = z; E < w; E += 2) {
              var S =
                ((U[Z + E + 1] << 8) | U[Z + E]) +
                ((U[Z + E - z + 1] << 8) | U[Z + E - z]);
              U[Z + E] = S & 255;
              U[Z + E + 1] = (S >>> 8) & 255;
            }
          else if (F == 3)
            for (var E = 3; E < w; E += 3) {
              U[Z + E] = (U[Z + E] + U[Z + E - 3]) & 255;
              U[Z + E + 1] = (U[Z + E + 1] + U[Z + E - 2]) & 255;
              U[Z + E + 2] = (U[Z + E + 2] + U[Z + E - 1]) & 255;
            }
          else
            for (var E = z; E < w; E++)
              U[Z + E] = (U[Z + E] + U[Z + E - z]) & 255;
        }
      }
    };
    t.decode._decodePanasonic = function (v, k, p, Y, f, V) {
      var U = k.buffer,
        K = v.t2[0],
        u = v.t3[0],
        J = v.t10[0],
        $ = v.t45[0],
        E = 0,
        P = 0,
        N = 0,
        s = 0,
        Q,
        F,
        z = $ == 6 ? new Uint32Array(18) : new Uint8Array(16),
        w,
        C,
        c,
        n = [0, 0],
        o = [0, 0],
        M,
        T = 0,
        Z,
        S,
        L,
        x,
        _ = new Uint8Array(16384),
        q = new Uint16Array(f.buffer);
      function l(aY) {
        if (N == 0) {
          var Q = new Uint8Array(U, p + P + 8184, 16384 - 8184),
            F = new Uint8Array(U, p + P, 8184);
          _.set(Q);
          _.set(F, Q.length);
          P += 16384;
        }
        if ($ == 5) {
          for (w = 0; w < 16; w++) {
            z[w] = _[N++];
            N &= 16383;
          }
        } else {
          N = (N - aY) & 131071;
          s = (N >> 3) ^ 16368;
          return ((_[s] | (_[s + 1] << 8)) >> (N & 7)) & ~(-1 << aY);
        }
      }
      function h(w) {
        return _[N + 15 - w];
      }
      function g() {
        z[0] = (h(0) << 6) | (h(1) >> 2);
        z[1] = (((h(1) & 3) << 12) | (h(2) << 4) | (h(3) >> 4)) & 16383;
        z[2] = (h(3) >> 2) & 3;
        z[3] = ((h(3) & 3) << 8) | h(4);
        z[4] = (h(5) << 2) | (h(6) >> 6);
        z[5] = ((h(6) & 63) << 4) | (h(7) >> 4);
        z[6] = (h(7) >> 2) & 3;
        z[7] = ((h(7) & 3) << 8) | h(8);
        z[8] = ((h(9) << 2) & 1020) | (h(10) >> 6);
        z[9] = ((h(10) << 4) | (h(11) >> 4)) & 1023;
        z[10] = (h(11) >> 2) & 3;
        z[11] = ((h(11) & 3) << 8) | h(12);
        z[12] = (((h(13) << 2) & 1020) | (h(14) >> 6)) & 1023;
        z[13] = ((h(14) << 4) | (h(15) >> 4)) & 1023;
        N += 16;
        s = 0;
      }
      function I() {
        z[0] = (h(0) << 4) | (h(1) >> 4);
        z[1] = (((h(1) & 15) << 8) | h(2)) & 4095;
        z[2] = (h(3) >> 6) & 3;
        z[3] = ((h(3) & 63) << 2) | (h(4) >> 6);
        z[4] = ((h(4) & 63) << 2) | (h(5) >> 6);
        z[5] = ((h(5) & 63) << 2) | (h(6) >> 6);
        z[6] = (h(6) >> 4) & 3;
        z[7] = ((h(6) & 15) << 4) | (h(7) >> 4);
        z[8] = ((h(7) & 15) << 4) | (h(8) >> 4);
        z[9] = ((h(8) & 15) << 4) | (h(9) >> 4);
        z[10] = (h(9) >> 2) & 3;
        z[11] = ((h(9) & 3) << 6) | (h(10) >> 2);
        z[12] = ((h(10) & 3) << 6) | (h(11) >> 2);
        z[13] = ((h(11) & 3) << 6) | (h(12) >> 2);
        z[14] = h(12) & 3;
        z[15] = h(13);
        z[16] = h(14);
        z[17] = h(15);
        N += 16;
        s = 0;
      }
      function m() {
        n[0] = 0;
        n[1] = 0;
        o[0] = 0;
        o[1] = 0;
      }
      if ($ == 7) {
        throw $;
      } else if ($ == 6) {
        var D = J == 12,
          B = D ? I : g,
          e = D ? 14 : 11,
          av = D ? 128 : 512,
          aN = D ? 2048 : 8192,
          G = D ? 16383 : 65535,
          X = D ? 4095 : 16383,
          O = K / e,
          aa = O * 16,
          aT = D ? 18 : 14;
        for (S = 0; S < u - 15; S += 16) {
          var aF = Math.min(16, u - S),
            d = aa * aF;
          _ = new Uint8Array(U, p + E, d);
          N = 0;
          E += d;
          for (x = 0, L = 0; x < aF; x++, L = 0) {
            T = (S + x) * K;
            for (var i = 0; i < O; i++) {
              B();
              m();
              c = 0;
              Z = 0;
              for (w = 0; w < e; w++) {
                M = w & 1;
                if (w % 3 == 2) {
                  var aV = s < aT ? z[s++] : 0;
                  if (aV == 3) aV = 4;
                  Z = av << aV;
                  c = 1 << aV;
                }
                var b = s < aT ? z[s++] : 0;
                if (n[M]) {
                  b *= c;
                  if (Z < aN && o[M] > Z) b += o[M] - Z;
                  o[M] = b;
                } else {
                  n[M] = b;
                  if (b) o[M] = b;
                  else b = o[M];
                }
                q[T + L++] =
                  b - 15 <= G ? (b - 15) & G : ((b + 2147483633) >> 31) & X;
              }
            }
          }
        }
      } else if ($ == 5) {
        var aK = J == 12 ? 10 : 9;
        for (S = 0; S < u; S++) {
          for (L = 0; L < K; L += aK) {
            l(0);
            if (J == 12) {
              q[T++] = ((z[1] & 15) << 8) + z[0];
              q[T++] = 16 * z[2] + (z[1] >> 4);
              q[T++] = ((z[4] & 15) << 8) + z[3];
              q[T++] = 16 * z[5] + (z[4] >> 4);
              q[T++] = ((z[7] & 15) << 8) + z[6];
              q[T++] = 16 * z[8] + (z[7] >> 4);
              q[T++] = ((z[10] & 15) << 8) + z[9];
              q[T++] = 16 * z[11] + (z[10] >> 4);
              q[T++] = ((z[13] & 15) << 8) + z[12];
              q[T++] = 16 * z[14] + (z[13] >> 4);
            } else if (J == 14) {
              q[T++] = z[0] + ((z[1] & 63) << 8);
              q[T++] = (z[1] >> 6) + 4 * z[2] + ((z[3] & 15) << 10);
              q[T++] = (z[3] >> 4) + 16 * z[4] + ((z[5] & 3) << 12);
              q[T++] = ((z[5] & 252) >> 2) + (z[6] << 6);
              q[T++] = z[7] + ((z[8] & 63) << 8);
              q[T++] = (z[8] >> 6) + 4 * z[9] + ((z[10] & 15) << 10);
              q[T++] = (z[10] >> 4) + 16 * z[11] + ((z[12] & 3) << 12);
              q[T++] = ((z[12] & 252) >> 2) + (z[13] << 6);
              q[T++] = z[14] + ((z[15] & 63) << 8);
            }
          }
        }
      } else if ($ == 4) {
        for (S = 0; S < u; S++) {
          for (L = 0; L < K; L++) {
            w = L % 14;
            M = w & 1;
            if (w == 0) m();
            if (w % 3 == 2) c = 4 >> (3 - l(2));
            if (o[M]) {
              C = l(8);
              if (C != 0) {
                n[M] -= 128 << c;
                if (n[M] < 0 || c == 4) n[M] &= ~(-1 << c);
                n[M] += C << c;
              }
            } else {
              o[M] = l(8);
              if (o[M] || w > 11) n[M] = (o[M] << 4) | l(4);
            }
            q[T++] = n[L & 1];
          }
        }
      } else throw $;
    };
    t.decode._decodeVC5 = (function () {
      var v = [
          1, 0, 1, 0, 2, 2, 1, 1, 3, 7, 1, 2, 5, 25, 1, 3, 6, 48, 1, 4, 6, 54,
          1, 5, 7, 111, 1, 8, 7, 99, 1, 6, 7, 105, 12, 0, 7, 107, 1, 7, 8, 209,
          20, 0, 8, 212, 1, 9, 8, 220, 1, 10, 9, 393, 1, 11, 9, 394, 32, 0, 9,
          416, 1, 12, 9, 427, 1, 13, 10, 887, 1, 18, 10, 784, 1, 14, 10, 790, 1,
          15, 10, 835, 60, 0, 10, 852, 1, 16, 10, 885, 1, 17, 11, 1571, 1, 19,
          11, 1668, 1, 20, 11, 1669, 100, 0, 11, 1707, 1, 21, 11, 1772, 1, 22,
          12, 3547, 1, 29, 12, 3164, 1, 24, 12, 3166, 1, 25, 12, 3140, 1, 23,
          12, 3413, 1, 26, 12, 3537, 1, 27, 12, 3539, 1, 28, 13, 7093, 1, 35,
          13, 6283, 1, 30, 13, 6331, 1, 31, 13, 6335, 180, 0, 13, 6824, 1, 32,
          13, 7072, 1, 33, 13, 7077, 320, 0, 13, 7076, 1, 34, 14, 12565, 1, 36,
          14, 12661, 1, 37, 14, 12669, 1, 38, 14, 13651, 1, 39, 14, 14184, 1,
          40, 15, 28295, 1, 46, 15, 28371, 1, 47, 15, 25320, 1, 42, 15, 25336,
          1, 43, 15, 25128, 1, 41, 15, 27300, 1, 44, 15, 28293, 1, 45, 16,
          50259, 1, 48, 16, 50643, 1, 49, 16, 50675, 1, 50, 16, 56740, 1, 53,
          16, 56584, 1, 51, 16, 56588, 1, 52, 17, 113483, 1, 61, 17, 113482, 1,
          60, 17, 101285, 1, 55, 17, 101349, 1, 56, 17, 109205, 1, 57, 17,
          109207, 1, 58, 17, 100516, 1, 54, 17, 113171, 1, 59, 18, 202568, 1,
          62, 18, 202696, 1, 63, 18, 218408, 1, 64, 18, 218412, 1, 65, 18,
          226340, 1, 66, 18, 226356, 1, 67, 18, 226358, 1, 68, 19, 402068, 1,
          69, 19, 405138, 1, 70, 19, 405394, 1, 71, 19, 436818, 1, 72, 19,
          436826, 1, 73, 19, 452714, 1, 75, 19, 452718, 1, 76, 19, 452682, 1,
          74, 20, 804138, 1, 77, 20, 810279, 1, 78, 20, 810790, 1, 79, 20,
          873638, 1, 80, 20, 873654, 1, 81, 20, 905366, 1, 82, 20, 905430, 1,
          83, 20, 905438, 1, 84, 21, 1608278, 1, 85, 21, 1620557, 1, 86, 21,
          1621582, 1, 87, 21, 1621583, 1, 88, 21, 1747310, 1, 89, 21, 1810734,
          1, 90, 21, 1810735, 1, 91, 21, 1810863, 1, 92, 21, 1810879, 1, 93, 22,
          3621725, 1, 99, 22, 3621757, 1, 100, 22, 3241112, 1, 94, 22, 3494556,
          1, 95, 22, 3494557, 1, 96, 22, 3494622, 1, 97, 22, 3494623, 1, 98, 23,
          6482227, 1, 102, 23, 6433117, 1, 101, 23, 6989117, 1, 103, 23,
          6989119, 1, 105, 23, 6989118, 1, 104, 23, 7243449, 1, 106, 23,
          7243512, 1, 107, 24, 13978233, 1, 111, 24, 12964453, 1, 109, 24,
          12866232, 1, 108, 24, 14486897, 1, 113, 24, 13978232, 1, 110, 24,
          14486896, 1, 112, 24, 14487026, 1, 114, 24, 14487027, 1, 115, 25,
          25732598, 1, 225, 25, 25732597, 1, 189, 25, 25732596, 1, 188, 25,
          25732595, 1, 203, 25, 25732594, 1, 202, 25, 25732593, 1, 197, 25,
          25732592, 1, 207, 25, 25732591, 1, 169, 25, 25732590, 1, 223, 25,
          25732589, 1, 159, 25, 25732522, 1, 235, 25, 25732579, 1, 152, 25,
          25732575, 1, 192, 25, 25732489, 1, 179, 25, 25732573, 1, 201, 25,
          25732472, 1, 172, 25, 25732576, 1, 149, 25, 25732488, 1, 178, 25,
          25732566, 1, 120, 25, 25732571, 1, 219, 25, 25732577, 1, 150, 25,
          25732487, 1, 127, 25, 25732506, 1, 211, 25, 25732548, 1, 125, 25,
          25732588, 1, 158, 25, 25732486, 1, 247, 25, 25732467, 1, 238, 25,
          25732508, 1, 163, 25, 25732552, 1, 228, 25, 25732603, 1, 183, 25,
          25732513, 1, 217, 25, 25732587, 1, 168, 25, 25732520, 1, 122, 25,
          25732484, 1, 128, 25, 25732562, 1, 249, 25, 25732505, 1, 187, 25,
          25732504, 1, 186, 25, 25732483, 1, 136, 25, 25928905, 1, 181, 25,
          25732560, 1, 255, 25, 25732500, 1, 230, 25, 25732482, 1, 135, 25,
          25732555, 1, 233, 25, 25732568, 1, 222, 25, 25732583, 1, 145, 25,
          25732481, 1, 134, 25, 25732586, 1, 167, 25, 25732521, 1, 248, 25,
          25732518, 1, 209, 25, 25732480, 1, 243, 25, 25732512, 1, 216, 25,
          25732509, 1, 164, 25, 25732547, 1, 140, 25, 25732479, 1, 157, 25,
          25732544, 1, 239, 25, 25732574, 1, 191, 25, 25732564, 1, 251, 25,
          25732478, 1, 156, 25, 25732546, 1, 139, 25, 25732498, 1, 242, 25,
          25732557, 1, 133, 25, 25732477, 1, 162, 25, 25732515, 1, 213, 25,
          25732584, 1, 165, 25, 25732514, 1, 212, 25, 25732476, 1, 227, 25,
          25732494, 1, 198, 25, 25732531, 1, 236, 25, 25732530, 1, 234, 25,
          25732529, 1, 117, 25, 25732528, 1, 215, 25, 25732527, 1, 124, 25,
          25732526, 1, 123, 25, 25732525, 1, 254, 25, 25732524, 1, 253, 25,
          25732523, 1, 148, 25, 25732570, 1, 218, 25, 25732580, 1, 146, 25,
          25732581, 1, 147, 25, 25732569, 1, 224, 25, 25732533, 1, 143, 25,
          25732540, 1, 184, 25, 25732541, 1, 185, 25, 25732585, 1, 166, 25,
          25732556, 1, 132, 25, 25732485, 1, 129, 25, 25732563, 1, 250, 25,
          25732578, 1, 151, 25, 25732501, 1, 119, 25, 25732502, 1, 193, 25,
          25732536, 1, 176, 25, 25732496, 1, 245, 25, 25732553, 1, 229, 25,
          25732516, 1, 206, 25, 25732582, 1, 144, 25, 25732517, 1, 208, 25,
          25732558, 1, 137, 25, 25732543, 1, 241, 25, 25732466, 1, 237, 25,
          25732507, 1, 190, 25, 25732542, 1, 240, 25, 25732551, 1, 131, 25,
          25732554, 1, 232, 25, 25732565, 1, 252, 25, 25732475, 1, 171, 25,
          25732493, 1, 205, 25, 25732492, 1, 204, 25, 25732491, 1, 118, 25,
          25732490, 1, 214, 25, 25928904, 1, 180, 25, 25732549, 1, 126, 25,
          25732602, 1, 182, 25, 25732539, 1, 175, 25, 25732545, 1, 141, 25,
          25732559, 1, 138, 25, 25732537, 1, 177, 25, 25732534, 1, 153, 25,
          25732503, 1, 194, 25, 25732606, 1, 160, 25, 25732567, 1, 121, 25,
          25732538, 1, 174, 25, 25732497, 1, 246, 25, 25732550, 1, 130, 25,
          25732572, 1, 200, 25, 25732474, 1, 170, 25, 25732511, 1, 221, 25,
          25732601, 1, 196, 25, 25732532, 1, 142, 25, 25732519, 1, 210, 25,
          25732495, 1, 199, 25, 25732605, 1, 155, 25, 25732535, 1, 154, 25,
          25732499, 1, 244, 25, 25732510, 1, 220, 25, 25732600, 1, 195, 25,
          25732607, 1, 161, 25, 25732604, 1, 231, 25, 25732473, 1, 173, 25,
          25732599, 1, 226, 26, 51465122, 1, 116, 26, 51465123, 0, 1,
        ],
        k,
        p,
        Y,
        f = [3, 3, 3, 3, 2, 2, 2, 1, 1, 1],
        V = 24576,
        U = 16384,
        K = 8192,
        J = U | K;
      function $(c) {
        var M = c[1],
          Z = (c[0][M >>> 3] >>> (7 - (M & 7))) & 1;
        c[1]++;
        return Z;
      }
      function E(c, M) {
        if (k == null) {
          k = {};
          for (var Z = 0; Z < v.length; Z += 4) k[v[Z + 1]] = v.slice(Z, Z + 4);
        }
        var L = $(c),
          _ = k[L];
        while (_ == null) {
          L = (L << 1) | $(c);
          _ = k[L];
        }
        var q = _[3];
        if (q != 0) q = $(c) == 0 ? q : -q;
        M[0] = _[2];
        M[1] = q;
      }
      function N(c, M) {
        for (var Z = 0; Z < M; Z++) {
          if ((c & 1) == 1) c++;
          c = c >>> 1;
        }
        return c;
      }
      function s(c, M) {
        return c >> M;
      }
      function Q(c, M, Z, L, _, q) {
        M[Z] = s(s(11 * c[_] - 4 * c[_ + q] + c[_ + q + q] + 4, 3) + c[L], 1);
        M[Z + q] = s(
          s(5 * c[_] + 4 * c[_ + q] - c[_ + q + q] + 4, 3) - c[L],
          1
        );
      }
      function F(c, M, Z, L, _, q) {
        var h = c[_ - q] - c[_ + q],
          I = c[_],
          D = c[L];
        M[Z] = s(s(h + 4, 3) + I + D, 1);
        M[Z + q] = s(s(-h + 4, 3) + I - D, 1);
      }
      function z(c, M, Z, L, _, q) {
        M[Z] = s(s(5 * c[_] + 4 * c[_ - q] - c[_ - q - q] + 4, 3) + c[L], 1);
        M[Z + q] = s(
          s(11 * c[_] - 4 * c[_ - q] + c[_ - q - q] + 4, 3) - c[L],
          1
        );
      }
      function w(c) {
        c = c < 0 ? 0 : c > 4095 ? 4095 : c;
        c = Y[c] >>> 2;
        return c;
      }
      function C(c, M, Z, L, _, q) {
        L = new Uint16Array(L.buffer);
        var h = Date.now(),
          I = t._binBE,
          D = M + Z,
          B,
          aN,
          G,
          X,
          O,
          aa,
          i,
          aV,
          b,
          aY,
          ag,
          a1,
          a,
          aO,
          W,
          ak,
          aP,
          ae;
        M += 4;
        var j = q[0] == 1;
        while (M < D) {
          var y = I.readShort(c, M),
            A = I.readUshort(c, M + 2);
          M += 4;
          if (y == 12) B = A;
          else if (y == 20) aN = A;
          else if (y == 21) G = A;
          else if (y == 48) X = A;
          else if (y == 53) O = A;
          else if (y == 35) aa = A;
          else if (y == 62) i = A;
          else if (y == 101) aV = A;
          else if (y == 109) b = A;
          else if (y == 84) aY = A;
          else if (y == 106) ag = A;
          else if (y == 107) a1 = A;
          else if (y == 108) a = A;
          else if (y == 102) aO = A;
          else if (y == 104) W = A;
          else if (y == 105) ak = A;
          else {
            var H = y < 0 ? -y : y,
              b7 = H & 65280,
              ac = 0;
            if (H & J) {
              if (H & K) {
                ac = A & 65535;
                ac += (H & 255) << 16;
              } else {
                ac = A & 65535;
              }
            }
            if ((H & V) == V) {
              if (aP == null) {
                aP = [];
                for (var a7 = 0; a7 < 4; a7++)
                  aP[a7] = new Int16Array((aN >>> 1) * (G >>> 1));
                ae = new Int16Array((aN >>> 1) * (G >>> 1));
                p = new Int16Array(1024);
                for (var a7 = 0; a7 < 1024; a7++) {
                  var aX = a7 - 512,
                    a4 = Math.abs(aX),
                    B =
                      Math.floor((768 * a4 * a4 * a4) / (255 * 255 * 255)) + a4;
                  p[a7] = Math.sign(aX) * B;
                }
                Y = new Uint16Array(4096);
                var b4 = (1 << 16) - 1;
                for (var a7 = 0; a7 < 4096; a7++) {
                  var ah = a7,
                    aA = (b4 * (Math.pow(113, ah / 4095) - 1)) / 112;
                  Y[a7] = Math.min(aA, b4);
                }
              }
              var aE = aP[i],
                au = N(aN, 1 + f[X]),
                ad = N(G, 1 + f[X]);
              if (X == 0) {
                for (var aB = 0; aB < ad; aB++)
                  for (var a9 = 0; a9 < au; a9++) {
                    var aj = M + (aB * au + a9) * 2;
                    aE[aB * (aN >>> 1) + a9] = (c[aj] << 8) | c[aj + 1];
                  }
              } else {
                var ax = [c, M * 8],
                  an = [],
                  a3 = 0,
                  b8 = au * ad,
                  aD = [0, 0],
                  ab = 0,
                  A = 0;
                while (a3 < b8) {
                  E(ax, aD);
                  ab = aD[0];
                  A = aD[1];
                  while (ab > 0) {
                    an[a3++] = A;
                    ab--;
                  }
                }
                var a$ = (X - 1) % 3,
                  as = a$ != 1 ? au : 0,
                  a2 = a$ != 0 ? ad : 0;
                for (var aB = 0; aB < ad; aB++) {
                  var bc = (aB + a2) * (aN >>> 1) + as,
                    b1 = aB * au;
                  for (var a9 = 0; a9 < au; a9++)
                    aE[bc + a9] = p[an[b1 + a9] + 512] * O;
                }
                if (a$ == 2) {
                  var W = aN >>> 1,
                    aU = au * 2,
                    aC = ad * 2;
                  for (var aB = 0; aB < ad; aB++) {
                    for (var a9 = 0; a9 < aU; a9++) {
                      var a7 = aB * 2 * W + a9,
                        ay = aB * W + a9,
                        af = ad * W + ay;
                      if (aB == 0) Q(aE, ae, a7, af, ay, W);
                      else if (aB == ad - 1) z(aE, ae, a7, af, ay, W);
                      else F(aE, ae, a7, af, ay, W);
                    }
                  }
                  var aQ = aE;
                  aE = ae;
                  ae = aQ;
                  for (var aB = 0; aB < aC; aB++) {
                    for (var a9 = 0; a9 < au; a9++) {
                      var a7 = aB * W + 2 * a9,
                        ay = aB * W + a9,
                        af = au + ay;
                      if (a9 == 0) Q(aE, ae, a7, af, ay, 1);
                      else if (a9 == au - 1) z(aE, ae, a7, af, ay, 1);
                      else F(aE, ae, a7, af, ay, 1);
                    }
                  }
                  var aQ = aE;
                  aE = ae;
                  ae = aQ;
                  var ar = [],
                    at = 2 - ~~((X - 1) / 3);
                  for (var a8 = 0; a8 < 3; a8++)
                    ar[a8] = (b >> (14 - a8 * 2)) & 3;
                  var b0 = ar[at];
                  if (b0 != 0)
                    for (var aB = 0; aB < aC; aB++)
                      for (var a9 = 0; a9 < aU; a9++) {
                        var a7 = aB * W + a9;
                        aE[a7] = aE[a7] << b0;
                      }
                }
              }
              if (X == 9 && i == 3) {
                var a6 = aP[0],
                  az = aP[1],
                  aG = aP[2],
                  aW = aP[3];
                for (var aB = 0; aB < G; aB += 2)
                  for (var a9 = 0; a9 < aN; a9 += 2) {
                    var aZ = aB * aN + a9,
                      aj = (aB >>> 1) * (aN >>> 1) + (a9 >>> 1),
                      bb = a6[aj],
                      aw = az[aj] - 2048,
                      ap = aG[aj] - 2048,
                      b6 = aW[aj] - 2048,
                      ba = (aw << 1) + bb,
                      a5 = (ap << 1) + bb,
                      b9 = bb + b6,
                      am = bb - b6;
                    if (j) {
                      L[aZ] = w(b9);
                      L[aZ + 1] = w(a5);
                      L[aZ + aN] = w(ba);
                      L[aZ + aN + 1] = w(am);
                    } else {
                      L[aZ] = w(ba);
                      L[aZ + 1] = w(b9);
                      L[aZ + aN] = w(am);
                      L[aZ + aN + 1] = w(a5);
                    }
                  }
              }
              M += ac * 4;
            } else if (H == 16388) {
              M += ac * 4;
            } else if (b7 == 8192 || b7 == 8448 || b7 == 9216) {
            } else throw H.toString(16);
          }
        }
        console.log(Date.now() - h);
      }
      return C;
    })();
    t.decode._decodeLogLuv32 = function (v, k, p, Y, f, V) {
      var U = v.width,
        K = U * 4,
        u = 0,
        J = new Uint8Array(K);
      while (u < Y) {
        var $ = 0;
        while ($ < K) {
          var E = k[p + u];
          u++;
          if (E < 128) {
            for (var P = 0; P < E; P++) J[$ + P] = k[p + u + P];
            $ += E;
            u += E;
          } else {
            E = E - 126;
            for (var P = 0; P < E; P++) J[$ + P] = k[p + u];
            $ += E;
            u++;
          }
        }
        for (var N = 0; N < U; N++) {
          f[V + 0] = J[N];
          f[V + 1] = J[N + U];
          f[V + 2] = J[N + U * 2];
          f[V + 4] = J[N + U * 3];
          V += 6;
        }
      }
    };
    t.decode._ljpeg_diff = function (v, k, p) {
      var Y = t.decode._getbithuff,
        f,
        V;
      f = Y(v, k, p[0], p);
      V = Y(v, k, f, 0);
      if ((V & (1 << (f - 1))) == 0) V -= (1 << f) - 1;
      return V;
    };
    t.decode._decodeARW = function (v, k, p, Y, f, V) {
      var U = v.t256[0],
        K = v.t257[0],
        u = v.t258[0],
        J = v.isLE ? t._binLE : t._binBE,
        $ = U * K == Y || U * K * 1.5 == Y,
        w,
        z,
        L,
        x,
        _,
        q,
        l,
        h,
        g,
        s,
        I;
      if (!$) {
        K += 8;
        var E = [p, 0, 0, 0],
          P = new Uint16Array(32770),
          N = [
            3857, 3856, 3599, 3342, 3085, 2828, 2571, 2314, 2057, 1800, 1543,
            1286, 1029, 772, 771, 768, 514, 513,
          ],
          s,
          Q,
          F,
          z,
          w,
          C = 0,
          c = t.decode._ljpeg_diff;
        P[0] = 15;
        for (F = s = 0; s < 18; s++) {
          var n = 32768 >>> (N[s] >>> 8);
          for (var Q = 0; Q < n; Q++) P[++F] = N[s];
        }
        for (z = U; z--; )
          for (w = 0; w < K + 1; w += 2) {
            if (w == K) w = 1;
            C += c(k, E, P);
            if (w < K) {
              var o = C & 4095;
              t.decode._putsF(f, (w * U + z) * u, o << (16 - u));
            }
          }
        return;
      }
      if (U * K * 1.5 == Y) {
        for (var s = 0; s < Y; s += 3) {
          var M = k[p + s + 0],
            T = k[p + s + 1],
            Z = k[p + s + 2];
          f[V + s] = (T << 4) | (M >>> 4);
          f[V + s + 1] = (M << 4) | (Z >>> 4);
          f[V + s + 2] = (Z << 4) | (T >>> 4);
        }
        return;
      }
      var S = new Uint16Array(16),
        m = new Uint8Array(U + 1);
      for (w = 0; w < K; w++) {
        for (var D = 0; D < U; D++) m[D] = k[p++];
        for (I = 0, z = 0; z < U - 30; I += 16) {
          x = 2047 & (L = J.readUint(m, I));
          _ = 2047 & (L >>> 11);
          q = 15 & (L >>> 22);
          l = 15 & (L >>> 26);
          for (h = 0; h < 4 && 128 << h <= x - _; h++);
          for (g = 30, s = 0; s < 16; s++)
            if (s == q) S[s] = x;
            else if (s == l) S[s] = _;
            else {
              S[s] =
                (((J.readUshort(m, I + (g >> 3)) >>> (g & 7)) & 127) << h) + _;
              if (S[s] > 2047) S[s] = 2047;
              g += 7;
            }
          for (s = 0; s < 16; s++, z += 2) {
            var o = S[s] << 1;
            t.decode._putsF(f, (w * U + z) * u, o << (16 - u));
          }
          z -= z & 1 ? 1 : 31;
        }
      }
    };
    t.decode._decodeNikon = function (v, k, p, Y, f, V, U) {
      var K = [
          [
            0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 5, 4, 3, 6, 2, 7,
            1, 0, 8, 9, 11, 10, 12,
          ],
          [
            0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 57, 90, 56, 39,
            22, 5, 4, 3, 2, 1, 0, 11, 12, 12,
          ],
          [
            0, 0, 1, 4, 2, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 4, 6, 3, 7, 2,
            8, 1, 9, 0, 10, 11, 12,
          ],
          [
            0, 0, 1, 4, 3, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 5, 6, 4, 7, 8, 3,
            9, 2, 1, 0, 10, 11, 12, 13, 14,
          ],
          [
            0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 8, 92, 75, 58,
            41, 7, 6, 5, 4, 3, 2, 1, 0, 13, 14,
          ],
          [
            0, 0, 1, 4, 2, 2, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 7, 6, 8, 5, 9, 4,
            10, 3, 11, 12, 2, 0, 1, 13, 14,
          ],
        ],
        u = v.t256[0],
        J = v.t257[0],
        $ = v.t258[0],
        E = 0,
        P = 0,
        N = t.decode._make_decoder,
        s = t.decode._getbithuff,
        Q = k[0].exifIFD.makerNote,
        F = Q.t150 ? Q.t150 : Q.t140,
        z = 0,
        l = 0,
        T,
        g,
        I,
        m,
        D,
        B,
        e = 0;
      if (Q.t147 && Q.t147[0] == 2) {
        var w = Math.ceil(u / 10),
          C = w * 16,
          c = (u * 3) >>> 1;
        for (var n = 0; n < J; n++) {
          for (var M = 0; M < w; M++) {
            for (var T = 0; T < 15; T++)
              V[n * c + M * 15 + T] = p[Y + n * C + M * 16 + T];
          }
        }
        return;
      }
      var Z = F[z++],
        S = F[z++];
      if (Z == 73 || S == 88) z += 2110;
      if (Z == 70) E = 2;
      if ($ == 14) E += 3;
      var L = [
          [0, 0],
          [0, 0],
        ],
        x = v.isLE ? t._binLE : t._binBE;
      for (var T = 0; T < 2; T++)
        for (var _ = 0; _ < 2; _++) {
          L[T][_] = x.readShort(F, z);
          z += 2;
        }
      var q = (1 << $) & 32767,
        h = x.readShort(F, z);
      z += 2;
      if (h > 1) l = Math.floor(q / (h - 1));
      if (Z == 68 && S == 32 && l > 0) P = x.readShort(F, 562);
      var av = [0, 0],
        aN = N(K[E]),
        G = [Y, 0, 0, 0];
      for (e = g = 0; g < J; g++) {
        if (P && g == P) {
          aN = N(K[E + 1]);
        }
        for (I = 0; I < u; I++) {
          T = s(p, G, aN[0], aN);
          m = T & 15;
          D = T >>> 4;
          B = (((s(p, G, m - D, 0) << 1) + 1) << D) >>> 1;
          if ((B & (1 << (m - 1))) == 0) B -= (1 << m) - (D == 0 ? 1 : 0);
          if (I < 2) av[I] = L[g & 1][I] += B;
          else av[I & 1] += B;
          var X = Math.min(Math.max(av[I & 1], 0), (1 << $) - 1),
            O = (g * u + I) * $;
          t.decode._putsF(V, O, X << (16 - $));
        }
      }
    };
    t.decode._putsF = function (v, k, p) {
      p = p << (8 - (k & 7));
      var Y = k >>> 3;
      v[Y] |= p >>> 16;
      v[Y + 1] |= p >>> 8;
      v[Y + 2] |= p;
    };
    t.decode._getbithuff = function (v, k, p, Y) {
      var f = 0,
        V = t.decode._get_byte,
        U,
        K = k[0],
        u = k[1],
        J = k[2],
        $ = k[3];
      if (p == 0 || J < 0) return 0;
      while (
        !$ &&
        J < p &&
        (U = v[K++]) != -1 &&
        !($ = f && U == 255 && v[K++])
      ) {
        u = (u << 8) + U;
        J += 8;
      }
      U = (u << (32 - J)) >>> (32 - p);
      if (Y) {
        J -= Y[U + 1] >>> 8;
        U = Y[U + 1] & 255;
      } else J -= p;
      if (J < 0) throw "e";
      k[0] = K;
      k[1] = u;
      k[2] = J;
      k[3] = $;
      return U;
    };
    t.decode._make_decoder = function (v) {
      var k,
        p,
        Y,
        f,
        K,
        u = [],
        J = 17;
      for (k = 16; k != 0 && !v[k]; k--);
      u[0] = k;
      for (Y = p = 1; p <= k; p++)
        for (f = 0; f < v[p]; f++, ++J)
          for (K = 0; K < 1 << (k - p); K++)
            if (Y <= 1 << k) u[Y++] = (p << 8) | v[J];
      return u;
    };
    t.decode._decodeNewJPEG = function (v, k, p, Y, f, V) {
      Y = Math.min(Y, k.length - p);
      var U = v.t347,
        K = U ? U.length : 0,
        u = new Uint8Array(K + Y);
      if (U) {
        var J = 216,
          $ = 217,
          E = 0;
        for (var P = 0; P < K - 1; P++) {
          if (U[P] == 255 && U[P + 1] == $) break;
          u[E++] = U[P];
        }
        var N = k[p],
          s = k[p + 1];
        if (N != 255 || s != J) {
          u[E++] = N;
          u[E++] = s;
        }
        for (var P = 2; P < Y; P++) u[E++] = k[p + P];
      } else for (var P = 0; P < Y; P++) u[P] = k[p + P];
      if (v.t262[0] == 32803 || (v.t259[0] == 7 && v.t262[0] == 34892)) {
        var Q = v.t258[0],
          F = t.LosslessJpegDecode(u),
          z = F[0],
          w = z.length;
        if (F[3] == 4 && v.t29456) {
          var C = z.slice(0);
          C.fill(0);
          var c = F[1],
            n = F[2],
            o = c * 2;
          for (var M = 0; M < n; M++)
            for (var T = 0; T < c; T++) {
              var Z = M * c * 4 + T * 2,
                S = Z + T * 2;
              C[Z] = z[S];
              C[Z + 1] = z[S + 1];
              C[Z + o] = z[S + 2];
              C[Z + o + 1] = z[S + 3];
            }
          z = C;
        }
        if (!1) {
        } else if (Q == 16) {
          if (v.isLE)
            for (var P = 0; P < w; P++) {
              f[V + (P << 1)] = z[P] & 255;
              f[V + (P << 1) + 1] = z[P] >>> 8;
            }
          else
            for (var P = 0; P < w; P++) {
              f[V + (P << 1)] = z[P] >>> 8;
              f[V + (P << 1) + 1] = z[P] & 255;
            }
        } else if (Q == 14 || Q == 12 || Q == 10) {
          var L = 16 - Q;
          for (var P = 0; P < w; P++) t.decode._putsF(f, P * Q, z[P] << L);
        } else if (Q == 8) {
          for (var P = 0; P < w; P++) f[V + P] = z[P];
        } else throw new Error("unsupported bit depth " + Q);
      } else {
        var x = new t.JpegDecoder();
        x.parse(u);
        var _ = x.getData({
          width: x.width,
          height: x.height,
          forceRGB: !0,
          isSourcePDF: !1,
        });
        for (var P = 0; P < _.length; P++) f[V + P] = _[P];
      }
      if (v.t262[0] == 6) v.t262[0] = 2;
    };
    t.decode._decodeOldJPEGInit = function (v, k, p, Y) {
      var f = 216,
        V = 217,
        U = 219,
        K = 196,
        u = 221,
        J = 192,
        $ = 218,
        E = 0,
        P = 0,
        N,
        s,
        Q = !1,
        F,
        z,
        w,
        C = v.t513,
        c = C ? C[0] : 0,
        n = v.t514,
        o = n ? n[0] : 0,
        M = v.t324 || v.t273 || C,
        T = v.t530,
        Z = 0,
        S = 0,
        L = v.t277 ? v.t277[0] : 1,
        x = v.t515;
      if (M) {
        P = M[0];
        Q = M.length > 1;
      }
      if (!Q) {
        if (k[p] == 255 && k[p + 1] == f) return { jpegOffset: p };
        if (C != null) {
          if (k[p + c] == 255 && k[p + c + 1] == f) E = p + c;
          else aH("JPEGInterchangeFormat does not point to SOI");
          if (n == null) aH("JPEGInterchangeFormatLength field is missing");
          else if (c >= P || c + o <= P)
            aH("JPEGInterchangeFormatLength field value is invalid");
          if (E != null) return { jpegOffset: E };
        }
      }
      if (T != null) {
        Z = T[0];
        S = T[1];
      }
      if (C != null)
        if (n != null)
          if (o >= 2 && c + o <= P) {
            if (k[p + c + o - 2] == 255 && k[p + c + o - 1] == f)
              N = new Uint8Array(o - 2);
            else N = new Uint8Array(o);
            for (F = 0; F < N.length; F++) N[F] = k[p + c + F];
            aH(
              "Incorrect JPEG interchange format: using JPEGInterchangeFormat offset to derive tables"
            );
          } else
            aH(
              "JPEGInterchangeFormat+JPEGInterchangeFormatLength > offset to first strip or tile"
            );
      if (N == null) {
        var _ = 0,
          q = [];
        q[_++] = 255;
        q[_++] = f;
        var l = v.t519;
        if (l == null) throw new Error("JPEGQTables tag is missing");
        for (F = 0; F < l.length; F++) {
          q[_++] = 255;
          q[_++] = U;
          q[_++] = 0;
          q[_++] = 67;
          q[_++] = F;
          for (z = 0; z < 64; z++) q[_++] = k[p + l[F] + z];
        }
        for (w = 0; w < 2; w++) {
          var h = v[w == 0 ? "t520" : "t521"];
          if (h == null)
            throw new Error(
              (w == 0 ? "JPEGDCTables" : "JPEGACTables") + " tag is missing"
            );
          for (F = 0; F < h.length; F++) {
            q[_++] = 255;
            q[_++] = K;
            var g = 19;
            for (z = 0; z < 16; z++) g += k[p + h[F] + z];
            q[_++] = g >>> 8;
            q[_++] = g & 255;
            q[_++] = F | (w << 4);
            for (z = 0; z < 16; z++) q[_++] = k[p + h[F] + z];
            for (z = 0; z < g; z++) q[_++] = k[p + h[F] + 16 + z];
          }
        }
        q[_++] = 255;
        q[_++] = J;
        q[_++] = 0;
        q[_++] = 8 + 3 * L;
        q[_++] = 8;
        q[_++] = (v.height >>> 8) & 255;
        q[_++] = v.height & 255;
        q[_++] = (v.width >>> 8) & 255;
        q[_++] = v.width & 255;
        q[_++] = L;
        if (L == 1) {
          q[_++] = 1;
          q[_++] = 17;
          q[_++] = 0;
        } else
          for (F = 0; F < 3; F++) {
            q[_++] = F + 1;
            q[_++] = F != 0 ? 17 : ((Z & 15) << 4) | (S & 15);
            q[_++] = F;
          }
        if (x != null && x[0] != 0) {
          q[_++] = 255;
          q[_++] = u;
          q[_++] = 0;
          q[_++] = 4;
          q[_++] = (x[0] >>> 8) & 255;
          q[_++] = x[0] & 255;
        }
        N = new Uint8Array(q);
      }
      var I = -1;
      F = 0;
      while (F < N.length - 1) {
        if (N[F] == 255 && N[F + 1] == J) {
          I = F;
          break;
        }
        F++;
      }
      if (I == -1) {
        var m = new Uint8Array(N.length + 10 + 3 * L);
        m.set(N);
        var D = N.length;
        I = N.length;
        N = m;
        N[D++] = 255;
        N[D++] = J;
        N[D++] = 0;
        N[D++] = 8 + 3 * L;
        N[D++] = 8;
        N[D++] = (v.height >>> 8) & 255;
        N[D++] = v.height & 255;
        N[D++] = (v.width >>> 8) & 255;
        N[D++] = v.width & 255;
        N[D++] = L;
        if (L == 1) {
          N[D++] = 1;
          N[D++] = 17;
          N[D++] = 0;
        } else
          for (F = 0; F < 3; F++) {
            N[D++] = F + 1;
            N[D++] = F != 0 ? 17 : ((Z & 15) << 4) | (S & 15);
            N[D++] = F;
          }
      }
      if (k[P] == 255 && k[P + 1] == $) {
        var B = (k[P + 2] << 8) | k[P + 3];
        s = new Uint8Array(B + 2);
        s[0] = k[P];
        s[1] = k[P + 1];
        s[2] = k[P + 2];
        s[3] = k[P + 3];
        for (F = 0; F < B - 2; F++) s[F + 4] = k[P + F + 4];
      } else {
        s = new Uint8Array(2 + 6 + 2 * L);
        var e = 0;
        s[e++] = 255;
        s[e++] = $;
        s[e++] = 0;
        s[e++] = 6 + 2 * L;
        s[e++] = L;
        if (L == 1) {
          s[e++] = 1;
          s[e++] = 0;
        } else
          for (F = 0; F < 3; F++) {
            s[e++] = F + 1;
            s[e++] = (F << 4) | F;
          }
        s[e++] = 0;
        s[e++] = 63;
        s[e++] = 0;
      }
      return { jpegOffset: p, tables: N, sosMarker: s, sofPosition: I };
    };
    t.decode._decodeOldJPEG = function (v, k, p, Y, f, V) {
      var U,
        K,
        u,
        J,
        $,
        E = t.decode._decodeOldJPEGInit(v, k, p, Y);
      if (E.jpegOffset != null) {
        K = p + Y - E.jpegOffset;
        J = new Uint8Array(K);
        for (U = 0; U < K; U++) J[U] = k[E.jpegOffset + U];
      } else {
        u = E.tables.length;
        J = new Uint8Array(u + E.sosMarker.length + Y + 2);
        J.set(E.tables);
        $ = u;
        J[E.sofPosition + 5] = (v.height >>> 8) & 255;
        J[E.sofPosition + 6] = v.height & 255;
        J[E.sofPosition + 7] = (v.width >>> 8) & 255;
        J[E.sofPosition + 8] = v.width & 255;
        if (k[p] != 255 || k[p + 1] != SOS) {
          J.set(E.sosMarker, $);
          $ += sosMarker.length;
        }
        for (U = 0; U < Y; U++) J[$++] = k[p + U];
        J[$++] = 255;
        J[$++] = EOI;
      }
      var P = new t.JpegDecoder();
      P.parse(J);
      var N = P.getData({
          width: P.width,
          height: P.height,
          forceRGB: !0,
          isSourcePDF: !1,
        }),
        s = P.width * P.height;
      if (v.t262 && v.t262[0] == 1)
        for (var U = 0; U < s; U++) f[V + U] = N[U * 3];
      else for (var U = 0; U < N.length; U++) f[V + U] = N[U];
      if (v.t262 && v.t262[0] == 6) v.t262[0] = 2;
    };
    t.decode._decodePackBits = function (v, k, p, Y, f) {
      var V = new Int8Array(v.buffer),
        U = new Int8Array(Y.buffer),
        K = k + p;
      while (k < K) {
        var u = V[k];
        k++;
        if (u >= 0 && u < 128)
          for (var J = 0; J < u + 1; J++) {
            U[f] = V[k];
            f++;
            k++;
          }
        if (u >= -127 && u < 0) {
          for (var J = 0; J < -u + 1; J++) {
            U[f] = V[k];
            f++;
          }
          k++;
        }
      }
      return f;
    };
    t.decode._decodeThunder = function (v, k, p, Y, f) {
      var V = [0, 1, 0, -1],
        U = [0, 1, 2, 3, 0, -3, -2, -1],
        K = k + p,
        u = f * 2,
        J = 0;
      while (k < K) {
        var $ = v[k],
          E = $ >>> 6,
          P = $ & 63;
        k++;
        if (E == 3) {
          J = P & 15;
          Y[u >>> 1] |= J << (4 * ((1 - u) & 1));
          u++;
        }
        if (E == 0)
          for (var N = 0; N < P; N++) {
            Y[u >>> 1] |= J << (4 * ((1 - u) & 1));
            u++;
          }
        if (E == 2)
          for (var N = 0; N < 2; N++) {
            var s = (P >>> (3 * (1 - N))) & 7;
            if (s != 4) {
              J += U[s];
              Y[u >>> 1] |= J << (4 * ((1 - u) & 1));
              u++;
            }
          }
        if (E == 1)
          for (var N = 0; N < 3; N++) {
            var s = (P >>> (2 * (2 - N))) & 3;
            if (s != 2) {
              J += V[s];
              Y[u >>> 1] |= J << (4 * ((1 - u) & 1));
              u++;
            }
          }
      }
    };
    t.decode._dmap = {
      1: 0,
      "011": 1,
      "000011": 2,
      "0000011": 3,
      "010": -1,
      "000010": -2,
      "0000010": -3,
    };
    t.decode._lens = (function () {
      var v = function (u, J, $, E) {
          for (var P = 0; P < J.length; P++) u[J[P]] = $ + P * E;
        },
        k =
          "00110101,000111,0111,1000,1011,1100,1110,1111,10011,10100,00111,01000,001000,000011,110100,110101," +
          "101010,101011,0100111,0001100,0001000,0010111,0000011,0000100,0101000,0101011,0010011,0100100,0011000,00000010,00000011,00011010," +
          "00011011,00010010,00010011,00010100,00010101,00010110,00010111,00101000,00101001,00101010,00101011,00101100,00101101,00000100,00000101,00001010," +
          "00001011,01010010,01010011,01010100,01010101,00100100,00100101,01011000,01011001,01011010,01011011,01001010,01001011,00110010,00110011,00110100",
        p =
          "0000110111,010,11,10,011,0011,0010,00011,000101,000100,0000100,0000101,0000111,00000100,00000111,000011000," +
          "0000010111,0000011000,0000001000,00001100111,00001101000,00001101100,00000110111,00000101000,00000010111,00000011000,000011001010,000011001011,000011001100,000011001101,000001101000,000001101001," +
          "000001101010,000001101011,000011010010,000011010011,000011010100,000011010101,000011010110,000011010111,000001101100,000001101101,000011011010,000011011011,000001010100,000001010101,000001010110,000001010111," +
          "000001100100,000001100101,000001010010,000001010011,000000100100,000000110111,000000111000,000000100111,000000101000,000001011000,000001011001,000000101011,000000101100,000001011010,000001100110,000001100111",
        Y =
          "11011,10010,010111,0110111,00110110,00110111,01100100,01100101,01101000,01100111,011001100,011001101,011010010,011010011,011010100,011010101,011010110," +
          "011010111,011011000,011011001,011011010,011011011,010011000,010011001,010011010,011000,010011011",
        f =
          "0000001111,000011001000,000011001001,000001011011,000000110011,000000110100,000000110101,0000001101100,0000001101101,0000001001010,0000001001011,0000001001100," +
          "0000001001101,0000001110010,0000001110011,0000001110100,0000001110101,0000001110110,0000001110111,0000001010010,0000001010011,0000001010100,0000001010101,0000001011010," +
          "0000001011011,0000001100100,0000001100101",
        V =
          "00000001000,00000001100,00000001101,000000010010,000000010011,000000010100,000000010101,000000010110,000000010111,000000011100,000000011101,000000011110,000000011111";
      k = k.split(",");
      p = p.split(",");
      Y = Y.split(",");
      f = f.split(",");
      V = V.split(",");
      var U = {},
        K = {};
      v(U, k, 0, 1);
      v(U, Y, 64, 64);
      v(U, V, 1792, 64);
      v(K, p, 0, 1);
      v(K, f, 64, 64);
      v(K, V, 1792, 64);
      return [U, K];
    })();
    t.decode._decodeG4 = function (v, k, p, Y, f, V, U) {
      var K = t.decode,
        u = k << 3,
        J = 0,
        $ = "",
        E = [],
        P = [],
        s = 0,
        Q = 0,
        F = 0,
        z = 0,
        w = 0,
        C = 0,
        n = 0,
        M = "",
        T = 0;
      for (var N = 0; N < V; N++) P.push(0);
      P = K._makeDiff(P);
      var Z = Math.ceil(V / 8) * 8;
      while (u >>> 3 < k + p) {
        (z = K._findDiff(P, s + (s == 0 ? 0 : 1), 1 - C)),
          (w = K._findDiff(P, z, C));
        var S = 0;
        if (U == 1) S = (v[u >>> 3] >>> (7 - (u & 7))) & 1;
        if (U == 2) S = (v[u >>> 3] >>> (u & 7)) & 1;
        u++;
        $ += S;
        if (M == "H") {
          if (K._lens[C][$] != null) {
            var L = K._lens[C][$];
            $ = "";
            J += L;
            if (L < 64) {
              K._addNtimes(E, J, C);
              s += J;
              C = 1 - C;
              J = 0;
              T--;
              if (T == 0) M = "";
            }
          }
        } else {
          if ($ == "0001") {
            $ = "";
            K._addNtimes(E, w - s, C);
            s = w;
          }
          if ($ == "001") {
            $ = "";
            M = "H";
            T = 2;
          }
          if (K._dmap[$] != null) {
            Q = z + K._dmap[$];
            K._addNtimes(E, Q - s, C);
            s = Q;
            $ = "";
            C = 1 - C;
          }
        }
        if (E.length == V && M == "") {
          K._writeBits(E, Y, f * 8 + n * Z);
          C = 0;
          n++;
          s = 0;
          P = K._makeDiff(E);
          E = [];
        }
      }
    };
    t.decode._findDiff = function (v, k, p) {
      for (var Y = 0; Y < v.length; Y += 2)
        if (v[Y] >= k && v[Y + 1] == p) return v[Y];
    };
    t.decode._makeDiff = function (v) {
      var k = [];
      if (v[0] == 1) k.push(0, 1);
      for (var p = 1; p < v.length; p++) if (v[p - 1] != v[p]) k.push(p, v[p]);
      k.push(v.length, 0, v.length, 1);
      return k;
    };
    t.decode._decodeG2 = function (v, k, p, Y, f, V, U) {
      var K = t.decode,
        u = k << 3,
        J = 0,
        $ = "",
        E = [],
        P = 0,
        N = 0,
        s = Math.ceil(V / 8) * 8;
      while (u >>> 3 < k + p) {
        var Q = 0;
        if (U == 1) Q = (v[u >>> 3] >>> (7 - (u & 7))) & 1;
        if (U == 2) Q = (v[u >>> 3] >>> (u & 7)) & 1;
        u++;
        $ += Q;
        J = K._lens[P][$];
        if (J != null) {
          K._addNtimes(E, J, P);
          $ = "";
          if (J < 64) P = 1 - P;
          if (E.length == V) {
            K._writeBits(E, Y, f * 8 + N * s);
            E = [];
            N++;
            P = 0;
            if ((u & 7) != 0) u += 8 - (u & 7);
            if (J >= 64) u += 8;
          }
        }
      }
    };
    t.decode._decodeG3 = function (v, k, p, Y, f, V, U, K) {
      var u = t.decode,
        J = k << 3,
        $ = 0,
        E = "",
        P = [],
        N = [],
        Q = 0,
        F = 0,
        z = 0,
        w = 0,
        C = 0,
        n = 0,
        M = "",
        T = 0,
        Z = !0;
      for (var s = 0; s < V; s++) P.push(0);
      var o = -1,
        S = Math.ceil(V / 8) * 8;
      while (J >>> 3 < k + p) {
        (w = u._findDiff(N, Q + (Q == 0 ? 0 : 1), 1 - n)),
          (C = u._findDiff(N, w, n));
        var L = 0;
        if (U == 1) L = (v[J >>> 3] >>> (7 - (J & 7))) & 1;
        if (U == 2) L = (v[J >>> 3] >>> (J & 7)) & 1;
        J++;
        E += L;
        if (Z) {
          if (u._lens[n][E] != null) {
            var x = u._lens[n][E];
            E = "";
            $ += x;
            if (x < 64) {
              u._addNtimes(P, $, n);
              n = 1 - n;
              $ = 0;
            }
          }
        } else {
          if (M == "H") {
            if (u._lens[n][E] != null) {
              var x = u._lens[n][E];
              E = "";
              $ += x;
              if (x < 64) {
                u._addNtimes(P, $, n);
                Q += $;
                n = 1 - n;
                $ = 0;
                T--;
                if (T == 0) M = "";
              }
            }
          } else {
            if (E == "0001") {
              E = "";
              u._addNtimes(P, C - Q, n);
              Q = C;
            }
            if (E == "001") {
              E = "";
              M = "H";
              T = 2;
            }
            if (u._dmap[E] != null) {
              F = w + u._dmap[E];
              u._addNtimes(P, F - Q, n);
              Q = F;
              E = "";
              n = 1 - n;
            }
          }
        }
        if (E.endsWith("000000000001")) {
          if (o >= 0) u._writeBits(P, Y, f * 8 + o * S);
          if (K) {
            if (U == 1) Z = ((v[J >>> 3] >>> (7 - (J & 7))) & 1) == 1;
            if (U == 2) Z = ((v[J >>> 3] >>> (J & 7)) & 1) == 1;
            J++;
          }
          E = "";
          n = 0;
          o++;
          Q = 0;
          N = u._makeDiff(P);
          P = [];
        }
      }
      if (P.length == V) u._writeBits(P, Y, f * 8 + o * S);
    };
    t.decode._addNtimes = function (v, k, p) {
      for (var Y = 0; Y < k; Y++) v.push(p);
    };
    t.decode._writeBits = function (v, k, p) {
      for (var Y = 0; Y < v.length; Y++)
        k[(p + Y) >>> 3] |= v[Y] << (7 - ((p + Y) & 7));
    };
    t.decode._decodeLZW = t.decode._decodeLZW = (function () {
      var v,
        k,
        Y,
        f,
        V = 0,
        U = 0,
        K = 0,
        u = 0,
        J = function () {
          var z = v >>> 3,
            C = (k[z] << 16) | (k[z + 1] << 8) | k[z + 2],
            n = (C >>> (24 - (v & 7) - U)) & ((1 << U) - 1);
          v += U;
          return n;
        },
        $ = new Uint32Array(4096 * 4),
        E = 0,
        P = function (z) {
          if (z == E) return;
          E = z;
          K = 1 << z;
          u = K + 1;
          for (var C = 0; C < u + 1; C++) {
            $[4 * C] = $[4 * C + 3] = C;
            $[4 * C + 1] = 65535;
            $[4 * C + 2] = 1;
          }
        },
        N = function (z) {
          U = z + 1;
          V = u + 1;
        },
        s = function (z) {
          var C = z << 2,
            n = $[C + 2],
            o = f + n - 1;
          while (C != 65535) {
            Y[o--] = $[C];
            C = $[C + 1];
          }
          f += n;
        },
        Q = function (z, C) {
          var n = V << 2,
            o = z << 2;
          $[n] = $[(C << 2) + 3];
          $[n + 1] = o;
          $[n + 2] = $[o + 2] + 1;
          $[n + 3] = $[o + 3];
          V++;
          if (V + 1 == 1 << U && U != 12) U++;
        },
        F = function (z, C, n, o, M, Z) {
          v = C << 3;
          k = z;
          Y = o;
          f = M;
          var S = (C + n) << 3,
            x = 0,
            _ = 0;
          P(Z);
          N(Z);
          while (v < S && (x = J()) != u) {
            if (x == K) {
              N(Z);
              x = J();
              if (x == u) break;
              s(x);
            } else {
              if (x < V) {
                s(x);
                Q(_, x);
              } else {
                Q(_, _);
                s(V - 1);
              }
            }
            _ = x;
          }
          return f;
        };
      return F;
    })();
    t.tags = {};
    t._types = (function () {
      var v = new Array(250);
      v.fill(0);
      v = v.concat([
        0, 0, 0, 0, 4, 3, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 0, 0, 2, 2, 2, 2, 4,
        3, 0, 0, 3, 4, 4, 3, 3, 5, 5, 3, 2, 5, 5, 0, 0, 0, 0, 4, 4, 0, 0, 3, 3,
        0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 5, 5, 3, 0,
        3, 3, 4, 4, 4, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0,
        0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
        4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 5, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0,
      ]);
      var k = {
        33432: 2,
        33434: 5,
        33437: 5,
        34665: 4,
        34850: 3,
        34853: 4,
        34855: 3,
        34864: 3,
        34866: 4,
        36864: 7,
        36867: 2,
        36868: 2,
        37121: 7,
        37377: 10,
        37378: 5,
        37380: 10,
        37381: 5,
        37383: 3,
        37384: 3,
        37385: 3,
        37386: 5,
        37510: 7,
        37520: 2,
        37521: 2,
        37522: 2,
        40960: 7,
        40961: 3,
        40962: 4,
        40963: 4,
        40965: 4,
        41486: 5,
        41487: 5,
        41488: 3,
        41985: 3,
        41986: 3,
        41987: 3,
        41988: 5,
        41989: 3,
        41990: 3,
        41993: 3,
        41994: 3,
        41995: 7,
        41996: 3,
        42032: 2,
        42033: 2,
        42034: 5,
        42036: 2,
        42037: 2,
        59932: 7,
      };
      return {
        basic: { main: v, rest: k },
        gps: { main: [1, 2, 5, 2, 5, 1, 5, 5, 0, 9], rest: { 18: 2, 29: 2 } },
      };
    })();
    t._readIFD = function (v, k, p, Y, f, V) {
      var U = v.readUshort(k, p);
      p += 2;
      var K = {};
      if (V.debug) aH("   ".repeat(f), Y.length - 1, ">>>----------------");
      for (var u = 0; u < U; u++) {
        var J = v.readUshort(k, p);
        p += 2;
        var $ = v.readUshort(k, p);
        p += 2;
        var E = v.readUint(k, p);
        p += 4;
        var P = v.readUint(k, p);
        p += 4;
        var N = [];
        if ($ == 1 || $ == 7) {
          var s = E < 5 ? p - 4 : P;
          if (s + E > k.buffer.byteLength) E = k.buffer.byteLength - s;
          N = new Uint8Array(k.buffer, s, E);
        }
        if ($ == 2) {
          var Q = E < 5 ? p - 4 : P,
            F = k[Q],
            z = Math.max(0, Math.min(E - 1, k.length - Q));
          if (F < 128 || z == 0) {
            N.push(v.readASCII(k, Q, z));
            if (N[0].endsWith("\0")) N[0] = N[0].slice(0, -1);
          } else N = new Uint8Array(k.buffer, Q, z);
        }
        if ($ == 3) {
          for (var w = 0; w < E; w++)
            N.push(v.readUshort(k, (E < 3 ? p - 4 : P) + 2 * w));
        }
        if ($ == 4 || $ == 13) {
          for (var w = 0; w < E; w++)
            N.push(v.readUint(k, (E < 2 ? p - 4 : P) + 4 * w));
        }
        if ($ == 5 || $ == 10) {
          var C = $ == 5 ? v.readUint : v.readInt;
          for (var w = 0; w < E; w++)
            N.push([C(k, P + w * 8), C(k, P + w * 8 + 4)]);
        }
        if ($ == 8) {
          for (var w = 0; w < E; w++)
            N.push(v.readShort(k, (E < 3 ? p - 4 : P) + 2 * w));
        }
        if ($ == 9) {
          for (var w = 0; w < E; w++)
            N.push(v.readInt(k, (E < 2 ? p - 4 : P) + 4 * w));
        }
        if ($ == 11) {
          for (var w = 0; w < E; w++) N.push(v.readFloat(k, P + w * 4));
        }
        if ($ == 12) {
          for (var w = 0; w < E; w++) N.push(v.readDouble(k, P + w * 8));
        }
        if (E != 0 && N.length == 0) {
          aH(J, "unknown TIFF tag type: ", $, "num:", E);
          if (u == 0) return;
          continue;
        }
        if (V.debug) aH("   ".repeat(f), J, $, t.tags[J], N);
        K["t" + J] = N;
        if (J == 330 && K.t272 && K.t272[0] == "DSLR-A100") {
        } else if (
          J == 330 ||
          J == 34665 ||
          J == 34853 ||
          (J == 50740 && v.readUshort(k, v.readUint(N, 0)) < 300) ||
          J == 61440
        ) {
          var c = J == 50740 ? [v.readUint(N, 0)] : N,
            n = [];
          for (var w = 0; w < c.length; w++)
            t._readIFD(v, k, c[w], n, f + 1, V);
          if (J == 330) K.subIFD = n;
          if (J == 34665) K.exifIFD = n[0];
          if (J == 34853) K.gpsiIFD = n[0];
          if (J == 50740) K.dngPrvt = n[0];
          if (J == 61440) K.fujiIFD = n[0];
        }
        if (J == 37500 && V.parseMN) {
          var o = N;
          if (v.readASCII(o, 0, 5) == "Nikon")
            K.makerNote = t.decode(o.slice(10).buffer)[0];
          else if (
            v.readASCII(o, 0, 5) == "OLYMP" ||
            v.readASCII(o, 0, 9) == "OM SYSTEM"
          ) {
            var M = [8208, 8224, 8240, 8256, 8272],
              T = [];
            t._readIFD(
              v,
              o,
              o[1] == 77 ? 16 : o[5] == 85 ? 12 : 8,
              T,
              f + 1,
              V
            );
            var Z = (K.makerNote = T.pop());
            for (var w = 0; w < M.length; w++) {
              var S = "t" + M[w];
              if (Z[S] == null) continue;
              if (Z[S].length == 1) t._readIFD(v, o, Z[S][0], T, f + 1, V);
              else t._readIFD(v, Z[S], 0, T, f + 1, V);
              Z[S] = T.pop();
            }
            if (Z.t12288) {
              t._readIFD(v, Z.t12288, 0, T, f + 1, V);
              Z.t12288 = T.pop();
            }
          } else if (v.readUshort(k, P) < 300 && v.readUshort(k, P + 4) <= 12) {
            var T = [];
            t._readIFD(v, k, P, T, f + 1, V);
            K.makerNote = T[0];
          }
        }
      }
      Y.push(K);
      if (V.debug) aH("   ".repeat(f), "<<<---------------");
      return p;
    };
    t._writeIFD = function (v, k, p, Y, f) {
      var V = Object.keys(f),
        U = V.length;
      if (f.exifIFD) U--;
      if (f.gpsiIFD) U--;
      v.writeUshort(p, Y, U);
      Y += 2;
      var K = Y + U * 12 + 4;
      V.sort(function (o, M) {
        return parseInt(o.slice(1)) - parseInt(M.slice(1));
      });
      for (var u = 0; u < V.length; u++) {
        var J = V[u];
        if (J == "t34665" || J == "t34853") continue;
        if (J == "exifIFD") J = "t34665";
        if (J == "gpsiIFD") J = "t34853";
        var $ = parseInt(J.slice(1)),
          E = k.main[$];
        if (E == null) E = k.rest[$];
        if (E == null || E == 0) throw new Error("unknown type of tag: " + $);
        var P = f[J];
        if ($ == 34665) {
          var N = t._writeIFD(v, k, p, K, f.exifIFD);
          P = [K];
          K = N[1];
        }
        if ($ == 34853) {
          var N = t._writeIFD(v, t._types.gps, p, K, f.gpsiIFD);
          P = [K];
          K = N[1];
        }
        if (E == 2) P = P[0] + "\0";
        var s = P.length;
        v.writeUshort(p, Y, $);
        Y += 2;
        v.writeUshort(p, Y, E);
        Y += 2;
        v.writeUint(p, Y, s);
        Y += 4;
        var Q = [-1, 1, 1, 2, 4, 8, 0, 1, 0, 4, 8, 0, 8][E] * s,
          F = Y;
        if (Q > 4) {
          v.writeUint(p, Y, K);
          F = K;
        }
        if (E == 1 || E == 7) {
          for (var z = 0; z < s; z++) p[F + z] = P[z];
        } else if (E == 2) {
          v.writeASCII(p, F, P);
        } else if (E == 3) {
          for (var z = 0; z < s; z++) v.writeUshort(p, F + 2 * z, P[z]);
        } else if (E == 4) {
          for (var z = 0; z < s; z++) v.writeUint(p, F + 4 * z, P[z]);
        } else if (E == 5 || E == 10) {
          var w = E == 5 ? v.writeUint : v.writeInt;
          for (var z = 0; z < s; z++) {
            var C = P[z],
              c = C[0],
              n = C[1];
            if (c == null) throw "e";
            w(p, F + 8 * z, c);
            w(p, F + 8 * z + 4, n);
          }
        } else if (E == 9) {
          for (var z = 0; z < s; z++) v.writeInt(p, F + 4 * z, P[z]);
        } else if (E == 12) {
          for (var z = 0; z < s; z++) v.writeDouble(p, F + 8 * z, P[z]);
        } else throw E;
        if (Q > 4) {
          Q += Q & 1;
          K += Q;
        }
        Y += 4;
      }
      return [Y, K];
    };
    t.toRGBA8 = function (v, k) {
      function p(I) {
        return I < 0.0031308 ? 12.92 * I : 1.055 * Math.pow(I, 1 / 2.4) - 0.055;
      }
      var Y = v.width,
        f = v.height,
        U = Y * f,
        K = U * 4,
        u = v.data,
        J = new Uint8Array(U * 4),
        $ = v.t262 ? v.t262[0] : 2,
        E = v.t258 ? Math.min(32, v.t258[0]) : 1;
      if (v.t262 == null && E == 1) $ = 0;
      var P = v.t277
          ? v.t277[0]
          : v.t258
          ? v.t258.length
          : [1, 1, 3, 1, 1, 4, 3][$],
        N = v.t339 ? v.t339[0] : null;
      if ($ == 1 && E == 32 && N != 3) throw "e";
      var s = Math.ceil((P * E * Y) / 8);
      aH("interpretation: ", $, "smpls", P, "bps", E, "sample format", N, v);
      if (!1) {
      } else if ($ == 0) {
        k = 1 / 256;
        for (var Q = 0; Q < f; Q++) {
          var F = Q * s,
            z = Q * Y;
          if (E == 1)
            for (var w = 0; w < Y; w++) {
              var C = (z + w) << 2,
                n = (u[F + (w >> 3)] >> (7 - (w & 7))) & 1;
              J[C] = J[C + 1] = J[C + 2] = (1 - n) * 255;
              J[C + 3] = 255;
            }
          if (E == 4)
            for (var w = 0; w < Y; w++) {
              var C = (z + w) << 2,
                n = (u[F + (w >> 1)] >> (4 - 4 * (w & 1))) & 15;
              J[C] = J[C + 1] = J[C + 2] = (15 - n) * 17;
              J[C + 3] = 255;
            }
          if (E == 8)
            for (var w = 0; w < Y; w++) {
              var C = (z + w) << 2,
                n = u[F + w];
              J[C] = J[C + 1] = J[C + 2] = 255 - n;
              J[C + 3] = 255;
            }
          if (E == 16)
            for (var w = 0; w < Y; w++) {
              var C = (z + w) << 2,
                M = F + 2 * w,
                n = (u[M + 1] << 8) | u[M];
              J[C] = J[C + 1] = J[C + 2] = Math.min(255, 255 - ~~(n * k));
              J[C + 3] = 255;
            }
        }
      } else if ($ == 1) {
        if (k == null) k = 1 / 256;
        var T = (u.length & 3) == 0 ? new Float32Array(u.buffer) : null;
        for (var Q = 0; Q < f; Q++) {
          var F = Q * s,
            z = Q * Y;
          if (E == 1)
            for (var w = 0; w < Y; w++) {
              var C = (z + w) << 2,
                n = (u[F + (w >> 3)] >> (7 - (w & 7))) & 1;
              J[C] = J[C + 1] = J[C + 2] = n * 255;
              J[C + 3] = 255;
            }
          if (E == 2)
            for (var w = 0; w < Y; w++) {
              var C = (z + w) << 2,
                n = (u[F + (w >> 2)] >> (6 - 2 * (w & 3))) & 3;
              J[C] = J[C + 1] = J[C + 2] = n * 85;
              J[C + 3] = 255;
            }
          if (E == 8)
            for (var w = 0; w < Y; w++) {
              var C = (z + w) << 2,
                n = u[F + w * P];
              J[C] = J[C + 1] = J[C + 2] = n;
              J[C + 3] = 255;
            }
          if (E == 16)
            for (var w = 0; w < Y; w++) {
              var C = (z + w) << 2,
                M = F + 2 * w,
                n = (u[M + 1] << 8) | u[M];
              J[C] = J[C + 1] = J[C + 2] = Math.min(255, ~~(n * k));
              J[C + 3] = 255;
            }
          if (E == 32)
            for (var w = 0; w < Y; w++) {
              var C = (z + w) << 2,
                M = (F >>> 2) + w,
                n = T[M];
              J[C] = J[C + 1] = J[C + 2] = ~~(0.5 + 255 * n);
              J[C + 3] = 255;
            }
        }
      } else if ($ == 2) {
        if (E == 8) {
          if (P == 1)
            for (var w = 0; w < U; w++) {
              J[4 * w] = J[4 * w + 1] = J[4 * w + 2] = u[w];
              J[4 * w + 3] = 255;
            }
          if (P == 3)
            for (var w = 0; w < U; w++) {
              var C = w << 2,
                Z = w * 3;
              J[C] = u[Z];
              J[C + 1] = u[Z + 1];
              J[C + 2] = u[Z + 2];
              J[C + 3] = 255;
            }
          if (P >= 4)
            for (var w = 0; w < U; w++) {
              var C = w << 2,
                Z = w * P;
              J[C] = u[Z];
              J[C + 1] = u[Z + 1];
              J[C + 2] = u[Z + 2];
              J[C + 3] = u[Z + 3];
            }
        } else if (E == 16) {
          if (P == 4)
            for (var w = 0; w < U; w++) {
              var C = w << 2,
                Z = w * 8 + 1;
              J[C] = u[Z];
              J[C + 1] = u[Z + 2];
              J[C + 2] = u[Z + 4];
              J[C + 3] = u[Z + 6];
            }
          if (P == 3)
            for (var w = 0; w < U; w++) {
              var C = w << 2,
                Z = w * 6 + 1;
              J[C] = u[Z];
              J[C + 1] = u[Z + 2];
              J[C + 2] = u[Z + 4];
              J[C + 3] = 255;
            }
        } else if (E == 32) {
          var S = new Float32Array(u.buffer),
            L = 0;
          for (var w = 0; w < S.length; w++) L = Math.min(L, S[w]);
          if (L < 0)
            for (var w = 0; w < u.length; w += 4) {
              var x = u[w];
              u[w] = u[w + 3];
              u[w + 3] = x;
              x = u[w + 1];
              u[w + 1] = u[w + 2];
              u[w + 2] = x;
            }
          var _ = [];
          for (var w = 0; w < 65536; w++) _.push(p(w / 65535));
          for (var w = 0; w < S.length; w++) {
            var q = Math.max(0, Math.min(1, S[w]));
            S[w] = _[~~(0.5 + q * 65535)];
          }
          if (P == 3)
            for (var w = 0; w < U; w++) {
              var C = w << 2,
                Z = w * 3;
              J[C] = ~~(0.5 + S[Z] * 255);
              J[C + 1] = ~~(0.5 + S[Z + 1] * 255);
              J[C + 2] = ~~(0.5 + S[Z + 2] * 255);
              J[C + 3] = 255;
            }
          else if (P == 4)
            for (var w = 0; w < U; w++) {
              var C = w << 2,
                Z = w * 4;
              J[C] = ~~(0.5 + S[Z] * 255);
              J[C + 1] = ~~(0.5 + S[Z + 1] * 255);
              J[C + 2] = ~~(0.5 + S[Z + 2] * 255);
              J[C + 3] = ~~(0.5 + S[Z + 3] * 255);
            }
          else throw P;
        } else throw E;
      } else if ($ == 3) {
        var l = v.t320,
          h = 1 << E,
          g = E == 8 && P > 1 && v.t338 && v.t338[0] != 0;
        for (var Q = 0; Q < f; Q++)
          for (var I = 0; I < Y; I++) {
            var w = Q * Y + I,
              C = w << 2,
              m = 0,
              D = Q * s;
            if (!1) {
            } else if (E == 1) m = (u[D + (I >>> 3)] >>> (7 - (I & 7))) & 1;
            else if (E == 2) m = (u[D + (I >>> 2)] >>> (6 - 2 * (I & 3))) & 3;
            else if (E == 4) m = (u[D + (I >>> 1)] >>> (4 - 4 * (I & 1))) & 15;
            else if (E == 8) m = u[D + I * P];
            else throw E;
            J[C] = l[m] >> 8;
            J[C + 1] = l[h + m] >> 8;
            J[C + 2] = l[h + h + m] >> 8;
            J[C + 3] = g ? u[D + I * P + 1] : 255;
          }
      } else if ($ == 5) {
        var B = P > 4 ? 1 : 0;
        for (var w = 0; w < U; w++) {
          var C = w << 2,
            e = w * P;
          if (window.UDOC) {
            var av = u[e],
              aN = u[e + 1],
              G = u[e + 2],
              X = u[e + 3],
              O = UDOC.C.cmykToRgb([
                av * (1 / 255),
                aN * (1 / 255),
                G * (1 / 255),
                X * (1 / 255),
              ]);
            J[C] = ~~(0.5 + 255 * O[0]);
            J[C + 1] = ~~(0.5 + 255 * O[1]);
            J[C + 2] = ~~(0.5 + 255 * O[2]);
          } else {
            var av = 255 - u[e],
              aN = 255 - u[e + 1],
              G = 255 - u[e + 2],
              X = (255 - u[e + 3]) * (1 / 255);
            J[C] = ~~(av * X + 0.5);
            J[C + 1] = ~~(aN * X + 0.5);
            J[C + 2] = ~~(G * X + 0.5);
          }
          J[C + 3] = 255 * (1 - B) + u[e + 4] * B;
        }
      } else if ($ == 6 && v.t278) {
        var aa = v.t278[0];
        for (var Q = 0; Q < f; Q += aa) {
          var w = Q * Y,
            aT = aa * Y;
          for (var aF = 0; aF < aT; aF++) {
            var C = 4 * (w + aF),
              e = 3 * w + 4 * (aF >>> 1),
              G = u[e + (aF & 1)],
              d = u[e + 2] - 128,
              aV = u[e + 3] - 128,
              b = G + ((aV >> 2) + (aV >> 3) + (aV >> 5)),
              aK =
                G -
                ((d >> 2) + (d >> 4) + (d >> 5)) -
                ((aV >> 1) + (aV >> 3) + (aV >> 4) + (aV >> 5)),
              aY = G + (d + (d >> 1) + (d >> 2) + (d >> 6));
            J[C] = Math.max(0, Math.min(255, b));
            J[C + 1] = Math.max(0, Math.min(255, aK));
            J[C + 2] = Math.max(0, Math.min(255, aY));
            J[C + 3] = 255;
          }
        }
      } else if ($ == 8) {
        if (P != 3 || E != 16) throw "e";
        var ag = new Uint16Array(u.buffer),
          a1 = new Int16Array(u.buffer),
          aN = [
            3.1338561, -1.6168667, -0.4906146, -0.9787684, 1.9161415, 0.033454,
            0.0719453, -0.2289914, 1.4052427,
          ];
        for (var Q = 0; Q < f; Q++)
          for (var I = 0; I < Y; I++) {
            var w = Q * Y + I,
              C = w * 4,
              Z = w * 3,
              aM = ag[Z] * (100 / 65535),
              a = a1[Z + 1] * (255 / 65535),
              aY = a1[Z + 2] * (255 / 65535),
              aO = 903.3,
              W = 0.008856,
              ak = (aM + 16) / 116,
              aP = ak * ak * ak,
              ae = ak - aY / 200,
              R = ae * ae * ae,
              j = a / 500 + ak,
              y = j * j * j,
              A = R > W ? R : (116 * ae - 16) / aO,
              r = aP > W ? aP : (116 * ak - 16) / aO,
              H = y > W ? y : (116 * j - 16) / aO,
              ao = H * (96.42 / 100),
              G = r * (100 / 100),
              a0 = A * (82.49 / 100);
            J[C] = Math.max(
              0,
              Math.min(255, p(ao * aN[0] + G * aN[1] + a0 * aN[2]) * 255)
            );
            J[C + 1] = Math.max(
              0,
              Math.min(255, p(ao * aN[3] + G * aN[4] + a0 * aN[5]) * 255)
            );
            J[C + 2] = Math.max(
              0,
              Math.min(255, p(ao * aN[6] + G * aN[7] + a0 * aN[8]) * 255)
            );
            J[C + 3] = 255;
          }
      } else if ($ == 32845) {
        for (var Q = 0; Q < f; Q++)
          for (var I = 0; I < Y; I++) {
            var e = (Q * Y + I) * 6,
              C = (Q * Y + I) * 4,
              aM = (u[e + 1] << 8) | u[e],
              aM = Math.pow(2, (aM + 0.5) / 256 - 64),
              b5 = (u[e + 3] + 0.5) / 410,
              b7 = (u[e + 5] + 0.5) / 410,
              ac = (9 * b5) / (6 * b5 - 16 * b7 + 12),
              al = (4 * b7) / (6 * b5 - 16 * b7 + 12),
              a7 = aM,
              ao = (ac * a7) / al,
              G = a7,
              a0 = ((1 - ac - al) * a7) / al,
              b = 2.69 * ao - 1.276 * G - 0.414 * a0,
              aK = -1.022 * ao + 1.978 * G + 0.044 * a0,
              aY = 0.061 * ao - 0.224 * G + 1.163 * a0;
            J[C] = p(Math.min(b, 1)) * 255;
            J[C + 1] = p(Math.min(aK, 1)) * 255;
            J[C + 2] = p(Math.min(aY, 1)) * 255;
            J[C + 3] = 255;
          }
      } else aH("Unknown Photometric interpretation: " + $);
      return J;
    };
    t.replaceIMG = function (v) {
      if (v == null) v = document.getElementsByTagName("img");
      var k = ["tif", "tiff", "dng", "cr2", "nef"];
      for (var p = 0; p < v.length; p++) {
        var Y = v[p],
          f = Y.getAttribute("src");
        if (f == null) continue;
        var V = f.split(".").pop().toLowerCase();
        if (k.indexOf(V) == -1) continue;
        var K = new XMLHttpRequest();
        t._xhrs.push(K);
        t._imgs.push(Y);
        K.open("GET", f);
        K.responseType = "arraybuffer";
        K.onload = t._imgLoaded;
        K.send();
      }
    };
    t._xhrs = [];
    t._imgs = [];
    t._imgLoaded = function (v) {
      var k = t._xhrs.indexOf(v.target),
        Y = t._imgs[k];
      t._xhrs.splice(k, 1);
      t._imgs.splice(k, 1);
      Y.setAttribute("src", t.bufferToURI(v.target.response));
    };
    t.bufferToURI = function (v) {
      var k = t.decode(v),
        p = k,
        Y = 0,
        f = p[0];
      if (k[0].subIFD) p = p.concat(k[0].subIFD);
      for (var V = 0; V < p.length; V++) {
        var K = p[V];
        if (K.t258 == null || K.t258.length < 3) continue;
        var u = K.t256 * K.t257;
        if (u > Y) {
          Y = u;
          f = K;
        }
      }
      t.decodeImage(v, f, k);
      var J = t.toRGBA8(f),
        $ = f.width,
        E = f.height,
        P = document.createElement("canvas");
      P.width = $;
      P.height = E;
      var N = P.getContext("2d"),
        s = new ImageData(new Uint8ClampedArray(J.buffer), $, E);
      N.putImageData(s, 0, 0);
      return P.toDataURL();
    };
    t._binBE = {
      nextZero: function (v, k) {
        while (v[k] != 0) k++;
        return k;
      },
      readUshort: function (v, k) {
        return (v[k] << 8) | v[k + 1];
      },
      readShort: function (v, k) {
        var p = t._binBE.ui8;
        p[0] = v[k + 1];
        p[1] = v[k + 0];
        return t._binBE.i16[0];
      },
      readInt: function (v, k) {
        var p = t._binBE.ui8;
        p[0] = v[k + 3];
        p[1] = v[k + 2];
        p[2] = v[k + 1];
        p[3] = v[k + 0];
        return t._binBE.i32[0];
      },
      readUint: function (v, k) {
        var p = t._binBE.ui8;
        p[0] = v[k + 3];
        p[1] = v[k + 2];
        p[2] = v[k + 1];
        p[3] = v[k + 0];
        return t._binBE.ui32[0];
      },
      readASCII: function (v, k, p) {
        var Y = "";
        for (var f = 0; f < p; f++) Y += String.fromCharCode(v[k + f]);
        return Y;
      },
      readFloat: function (v, k) {
        var p = t._binBE.ui8;
        for (var Y = 0; Y < 4; Y++) p[Y] = v[k + 3 - Y];
        return t._binBE.fl32[0];
      },
      readDouble: function (v, k) {
        var p = t._binBE.ui8;
        for (var Y = 0; Y < 8; Y++) p[Y] = v[k + 7 - Y];
        return t._binBE.fl64[0];
      },
      writeUshort: function (v, k, p) {
        v[k] = (p >> 8) & 255;
        v[k + 1] = p & 255;
      },
      writeInt: function (v, k, p) {
        var Y = t._binBE.ui8;
        t._binBE.i32[0] = p;
        v[k + 3] = Y[0];
        v[k + 2] = Y[1];
        v[k + 1] = Y[2];
        v[k + 0] = Y[3];
      },
      writeUint: function (v, k, p) {
        v[k] = (p >> 24) & 255;
        v[k + 1] = (p >> 16) & 255;
        v[k + 2] = (p >> 8) & 255;
        v[k + 3] = (p >> 0) & 255;
      },
      writeASCII: function (v, k, p) {
        for (var Y = 0; Y < p.length; Y++) v[k + Y] = p.charCodeAt(Y);
      },
      writeDouble: function (v, k, p) {
        t._binBE.fl64[0] = p;
        for (var Y = 0; Y < 8; Y++) v[k + Y] = t._binBE.ui8[7 - Y];
      },
    };
    t._binBE.ui8 = new Uint8Array(8);
    t._binBE.i16 = new Int16Array(t._binBE.ui8.buffer);
    t._binBE.i32 = new Int32Array(t._binBE.ui8.buffer);
    t._binBE.ui32 = new Uint32Array(t._binBE.ui8.buffer);
    t._binBE.fl32 = new Float32Array(t._binBE.ui8.buffer);
    t._binBE.fl64 = new Float64Array(t._binBE.ui8.buffer);
    t._binLE = {
      nextZero: t._binBE.nextZero,
      readUshort: function (v, k) {
        return (v[k + 1] << 8) | v[k];
      },
      readShort: function (v, k) {
        var p = t._binBE.ui8;
        p[0] = v[k + 0];
        p[1] = v[k + 1];
        return t._binBE.i16[0];
      },
      readInt: function (v, k) {
        var p = t._binBE.ui8;
        p[0] = v[k + 0];
        p[1] = v[k + 1];
        p[2] = v[k + 2];
        p[3] = v[k + 3];
        return t._binBE.i32[0];
      },
      readUint: function (v, k) {
        var p = t._binBE.ui8;
        p[0] = v[k + 0];
        p[1] = v[k + 1];
        p[2] = v[k + 2];
        p[3] = v[k + 3];
        return t._binBE.ui32[0];
      },
      readASCII: t._binBE.readASCII,
      readFloat: function (v, k) {
        var p = t._binBE.ui8;
        for (var Y = 0; Y < 4; Y++) p[Y] = v[k + Y];
        return t._binBE.fl32[0];
      },
      readDouble: function (v, k) {
        var p = t._binBE.ui8;
        for (var Y = 0; Y < 8; Y++) p[Y] = v[k + Y];
        return t._binBE.fl64[0];
      },
      writeUshort: function (v, k, p) {
        v[k] = p & 255;
        v[k + 1] = (p >> 8) & 255;
      },
      writeInt: function (v, k, p) {
        var Y = t._binBE.ui8;
        t._binBE.i32[0] = p;
        v[k + 0] = Y[0];
        v[k + 1] = Y[1];
        v[k + 2] = Y[2];
        v[k + 3] = Y[3];
      },
      writeUint: function (v, k, p) {
        v[k] = (p >>> 0) & 255;
        v[k + 1] = (p >>> 8) & 255;
        v[k + 2] = (p >>> 16) & 255;
        v[k + 3] = (p >>> 24) & 255;
      },
      writeASCII: t._binBE.writeASCII,
    };
    t._copyTile = function (v, k, p, Y, f, V, U, K) {
      var u = Math.min(k, f - U),
        J = Math.min(p, V - K);
      for (var $ = 0; $ < J; $++) {
        var E = (K + $) * f + U,
          P = $ * k;
        for (var N = 0; N < u; N++) Y[E + N] = v[P + N];
      }
    };
    t._inflateRaw = (function () {
      var v = (function () {
        var N = Uint16Array,
          s = Uint32Array;
        return {
          m: new N(16),
          v: new N(16),
          d: [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
          o: [
            3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51,
            59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 999, 999, 999,
          ],
          z: [
            0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4,
            4, 5, 5, 5, 5, 0, 0, 0, 0,
          ],
          B: new N(32),
          p: [
            1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385,
            513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385,
            24577, 65535, 65535,
          ],
          w: [
            0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9,
            10, 10, 11, 11, 12, 12, 13, 13, 0, 0,
          ],
          h: new s(32),
          g: new N(512),
          s: [],
          A: new N(32),
          t: [],
          k: new N(32768),
          c: [],
          a: [],
          n: new N(32768),
          e: [],
          C: new N(512),
          b: [],
          i: new N(1 << 15),
          r: new s(286),
          f: new s(30),
          l: new s(19),
          u: new s(15e3),
          q: new N(1 << 16),
          j: new N(1 << 15),
        };
      })();
      function k(N, s) {
        var Q = N.length,
          w,
          n,
          o,
          M,
          x,
          g = v.v;
        for (var M = 0; M <= s; M++) g[M] = 0;
        for (M = 1; M < Q; M += 2) g[N[M]]++;
        var I = v.m;
        w = 0;
        g[0] = 0;
        for (n = 1; n <= s; n++) {
          w = (w + g[n - 1]) << 1;
          I[n] = w;
        }
        for (o = 0; o < Q; o += 2) {
          x = N[o + 1];
          if (x != 0) {
            N[o] = I[x];
            I[x]++;
          }
        }
      }
      function p(N, s, Q) {
        var w = N.length,
          n = v.i;
        for (var o = 0; o < w; o += 2)
          if (N[o + 1] != 0) {
            var M = o >> 1,
              x = N[o + 1],
              g = (M << 4) | x,
              I = s - x,
              m = N[o] << I,
              D = m + (1 << I);
            while (m != D) {
              var e = n[m] >>> (15 - s);
              Q[e] = g;
              m++;
            }
          }
      }
      function Y(N, s) {
        var Q = v.i,
          w = 15 - s;
        for (var n = 0; n < N.length; n += 2) {
          var o = N[n] << (s - N[n + 1]);
          N[n] = Q[o] >>> w;
        }
      }
      (function () {
        var N = 1 << 15;
        for (var s = 0; s < N; s++) {
          var Q = s;
          Q = ((Q & 2863311530) >>> 1) | ((Q & 1431655765) << 1);
          Q = ((Q & 3435973836) >>> 2) | ((Q & 858993459) << 2);
          Q = ((Q & 4042322160) >>> 4) | ((Q & 252645135) << 4);
          Q = ((Q & 4278255360) >>> 8) | ((Q & 16711935) << 8);
          v.i[s] = ((Q >>> 16) | (Q << 16)) >>> 17;
        }
        function w(n, o, M) {
          while (o-- != 0) n.push(0, M);
        }
        for (var s = 0; s < 32; s++) {
          v.B[s] = (v.o[s] << 3) | v.z[s];
          v.h[s] = (v.p[s] << 4) | v.w[s];
        }
        w(v.s, 144, 8);
        w(v.s, 255 - 143, 9);
        w(v.s, 279 - 255, 7);
        w(v.s, 287 - 279, 8);
        k(v.s, 9);
        p(v.s, 9, v.g);
        Y(v.s, 9);
        w(v.t, 32, 5);
        k(v.t, 5);
        p(v.t, 5, v.A);
        Y(v.t, 5);
        w(v.b, 19, 0);
        w(v.c, 286, 0);
        w(v.e, 30, 0);
        w(v.a, 320, 0);
      })();
      function V(N, s, Q) {
        return (
          ((N[s >>> 3] | (N[(s >>> 3) + 1] << 8)) >>> (s & 7)) & ((1 << Q) - 1)
        );
      }
      function U(N, s, Q) {
        return (
          ((N[s >>> 3] | (N[(s >>> 3) + 1] << 8) | (N[(s >>> 3) + 2] << 16)) >>>
            (s & 7)) &
          ((1 << Q) - 1)
        );
      }
      function K(N, s) {
        return (
          (N[s >>> 3] | (N[(s >>> 3) + 1] << 8) | (N[(s >>> 3) + 2] << 16)) >>>
          (s & 7)
        );
      }
      function u(N, s) {
        return (
          (N[s >>> 3] |
            (N[(s >>> 3) + 1] << 8) |
            (N[(s >>> 3) + 2] << 16) |
            (N[(s >>> 3) + 3] << 24)) >>>
          (s & 7)
        );
      }
      function J(N, s) {
        var Q = Uint8Array,
          w = 0,
          n = 0,
          o = 0,
          M = 0,
          T = 0,
          x = 0,
          g = 0,
          I = 0,
          m = 0,
          D,
          e;
        if (N[0] == 3 && N[1] == 0) return s ? s : new Q(0);
        var aN = s == null;
        if (aN) s = new Q((N.length >>> 2) << 3);
        while (w == 0) {
          w = U(N, m, 1);
          n = U(N, m + 1, 2);
          m += 3;
          if (n == 0) {
            if ((m & 7) != 0) m += 8 - (m & 7);
            var G = (m >>> 3) + 4,
              X = N[G - 4] | (N[G - 3] << 8);
            if (aN) s = $(s, I + X);
            s.set(new Q(N.buffer, N.byteOffset + G, X), I);
            m = (G + X) << 3;
            I += X;
            continue;
          }
          if (aN) s = $(s, I + (1 << 17));
          if (n == 1) {
            D = v.g;
            e = v.A;
            x = (1 << 9) - 1;
            g = (1 << 5) - 1;
          }
          if (n == 2) {
            o = V(N, m, 5) + 257;
            M = V(N, m + 5, 5) + 1;
            T = V(N, m + 10, 4) + 4;
            m += 14;
            var O = m,
              aa = 1;
            for (var aT = 0; aT < 38; aT += 2) {
              v.b[aT] = 0;
              v.b[aT + 1] = 0;
            }
            for (var aT = 0; aT < T; aT++) {
              var aF = V(N, m + aT * 3, 3);
              v.b[(v.d[aT] << 1) + 1] = aF;
              if (aF > aa) aa = aF;
            }
            m += 3 * T;
            k(v.b, aa);
            p(v.b, aa, v.C);
            D = v.k;
            e = v.n;
            m = E(v.C, (1 << aa) - 1, o + M, N, m, v.a);
            var d = P(v.a, 0, o, v.c);
            x = (1 << d) - 1;
            var i = P(v.a, o, M, v.e);
            g = (1 << i) - 1;
            k(v.c, d);
            p(v.c, d, D);
            k(v.e, i);
            p(v.e, i, e);
          }
          while (!0) {
            var aV = D[K(N, m) & x];
            m += aV & 15;
            var b = aV >>> 4;
            if (b >>> 8 == 0) {
              s[I++] = b;
            } else if (b == 256) {
              break;
            } else {
              var aK = I + b - 254;
              if (b > 264) {
                var aY = v.B[b - 257];
                aK = I + (aY >>> 3) + V(N, m, aY & 7);
                m += aY & 7;
              }
              var ag = e[K(N, m) & g];
              m += ag & 15;
              var a1 = ag >>> 4,
                aM = v.h[a1],
                a = (aM >>> 4) + U(N, m, aM & 15);
              m += aM & 15;
              if (aN) s = $(s, I + (1 << 17));
              while (I < aK) {
                s[I] = s[I++ - a];
                s[I] = s[I++ - a];
                s[I] = s[I++ - a];
                s[I] = s[I++ - a];
              }
              I = aK;
            }
          }
        }
        return s.length == I ? s : s.slice(0, I);
      }
      function $(N, s) {
        var Q = N.length;
        if (s <= Q) return N;
        var w = new Uint8Array(Math.max(Q << 1, s));
        w.set(N, 0);
        return w;
      }
      function E(N, s, Q, w, n, o) {
        var M = 0;
        while (M < Q) {
          var x = N[K(w, n) & s];
          n += x & 15;
          var g = x >>> 4;
          if (g <= 15) {
            o[M] = g;
            M++;
          } else {
            var I = 0,
              m = 0;
            if (g == 16) {
              m = 3 + V(w, n, 2);
              n += 2;
              I = o[M - 1];
            } else if (g == 17) {
              m = 3 + V(w, n, 3);
              n += 3;
            } else if (g == 18) {
              m = 11 + V(w, n, 7);
              n += 7;
            }
            var D = M + m;
            while (M < D) {
              o[M] = I;
              M++;
            }
          }
        }
        return n;
      }
      function P(N, s, Q, w) {
        var n = 0,
          o = 0,
          M = w.length >>> 1;
        while (o < Q) {
          var x = N[o + s];
          w[o << 1] = 0;
          w[(o << 1) + 1] = x;
          if (x > n) n = x;
          o++;
        }
        while (o < M) {
          w[o << 1] = 0;
          w[(o << 1) + 1] = 0;
          o++;
        }
        return n;
      }
      return J;
    })();
    t.LosslessJpegDecode = (function () {
      var v, k;
      function p() {
        return v[k++];
      }
      function Y() {
        return (v[k++] << 8) | v[k++];
      }
      function f(z) {
        var w = p(),
          C = [0, 0, 0, 255],
          c = [],
          n = 8;
        for (var o = 0; o < 16; o++) c[o] = p();
        for (var o = 0; o < 16; o++) {
          for (var M = 0; M < c[o]; M++) {
            var Z = V(C, 0, o + 1, 1);
            C[Z + 3] = p();
          }
        }
        var x = new Uint8Array(1 << n);
        z[w] = [new Uint8Array(C), x];
        for (var o = 0; o < 1 << n; o++) {
          var _ = n,
            m = o,
            B = 0,
            e = 0;
          while (C[B + 3] == 255 && _ != 0) {
            e = (m >> --_) & 1;
            B = C[B + e];
          }
          x[o] = B;
        }
      }
      function V(z, w, C, c) {
        if (z[w + 3] != 255) return 0;
        if (C == 0) return w;
        for (var n = 0; n < 2; n++) {
          if (z[w + n] == 0) {
            z[w + n] = z.length;
            z.push(0, 0, c, 255);
          }
          var M = V(z, z[w + n], C - 1, c + 1);
          if (M != 0) return M;
        }
        return 0;
      }
      function U(z) {
        var w = z.c,
          C = z.f;
        while (w < 25 && z.d < z.a) {
          var c = z.data[z.d++];
          if (c == 255 && !z.b) z.d++;
          C = (C << 8) | c;
          w += 8;
        }
        if (w < 0) throw "e";
        z.c = w;
        z.f = C;
      }
      function K(z, w) {
        if (w.c < z) U(w);
        return (w.f >> (w.c -= z)) & (65535 >> (16 - z));
      }
      function u(z, w) {
        var C = z[0],
          c = 0,
          n = 255,
          M = 0;
        if (w.c < 16) U(w);
        var Z = (w.f >> (w.c - 8)) & 255;
        c = z[1][Z];
        n = C[c + 3];
        w.c -= C[c + 2];
        while (n == 255) {
          M = (w.f >> --w.c) & 1;
          c = C[c + M];
          n = C[c + 3];
        }
        return n;
      }
      function J(z, w) {
        if (z < 32768 >> (16 - w)) z += -(1 << w) + 1;
        return z;
      }
      function $(z, w) {
        var C = u(z, w);
        if (C == 0) return 0;
        if (C == 16) return -32768;
        var c = K(C, w);
        return J(c, C);
      }
      function E(z, w, C, c, n, M) {
        var Z = 0;
        for (var x = 0; x < M; x++) {
          var _ = x * w;
          for (var m = 0; m < w; m += n) {
            Z++;
            for (var B = 0; B < n; B++) z[_ + m + B] = $(c[B], C);
          }
          if (C.e != 0 && Z % C.e == 0 && x != 0) {
            var e = C.d,
              aN = C.data;
            while (aN[e] != 255 || !(208 <= aN[e + 1] && aN[e + 1] <= 215)) e--;
            C.d = e + 2;
            C.f = 0;
            C.c = 0;
          }
        }
      }
      function P(z, w) {
        return J(K(z, w), z);
      }
      function N(z, w, C, c, n) {
        var M = v.length - k;
        for (var Z = 0; Z < M; Z += 4) {
          var x = v[k + Z];
          v[k + Z] = v[k + Z + 3];
          v[k + Z + 3] = x;
          var x = v[k + Z + 1];
          v[k + Z + 1] = v[k + Z + 2];
          v[k + Z + 2] = x;
        }
        for (var _ = 0; _ < n; _++) {
          var m = 32768,
            B = 32768;
          for (var e = 0; e < w; e += 2) {
            var aN = u(c, C),
              O = u(c, C);
            if (aN != 0) m += P(aN, C);
            if (O != 0) B += P(O, C);
            z[_ * w + e] = m & 65535;
            z[_ * w + e + 1] = B & 65535;
          }
        }
      }
      function s(z) {
        v = z;
        k = 0;
        if (Y() != 65496) throw "e";
        var w = [],
          C = 0,
          c = 0,
          n = 0,
          M = [],
          Z = [],
          x = [],
          _ = 0,
          m = 0,
          B = 0;
        while (!0) {
          var e = Y();
          if (e == 65535) {
            k--;
            continue;
          }
          var aN = Y();
          if (e == 65475) {
            c = p();
            m = Y();
            B = Y();
            _ = p();
            for (var O = 0; O < _; O++) {
              var aa = p(),
                aT = p(),
                aF = p();
              if (aF != 0) throw "e";
              w[aa] = [O, aT >> 4, aT & 15];
            }
          } else if (e == 65476) {
            var d = k + aN - 2;
            while (k < d) f(Z);
          } else if (e == 65498) {
            k++;
            for (var O = 0; O < _; O++) {
              var aY = p(),
                a = w[aY];
              x[a[0]] = Z[p() >>> 4];
              M[a[0]] = a.slice(1);
            }
            C = p();
            k += 2;
            break;
          } else if (e == 65501) {
            n = Y();
          } else {
            k += aN - 2;
          }
        }
        var W = c > 8 ? Uint16Array : Uint8Array,
          ak = new W(m * B * _),
          aP = { c: 0, f: 0, b: C == 8, d: k, data: v, a: v.length, e: n };
        if (aP.b) N(ak, B * _, aP, x[0], m);
        else {
          var ae = [],
            R = 0,
            j = 0;
          for (var O = 0; O < _; O++) {
            var y = M[O],
              A = y[0],
              r = y[1];
            if (A > R) R = A;
            if (r > j) j = r;
            ae.push(A * r);
          }
          if (R != 1 || j != 1) {
            if (_ != 3 || ae[1] != 1 || ae[2] != 1) throw "e";
            if (R != 2 || (j != 1 && j != 2)) throw "e";
            var H = [],
              ao = 0;
            for (var O = 0; O < _; O++) {
              for (var a0 = 0; a0 < ae[O]; a0++) H.push(x[O]);
              ao += ae[O];
            }
            var b5 = B / R,
              b7 = m / j,
              ac = b5 * b7;
            E(ak, b5 * ao, aP, H, ao, b7);
            F(ak, C, b5, b7, ao - 2, ao, ao, c);
            var al = new Uint16Array(ac * ae[0]);
            if (R == 2 && j == 2) {
              for (var O = 0; O < ac; O++) {
                al[4 * O] = ak[6 * O];
                al[4 * O + 1] = ak[6 * O + 1];
                al[4 * O + 2] = ak[6 * O + 2];
                al[4 * O + 3] = ak[6 * O + 3];
              }
              F(al, C, b5 * 4, b7, 0, 1, 1, c);
              for (var O = 0; O < ac; O++) {
                ak[6 * O] = al[4 * O];
                ak[6 * O + 1] = al[4 * O + 1];
                ak[6 * O + 2] = al[4 * O + 2];
                ak[6 * O + 3] = al[4 * O + 3];
              }
            }
            if (R == 2 && j == 1) {
              for (var O = 0; O < ac; O++) {
                al[2 * O] = ak[4 * O];
                al[2 * O + 1] = ak[4 * O + 1];
              }
              F(al, C, b5 * 2, b7, 0, 1, 1, c);
              for (var O = 0; O < ac; O++) {
                ak[4 * O] = al[2 * O];
                ak[4 * O + 1] = al[2 * O + 1];
              }
            }
            var a7 = ak.slice(0);
            for (var r = 0; r < m; r++) {
              if (j == 2)
                for (var A = 0; A < B; A++) {
                  var aX = (r * B + A) * _,
                    a4 = ((r >>> 1) * b5 + (A >>> 1)) * ao,
                    ai = (r & 1) * 2 + (A & 1);
                  ak[aX] = a7[a4 + ai];
                  ak[aX + 1] = a7[a4 + 4];
                  ak[aX + 2] = a7[a4 + 5];
                }
              else
                for (var A = 0; A < B; A++) {
                  var aX = (r * B + A) * _,
                    a4 = (r * b5 + (A >>> 1)) * ao,
                    ai = A & 1;
                  ak[aX] = a7[a4 + ai];
                  ak[aX + 1] = a7[a4 + 2];
                  ak[aX + 2] = a7[a4 + 3];
                }
            }
          } else {
            E(ak, B * _, aP, x, _, m);
            if (n == 0) F(ak, C, B, m, 0, _, _, c);
            else {
              var b4 = Math.floor(n / B);
              for (var r = 0; r < m; r += b4) {
                var aS = ak.slice(r * B * _, (r + b4) * B * _);
                F(aS, C, B, b4, 0, _, _, c);
                ak.set(aS, r * B * _);
              }
            }
          }
        }
        return [ak, B, m, _];
      }
      function F(z, w, C, c, n, M, Z, x) {
        var _ = C * Z;
        for (var m = n; m < M; m++) z[m] += 1 << (x - 1);
        for (var B = Z; B < _; B += Z)
          for (var m = n; m < M; m++) z[B + m] += z[B + m - Z];
        for (var e = 1; e < c; e++) {
          var aN = e * _;
          for (var m = n; m < M; m++) z[aN + m] += z[aN + m - _];
          for (var B = Z; B < _; B += Z) {
            for (var m = n; m < M; m++) {
              var O = aN + B + m,
                aa = O - _,
                aT = z[O - Z],
                aF = 0;
              if (w == 0) aF = 0;
              else if (w == 1) aF = aT;
              else if (w == 2) aF = z[aa];
              else if (w == 3) aF = z[aa - Z];
              else if (w == 4) aF = aT + (z[aa] - z[aa - Z]);
              else if (w == 5) aF = aT + ((z[aa] - z[aa - Z]) >>> 1);
              else if (w == 6) aF = z[aa] + ((aT - z[aa - Z]) >>> 1);
              else if (w == 7) aF = (aT + z[aa]) >>> 1;
              else throw w;
              z[O] += aF;
            }
          }
        }
      }
      return s;
    })();
    (function () {
      var v = 0,
        k = 1,
        p = 2,
        Y = 3,
        f = 4,
        V = 5,
        K = 6,
        u = 7,
        J = 8,
        $ = 9,
        E = 10,
        P = 11,
        N = 12,
        Q = 13,
        z = 14,
        w = 15,
        C = 16,
        c = 17,
        o = 18;
      function M(d) {
        var i = t._binBE.readUshort,
          R = {
            b: i(d, 0),
            i: d[2],
            C: d[3],
            u: d[4],
            q: i(d, 5),
            k: i(d, 7),
            e: i(d, 9),
            l: i(d, 11),
            s: d[13],
            d: i(d, 14),
          };
        if (
          R.b != 18771 ||
          R.i > 1 ||
          R.q < 6 ||
          R.q % 6 ||
          R.e < 768 ||
          R.e % 24 ||
          R.l != 768 ||
          R.k < R.l ||
          R.k % R.l ||
          R.k - R.e >= R.l ||
          R.s > 16 ||
          R.s != R.k / R.l ||
          R.s != Math.ceil(R.e / R.l) ||
          R.d != R.q / 6 ||
          (R.u != 12 && R.u != 14 && R.u != 16) ||
          (R.C != 16 && R.C != 0)
        ) {
          throw "Invalid data";
        }
        if (R.i == 0) {
          throw "Not implemented. We need this file!";
        }
        R.h = R.C == 16;
        R.m = (R.h ? (R.l * 2) / 3 : R.l >>> 1) | 0;
        R.A = R.m + 2;
        R.f = 64;
        R.g = (1 << R.u) - 1;
        R.n = 4 * R.u;
        return R;
      }
      function T(d, i) {
        var R = new Array(i.s),
          j = 4 * i.s,
          y = 16 + j;
        if (j & 12) y += 16 - (j & 12);
        for (var A = 0, r = 16; A < i.s; r += 4) {
          var H = t._binBE.readUint(d, r);
          R[A] = d.slice(y, y + H);
          R[A].j = 0;
          R[A].a = 0;
          y += H;
          A++;
        }
        if (y != d.length) throw "Invalid data";
        return R;
      }
      function Z(d, i) {
        for (var R = -i[4], j = 0; R <= i[4]; j++, R++) {
          d[j] =
            R <= -i[3]
              ? -4
              : R <= -i[2]
              ? -3
              : R <= -i[1]
              ? -2
              : R < -i[0]
              ? -1
              : R <= i[0]
              ? 0
              : R < i[1]
              ? 1
              : R < i[2]
              ? 2
              : R < i[3]
              ? 3
              : 4;
        }
      }
      function S(d, i, R) {
        var j = [i, 3 * i + 18, 5 * i + 67, 7 * i + 276, R];
        d.o = i;
        d.w = ((j[4] + 2 * i) / (2 * i + 1) + 1) | 0;
        d.v = Math.ceil(Math.log2(d.w));
        d.t = 9;
        Z(d.c, j);
      }
      function L(d) {
        var i = { c: new Int8Array(2 << d.u) };
        S(i, 0, d.g);
        return i;
      }
      function l(d) {
        var i = [[], [], []],
          R = Math.max(2, (d.w + 32) >>> 6);
        for (var j = 0; j < 3; j++) {
          for (var y = 0; y < 41; y++) {
            i[j][y] = [R, 1];
          }
        }
        return i;
      }
      function h(d) {
        for (var i = -1, R = 0; !R; i++) {
          R = (d[d.j] >>> (7 - d.a)) & 1;
          d.a++;
          d.a &= 7;
          if (!d.a) d.j++;
        }
        return i;
      }
      function I(d, i) {
        var R = 0,
          j = 8 - d.a,
          y = d.j,
          A = d.a;
        if (i) {
          if (i >= j) {
            do {
              R <<= j;
              i -= j;
              R |= d[d.j] & ((1 << j) - 1);
              d.j++;
              j = 8;
            } while (i >= 8);
          }
          if (i) {
            R <<= i;
            j -= i;
            R |= (d[d.j] >>> j) & ((1 << i) - 1);
          }
          d.a = 8 - j;
        }
        return R;
      }
      function e(d, i) {
        var R = 0;
        if (i < d) {
          while (R <= 14 && i << ++R < d);
        }
        return R;
      }
      function av(d, i, R, j, y, A, r, H) {
        if (H == null) H = 0;
        var ao = A + 1,
          a0 = ao % 2,
          b5 = 0,
          b7 = 0,
          ac = 0,
          al,
          a7,
          aX = j[y],
          a4 = j[y - 1],
          ai = j[y - 2][ao],
          b4 = a4[ao - 1],
          aS = a4[ao],
          ah = a4[ao + 1],
          a_ = aX[ao - 1],
          aA = aX[ao + 1],
          b3 = Math.abs,
          aE,
          aI,
          au,
          b2;
        if (a0) {
          aE = b3(ah - aS);
          aI = b3(ai - aS);
          au = b3(b4 - aS);
        }
        if (a0) {
          b2 =
            aE > au && aI < aE
              ? ai + b4
              : aE < au && aI < au
              ? ai + ah
              : ah + b4;
          b2 = (b2 + 2 * aS) >>> 2;
          if (H) {
            aX[ao] = b2;
            return;
          }
          al = i.t * i.c[d.g + aS - ai] + i.c[d.g + b4 - aS];
        } else {
          b2 =
            (aS > b4 && aS > ah) || (aS < b4 && aS < ah)
              ? (aA + a_ + 2 * aS) >>> 2
              : (a_ + aA) >>> 1;
          al = i.t * i.c[d.g + aS - b4] + i.c[d.g + b4 - a_];
        }
        a7 = b3(al);
        var aq = h(R);
        if (aq < d.n - i.v - 1) {
          var ad = e(r[a7][0], r[a7][1]);
          ac = I(R, ad) + (aq << ad);
        } else {
          ac = I(R, i.v) + 1;
        }
        ac = ac & 1 ? -1 - (ac >>> 1) : ac >>> 1;
        r[a7][0] += b3(ac);
        if (r[a7][1] == d.f) {
          r[a7][0] >>>= 1;
          r[a7][1] >>>= 1;
        }
        r[a7][1]++;
        b2 = al < 0 ? b2 - ac : b2 + ac;
        if (d.i) {
          if (b2 < 0) b2 += i.w;
          else if (b2 > d.g) b2 -= i.w;
        }
        aX[ao] = b2 >= 0 ? Math.min(b2, d.g) : 0;
      }
      function aN(d, i, R) {
        var j = d[0].length;
        for (var y = i; y <= R; y++) {
          d[y][0] = d[y - 1][1];
          d[y][j - 1] = d[y - 1][j - 2];
        }
      }
      function G(d) {
        aN(d, u, N);
        aN(d, p, f);
        aN(d, w, c);
      }
      function X(d, i, R, j, y, A, r, H, ao, a0, b5, b7, ac) {
        var al = 0,
          a7 = 1,
          aX = y < Q && y > f;
        while (a7 < d.m) {
          if (al < d.m) {
            av(
              d,
              i,
              R,
              j,
              y,
              al,
              r[ao],
              d.h && ((aX && a0) || (!aX && (b5 || (al & b7) == ac)))
            );
            av(
              d,
              i,
              R,
              j,
              A,
              al,
              r[ao],
              d.h && ((!aX && a0) || (aX && (b5 || (al & b7) == ac)))
            );
            al += 2;
          }
          if (al > 8) {
            av(d, i, R, j, y, a7, H[ao]);
            av(d, i, R, j, A, a7, H[ao]);
            a7 += 2;
          }
        }
        G(j);
      }
      function aT(d, i, R, j, y, A) {
        X(d, i, R, j, p, u, y, A, 0, 0, 1, 0, 8);
        X(d, i, R, j, J, w, y, A, 1, 0, 1, 0, 8);
        X(d, i, R, j, Y, $, y, A, 2, 1, 0, 3, 0);
        X(d, i, R, j, E, C, y, A, 0, 0, 0, 3, 2);
        X(d, i, R, j, f, P, y, A, 1, 0, 0, 3, 2);
        X(d, i, R, j, N, c, y, A, 2, 1, 0, 3, 0);
      }
      function aF(d, i, R, j, y, A) {
        var r = A.length,
          H = d.l;
        if (y + 1 == d.s) H = d.e - y * d.l;
        var ao = 6 * d.e * j + y * d.l;
        for (var a0 = 0; a0 < 6; a0++) {
          for (var b5 = 0; b5 < H; b5++) {
            var b7 = A[a0 % r][b5 % r],
              ac;
            if (b7 == 0) {
              ac = p + (a0 >>> 1);
            } else if (b7 == 2) {
              ac = w + (a0 >>> 1);
            } else {
              ac = u + a0;
            }
            var al = d.h
              ? ((((b5 * 2) / 3) & 2147483646) | (b5 % 3 & 1)) + (b5 % 3 >>> 1)
              : b5 >>> 1;
            i[ao + b5] = R[ac][al + 1];
          }
          ao += d.e;
        }
      }
      t._decompressRAF = function (d, i) {
        var R = M(d),
          j = T(d, R),
          y = L(R),
          A = new Int16Array(R.e * R.q);
        if (i == null) {
          i = R.h
            ? [
                [1, 1, 0, 1, 1, 2],
                [1, 1, 2, 1, 1, 0],
                [2, 0, 1, 0, 2, 1],
                [1, 1, 2, 1, 1, 0],
                [1, 1, 0, 1, 1, 2],
                [0, 2, 1, 2, 0, 1],
              ]
            : [
                [0, 1],
                [3, 2],
              ];
        }
        var r = [
            [v, Y],
            [k, f],
            [V, P],
            [K, N],
            [Q, C],
            [z, c],
          ],
          H = [];
        for (var ao = 0; ao < o; ao++) {
          H[ao] = new Uint16Array(R.A);
        }
        for (var a0 = 0; a0 < R.s; a0++) {
          var b5 = l(y),
            b7 = l(y);
          for (var ao = 0; ao < o; ao++) {
            for (var ac = 0; ac < R.A; ac++) {
              H[ao][ac] = 0;
            }
          }
          for (var al = 0; al < R.d; al++) {
            aT(R, y, j[a0], H, b5, b7);
            for (var ao = 0; ao < 6; ao++) {
              for (var ac = 0; ac < R.A; ac++) {
                H[r[ao][0]][ac] = H[r[ao][1]][ac];
              }
            }
            aF(R, A, H, al, a0, i);
            for (var ao = p; ao < o; ao++) {
              if ([V, K, Q, z].indexOf(ao) == -1) {
                for (var ac = 0; ac < R.A; ac++) {
                  H[ao][ac] = 0;
                }
              }
            }
            G(H);
          }
        }
        return A;
      };
    })();
  })(t);
})();

("use strict");
function GifWriter(l, e, c, h) {
  var s = 0,
    h = h === undefined ? {} : h,
    v = h.loop === undefined ? null : h.loop,
    F = h.palette === undefined ? null : h.palette,
    u = 0,
    q = 0,
    d = !1;
  if (e <= 0 || c <= 0 || e > 65535 || c > 65535)
    throw new Error("Width/Height invalid.");
  function m(C) {
    var j = C.length;
    if (j < 2 || j > 256 || j & (j - 1)) {
      throw new Error(
        "Invalid code/color length, must be power of 2 and 2 .. 256."
      );
    }
    return j;
  }
  l[s++] = 71;
  l[s++] = 73;
  l[s++] = 70;
  l[s++] = 56;
  l[s++] = 57;
  l[s++] = 97;
  if (F !== null) {
    var i = m(F);
    while ((i >>= 1)) ++u;
    i = 1 << u;
    --u;
    if (h.background !== undefined) {
      q = h.background;
      if (q >= i) throw new Error("Background index out of range.");
      if (q === 0) throw new Error("Background index explicitly passed as 0.");
    }
  }
  l[s++] = e & 255;
  l[s++] = (e >> 8) & 255;
  l[s++] = c & 255;
  l[s++] = (c >> 8) & 255;
  l[s++] = (F !== null ? 128 : 0) | u;
  l[s++] = q;
  l[s++] = 0;
  if (F !== null) {
    for (var o = 0, g = F.length; o < g; ++o) {
      var f = F[o];
      l[s++] = (f >> 16) & 255;
      l[s++] = (f >> 8) & 255;
      l[s++] = f & 255;
    }
  }
  if (v !== null) {
    if (v < 0 || v > 65535) throw new Error("Loop count invalid.");
    l[s++] = 33;
    l[s++] = 255;
    l[s++] = 11;
    l[s++] = 78;
    l[s++] = 69;
    l[s++] = 84;
    l[s++] = 83;
    l[s++] = 67;
    l[s++] = 65;
    l[s++] = 80;
    l[s++] = 69;
    l[s++] = 50;
    l[s++] = 46;
    l[s++] = 48;
    l[s++] = 3;
    l[s++] = 1;
    l[s++] = v & 255;
    l[s++] = (v >> 8) & 255;
    l[s++] = 0;
  }
  this.addFrame = function (C, j, z, b, w, E) {
    if (d === !0) {
      --s;
      d = !1;
    }
    E = E === undefined ? {} : E;
    if (C < 0 || j < 0 || C > 65535 || j > 65535)
      throw new Error("x/y invalid.");
    if (z <= 0 || b <= 0 || z > 65535 || b > 65535)
      throw new Error("Width/Height invalid.");
    if (w.length < z * b)
      throw new Error("Not enough pixels for the frame size.");
    var r = !0,
      k = E.palette,
      t = 0,
      A = !1,
      D = 0;
    if (k === undefined || k === null) {
      r = !1;
      k = F;
    }
    if (k === undefined || k === null)
      throw new Error("Must supply either a local or global palette.");
    var B = m(k);
    while ((B >>= 1)) ++t;
    B = 1 << t;
    var G = E.delay === undefined ? 0 : E.delay,
      a = E.disposal === undefined ? 0 : E.disposal;
    if (a < 0 || a > 3) throw new Error("Disposal out of range.");
    if (E.transparent !== undefined && E.transparent !== null) {
      A = !0;
      D = E.transparent;
      if (D < 0 || D >= B) throw new Error("Transparent color index.");
    }
    if (a !== 0 || A || G !== 0) {
      l[s++] = 33;
      l[s++] = 249;
      l[s++] = 4;
      l[s++] = (a << 2) | (A === !0 ? 1 : 0);
      l[s++] = G & 255;
      l[s++] = (G >> 8) & 255;
      l[s++] = D;
      l[s++] = 0;
    }
    l[s++] = 44;
    l[s++] = C & 255;
    l[s++] = (C >> 8) & 255;
    l[s++] = j & 255;
    l[s++] = (j >> 8) & 255;
    l[s++] = z & 255;
    l[s++] = (z >> 8) & 255;
    l[s++] = b & 255;
    l[s++] = (b >> 8) & 255;
    l[s++] = r === !0 ? 128 | (t - 1) : 0;
    if (r === !0) {
      for (var o = 0, g = k.length; o < g; ++o) {
        var f = k[o];
        l[s++] = (f >> 16) & 255;
        l[s++] = (f >> 8) & 255;
        l[s++] = f & 255;
      }
    }
    s = GifWriterOutputLZWCodeStream(l, s, t < 2 ? 2 : t, w);
    return s;
  };
  this.end = function () {
    if (d === !1) {
      l[s++] = 59;
      d = !0;
    }
    return s;
  };
  this.getOutputBuffer = function () {
    return l;
  };
  this.setOutputBuffer = function (C) {
    l = C;
  };
  this.getOutputBufferPosition = function () {
    return s;
  };
  this.setOutputBufferPosition = function (C) {
    s = C;
  };
}
function GifWriterOutputLZWCodeStream(l, e, c, h) {
  l[e++] = c;
  var s = e++,
    v = 1 << c,
    F = v - 1,
    m = v + 1,
    u = m + 1,
    q = c + 1,
    i = 0,
    o = 0;
  function g(n) {
    while (i >= n) {
      l[e++] = o & 255;
      o >>= 8;
      i -= 8;
      if (e === s + 256) {
        l[s] = 255;
        s = e++;
      }
    }
  }
  function f(n) {
    o |= n << i;
    i += q;
    g(8);
  }
  var d = h[0] & F,
    C = {};
  f(v);
  for (var j = 1, z = h.length; j < z; ++j) {
    var b = h[j] & F,
      w = (d << 8) | b,
      E = C[w];
    if (E === undefined) {
      o |= d << i;
      i += q;
      while (i >= 8) {
        l[e++] = o & 255;
        o >>= 8;
        i -= 8;
        if (e === s + 256) {
          l[s] = 255;
          s = e++;
        }
      }
      if (u === 4096) {
        f(v);
        u = m + 1;
        q = c + 1;
        C = {};
      } else {
        if (u >= 1 << q) ++q;
        C[w] = u++;
      }
      d = b;
    } else {
      d = E;
    }
  }
  f(d);
  f(m);
  g(1);
  if (s + 1 === e) {
    l[s] = 0;
  } else {
    l[s] = e - s - 1;
    l[e++] = 0;
  }
  return e;
}

var UGIF = (function () {
  var I = (function () {
      var m,
        g,
        w,
        v,
        c = 0,
        C = 0,
        M = 0,
        f = 0,
        d = function () {
          var P = m >>> 3,
            j = (g[P + 2] << 16) | (g[P + 1] << 8) | g[P],
            h = (j >>> (m & 7)) & ((1 << C) - 1);
          m += C;
          return h;
        },
        x = new Uint32Array(4096 * 4),
        n = 0,
        J = function (P) {
          if (P == n) return;
          n = P;
          M = 1 << P;
          f = M + 1;
          for (var j = 0; j < f + 1; j++) {
            x[4 * j] = x[4 * j + 3] = j;
            x[4 * j + 1] = 65535;
            x[4 * j + 2] = 1;
          }
        },
        y = function (P) {
          C = P + 1;
          c = f + 1;
        },
        t = function (P) {
          var j = P << 2,
            h = x[j + 2],
            q = v + h - 1;
          while (j != 65535) {
            w[q--] = x[j];
            j = x[j + 1];
          }
          v += h;
        },
        E = function (P, j) {
          var h = c << 2,
            q = P << 2;
          x[h] = x[(j << 2) + 3];
          x[h + 1] = q;
          x[h + 2] = x[q + 2] + 1;
          x[h + 3] = x[q + 3];
          c++;
          if (c == 1 << C && C != 12) C++;
        },
        G = function (P, j, h, q, r, b) {
          m = j << 3;
          g = P;
          w = q;
          v = r;
          var e = (j + h) << 3,
            L = 0,
            l = 65535;
          J(b);
          y(b);
          while (m < e && (L = d()) != f) {
            if (L == M) {
              y(b);
              L = d();
              if (L == f) break;
              t(L);
            } else {
              if (L < c) {
                t(L);
                if (l != 65535) E(l, L);
              } else {
                E(l, l);
                t(c - 1);
              }
            }
            l = L;
          }
          return v;
        };
      return G;
    })(),
    z,
    H,
    A = new Uint8Array(128),
    B = function () {
      return z[H++];
    },
    s = function () {
      var m = (z[H + 1] << 8) | z[H];
      H += 2;
      return m;
    },
    o = function () {
      while (z[H] != 0) H += 1 + z[H];
      H++;
    },
    p = function (m) {
      z = new Uint8Array(m);
      H = 6;
      var N = s(),
        g = s(),
        w = B(),
        v = B(),
        c = B(),
        a = w >>> 7,
        C = (w >>> 4) & 7,
        M = (w >>> 3) & 1,
        f = (w >>> 0) & 7,
        d = H,
        x = 0,
        O,
        J = 0,
        y = 0,
        t = 0,
        E = 260;
      if (a == 1) H += 3 * (1 << (f + 1));
      var n = [];
      while (H + 1 < z.length) {
        var G = B();
        if (G == 33) {
          var P = B();
          if (P == 249) {
            var j = B(),
              w = B();
            J = (w >>> 2) & 7;
            y = s();
            E = B();
            if ((w & 1) == 0) E = 260;
            B();
          } else if (P == 254) {
            o();
          } else if (P == 255) {
            o();
          } else throw P;
        } else if (G == 44) {
          var h = s(),
            q = s(),
            r = s(),
            b = s(),
            e = B(),
            L = e >>> 7;
          t = (e >>> 6) & 1;
          if (L == 1) {
            var f = (e >>> 0) & 7;
            x = H;
            H += 3 * (1 << (f + 1));
          }
          O = {
            x: h,
            y: q,
            c: r,
            e: b,
            b: J,
            delay: y,
            a: E,
            f: x == 0 ? d : x,
            d: t,
          };
          n.push(O);
          x = 0;
        } else if (G <= 8) {
          var r = O.c,
            b = O.e,
            l = r * b,
            D = 0;
          if (A.length < l * 1.2) A = new Uint8Array(~~(l * 1.3));
          while (H < z.length && z[H] != 0) {
            var i = B();
            for (var k = 0; k < i; k++) A[D + k] = z[H + k];
            D += i;
            H += i;
          }
          if (H >= z.length) {
            alert("Some frames are damaged.");
            n.pop();
            break;
          }
          B();
          O.g = new Uint8Array(l);
          var K = I(A, 0, D, O.g, 0, G);
        } else if (G == 59) break;
        else throw G;
      }
      return { width: N, height: g, data: z, frames: n };
    };
  function u(m, N, z, g, w, v, c, a) {
    for (var C = 0; C < c; C++) {
      var M = w[v + C];
      if (M != a) {
        var f = (N + C) << 2,
          d = g + M * 3;
        m[f] = z[d];
        m[f + 1] = z[d + 1];
        m[f + 2] = z[d + 2];
        m[f + 3] = 255;
      }
    }
  }
  var F = function (m) {
    var N = m.frames,
      g = m.width,
      w = m.height,
      v = new Uint8Array(g * w * 4),
      c,
      a = [],
      z = m.data;
    for (var C = 0; C < N.length; C++) {
      var M = N[C],
        f = M.x,
        d = M.y,
        x = M.c,
        O = M.e,
        J = M.b;
      if (J == 3) {
        if (c == null) c = v.slice(0);
        else c.set(v);
      }
      var y = [];
      if (M.d == 1) {
        for (var t = 0; t < O; t += 8) y.push(t);
        for (var t = 4; t < O; t += 8) y.push(t);
        for (var t = 2; t < O; t += 4) y.push(t);
        for (var t = 1; t < O; t += 2) y.push(t);
      }
      var E = M.g,
        G = M.f,
        P = M.a,
        j = M.d;
      for (var t = 0; t < O; t++) {
        var h = j == 0 ? t : y[t];
        u(v, (h + d) * g + f, z, G, E, t * x, x, P);
      }
      a.push(v.slice(0).buffer);
      if (J < 2) {
      } else if (J == 2) {
        for (var t = 0; t < O; t++) {
          var q = ((d + t) * g + f) * 4;
          v.fill(0, q, q + x * 4);
        }
      } else if (J == 3) v.set(c);
    }
    return a;
  };
  return { decode: p, toRGBA8: F };
})();

var linear = (function () {
  function f(j, k) {
    this.data = new Array(j.length);
    for (var i = 0, a = j[0].length; i < j.length; i++) {
      this.data[i] = new Array(a);
      for (var e = 0; e < a; e++) {
        this.data[i][e] = j[i][e];
      }
    }
    if (k) {
      if (typeof k[0] !== "object") {
        for (var i = 0; i < k.length; i++) {
          k[i] = [k[i]];
        }
      }
      this.mirror = new f(k);
    }
  }
  f.prototype.swap = function (j, k) {
    if (this.mirror) this.mirror.swap(j, k);
    var i = this.data[j];
    this.data[j] = this.data[k];
    this.data[k] = i;
  };
  f.prototype.multline = function (j, k) {
    if (this.mirror) this.mirror.multline(j, k);
    var i = this.data[j];
    for (var a = i.length - 1; a >= 0; a--) {
      i[a] *= k;
    }
  };
  f.prototype.addmul = function (j, k, i) {
    if (this.mirror) this.mirror.addmul(j, k, i);
    var e = this.data[j],
      c = this.data[k];
    for (var b = e.length - 1; b >= 0; b--) {
      e[b] = e[b] + i * c[b];
    }
  };
  f.prototype.hasNullLine = function (j) {
    for (var k = 0; k < this.data[j].length; k++) {
      if (this.data[j][k] !== 0) {
        return !1;
      }
    }
    return !0;
  };
  f.prototype.gauss = function () {
    var j = 0,
      k = this.data.length,
      i = this.data[0].length,
      o = [];
    for (var a = 0; a < i; a++) {
      var e = 0,
        m = 0;
      for (var c = j; c < k; c++) {
        var b = this.data[c][a];
        if (Math.abs(b) > Math.abs(e)) {
          m = c;
          e = b;
        }
      }
      if (e === 0) {
        o.push(j);
      } else {
        this.multline(m, 1 / e);
        this.swap(m, j);
        for (var n = 0; n < k; n++) {
          if (n !== j) {
            this.addmul(n, j, -this.data[n][a]);
          }
        }
      }
      j++;
    }
    for (var n = 0; n < o.length; n++) {
      if (!this.mirror.hasNullLine(o[n])) {
        throw new Error("singular matrix");
      }
    }
    return this.mirror.data;
  };
  var d = {};
  d.solve = function l(j, k) {
    var i = new f(j, k).gauss();
    if (i.length > 0 && i[0].length === 1) {
      for (var o = 0; o < i.length; o++) i[o] = i[o][0];
    }
    return i;
  };
  function h(j) {
    var k = new Array(j);
    for (var i = 0; i < j; i++) {
      k[i] = new Array(j);
      for (var a = 0; a < j; a++) {
        k[i][a] = i === a ? 1 : 0;
      }
    }
    return k;
  }
  d.invert = function g(j) {
    return new f(j, h(j.length)).gauss();
  };
  return d;
})();

var Typr = (function () {
  var T = {};
  T.parse = function (A) {
    var J = T.B,
      B = function (Z, k, o) {
        var e = T.T,
          h = {
            cmap: e.c,
            head: e.head,
            hhea: e.a9,
            maxp: e.as,
            hmtx: e.at,
            name: e.name,
            "OS/2": e.i,
            post: e.aI,
            loca: e.aP,
            kern: e.r,
            glyf: e.z,
            "CFF ": e.g,
            GSUB: e.aj,
            CBLC: e.b5,
            CBDT: e.aC,
            "SVG ": e.b3,
            COLR: e.aA,
            CPAL: e.bh,
            sbix: e.aq,
            fvar: e.aa,
            gvar: e.a5,
            avar: e.a1,
            HVAR: e.a4,
          },
          s = { _data: Z, _index: 0, _vindex: 0, _offset: k };
        for (var V in h) {
          var G = T.findTable(Z, V, k);
          if (G) {
            var H = G[0],
              u = o[H];
            if (u == null) u = h[V].q(Z, H, G[1], s);
            s[V] = o[H] = u;
          }
        }
        return s;
      };
    function f(Z, k, e, o, r) {
      var h = B(Z, k, {});
      h._index = e;
      var s = h.fvar;
      if (s) {
        for (var x = 0; x < s[1].length; x++) {
          var V = s[1][x],
            G = {};
          r.push(G);
          for (var H in h) G[H] = h[H];
          G._vindex = x;
          var u = (G.name = JSON.parse(JSON.stringify(G.name)));
          u.fontSubfamily = u.typoSubfamilyName = V[0];
          if (V[3] == null)
            V[3] = (u.fontFamily + "-" + u.fontSubfamily).replaceAll(" ", "");
          else V[3] = u["_" + V[3]];
          u.postScriptName = V[3];
        }
      } else r.push(h);
    }
    function g(Z) {
      var e = J.S(Z, 12),
        h = J.V(Z, 16),
        s = new Uint8Array(h),
        V = 12 + e * 16,
        G = 44;
      J.s(s, 0, "OTTO");
      J.ad(s, 4, e);
      for (var x = 0; x < e; x++) {
        var p = J.O(Z, G, 4),
          H = J.V(Z, G + 4),
          u = J.V(Z, G + 8),
          c = J.V(Z, G + 12);
        G += 20;
        var L = Z.slice(H, H + u);
        if (u != c) L = pako.inflate(L);
        var S = 12 + x * 16;
        J.s(s, S, p);
        J.Q(s, S + 8, V);
        J.Q(s, S + 12, c);
        s.set(L, V);
        V += c;
      }
      return s;
    }
    var Z = new Uint8Array(A);
    if (Z[0] == 119) Z = g(Z);
    var r = [],
      o = {},
      p = J.O(Z, 0, 4);
    if (p == "ttcf") {
      var k = 4,
        R = J.S(Z, k);
      k += 2;
      var t = J.S(Z, k);
      k += 2;
      var z = J.V(Z, k);
      k += 4;
      for (var x = 0; x < z; x++) {
        var E = J.V(Z, k);
        k += 4;
        f(Z, E, x, o, r);
      }
    } else f(Z, 0, 0, o, r);
    console.log(r);
    return r;
  };
  T.findTable = function (A, J, B) {
    var f = T.B,
      g = f.S(A, B + 4),
      Z = B + 12;
    for (var r = 0; r < g; r++) {
      var p = f.O(A, Z, 4),
        k = f.V(A, Z + 4),
        R = f.V(A, Z + 8),
        t = f.V(A, Z + 12);
      if (p == J) return [R, t];
      Z += 16;
    }
    return null;
  };
  T.T = {};
  T.B = {
    _: function (A, J) {
      return T.B.T(A, J) + ((A[J + 2] << 8) | A[J + 3]) / (256 * 256 + 4);
    },
    H: function (A, J) {
      var B = T.B.T(A, J);
      return B / 16384;
    },
    I: function (A, J) {
      var B = T.B.e.v;
      B[0] = A[J + 3];
      B[1] = A[J + 2];
      B[2] = A[J + 1];
      B[3] = A[J];
      return T.B.e.au[0];
    },
    D: function (A, J) {
      var B = T.B.e.v;
      B[0] = A[J];
      return T.B.e.b6[0];
    },
    T: function (A, J) {
      var B = T.B.e.ba;
      B[0] = (A[J] << 8) | A[J + 1];
      return T.B.e.aZ[0];
    },
    S: function (A, J) {
      return (A[J] << 8) | A[J + 1];
    },
    ad: function (A, J, B) {
      A[J] = (B >> 8) & 255;
      A[J + 1] = B & 255;
    },
    al: function (A, J, B) {
      var f = [];
      for (var g = 0; g < B; g++) {
        var Z = T.B.S(A, J + g * 2);
        f.push(Z);
      }
      return f;
    },
    V: function (A, J) {
      var B = T.B.e.v;
      B[3] = A[J];
      B[2] = A[J + 1];
      B[1] = A[J + 2];
      B[0] = A[J + 3];
      return T.B.e.be[0];
    },
    Q: function (A, J, B) {
      A[J] = (B >> 24) & 255;
      A[J + 1] = (B >> 16) & 255;
      A[J + 2] = (B >> 8) & 255;
      A[J + 3] = (B >> 0) & 255;
    },
    M: function (A, J) {
      return T.B.V(A, J) * (4294967295 + 1) + T.B.V(A, J + 4);
    },
    O: function (A, J, B) {
      var f = "";
      for (var g = 0; g < B; g++) f += String.fromCharCode(A[J + g]);
      return f;
    },
    s: function (A, J, B) {
      for (var f = 0; f < B.length; f++) A[J + f] = B.charCodeAt(f);
    },
    o: function (A, J, B) {
      var f = "";
      for (var g = 0; g < B; g++) {
        var Z = (A[J++] << 8) | A[J++];
        f += String.fromCharCode(Z);
      }
      return f;
    },
    a$: window.TextDecoder ? new window.TextDecoder() : null,
    b7: function (A, J, B) {
      var f = T.B.a$;
      if (f && J == 0 && B == A.length) return f.decode(A);
      return T.B.O(A, J, B);
    },
    P: function (A, J, B) {
      var f = [];
      for (var g = 0; g < B; g++) f.push(A[J + g]);
      return f;
    },
    a6: function (A, J, B) {
      var f = [];
      for (var g = 0; g < B; g++) f.push(String.fromCharCode(A[J + g]));
      return f;
    },
    e: (function () {
      var A = new ArrayBuffer(8);
      return {
        a3: A,
        b6: new Int8Array(A),
        v: new Uint8Array(A),
        aZ: new Int16Array(A),
        ba: new Uint16Array(A),
        au: new Int32Array(A),
        be: new Uint32Array(A),
      };
    })(),
  };
  T.T.g = {
    q: function (A, J, B) {
      var f = T.B,
        g = T.T.g;
      A = new Uint8Array(A.buffer, J, B);
      J = 0;
      var Z = A[J];
      J++;
      var r = A[J];
      J++;
      var o = A[J];
      J++;
      var p = A[J];
      J++;
      var k = [];
      J = g.w(A, J, k);
      var R = [];
      for (var t = 0; t < k.length - 1; t++)
        R.push(f.O(A, J + k[t], k[t + 1] - k[t]));
      J += k[k.length - 1];
      var z = [];
      J = g.w(A, J, z);
      var x = [];
      for (var t = 0; t < z.length - 1; t++)
        x.push(g.G(A, J + z[t], J + z[t + 1]));
      J += z[z.length - 1];
      var E = x[0],
        e = [];
      J = g.w(A, J, e);
      var h = [];
      for (var t = 0; t < e.length - 1; t++)
        h.push(f.O(A, J + e[t], e[t + 1] - e[t]));
      J += e[e.length - 1];
      g.n(A, J, E);
      if (E.CharStrings) E.CharStrings = g.P(A, E.CharStrings);
      if (E.ROS) {
        J = E.FDArray;
        var s = [];
        J = g.w(A, J, s);
        E.FDArray = [];
        for (var t = 0; t < s.length - 1; t++) {
          var V = g.G(A, J + s[t], J + s[t + 1]);
          g.u(A, V, h);
          E.FDArray.push(V);
        }
        J += s[s.length - 1];
        J = E.FDSelect;
        E.FDSelect = [];
        var G = A[J];
        J++;
        if (G == 3) {
          var H = f.S(A, J);
          J += 2;
          for (var t = 0; t < H + 1; t++) {
            E.FDSelect.push(f.S(A, J), A[J + 2]);
            J += 3;
          }
        } else throw G;
      }
      if (E.charset) E.charset = g.aN(A, E.charset, E.CharStrings.length);
      g.u(A, E, h);
      return E;
    },
    u: function (A, J, B) {
      var f = T.T.g,
        g;
      if (J.Private) {
        g = J.Private[1];
        J.Private = f.G(A, g, g + J.Private[0]);
        if (J.Private.Subrs) f.n(A, g + J.Private.Subrs, J.Private);
      }
      for (var Z in J)
        if (
          "FamilyName FontName FullName Notice version Copyright"
            .split(" ")
            .indexOf(Z) != -1
        )
          J[Z] = B[J[Z] - 426 + 35];
    },
    n: function (A, J, B) {
      B.Subrs = T.T.g.P(A, J);
      var f,
        g = B.Subrs.length + 1;
      if (!1) f = 0;
      else if (g < 1240) f = 107;
      else if (g < 33900) f = 1131;
      else f = 32768;
      B.Bias = f;
    },
    P: function (A, J) {
      var B = T.B,
        f = [];
      J = T.T.g.w(A, J, f);
      var g = [],
        Z = f.length - 1,
        r = A.byteOffset + J;
      for (var o = 0; o < Z; o++) {
        var p = f[o];
        g.push(new Uint8Array(A.buffer, r + p, f[o + 1] - p));
      }
      return g;
    },
    aV: [
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
      16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
      34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
      52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
      70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87,
      88, 89, 90, 91, 92, 93, 94, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 97, 98,
      99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 0, 111, 112,
      113, 114, 0, 115, 116, 117, 118, 119, 120, 121, 122, 0, 123, 0, 124, 125,
      126, 127, 128, 129, 130, 131, 0, 132, 133, 0, 134, 135, 136, 137, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 138, 0, 139, 0, 0, 0, 0, 140, 141,
      142, 143, 0, 0, 0, 0, 0, 144, 0, 0, 0, 145, 0, 0, 146, 147, 148, 149, 0,
      0, 0, 0,
    ],
    am: function (A, J) {
      for (var B = 0; B < A.charset.length; B++)
        if (A.charset[B] == J) return B;
      return -1;
    },
    k: function (A, J) {
      if (J < 0 || J > 255) return -1;
      return T.T.g.am(A, T.T.g.aV[J]);
    },
    aN: function (A, J, B) {
      var f = T.B,
        g = [".notdef"],
        Z = A[J];
      J++;
      if (Z == 0) {
        for (var r = 0; r < B; r++) {
          var p = f.S(A, J);
          J += 2;
          g.push(p);
        }
      } else if (Z == 1 || Z == 2) {
        while (g.length < B) {
          var p = f.S(A, J),
            k = 0;
          J += 2;
          if (Z == 1) {
            k = A[J];
            J++;
          } else {
            k = f.S(A, J);
            J += 2;
          }
          for (var r = 0; r <= k; r++) {
            g.push(p);
            p++;
          }
        }
      } else throw "error: format: " + Z;
      return g;
    },
    w: function (A, J, B) {
      var f = T.B,
        g = f.S(A, J) + 1;
      J += 2;
      var Z = A[J];
      J++;
      if (Z == 1) for (var r = 0; r < g; r++) B.push(A[J + r]);
      else if (Z == 2) for (var r = 0; r < g; r++) B.push(f.S(A, J + r * 2));
      else if (Z == 3)
        for (var r = 0; r < g; r++) B.push(f.V(A, J + r * 3 - 1) & 16777215);
      else if (Z == 4) for (var r = 0; r < g; r++) B.push(f.V(A, J + r * 4));
      else if (g != 1) throw "unsupported offset size: " + Z + ", count: " + g;
      J += g * Z;
      return J - 1;
    },
    ag: function (A, J, B) {
      var f = T.B,
        g = A[J],
        Z = A[J + 1],
        r = A[J + 2],
        o = A[J + 3],
        p = A[J + 4],
        k = 1,
        R = null,
        t = null;
      if (g <= 20) {
        R = g;
        k = 1;
      }
      if (g == 12) {
        R = g * 100 + Z;
        k = 2;
      }
      if (21 <= g && g <= 27) {
        R = g;
        k = 1;
      }
      if (g == 28) {
        t = f.T(A, J + 1);
        k = 3;
      }
      if (29 <= g && g <= 31) {
        R = g;
        k = 1;
      }
      if (32 <= g && g <= 246) {
        t = g - 139;
        k = 1;
      }
      if (247 <= g && g <= 250) {
        t = (g - 247) * 256 + Z + 108;
        k = 2;
      }
      if (251 <= g && g <= 254) {
        t = -(g - 251) * 256 - Z - 108;
        k = 2;
      }
      if (g == 255) {
        t = f.I(A, J + 1) / 65535;
        k = 5;
      }
      B.ah = t != null ? t : "o" + R;
      B.size = k;
    },
    aX: function (A, J, B) {
      var f = J + B,
        g = T.B,
        Z = [];
      while (J < f) {
        var r = A[J],
          o = A[J + 1],
          p = A[J + 2],
          k = A[J + 3],
          R = A[J + 4],
          t = 1,
          z = null,
          x = null;
        if (r <= 20) {
          z = r;
          t = 1;
        }
        if (r == 12) {
          z = r * 100 + o;
          t = 2;
        }
        if (r == 19 || r == 20) {
          z = r;
          t = 2;
        }
        if (21 <= r && r <= 27) {
          z = r;
          t = 1;
        }
        if (r == 28) {
          x = g.T(A, J + 1);
          t = 3;
        }
        if (29 <= r && r <= 31) {
          z = r;
          t = 1;
        }
        if (32 <= r && r <= 246) {
          x = r - 139;
          t = 1;
        }
        if (247 <= r && r <= 250) {
          x = (r - 247) * 256 + o + 108;
          t = 2;
        }
        if (251 <= r && r <= 254) {
          x = -(r - 251) * 256 - o - 108;
          t = 2;
        }
        if (r == 255) {
          x = g.I(A, J + 1) / 65535;
          t = 5;
        }
        Z.push(x != null ? x : "o" + z);
        J += t;
      }
      return Z;
    },
    G: function (A, J, B) {
      var f = T.B,
        g = {},
        Z = [];
      while (J < B) {
        var r = A[J],
          o = A[J + 1],
          p = A[J + 2],
          k = A[J + 3],
          R = A[J + 4],
          t = 1,
          z = null,
          x = null;
        if (r == 28) {
          x = f.T(A, J + 1);
          t = 3;
        }
        if (r == 29) {
          x = f.I(A, J + 1);
          t = 5;
        }
        if (32 <= r && r <= 246) {
          x = r - 139;
          t = 1;
        }
        if (247 <= r && r <= 250) {
          x = (r - 247) * 256 + o + 108;
          t = 2;
        }
        if (251 <= r && r <= 254) {
          x = -(r - 251) * 256 - o - 108;
          t = 2;
        }
        if (r == 255) {
          x = f.I(A, J + 1) / 65535;
          t = 5;
          throw "unknown number";
        }
        if (r == 30) {
          var E = [],
            V = "";
          t = 1;
          while (!0) {
            var e = A[J + t];
            t++;
            var h = e >> 4,
              s = e & 15;
            if (h != 15) E.push(h);
            if (s != 15) E.push(s);
            if (s == 15) break;
          }
          var G = [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            ".",
            "e",
            "e-",
            "reserved",
            "-",
            "endOfNumber",
          ];
          for (var H = 0; H < E.length; H++) V += G[E[H]];
          x = parseFloat(V);
        }
        if (r <= 21) {
          var u =
            "version Notice FullName FamilyName Weight FontBBox BlueValues OtherBlues FamilyBlues FamilyOtherBlues StdHW StdVW escape UniqueID XUID charset Encoding CharStrings Private Subrs defaultWidthX nominalWidthX".split(
              " "
            );
          z = u[r];
          t = 1;
          if (r == 12) {
            var u =
              "Copyright isFixedPitch ItalicAngle UnderlinePosition UnderlineThickness PaintType CharstringType FontMatrix StrokeWidth BlueScale BlueShift BlueFuzz StemSnapH StemSnapV ForceBold   LanguageGroup ExpansionFactor initialRandomSeed SyntheticBase PostScript BaseFontName BaseFontBlend       ROS CIDFontVersion CIDFontRevision CIDFontType CIDCount UIDBase FDArray FDSelect FontName".split(
                " "
              );
            z = u[o];
            t = 2;
          }
        }
        if (z != null) {
          g[z] = Z.length == 1 ? Z[0] : Z;
          Z = [];
        } else Z.push(x);
        J += t;
      }
      return g;
    },
  };
  T.T.c = {
    q: function (A, J, B) {
      var f = { b: [], m: {}, bd: J };
      A = new Uint8Array(A.buffer, J, B);
      J = 0;
      var g = J,
        Z = T.B,
        r = Z.S,
        o = T.T.c,
        p = r(A, J);
      J += 2;
      var k = r(A, J);
      J += 2;
      var R = [];
      for (var t = 0; t < k; t++) {
        var z = r(A, J);
        J += 2;
        var x = r(A, J);
        J += 2;
        var E = Z.V(A, J);
        J += 4;
        var e = "p" + z + "e" + x,
          h = R.indexOf(E);
        if (h == -1) {
          h = f.b.length;
          var s = {};
          R.push(E);
          var V = (s.ar = r(A, E));
          if (V == 0) s = o.bj(A, E, s);
          else if (V == 4) s = o.bb(A, E, s);
          else if (V == 6) s = o.aL(A, E, s);
          else if (V == 12) s = o.b4(A, E, s);
          f.b.push(s);
        }
        if (f.m[e] != null)
          console.log("multiple tables for one platform+encoding: " + e);
        f.m[e] = h;
      }
      return f;
    },
    bj: function (A, J, B) {
      var f = T.B;
      J += 2;
      var g = f.S(A, J);
      J += 2;
      var Z = f.S(A, J);
      J += 2;
      B.map = [];
      for (var r = 0; r < g - 6; r++) B.map.push(A[J + r]);
      return B;
    },
    bb: function (A, J, B) {
      var f = T.B,
        g = f.S,
        Z = f.al,
        r = J;
      J += 2;
      var o = g(A, J);
      J += 2;
      var p = g(A, J);
      J += 2;
      var k = g(A, J);
      J += 2;
      var R = k >>> 1;
      B.aQ = g(A, J);
      J += 2;
      B.ax = g(A, J);
      J += 2;
      B.aF = g(A, J);
      J += 2;
      B.aR = Z(A, J, R);
      J += R * 2;
      J += 2;
      B.aK = Z(A, J, R);
      J += R * 2;
      B.ai = [];
      for (var t = 0; t < R; t++) {
        B.ai.push(f.T(A, J));
        J += 2;
      }
      B.B = Z(A, J, R);
      J += R * 2;
      B.$ = Z(A, J, (r + o - J) >> 1);
      return B;
    },
    aL: function (A, J, B) {
      var f = T.B,
        g = J;
      J += 2;
      var Z = f.S(A, J);
      J += 2;
      var r = f.S(A, J);
      J += 2;
      B.ac = f.S(A, J);
      J += 2;
      var o = f.S(A, J);
      J += 2;
      B.$ = [];
      for (var p = 0; p < o; p++) {
        B.$.push(f.S(A, J));
        J += 2;
      }
      return B;
    },
    b4: function (A, J, B) {
      var f = T.B,
        g = f.V,
        Z = J;
      J += 4;
      var r = g(A, J);
      J += 4;
      var o = g(A, J);
      J += 4;
      var p = g(A, J) * 3;
      J += 4;
      var k = (B.a_ = new Uint32Array(p));
      for (var R = 0; R < p; R += 3) {
        k[R] = g(A, J + (R << 2));
        k[R + 1] = g(A, J + (R << 2) + 4);
        k[R + 2] = g(A, J + (R << 2) + 8);
      }
      return B;
    },
  };
  T.T.b5 = {
    q: function (A, J, B) {
      var f = T.B,
        g = J,
        Z = f.S(A, J);
      J += 2;
      var r = f.S(A, J);
      J += 2;
      var o = f.V(A, J);
      J += 4;
      var p = [];
      for (var k = 0; k < o; k++) {
        var R = f.V(A, J);
        J += 4;
        var t = f.V(A, J);
        J += 4;
        var z = f.V(A, J);
        J += 4;
        J += 4;
        J += 2 * 12;
        var x = f.S(A, J);
        J += 2;
        var E = f.S(A, J);
        J += 2;
        J += 4;
        var e = g + R;
        for (var h = 0; h < 3; h++) {
          var s = f.S(A, e);
          e += 2;
          var V = f.S(A, e);
          e += 2;
          var G = f.V(A, e);
          e += 4;
          var H = V - s + 1,
            u = g + R + G,
            c = f.S(A, u);
          u += 2;
          if (c != 1) throw c;
          var L = f.S(A, u);
          u += 2;
          var S = f.V(A, u);
          u += 4;
          var i = [];
          for (var $ = 0; $ < H; $++) {
            var F = f.V(A, u + $ * 4);
            i.push(S + F);
          }
          p.push([s, V, L, i]);
        }
      }
      return p;
    },
  };
  T.T.aC = {
    q: function (A, J, B) {
      var f = T.B,
        g = J;
      return new Uint8Array(A.buffer, A.byteOffset + J, B);
    },
  };
  T.T.z = {
    q: function (A, J, B, f) {
      var g = [],
        Z = f.maxp.numGlyphs;
      for (var r = 0; r < Z; r++) g.push(null);
      return g;
    },
    ay: function (A, J) {
      var B = T.B,
        f = A._data,
        g = A.loca;
      if (g[J] == g[J + 1]) return null;
      var r = T.findTable(f, "glyf", A._offset)[0] + g[J],
        o = {};
      o.U = B.T(f, r);
      r += 2;
      o.aY = B.T(f, r);
      r += 2;
      o.ao = B.T(f, r);
      r += 2;
      o.bc = B.T(f, r);
      r += 2;
      o.aJ = B.T(f, r);
      r += 2;
      if (o.aY >= o.bc || o.ao >= o.aJ) return null;
      if (o.U > 0) {
        o.l = [];
        for (var p = 0; p < o.U; p++) {
          o.l.push(B.S(f, r));
          r += 2;
        }
        var k = B.S(f, r),
          h = 0,
          s = 0;
        r += 2;
        if (f.length - r < k) return null;
        o.ak = B.P(f, r, k);
        r += k;
        var R = o.l[o.U - 1] + 1;
        o.C = [];
        for (var p = 0; p < R; p++) {
          var t = f[r];
          r++;
          o.C.push(t);
          if ((t & 8) != 0) {
            var z = f[r];
            r++;
            for (var x = 0; x < z; x++) {
              o.C.push(t);
              p++;
            }
          }
        }
        o.h = [];
        for (var p = 0; p < R; p++) {
          var E = (o.C[p] & 2) != 0,
            e = (o.C[p] & 16) != 0;
          if (E) {
            o.h.push(e ? f[r] : -f[r]);
            r++;
          } else {
            if (e) o.h.push(0);
            else {
              o.h.push(B.T(f, r));
              r += 2;
            }
          }
        }
        o.W = [];
        for (var p = 0; p < R; p++) {
          var E = (o.C[p] & 4) != 0,
            e = (o.C[p] & 32) != 0;
          if (E) {
            o.W.push(e ? f[r] : -f[r]);
            r++;
          } else {
            if (e) o.W.push(0);
            else {
              o.W.push(B.T(f, r));
              r += 2;
            }
          }
        }
        for (var p = 0; p < R; p++) {
          h += o.h[p];
          s += o.W[p];
          o.h[p] = h;
          o.W[p] = s;
        }
      } else {
        var V = 1 << 0,
          G = 1 << 1,
          H = 1 << 2,
          u = 1 << 3,
          S = 1 << 4,
          i = 1 << 5,
          $ = 1 << 6,
          F = 1 << 7,
          d = 1 << 8,
          a = 1 << 9,
          b = 1 << 10,
          Q = 1 << 11,
          C = 1 << 12,
          W;
        o.R = [];
        do {
          W = B.S(f, r);
          r += 2;
          var Y = {
            Y: { p: 1, a7: 0, a2: 0, f: 1, b8: 0, a8: 0 },
            b1: -1,
            aT: -1,
          };
          o.R.push(Y);
          Y.bi = B.S(f, r);
          r += 2;
          if (W & V) {
            var P = B.T(f, r);
            r += 2;
            var U = B.T(f, r);
            r += 2;
          } else {
            var P = B.D(f, r);
            r++;
            var U = B.D(f, r);
            r++;
          }
          if (W & G) {
            Y.Y.b8 = P;
            Y.Y.a8 = U;
          } else {
            Y.b1 = P;
            Y.aT = U;
          }
          if (W & u) {
            Y.Y.p = Y.Y.f = B.H(f, r);
            r += 2;
          } else if (W & $) {
            Y.Y.p = B.H(f, r);
            r += 2;
            Y.Y.f = B.H(f, r);
            r += 2;
          } else if (W & F) {
            Y.Y.p = B.H(f, r);
            r += 2;
            Y.Y.a7 = B.H(f, r);
            r += 2;
            Y.Y.a2 = B.H(f, r);
            r += 2;
            Y.Y.f = B.H(f, r);
            r += 2;
          }
        } while (W & i);
        if (W & d) {
          var q = B.S(f, r);
          r += 2;
          o.aW = [];
          for (var p = 0; p < q; p++) {
            o.aW.push(f[r]);
            r++;
          }
        }
      }
      return o;
    },
  };
  T.T.head = {
    q: function (A, J, B) {
      var f = T.B,
        g = {},
        Z = f._(A, J);
      J += 4;
      g.fontRevision = f._(A, J);
      J += 4;
      var r = f.V(A, J);
      J += 4;
      var o = f.V(A, J);
      J += 4;
      g.flags = f.S(A, J);
      J += 2;
      g.unitsPerEm = f.S(A, J);
      J += 2;
      g.created = f.M(A, J);
      J += 8;
      g.modified = f.M(A, J);
      J += 8;
      g.xMin = f.T(A, J);
      J += 2;
      g.yMin = f.T(A, J);
      J += 2;
      g.xMax = f.T(A, J);
      J += 2;
      g.yMax = f.T(A, J);
      J += 2;
      g.macStyle = f.S(A, J);
      J += 2;
      g.lowestRecPPEM = f.S(A, J);
      J += 2;
      g.fontDirectionHint = f.T(A, J);
      J += 2;
      g.indexToLocFormat = f.T(A, J);
      J += 2;
      g.glyphDataFormat = f.T(A, J);
      J += 2;
      return g;
    },
  };
  T.T.a9 = {
    q: function (A, J, B) {
      var f = T.B,
        g = {},
        Z = f._(A, J);
      J += 4;
      var r =
        "ascender descender lineGap advanceWidthMax minLeftSideBearing minRightSideBearing xMaxExtent caretSlopeRise caretSlopeRun caretOffset res0 res1 res2 res3 metricDataFormat numberOfHMetrics".split(
          " "
        );
      for (var o = 0; o < r.length; o++) {
        var p = r[o],
          k = p == "advanceWidthMax" || p == "numberOfHMetrics" ? f.S : f.T;
        g[p] = k(A, J + o * 2);
      }
      return g;
    },
  };
  T.T.at = {
    q: function (A, J, B, f) {
      var g = T.B,
        Z = [],
        r = [],
        o = f.maxp.numGlyphs,
        p = f.hhea.numberOfHMetrics,
        k = 0,
        R = 0,
        t = 0;
      while (t < p) {
        k = g.S(A, J + (t << 2));
        R = g.T(A, J + (t << 2) + 2);
        Z.push(k);
        r.push(R);
        t++;
      }
      while (t < o) {
        Z.push(k);
        r.push(R);
        t++;
      }
      return { aO: Z, a0: r };
    },
  };
  T.T.r = {
    q: function (A, J, B, f) {
      var g = T.B,
        Z = T.T.r,
        r = g.S(A, J);
      if (r == 1) return Z.aS(A, J, B, f);
      var o = g.S(A, J + 2);
      J += 4;
      var p = { a: [], d: [] };
      for (var k = 0; k < o; k++) {
        J += 2;
        var B = g.S(A, J);
        J += 2;
        var R = g.S(A, J);
        J += 2;
        var t = R >>> 8;
        t &= 15;
        if (t == 0) J = Z.an(A, J, p);
      }
      return p;
    },
    aS: function (A, J, B, f) {
      var g = T.B,
        Z = T.T.r,
        r = g._(A, J),
        o = g.V(A, J + 4);
      J += 8;
      var p = { a: [], d: [] };
      for (var k = 0; k < o; k++) {
        var B = g.V(A, J);
        J += 4;
        var R = g.S(A, J);
        J += 2;
        var t = g.S(A, J);
        J += 2;
        var z = R & 255;
        if (z == 0) J = Z.an(A, J, p);
      }
      return p;
    },
    an: function (A, J, B) {
      var f = T.B,
        g = f.S,
        Z = -1,
        r = g(A, J),
        o = g(A, J + 2),
        p = g(A, J + 4),
        k = g(A, J + 6);
      J += 8;
      for (var R = 0; R < r; R++) {
        var t = g(A, J);
        J += 2;
        var z = g(A, J);
        J += 2;
        var x = f.T(A, J);
        J += 2;
        if (t != Z) {
          B.a.push(t);
          B.d.push({ b9: [], aD: [] });
        }
        var E = B.d[B.d.length - 1];
        E.b9.push(z);
        E.aD.push(x);
        Z = t;
      }
      return J;
    },
  };
  T.T.aP = {
    q: function (A, J, B, f) {
      var g = T.B,
        Z = [],
        r = f.head.indexToLocFormat,
        o = f.maxp.numGlyphs + 1;
      if (r == 0) for (var p = 0; p < o; p++) Z.push(g.S(A, J + (p << 1)) << 1);
      if (r == 1) for (var p = 0; p < o; p++) Z.push(g.V(A, J + (p << 2)));
      return Z;
    },
  };
  T.T.as = {
    q: function (A, J, B) {
      var f = T.B,
        g = f.S,
        Z = {},
        r = f.V(A, J);
      J += 4;
      Z.numGlyphs = g(A, J);
      J += 2;
      return Z;
    },
  };
  T.T.name = {
    q: function (A, J, B) {
      var f = T.B,
        g = {},
        Z = f.S(A, J),
        L = "fontFamily";
      J += 2;
      var r = f.S(A, J);
      J += 2;
      var o = f.S(A, J);
      J += 2;
      var p = J - 6 + o,
        k =
          "copyright fontFamily fontSubfamily ID fullName version postScriptName trademark manufacturer designer description urlVendor urlDesigner licence licenceURL --- typoFamilyName typoSubfamilyName compatibleFull sampleText postScriptCID wwsFamilyName wwsSubfamilyName lightPalette darkPalette".split(
            " "
          ),
        R = f.S;
      for (var t = 0; t < r; t++) {
        var z = R(A, J),
          G;
        J += 2;
        var x = R(A, J);
        J += 2;
        var E = R(A, J);
        J += 2;
        var e = R(A, J);
        J += 2;
        var h = R(A, J);
        J += 2;
        var s = R(A, J);
        J += 2;
        var V = p + s;
        if (!1) {
        } else if (z == 0) G = f.o(A, V, h / 2);
        else if (z == 3 && x == 0) G = f.o(A, V, h / 2);
        else if (z == 1 && x == 25) G = f.o(A, V, h / 2);
        else if (x == 0) G = f.O(A, V, h);
        else if (x == 1) G = f.o(A, V, h / 2);
        else if (x == 3) G = f.o(A, V, h / 2);
        else if (x == 4) G = f.o(A, V, h / 2);
        else if (x == 5) G = f.o(A, V, h / 2);
        else if (x == 10) G = f.o(A, V, h / 2);
        else if (z == 1) {
          G = f.O(A, V, h);
          console.log("reading unknown MAC encoding " + x + " as ASCII");
        } else {
          console.log("unknown encoding " + x + ", platformID: " + z);
          G = f.O(A, V, h);
        }
        var H = "p" + z + "," + E.toString(16);
        if (g[H] == null) g[H] = {};
        var u = k[e];
        if (u) g[H][u] = G;
        g[H]["_" + e] = G;
        g[H]._lang = E;
      }
      var c = T.T.name.ab(g);
      if (c[L] == null) for (var S in g) if (g[S][L] != null) c[L] = g[S][L];
      return c;
    },
    ab: function (A) {
      var J = "postScriptName",
        f;
      for (var B in A) if (A[B][J] != null && A[B]._lang == 1033) return A[B];
      for (var B in A) if (A[B][J] != null && A[B]._lang == 0) return A[B];
      for (var B in A) if (A[B][J] != null && A[B]._lang == 3084) return A[B];
      for (var B in A) if (A[B][J] != null) return A[B];
      for (var B in A) {
        f = A[B];
        break;
      }
      console.log("returning name table with languageID " + f.ae);
      if (f[J] == null && f.ID != null) f[J] = f.ID;
      return f;
    },
  };
  T.T.i = {
    q: function (A, J, B) {
      var f = T.B,
        g = f.S(A, J);
      J += 2;
      var Z = T.T.i,
        r = {};
      if (g == 0) Z.bg(A, J, r);
      else if (g == 1) Z.az(A, J, r);
      else if (g == 2 || g == 3 || g == 4) Z.aM(A, J, r);
      else if (g == 5) Z.bf(A, J, r);
      else throw "unknown OS/2 table version: " + g;
      return r;
    },
    bg: function (A, J, B) {
      var f = T.B;
      B.xAvgCharWidth = f.T(A, J);
      J += 2;
      B.usWeightClass = f.S(A, J);
      J += 2;
      B.usWidthClass = f.S(A, J);
      J += 2;
      B.fsType = f.S(A, J);
      J += 2;
      B.ySubscriptXSize = f.T(A, J);
      J += 2;
      B.ySubscriptYSize = f.T(A, J);
      J += 2;
      B.ySubscriptXOffset = f.T(A, J);
      J += 2;
      B.ySubscriptYOffset = f.T(A, J);
      J += 2;
      B.ySuperscriptXSize = f.T(A, J);
      J += 2;
      B.ySuperscriptYSize = f.T(A, J);
      J += 2;
      B.ySuperscriptXOffset = f.T(A, J);
      J += 2;
      B.ySuperscriptYOffset = f.T(A, J);
      J += 2;
      B.yStrikeoutSize = f.T(A, J);
      J += 2;
      B.yStrikeoutPosition = f.T(A, J);
      J += 2;
      B.sFamilyClass = f.T(A, J);
      J += 2;
      B.panose = f.P(A, J, 10);
      J += 10;
      B.ulUnicodeRange1 = f.V(A, J);
      J += 4;
      B.ulUnicodeRange2 = f.V(A, J);
      J += 4;
      B.ulUnicodeRange3 = f.V(A, J);
      J += 4;
      B.ulUnicodeRange4 = f.V(A, J);
      J += 4;
      B.achVendID = f.O(A, J, 4);
      J += 4;
      B.fsSelection = f.S(A, J);
      J += 2;
      B.usFirstCharIndex = f.S(A, J);
      J += 2;
      B.usLastCharIndex = f.S(A, J);
      J += 2;
      B.sTypoAscender = f.T(A, J);
      J += 2;
      B.sTypoDescender = f.T(A, J);
      J += 2;
      B.sTypoLineGap = f.T(A, J);
      J += 2;
      B.usWinAscent = f.S(A, J);
      J += 2;
      B.usWinDescent = f.S(A, J);
      J += 2;
      return J;
    },
    az: function (A, J, B) {
      var f = T.B;
      J = T.T.i.bg(A, J, B);
      B.ulCodePageRange1 = f.V(A, J);
      J += 4;
      B.ulCodePageRange2 = f.V(A, J);
      J += 4;
      return J;
    },
    aM: function (A, J, B) {
      var f = T.B,
        g = f.S;
      J = T.T.i.az(A, J, B);
      B.sxHeight = f.T(A, J);
      J += 2;
      B.sCapHeight = f.T(A, J);
      J += 2;
      B.usDefault = g(A, J);
      J += 2;
      B.usBreak = g(A, J);
      J += 2;
      B.usMaxContext = g(A, J);
      J += 2;
      return J;
    },
    bf: function (A, J, B) {
      var f = T.B.S;
      J = T.T.i.aM(A, J, B);
      B.usLowerOpticalPointSize = f(A, J);
      J += 2;
      B.usUpperOpticalPointSize = f(A, J);
      J += 2;
      return J;
    },
  };
  T.T.aI = {
    q: function (A, J, B) {
      var f = T.B,
        g = {};
      g.version = f._(A, J);
      J += 4;
      g.italicAngle = f._(A, J);
      J += 4;
      g.underlinePosition = f.T(A, J);
      J += 2;
      g.underlineThickness = f.T(A, J);
      J += 2;
      return g;
    },
  };
  T.T.b3 = {
    q: function (A, J, B) {
      var f = T.B,
        g = { entries: [], X: [] },
        Z = J,
        r = f.S(A, J);
      J += 2;
      var o = f.V(A, J);
      J += 4;
      var p = f.V(A, J);
      J += 4;
      J = o + Z;
      var k = f.S(A, J);
      J += 2;
      for (var R = 0; R < k; R++) {
        var t = f.S(A, J);
        J += 2;
        var z = f.S(A, J);
        J += 2;
        var x = f.V(A, J);
        J += 4;
        var E = f.V(A, J);
        J += 4;
        var e = new Uint8Array(A.buffer, Z + x + o, E);
        if (e[0] == 31 && e[1] == 139 && e[2] == 8) e = pako.inflate(e);
        var h = f.b7(e, 0, e.length);
        for (var s = t; s <= z; s++) {
          g.entries[s] = g.X.length;
        }
        g.X.push(h);
      }
      return g;
    },
  };
  T.T.aq = {
    q: function (A, J, B, f) {
      var g = f.maxp.numGlyphs,
        Z = J,
        r = T.B,
        o = r.V(A, J + 4),
        p = [];
      for (var k = o - 1; k < o; k++) {
        var R = Z + r.V(A, J + 8 + k * 4);
        for (var t = 0; t < g; t++) {
          var z = r.V(A, R + 4 + t * 4),
            x = r.V(A, R + 4 + t * 4 + 4);
          if (z == x) {
            p[t] = null;
            continue;
          }
          var E = R + z,
            e = r.O(A, E + 4, 4);
          if (e != "png " && e != "flip") throw e;
          p[t] = new Uint8Array(A.buffer, A.byteOffset + E + 8, x - z - 8);
        }
      }
      return p;
    },
  };
  T.T.aA = {
    q: function (A, J, B) {
      var f = T.B,
        g = J;
      J += 2;
      var Z = f.S(A, J);
      J += 2;
      var r = f.V(A, J);
      J += 4;
      var o = f.V(A, J);
      J += 4;
      var p = f.S(A, J);
      J += 2;
      var k = {},
        R = g + r;
      for (var t = 0; t < Z; t++) {
        k["g" + f.S(A, R)] = [f.S(A, R + 2), f.S(A, R + 4)];
        R += 6;
      }
      var z = [];
      R = g + o;
      for (var t = 0; t < p; t++) {
        z.push(f.S(A, R), f.S(A, R + 2));
        R += 4;
      }
      return [k, z];
    },
  };
  T.T.bh = {
    q: function (A, J, B) {
      var f = T.B,
        g = J,
        Z = f.S(A, J);
      J += 2;
      if (Z == 0) {
        var r = f.S(A, J);
        J += 2;
        var o = f.S(A, J);
        J += 2;
        var p = f.S(A, J);
        J += 2;
        var k = f.V(A, J);
        J += 4;
        return new Uint8Array(A.buffer, g + k, p * 4);
      } else throw Z;
    },
  };
  T.T.aj = {
    q: function (A, J, B, f) {
      var g = T.B,
        Z = g.S,
        r = g.V,
        o = J,
        p = Z(A, o);
      o += 2;
      var k = Z(A, o);
      o += 2;
      var R = Z(A, o);
      o += 2;
      var t = Z(A, o);
      o += 2;
      var z = Z(A, o);
      o += 2;
      o = J + t;
      var x = {},
        E = Z(A, o);
      o += 2;
      for (var e = 0; e < E; e++) {
        var h = g.O(A, o, 4);
        o += 4;
        var s = Z(A, o);
        o += 2;
        x[h] = !0;
      }
      return x;
    },
  };
  T.T.aa = {
    q: function (A, J, B, f) {
      var g = f.name,
        Z = J,
        r = T.B,
        o = [],
        p = [];
      Z += 8;
      var k = r.S(A, Z);
      Z += 2;
      Z += 2;
      var R = r.S(A, Z);
      Z += 2;
      var t = r.S(A, Z);
      Z += 2;
      for (var z = 0; z < k; z++) {
        var x = r.O(A, Z, 4),
          E = r._(A, Z + 4),
          e = r._(A, Z + 8),
          h = r._(A, Z + 12),
          s = r.S(A, Z + 16),
          V = r.S(A, Z + 18);
        o.push([x, E, e, h, s, g["_" + V]]);
        Z += 20;
      }
      for (var z = 0; z < R; z++) {
        var G = r.S(A, Z),
          H = null,
          s = r.S(A, Z + 2),
          u = [];
        for (var c = 0; c < k; c++) u.push(r._(A, Z + 4 + c * 4));
        Z += 4 + k * 4;
        if ((t & 3) == 2) {
          H = r.S(A, Z);
          Z += 2;
        }
        p.push([g["_" + G], s, u, H]);
      }
      return [o, p];
    },
  };
  T.T.a5 = (function () {
    var A = 32768,
      J = 16384,
      B = 8192,
      f = 128,
      g = 64,
      Z = 128,
      r = 32768,
      o = T.B;
    function p(z, x, E) {
      var e = [];
      for (var h = 0; h < E; h++) e.push(o.H(z, x + h * 2));
      return e;
    }
    function k(z, x, E, e, h) {
      var s = [];
      for (var V = 0; V < E; V++) {
        var G = o.S(z, x),
          c = null,
          L = null,
          S = null;
        x += 2;
        var H = o.S(z, x),
          u = H & 61440;
        H = H & 4095;
        x += 2;
        if (u & A) {
          c = p(z, x, e);
          x += e * 2;
        }
        if (u & J) {
          L = p(z, x, e);
          x += e * 2;
        }
        if (u & J) {
          S = p(z, x, e);
          x += e * 2;
        }
        s.push([G, H, u, L, c, S]);
      }
      return s;
    }
    function R(z, x, E) {
      var e = z[x],
        s = 0;
      x++;
      if (e == 0) return [[], x];
      if (127 < e) {
        e = ((e & 127) << 8) | z[x++];
      }
      var h = [];
      while (h.length < e) {
        var V = z[x];
        x++;
        var G = (V & Z) != 0;
        V = (V & 127) + 1;
        for (var u = 0; u < V; u++) {
          var c = 0;
          if (G) {
            c = o.S(z, x);
            x += 2;
          } else {
            c = z[x];
            x++;
          }
          s += c;
          h.push(s);
        }
      }
      return [h, x];
    }
    function t(z, x, E, e) {
      var h = x + 4,
        s = o.S(z, h);
      h += 2;
      var V = o.S(z, h);
      h += 2;
      var G = o.V(z, h);
      h += 4;
      var H = o.S(z, h);
      h += 2;
      var u = o.S(z, h);
      h += 2;
      var c = o.V(z, h);
      h += 4;
      var L = [];
      if ((u & 1) == 0)
        for (var S = 0; S < H + 1; S++) L.push(o.S(z, h + S * 2) * 2);
      if ((u & 1) == 1)
        for (var S = 0; S < H + 1; S++) L.push(o.V(z, h + S * 4));
      var i = [],
        $ = [],
        F = [];
      h = x + G;
      for (var S = 0; S < V; S++) {
        var d = p(z, h + S * s * 2, s),
          a = [],
          b = [];
        i.push(d);
        $.push(a);
        F.push(b);
        for (var Q = 0; Q < s; Q++) {
          a[Q] = Math.min(d[Q], 0);
          b[Q] = Math.max(d[Q], 0);
        }
      }
      var C = new Int8Array(z.buffer),
        W = [];
      for (var S = 0; S < H; S++) {
        h = x + c + L[S];
        var Y = o.S(z, h);
        h += 2;
        var P = Y & r;
        Y &= 4095;
        var U = o.S(z, h);
        h += 2;
        var q = k(z, h, Y, s, x + c + L[S + 1]),
          _ = [];
        W.push(_);
        h = x + c + L[S] + U;
        var j = [];
        if (P) {
          var a6 = R(z, h, S);
          j = a6[0];
          h = a6[1];
        }
        for (var X = 0; X < Y; X++) {
          var m = q[X],
            n = h + m[0],
            D = j;
          if (m[2] & B) {
            var a6 = R(z, h, S);
            D = a6[0];
            h = a6[1];
          }
          var M = [];
          while (h < n) {
            var I = z[h++],
              O = (I & 63) + 1;
            if (I & f) {
              for (var Q = 0; Q < O; Q++) M.push(0);
            } else if (I & g) {
              for (var Q = 0; Q < O; Q++) M.push(o.T(z, h + Q * 2));
              h += O * 2;
            } else {
              for (var Q = 0; Q < O; Q++) M.push(C[h + Q]);
              h += O;
            }
          }
          var w = m[1];
          _.push([
            [m[3] ? m[3] : $[w], m[4] ? m[4] : i[w], m[5] ? m[5] : F[w]],
            M,
            D.length == 0 ? null : D,
          ]);
          if (D.length != 0 && D.length * 2 != M.length) throw "e";
        }
      }
      return W;
    }
    return { q: t };
  })();
  T.T.a1 = {
    q: function (A, J, B, f) {
      var g = J,
        Z = T.B,
        r = [];
      g += 6;
      var o = Z.S(A, g);
      g += 2;
      for (var p = 0; p < o; p++) {
        var k = Z.S(A, g);
        g += 2;
        var R = [];
        r.push(R);
        for (var t = 0; t < k; t++) {
          var z = Z.H(A, g),
            x = Z.H(A, g + 2);
          g += 4;
          R.push(z, x);
        }
      }
      return r;
    },
  };
  T.T.a4 = {
    q: function (A, J, B, f) {
      var g = J,
        Z = J,
        r = T.B,
        o = [],
        P = 15,
        U = 48;
      g += 4;
      var p = r.V(A, g);
      g += 4;
      var k = r.V(A, g);
      g += 4;
      var R = r.V(A, g);
      g += 4;
      var t = r.V(A, g);
      g += 4;
      if (R != 0 || t != 0) throw R;
      g = Z + p;
      var z = g,
        x = r.S(A, g);
      g += 2;
      if (x != 1) throw "e";
      var E = r.V(A, g);
      g += 4;
      var e = r.S(A, g);
      g += 2;
      var h = [];
      for (var s = 0; s < e; s++) h.push(r.V(A, g + s * 4));
      g += e * 4;
      g = z + E;
      var V = r.S(A, g);
      g += 2;
      var G = r.S(A, g);
      g += 2;
      var H = [];
      for (var s = 0; s < G; s++) {
        var u = [[], [], []];
        H.push(u);
        for (var c = 0; c < V; c++) {
          u[0].push(r.H(A, g + 0));
          u[1].push(r.H(A, g + 2));
          u[2].push(r.H(A, g + 4));
          g += 6;
        }
      }
      var L = new Int8Array(A.buffer),
        S = [];
      for (var s = 0; s < h.length; s++) {
        g = Z + p + h[s];
        var i = [];
        S.push(i);
        var $ = r.S(A, g);
        g += 2;
        var F = r.S(A, g);
        g += 2;
        if (F & 32768) throw "e";
        var G = r.S(A, g);
        g += 2;
        var d = [];
        for (var c = 0; c < G; c++) d.push(r.S(A, g + c * 2));
        g += G * 2;
        for (var a = 0; a < $; a++) {
          var b = [];
          for (var Q = 0; Q < G; Q++) {
            b.push(Q < F ? r.T(A, g) : L[g]);
            g += Q < F ? 2 : 1;
          }
          var C = new Array(H.length);
          C.fill(0);
          i.push(C);
          for (var c = 0; c < d.length; c++) C[d[c]] = b[c];
        }
      }
      g = Z + k;
      var x = A[g++];
      if (x != 0) throw "e";
      var W = A[g++],
        Y = r.S(A, g);
      g += 2;
      var q = ((W & U) >> 4) + 1,
        _ = [];
      for (var s = 0; s < Y; s++) {
        var j = 0;
        if (q == 1) j = A[g++];
        else if (q == 2) {
          j = r.S(A, g);
          g += 2;
        } else if (q == 3) {
          j = (A[g] << 16) | r.S(A, g + 1);
          g += 3;
        } else throw q;
        var a6 = j >> ((W & P) + 1),
          X = j & ((1 << ((W & P) + 1)) - 1);
        _.push(S[a6][X]);
      }
      return [H, _];
    },
  };
  T.U = (function () {
    var A = {
        J: function (S, i, $) {
          S.N.push("M");
          S.Z.push(i, $);
        },
        F: function (S, i, $) {
          S.N.push("L");
          S.Z.push(i, $);
        },
        L: function (S, i, $, F, d, a, b) {
          S.N.push("C");
          S.Z.push(i, $, F, d, a, b);
        },
        aw: function (S, i, $, F, d) {
          S.N.push("Q");
          S.Z.push(i, $, F, d);
        },
        j: function (S) {
          S.N.push("Z");
        },
      },
      G,
      H;
    function J(S, i, $, F) {
      var d = i[$],
        a = i[$ + 1],
        b = S.kern;
      if (b) {
        var Q = b.a.indexOf(d);
        if (Q != -1) {
          var C = b.d[Q].b9.indexOf(a);
          if (C != -1) return [0, 0, b.d[Q].aD[C], 0];
        }
      }
      return [0, 0, 0, 0];
    }
    function B(S, i, $) {
      if ($ == null) $ = {};
      var F = $.ltr,
        d = $.fts,
        a = $.axs,
        W = 0,
        Y = 0;
      if (S.fvar && a == null) a = S.fvar[1][S._vindex][2];
      var b = S.HVAR;
      if (a && b) {
        a = z(S, a);
      }
      var Q = [];
      for (var o = 0; o < i.length; o++) {
        var C = i.codePointAt(o);
        if (C > 65535) o++;
        Q.push(p(S, C));
      }
      var B = [];
      for (var o = 0; o < Q.length; o++) {
        var P = J(S, Q, o, F),
          U = Q[o],
          q = S.hmtx.aO[U] + P[2];
        if (b && b[1][U]) {
          var _ = b[1][U];
          for (var j = 0; j < b[0].length; j++) {
            q += t(b[0][j], a) * _[j];
          }
        }
        B.push({ g: U, cl: o, dx: 0, dy: 0, ax: q, ay: 0 });
        W += q;
      }
      return B;
    }
    function f(S, B, i) {
      var $ = { N: [], Z: [] },
        F = 0,
        d = 0,
        a,
        b;
      if (i) {
        a = i.clr;
        b = i.axs;
      }
      for (var o = 0; o < B.length; o++) {
        var Q = B[o],
          C = k(S, Q.g, !1, b),
          W = C.crds;
        for (var Y = 0; Y < W.length; Y += 2) {
          $.Z.push(W[Y] + F + Q.dx);
          $.Z.push(W[Y + 1] + d + Q.dy);
        }
        if (a) $.N.push(a);
        for (var Y = 0; Y < C.cmds.length; Y++) $.N.push(C.cmds[Y]);
        var P = $.N.length;
        if (a) if (P != 0 && $.N[P - 1] != "X") $.N.push("X");
        F += Q.ax;
        d += Q.ay;
      }
      return { cmds: $.N, crds: $.Z };
    }
    function g(S, i, $) {
      var F = 0,
        d = ~~(S.length / i);
      while (F + 1 != d) {
        var a = F + ((d - F) >>> 1);
        if (S[a * i] <= $) F = a;
        else d = a;
      }
      return F * i;
    }
    var Z = [
        9, 10, 11, 12, 13, 32, 133, 160, 5760, 6158, 8232, 8233, 8239, 8288,
        12288, 65279,
      ],
      r = {};
    for (var o = 0; o < Z.length; o++) r[Z[o]] = 1;
    for (var o = 8192; o <= 8205; o++) r[o] = 1;
    function p(S, i) {
      if (S._ctab == null) {
        var $ = S.cmap,
          F = -1,
          d = "p3e10 p0e4 p3e1 p1e0 p0e3 p0e1 p3e0 p3e5".split(" ");
        for (var o = 0; o < d.length; o++)
          if ($.m[d[o]] != null) {
            F = $.m[d[o]];
            break;
          }
        if (F == -1) throw "no familiar platform and encoding!";
        S._ctab = $.b[F];
      }
      var a = S._ctab,
        b = a.ar,
        Q = -1;
      if (b == 0) {
        if (i >= a.map.length) Q = 0;
        else Q = a.map[i];
      } else if (b == 4) {
        var C = a.aR;
        Q = 0;
        if (i <= C[C.length - 1]) {
          var W = g(C, 1, i);
          if (C[W] < i) W++;
          if (i >= a.aK[W]) {
            var Y = 0;
            if (a.B[W] != 0)
              Y = a.$[i - a.aK[W] + (a.B[W] >> 1) - (a.B.length - W)];
            else Y = i + a.ai[W];
            Q = Y & 65535;
          }
        }
      } else if (b == 6) {
        var P = i - a.ac,
          U = a.$;
        if (P < 0 || P >= U.length) Q = 0;
        else Q = U[P];
      } else if (b == 12) {
        var q = a.a_;
        Q = 0;
        if (i <= q[q.length - 2]) {
          var o = g(q, 3, i);
          if (q[o] <= i && i <= q[o + 1]) {
            Q = q[o + 2] + (i - q[o]);
          }
        }
      } else throw "unknown cmap table format " + a.ar;
      var _ = S["SVG "],
        j = S.loca;
      if (
        Q != 0 &&
        S["CFF "] == null &&
        (_ == null || _.entries[Q] == null) &&
        j &&
        j[Q] == j[Q + 1] &&
        r[i] == null
      )
        Q = 0;
      return Q;
    }
    function k(S, i, $, F) {
      var d = { N: [], Z: [] },
        U = null;
      if (S.fvar) {
        if (F == null) F = S.fvar[1][S._vindex][2];
        F = z(S, F);
      }
      var a = S["SVG "],
        b = S["CFF "],
        Q = S.COLR,
        C = S.CBLC,
        W = S.CBDT,
        Y = S.sbix,
        P = window.UPNG;
      if (C && P)
        for (var o = 0; o < C.length; o++)
          if (C[o][0] <= i && i <= C[o][1]) U = C[o];
      if (U || (Y && Y[i])) {
        if (U && U[2] != 17) throw "not a PNG";
        if (S.__tmp == null) S.__tmp = {};
        var q = S.__tmp["g" + i];
        if (q == null) {
          var _,
            j,
            m = "";
          if (Y) {
            _ = Y[i];
            j = _.length;
          } else {
            var X = U[3][i - U[0]] + 5;
            j = (W[X + 1] << 16) | (W[X + 2] << 8) | W[X + 3];
            X += 4;
            _ = new Uint8Array(W.buffer, W.byteOffset + X, j);
          }
          for (var o = 0; o < j; o++) m += String.fromCharCode(_[o]);
          q = S.__tmp["g" + i] = "data:image/png;base64," + btoa(m);
        }
        d.N.push(q);
        var n = S.head.unitsPerEm * 1.15,
          D = Math.round(n),
          M = Math.round(n),
          I = Math.round(-M * 0.15);
        d.Z.push(0, M + I, D, M + I, D, I, 0, I);
      } else if (a && a.entries[i]) {
        var O = a.entries[i];
        if (O != null) {
          if (typeof O == "number") {
            var w = a.X[O];
            if (typeof w == "string") {
              var v = new DOMParser(),
                N = v.parseFromString(w, "image/svg+xml");
              w = a.X[O] = N.getElementsByTagName("svg")[0];
            }
            O = T.U.SVG.aH(w, i);
            a.entries[i] = O;
          }
          d = O;
        }
      } else if ($ != !0 && Q && Q[0]["g" + i] && Q[0]["g" + i][1] > 1) {
        function y(a0) {
          var aj = a0.toString(16);
          return (aj.length == 1 ? "0" : "") + aj;
        }
        var l = S.CPAL,
          K = Q[0]["g" + i];
        for (var o = 0; o < K[1]; o++) {
          var a7 = K[0] + o,
            am = Q[1][2 * a7],
            a3 = Q[1][2 * a7 + 1] * 4,
            ao = k(S, am, am == i),
            af = "#" + y(l[a3 + 2]) + y(l[a3 + 1]) + y(l[a3 + 0]);
          d.N.push(af);
          d.N = d.N.concat(ao.cmds);
          d.Z = d.Z.concat(ao.crds);
          d.N.push("X");
        }
      } else if (b) {
        var at = b.Private,
          ai = {
            x: 0,
            y: 0,
            stack: [],
            K: 0,
            A: !1,
            width: at ? at.defaultWidthX : 0,
            open: !1,
          };
        if (b.ROS) {
          var al = 0;
          while (b.FDSelect[al + 2] <= i) al += 2;
          at = b.FDArray[b.FDSelect[al + 1]].Private;
        }
        c(b.CharStrings[i], ai, b, at, d);
      } else if (S.glyf) {
        R(i, S, d, F);
      }
      return { cmds: d.N, crds: d.Z };
    }
    function R(S, i, $, F) {
      var d = i.glyf[S];
      if (d == null) d = i.glyf[S] = T.T.z.ay(i, S);
      if (d != null) {
        if (d.U > -1) E(d, i, S, $, F);
        else e(d, i, S, $, F);
      }
    }
    function t(S, i) {
      var $ = i.length,
        F = 1,
        d = S[0],
        a = S[1],
        b = S[2];
      for (var o = 0; o < i.length; o++) {
        var Q = 1;
        if (d[o] > a[o] || a[o] > b[o]) Q = 1;
        else if (d[o] < 0 && b[o] > 0 && a[o] != 0) Q = 1;
        else if (a[o] == 0) Q = 1;
        else if (i[o] < d[o] || i[o] > b[o]) Q = 0;
        else {
          if (i[o] == a[o]) Q = 1;
          else if (i[o] < a[o]) Q = (i[o] - d[o]) / (a[o] - d[o]);
          else Q = (b[o] - i[o]) / (b[o] - a[o]);
        }
        F = F * Q;
      }
      return F;
    }
    function z(S, i) {
      var $ = S.fvar,
        F = S.avar,
        d = $ ? $[0] : null,
        a = [];
      for (var o = 0; o < d.length; o++) {
        var b = d[o][1],
          Q = d[o][2],
          C = d[o][3],
          W = Math.max(b, Math.min(C, i[o]));
        if (W < Q) a[o] = (Q - W) / (b - Q);
        else if (W > Q) a[o] = (W - Q) / (C - Q);
        else a[o] = 0;
        if (F && a[o] != -1) {
          var Y = F[o],
            P = 0;
          for (; P < Y.length; P += 2) if (Y[P] >= a[o]) break;
          var U = (a[o] - Y[P - 2]) / (Y[P] - Y[P - 2]);
          a[o] = U * Y[P + 1] + (1 - U) * Y[P - 1];
        }
      }
      return a;
    }
    function x(S, i, $, F, d) {
      var a = $.length,
        b = new Array(a * 2 + 8);
      b.fill(0);
      for (var o = 0; o < a; o++) {
        var Q = 0,
          C = 0,
          W = i.indexOf(o);
        if (W != -1) {
          Q = S[W];
          C = S[i.length + W];
        } else {
          var Y = 0;
          while (d[Y] < o) Y++;
          var P = Y == 0 ? 0 : d[Y - 1] + 1,
            U = d[Y],
            q = -1,
            j = -1;
          for (var X = 0; X < i.length; X++) {
            var m = i[X];
            if (m < P || m > U || m >= a) continue;
            q = X;
            if (j == -1) j = X;
          }
          for (var X = 0; X < i.length; X++) {
            var m = i[X];
            if (m < P || m > U || m >= a) continue;
            if (m < o) q = X;
            if (o < m) {
              j = X;
              break;
            }
          }
          for (var n = 0; n < 2; n++) {
            var D = n == 0 ? $ : F,
              M = n * i.length,
              I = 0,
              O = D[i[q]],
              w = D[i[j]],
              v = D[o],
              N = S[M + q],
              y = S[M + j];
            if (O == w) {
              if (N == y) I = N;
              else I = 0;
            } else {
              if (v <= Math.min(O, w)) {
                if (O < w) I = N;
                else I = y;
              } else if (Math.max(O, w) <= v) {
                if (O < w) I = y;
                else I = N;
              } else {
                var l = (v - O) / (w - O);
                I = l * y + (1 - l) * N;
              }
            }
            if (n == 0) Q = I;
            else C = I;
          }
        }
        b[o] = Q;
        b[a + 4 + o] = C;
      }
      return b;
    }
    function E(S, i, $, F, d) {
      var a = S.h,
        b = S.W;
      if (i.fvar && d) {
        a = a.slice(0);
        b = b.slice(0);
        var Q = i.gvar,
          C = Q ? Q[$] : null;
        for (var W = 0; W < C.length; W++) {
          var Y = C[W][0],
            P = t(Y, d);
          if (P < 1e-9) continue;
          var U = C[W][1],
            q = C[W][2];
          if (q) {
            U = C[W][1] = x(U, q, a, b, S.l);
            C[W][2] = null;
          }
          if (U.length == a.length * 2 + 8)
            for (var o = 0; o < a.length; o++) {
              a[o] += P * U[o];
              b[o] += P * U[o + a.length + 4];
            }
        }
      }
      for (var _ = 0; _ < S.U; _++) {
        var j = _ == 0 ? 0 : S.l[_ - 1] + 1,
          X = S.l[_];
        for (var o = j; o <= X; o++) {
          var m = o == j ? X : o - 1,
            D = o == X ? j : o + 1,
            M = S.C[o] & 1,
            I = S.C[m] & 1,
            O = S.C[D] & 1,
            w = a[o],
            v = b[o];
          if (o == j) {
            if (M) {
              if (I) A.J(F, a[m], b[m]);
              else {
                A.J(F, w, v);
                continue;
              }
            } else {
              if (I) A.J(F, a[m], b[m]);
              else
                A.J(
                  F,
                  Math.floor((a[m] + w) * 0.5),
                  Math.floor((b[m] + v) * 0.5)
                );
            }
          }
          if (M) {
            if (I) A.F(F, w, v);
          } else {
            if (O) A.aw(F, w, v, a[D], b[D]);
            else
              A.aw(
                F,
                w,
                v,
                Math.floor((w + a[D]) * 0.5),
                Math.floor((v + b[D]) * 0.5)
              );
          }
        }
        A.j(F);
      }
    }
    function e(S, i, $, F, d) {
      var a = [0, 0, 0, 0, 0, 0],
        b = [0, 0, 0, 0, 0, 0],
        Q = S.R.length;
      while (a.length < Q) {
        a.push(0);
        b.push(0);
      }
      if (i.fvar && d) {
        var C = i.gvar,
          W = C ? C[$] : null;
        for (var Y = 0; Y < W.length; Y++) {
          var P = W[Y][0],
            U = t(P, d);
          if (U < 1e-6) continue;
          var q = W[Y][1],
            _ = W[Y][2];
          if (_ == null)
            for (var o = 0; o < Q; o++) {
              a[o] += U * q[o];
              b[o] += U * q[o + Q + 4];
            }
          else
            for (var j = 0; j < _.length; j++) {
              var o = _[j];
              a[o] += U * q[0];
              b[o] += U * q[0 + Q];
            }
        }
      }
      for (var j = 0; j < Q; j++) {
        var X = { N: [], Z: [] },
          m = S.R[j];
        R(m.bi, i, X, d);
        var D = m.Y,
          M = D.b8 + a[j],
          I = D.a8 + b[j];
        for (var o = 0; o < X.Z.length; o += 2) {
          var O = X.Z[o],
            w = X.Z[o + 1];
          F.Z.push(O * D.p + w * D.a2 + M);
          F.Z.push(O * D.a7 + w * D.f + I);
        }
        for (var o = 0; o < X.N.length; o++) F.N.push(X.N[o]);
      }
    }
    function h(S, i) {
      var $ = S.cmds,
        F = S.crds,
        Q = 0,
        W = 0,
        Y = 0,
        P = 0,
        U = 0,
        q = 0,
        _ = 0;
      if (i == null) i = 5;
      function d(v) {
        return parseFloat(v.toFixed(i));
      }
      function a(v) {
        var N = [],
          y = !1,
          l = "";
        for (var o = 0; o < v.length; o++) {
          var K = v[o],
            a7 = typeof K == "number";
          if (!a7) {
            if (K == l && K.length == 1 && K != "m") continue;
            l = K;
          }
          if (y && a7 && K >= 0) N.push(" ");
          N.push(K);
          y = a7;
        }
        return N.join("");
      }
      var b = [],
        C = { M: 2, L: 2, Q: 4, C: 6 };
      for (var o = 0; o < $.length; o++) {
        var j = $[o],
          X = C[j] ? C[j] : 0,
          m = [],
          n,
          D,
          M,
          I;
        if (j == "L") {
          n = F[Q] - W;
          D = F[Q + 1] - Y;
          M = d(n + P);
          I = d(D + U);
          if ($[o + 1] == "Z" && F[Q] == q && F[Q + 1] == _) {
            M = n;
            I = D;
          } else if (M == 0 && I == 0) {
          } else if (M == 0) m.push("v", I);
          else if (I == 0) m.push("h", M);
          else {
            m.push("l", M, I);
          }
        } else {
          m.push(j.toLowerCase());
          for (var O = 0; O < X; O += 2) {
            n = F[Q + O] - W;
            D = F[Q + O + 1] - Y;
            M = d(n + P);
            I = d(D + U);
            m.push(M, I);
          }
        }
        if (X != 0) {
          P += n - M;
          U += D - I;
        }
        var w = m;
        for (var O = 0; O < w.length; O++) b.push(w[O]);
        if (X != 0) {
          Q += X;
          W = F[Q - 2];
          Y = F[Q - 1];
        }
        if (j == "M") {
          q = W;
          _ = Y;
        }
        if (j == "Z") {
          W = q;
          Y = _;
        }
      }
      return a(b);
    }
    function s(S) {
      var i = { N: [], Z: [] };
      T.U.SVG.aB(S, i);
      return { cmds: i.N, crds: i.Z };
    }
    function V(S, i, $, F) {
      var d = i >> 1,
        a = $ >> 1,
        b = F && F.length == d * a * 4 ? F : new Uint8Array(d * a * 4),
        Q = new Uint32Array(S.buffer),
        C = new Uint32Array(b.buffer);
      for (var W = 0; W < a; W++)
        for (var Y = 0; Y < d; Y++) {
          var P = W * d + Y,
            U = (W << 1) * i + (Y << 1),
            q = Q[U],
            _ = Q[U + 1],
            j = Q[U + i],
            X = Q[U + i + 1],
            m = q >>> 24,
            n = _ >>> 24,
            D = j >>> 24,
            M = X >>> 24,
            I = m + n + D + M;
          if (I == 1020) {
            var O =
                (((q >>> 0) & 255) +
                  ((_ >>> 0) & 255) +
                  ((j >>> 0) & 255) +
                  ((X >>> 0) & 255) +
                  2) >>>
                2,
              w =
                (((q >>> 8) & 255) +
                  ((_ >>> 8) & 255) +
                  ((j >>> 8) & 255) +
                  ((X >>> 8) & 255) +
                  2) >>>
                2,
              v =
                (((q >>> 16) & 255) +
                  ((_ >>> 16) & 255) +
                  ((j >>> 16) & 255) +
                  ((X >>> 16) & 255) +
                  2) >>>
                2;
            C[P] = (255 << 24) | (v << 16) | (w << 8) | O;
          } else if (I == 0) C[P] = 0;
          else {
            var O =
                ((q >>> 0) & 255) * m +
                ((_ >>> 0) & 255) * n +
                ((j >>> 0) & 255) * D +
                ((X >>> 0) & 255) * M,
              w =
                ((q >>> 8) & 255) * m +
                ((_ >>> 8) & 255) * n +
                ((j >>> 8) & 255) * D +
                ((X >>> 8) & 255) * M,
              v =
                ((q >>> 16) & 255) * m +
                ((_ >>> 16) & 255) * n +
                ((j >>> 16) & 255) * D +
                ((X >>> 16) & 255) * M,
              N = 1 / I;
            O = ~~(O * N + 0.5);
            w = ~~(w * N + 0.5);
            v = ~~(v * N + 0.5);
            C[P] = (((I + 2) >>> 2) << 24) | (v << 16) | (w << 8) | O;
          }
        }
      return { a3: b, b0: d, b2: a };
    }
    function u(S, i) {
      var $ = 0,
        F = S.cmds,
        d = S.crds;
      for (var a = 0; a < F.length; a++) {
        var b = F[a];
        if (b == "M") {
          i.moveTo(d[$], d[$ + 1]);
          $ += 2;
        } else if (b == "L") {
          i.lineTo(d[$], d[$ + 1]);
          $ += 2;
        } else if (b == "C") {
          i.bezierCurveTo(
            d[$],
            d[$ + 1],
            d[$ + 2],
            d[$ + 3],
            d[$ + 4],
            d[$ + 5]
          );
          $ += 6;
        } else if (b == "Q") {
          i.quadraticCurveTo(d[$], d[$ + 1], d[$ + 2], d[$ + 3]);
          $ += 4;
        } else if (b[0] == "d") {
          var Q = window.UPNG,
            C = d[$],
            W = d[$ + 1],
            Y = d[$ + 2],
            P = d[$ + 3],
            U = d[$ + 4],
            q = d[$ + 5],
            _ = d[$ + 6],
            j = d[$ + 7];
          $ += 8;
          if (Q == null) {
            i.moveTo(C, W);
            i.lineTo(Y, P);
            i.lineTo(U, q);
            i.lineTo(_, j);
            i.closePath();
            continue;
          }
          var X = Y - C,
            m = P - W,
            n = _ - C,
            D = j - W,
            M = atob(b.slice(22)),
            I = new Uint8Array(M.length);
          for (var o = 0; o < M.length; o++) I[o] = M.charCodeAt(o);
          var O = Q.decode(I.buffer),
            w = O.width,
            v = O.height,
            N = new Uint8Array(Q.toRGBA8(O)[0]),
            y = i.getTransform(),
            l =
              (Math.sqrt(Math.abs(y.a * y.d - y.b * y.c)) *
                Math.sqrt(n * n + D * D)) /
              v;
          while (l < 0.5) {
            var K = V(N, w, v);
            N = K.a3;
            w = K.b0;
            v = K.b2;
            l *= 2;
          }
          if (G == null) {
            G = document.createElement("canvas");
            H = G.getContext("2d");
          }
          if (G.width != w || G.height != v) {
            G.width = w;
            G.height = v;
          }
          H.putImageData(
            new ImageData(new Uint8ClampedArray(N.buffer), w, v),
            0,
            0
          );
          i.save();
          i.transform(X, m, n, D, C, W);
          i.scale(1 / w, 1 / v);
          i.drawImage(G, 0, 0);
          i.restore();
        } else if (b.charAt(0) == "#" || b.charAt(0) == "r") {
          i.beginPath();
          i.fillStyle = b;
        } else if (b.charAt(0) == "O" && b != "OX") {
          i.beginPath();
          var a7 = b.split("-");
          i.lineWidth = parseFloat(a7[2]);
          i.lineCap = ["butt", "round", "square"][parseFloat(a7[3])];
          i.lineJoin = ["miter", "round", "bevel"][parseFloat(a7[4])];
          i.miterLimit = parseFloat(a7[5]);
          i.lineDashOffset = parseFloat(a7[6]);
          i.setLineDash(a7[7].split(",").map(parseFloat));
          i.strokeStyle = a7[1];
        } else if (b == "Z") {
          i.closePath();
        } else if (b == "X") {
          i.fill();
        } else if (b == "OX") {
          i.stroke();
        }
      }
    }
    function c(S, i, $, F, d) {
      var a = i.stack,
        b = i.K,
        Q = i.A,
        C = i.width,
        W = i.open,
        o = 0,
        Y = i.x,
        P = i.y,
        U = 0,
        q = 0,
        _ = 0,
        j = 0,
        X = 0,
        m = 0,
        n = 0,
        D = 0,
        M = 0,
        I = 0,
        O = T.T.g,
        w = F.nominalWidthX,
        v = { ah: 0, size: 0 };
      while (o < S.length) {
        O.ag(S, o, v);
        var N = v.ah;
        o += v.size;
        if (!1) {
        } else if (N == "o1" || N == "o18") {
          var y;
          y = a.length % 2 !== 0;
          if (y && !Q) {
            C = a.shift() + w;
          }
          b += a.length >> 1;
          a.length = 0;
          Q = !0;
        } else if (N == "o3" || N == "o23") {
          var y;
          y = a.length % 2 !== 0;
          if (y && !Q) {
            C = a.shift() + w;
          }
          b += a.length >> 1;
          a.length = 0;
          Q = !0;
        } else if (N == "o4") {
          if (a.length > 1 && !Q) {
            C = a.shift() + w;
            Q = !0;
          }
          if (W) A.j(d);
          P += a.pop();
          A.J(d, Y, P);
          W = !0;
        } else if (N == "o5") {
          while (a.length > 0) {
            Y += a.shift();
            P += a.shift();
            A.F(d, Y, P);
          }
        } else if (N == "o6" || N == "o7") {
          var l = a.length,
            K = N == "o6";
          for (var a7 = 0; a7 < l; a7++) {
            var am = a.shift();
            if (K) Y += am;
            else P += am;
            K = !K;
            A.F(d, Y, P);
          }
        } else if (N == "o8" || N == "o24") {
          var l = a.length,
            a3 = 0;
          while (a3 + 6 <= l) {
            U = Y + a.shift();
            q = P + a.shift();
            _ = U + a.shift();
            j = q + a.shift();
            Y = _ + a.shift();
            P = j + a.shift();
            A.L(d, U, q, _, j, Y, P);
            a3 += 6;
          }
          if (N == "o24") {
            Y += a.shift();
            P += a.shift();
            A.F(d, Y, P);
          }
        } else if (N == "o11") break;
        else if (N == "o1234" || N == "o1235" || N == "o1236" || N == "o1237") {
          if (N == "o1234") {
            U = Y + a.shift();
            q = P;
            _ = U + a.shift();
            j = q + a.shift();
            M = _ + a.shift();
            I = j;
            X = M + a.shift();
            m = j;
            n = X + a.shift();
            D = P;
            Y = n + a.shift();
            A.L(d, U, q, _, j, M, I);
            A.L(d, X, m, n, D, Y, P);
          }
          if (N == "o1235") {
            U = Y + a.shift();
            q = P + a.shift();
            _ = U + a.shift();
            j = q + a.shift();
            M = _ + a.shift();
            I = j + a.shift();
            X = M + a.shift();
            m = I + a.shift();
            n = X + a.shift();
            D = m + a.shift();
            Y = n + a.shift();
            P = D + a.shift();
            a.shift();
            A.L(d, U, q, _, j, M, I);
            A.L(d, X, m, n, D, Y, P);
          }
          if (N == "o1236") {
            U = Y + a.shift();
            q = P + a.shift();
            _ = U + a.shift();
            j = q + a.shift();
            M = _ + a.shift();
            I = j;
            X = M + a.shift();
            m = j;
            n = X + a.shift();
            D = m + a.shift();
            Y = n + a.shift();
            A.L(d, U, q, _, j, M, I);
            A.L(d, X, m, n, D, Y, P);
          }
          if (N == "o1237") {
            U = Y + a.shift();
            q = P + a.shift();
            _ = U + a.shift();
            j = q + a.shift();
            M = _ + a.shift();
            I = j + a.shift();
            X = M + a.shift();
            m = I + a.shift();
            n = X + a.shift();
            D = m + a.shift();
            if (Math.abs(n - Y) > Math.abs(D - P)) {
              Y = n + a.shift();
            } else {
              P = D + a.shift();
            }
            A.L(d, U, q, _, j, M, I);
            A.L(d, X, m, n, D, Y, P);
          }
        } else if (N == "o14") {
          if (a.length > 0 && a.length != 4 && !Q) {
            C = a.shift() + $.nominalWidthX;
            Q = !0;
          }
          if (a.length == 4) {
            var ao = 0,
              af = a.shift(),
              at = a.shift(),
              ai = a.shift(),
              al = a.shift(),
              a0 = O.k($, ai),
              aj = O.k($, al);
            c($.CharStrings[a0], i, $, F, d);
            i.x = af;
            i.y = at;
            c($.CharStrings[aj], i, $, F, d);
          }
          if (W) {
            A.j(d);
            W = !1;
          }
        } else if (N == "o19" || N == "o20") {
          var y;
          y = a.length % 2 !== 0;
          if (y && !Q) {
            C = a.shift() + w;
          }
          b += a.length >> 1;
          a.length = 0;
          Q = !0;
          o += (b + 7) >> 3;
        } else if (N == "o21") {
          if (a.length > 2 && !Q) {
            C = a.shift() + w;
            Q = !0;
          }
          P += a.pop();
          Y += a.pop();
          if (W) A.j(d);
          A.J(d, Y, P);
          W = !0;
        } else if (N == "o22") {
          if (a.length > 1 && !Q) {
            C = a.shift() + w;
            Q = !0;
          }
          Y += a.pop();
          if (W) A.j(d);
          A.J(d, Y, P);
          W = !0;
        } else if (N == "o25") {
          while (a.length > 6) {
            Y += a.shift();
            P += a.shift();
            A.F(d, Y, P);
          }
          U = Y + a.shift();
          q = P + a.shift();
          _ = U + a.shift();
          j = q + a.shift();
          Y = _ + a.shift();
          P = j + a.shift();
          A.L(d, U, q, _, j, Y, P);
        } else if (N == "o26") {
          if (a.length % 2) {
            Y += a.shift();
          }
          while (a.length > 0) {
            U = Y;
            q = P + a.shift();
            _ = U + a.shift();
            j = q + a.shift();
            Y = _;
            P = j + a.shift();
            A.L(d, U, q, _, j, Y, P);
          }
        } else if (N == "o27") {
          if (a.length % 2) {
            P += a.shift();
          }
          while (a.length > 0) {
            U = Y + a.shift();
            q = P;
            _ = U + a.shift();
            j = q + a.shift();
            Y = _ + a.shift();
            P = j;
            A.L(d, U, q, _, j, Y, P);
          }
        } else if (N == "o10" || N == "o29") {
          var ap = N == "o10" ? F : $;
          if (a.length == 0) {
            console.log("error: empty stack");
          } else {
            var a1 = a.pop(),
              ad = ap.Subrs[a1 + ap.Bias];
            i.x = Y;
            i.y = P;
            i.K = b;
            i.A = Q;
            i.width = C;
            i.open = W;
            c(ad, i, $, F, d);
            Y = i.x;
            P = i.y;
            b = i.K;
            Q = i.A;
            C = i.width;
            W = i.open;
          }
        } else if (N == "o30" || N == "o31") {
          var l,
            au = a.length,
            a3 = 0,
            a2 = N == "o31";
          l = au & ~2;
          a3 += au - l;
          while (a3 < l) {
            if (a2) {
              U = Y + a.shift();
              q = P;
              _ = U + a.shift();
              j = q + a.shift();
              P = j + a.shift();
              if (l - a3 == 5) {
                Y = _ + a.shift();
                a3++;
              } else Y = _;
              a2 = !1;
            } else {
              U = Y;
              q = P + a.shift();
              _ = U + a.shift();
              j = q + a.shift();
              Y = _ + a.shift();
              if (l - a3 == 5) {
                P = j + a.shift();
                a3++;
              } else P = j;
              a2 = !0;
            }
            A.L(d, U, q, _, j, Y, P);
            a3 += 4;
          }
        } else if ((N + "").charAt(0) == "o") {
          console.log("Unknown operation: " + N, S);
          throw N;
        } else a.push(N);
      }
      i.x = Y;
      i.y = P;
      i.K = b;
      i.A = Q;
      i.width = C;
      i.open = W;
    }
    function L(S, i) {
      var $ = function (F) {
        var d = 0;
        if ((F & (4294967295 - (1 << 7) + 1)) == 0) {
          d = 1;
        } else if ((F & (4294967295 - (1 << 11) + 1)) == 0) {
          d = 2;
        } else if ((F & (4294967295 - (1 << 16) + 1)) == 0) {
          d = 3;
        } else if ((F & (4294967295 - (1 << 21) + 1)) == 0) {
          d = 4;
        }
        return d;
      };
      fetch(S)
        .then(function (F) {
          return F.arrayBuffer();
        })
        .then(function (F) {
          return WebAssembly.instantiate(F);
        })
        .then(function (F) {
          console.log("HB ready");
          var d = F.instance.exports,
            a = d.memory,
            b,
            Q,
            C,
            W,
            Y,
            P,
            U,
            q,
            _;
          T.U.shapeHB = (function () {
            var j = function (m) {
                var n = d.hb_buffer_get_length(m),
                  D = [],
                  M = d.hb_buffer_get_glyph_infos(m, 0) >>> 2,
                  I = d.hb_buffer_get_glyph_positions(m, 0) >>> 2;
                for (var o = 0; o < n; ++o) {
                  var O = M + o * 5,
                    w = I + o * 5;
                  D.push({
                    g: Q[O + 0],
                    cl: Q[O + 2],
                    ax: C[w + 0],
                    ay: C[w + 1],
                    dx: C[w + 2],
                    dy: C[w + 3],
                  });
                }
                return D;
              },
              X;
            return function (m, n, D) {
              var M = m._data,
                I = m.name.postScriptName,
                O = D.ltr,
                w = D.fts,
                v = D.axs,
                am = 0,
                at = 0,
                aj = 0,
                ap = 0;
              if (m.fvar && v == null) v = m.fvar[1][m._vindex][2];
              b = new Uint8Array(a.buffer);
              Q = new Uint32Array(a.buffer);
              C = new Int32Array(a.buffer);
              W = new Float32Array(a.buffer);
              if (Y != I) {
                if (P != null) {
                  d.hb_blob_destroy(P);
                  d.free(U);
                  d.hb_face_destroy(q);
                  d.hb_font_destroy(_);
                }
                U = d.malloc(M.byteLength);
                b.set(M, U);
                P = d.hb_blob_create(U, M.byteLength, 2, 0, 0);
                q = d.hb_face_create(P, m._index);
                _ = d.hb_font_create(q);
                Y = I;
              }
              if (window.TextEncoder == null) {
                alert("Your browser is too old. Please, update it.");
                return;
              }
              if (X == null) X = new window.TextEncoder("utf8");
              var N = d.hb_buffer_create(),
                y = X.encode(n),
                l = y.length,
                K = d.malloc(l);
              b.set(y, K);
              d.hb_buffer_add_utf8(N, K, l, 0, l);
              d.free(K);
              var a7 = T.B;
              if (w) {
                am = d.malloc(16 * w.length);
                for (var o = 0; o < w.length; o++) {
                  var a3 = w[o],
                    ao = am + o * 16,
                    af = ao >>> 2;
                  a7.s(b, ao, a3[0].split("").reverse().join(""));
                  Q[af + 1] = a3[1];
                  Q[af + 2] = a3[2];
                  Q[af + 3] = a3[3];
                }
              }
              if (v && m.fvar) {
                var ai = m.fvar[0];
                at = d.malloc(8 * v.length);
                for (var o = 0; o < v.length; o++) {
                  var ao = at + o * 8,
                    af = ao >>> 2;
                  a7.s(b, ao, ai[o][0].split("").reverse().join(""));
                  W[af + 1] = v[o];
                }
              }
              if (v) d.hb_font_set_variations(_, at, v.length);
              d.hb_buffer_set_direction(N, O ? 4 : 5);
              d.hb_buffer_guess_segment_properties(N);
              d.hb_shape(_, N, am, w ? w.length : 0);
              var al = j(N);
              d.hb_buffer_destroy(N);
              if (w) d.free(am);
              if (v) d.free(at);
              var a0 = al.slice(0);
              if (!O) a0.reverse();
              for (var o = 1; o < a0.length; o++) {
                var a1 = a0[o],
                  ad = a1.cl;
                while (!0) {
                  var au = n.codePointAt(aj),
                    a2 = $(au);
                  if (ap + a2 <= ad) {
                    ap += a2;
                    aj += au <= 65535 ? 1 : 2;
                  } else break;
                }
                a1.cl = aj;
              }
              return al;
            };
          })();
          i();
        });
    }
    return {
      shape: B,
      shapeToPath: f,
      codeToGlyph: p,
      glyphToPath: k,
      pathToSVG: h,
      SVGToPath: s,
      pathToContext: u,
      initHB: L,
    };
  })();
  T.U.SVG = (function () {
    var A = {
      ap: function (t) {
        return Math.sqrt(Math.abs(t[0] * t[3] - t[1] * t[2]));
      },
      translate: function (t, z, x) {
        A.concat(t, [1, 0, 0, 1, z, x]);
      },
      rotate: function (t, z) {
        A.concat(t, [
          Math.cos(z),
          -Math.sin(z),
          Math.sin(z),
          Math.cos(z),
          0,
          0,
        ]);
      },
      scale: function (t, z, x) {
        A.concat(t, [z, 0, 0, x, 0, 0]);
      },
      concat: function (t, z) {
        var x = t[0],
          E = t[1],
          e = t[2],
          h = t[3],
          s = t[4],
          V = t[5];
        t[0] = x * z[0] + E * z[2];
        t[1] = x * z[1] + E * z[3];
        t[2] = e * z[0] + h * z[2];
        t[3] = e * z[1] + h * z[3];
        t[4] = s * z[0] + V * z[2] + z[4];
        t[5] = s * z[1] + V * z[3] + z[5];
      },
      aG: function (t) {
        var z = t[0],
          x = t[1],
          E = t[2],
          e = t[3],
          h = t[4],
          s = t[5],
          V = z * e - x * E;
        t[0] = e / V;
        t[1] = -x / V;
        t[2] = -E / V;
        t[3] = z / V;
        t[4] = (E * s - e * h) / V;
        t[5] = (x * h - z * s) / V;
      },
      aE: function (t, z) {
        var x = z[0],
          e = z[1];
        return [x * t[0] + e * t[2] + t[4], x * t[1] + e * t[3] + t[5]];
      },
      aU: function (t, z) {
        for (var x = 0; x < z.length; x += 2) {
          var E = z[x],
            e = z[x + 1];
          z[x] = E * t[0] + e * t[2] + t[4];
          z[x + 1] = E * t[1] + e * t[3] + t[5];
        }
      },
    };
    function J(t, z, x) {
      var E = [],
        e = 0,
        h = 0,
        s = 0;
      while (!0) {
        var V = t.indexOf(z, h),
          G = t.indexOf(x, h);
        if (V == -1 && G == -1) break;
        if (G == -1 || (V != -1 && V < G)) {
          if (s == 0) {
            E.push(t.slice(e, V).trim());
            e = V + 1;
          }
          s++;
          h = V + 1;
        } else if (V == -1 || (G != -1 && G < V)) {
          s--;
          if (s == 0) {
            E.push(t.slice(e, G).trim());
            e = G + 1;
          }
          h = G + 1;
        }
      }
      return E;
    }
    function B(t) {
      var z = J(t, "{", "}"),
        x = {};
      for (var E = 0; E < z.length; E += 2) {
        var e = z[E].split(",");
        for (var h = 0; h < e.length; h++) {
          var s = e[h].trim();
          if (x[s] == null) x[s] = "";
          x[s] += z[E + 1];
        }
      }
      return x;
    }
    function f(t) {
      var z = J(t, "(", ")"),
        x = [1, 0, 0, 1, 0, 0];
      for (var E = 0; E < z.length; E += 2) {
        var e = x;
        x = g(z[E], z[E + 1]);
        A.concat(x, e);
      }
      return x;
    }
    function g(t, z) {
      var x = [1, 0, 0, 1, 0, 0],
        E = !0;
      for (var e = 0; e < z.length; e++) {
        var h = z.charAt(e);
        if (h == "," || h == " ") E = !0;
        else if (h == ".") {
          if (!E) {
            z = z.slice(0, e) + "," + z.slice(e);
            e++;
          }
          E = !1;
        } else if (h == "-" && e > 0 && z[e - 1] != "e") {
          z = z.slice(0, e) + " " + z.slice(e);
          e++;
          E = !0;
        }
      }
      z = z.split(/\s*[\s,]\s*/).map(parseFloat);
      if (!1) {
      } else if (t == "translate") {
        if (z.length == 1) A.translate(x, z[0], 0);
        else A.translate(x, z[0], z[1]);
      } else if (t == "translateX") {
        A.translate(x, z[0], 0);
      } else if (t == "translateY") {
        A.translate(x, 0, z[0]);
      } else if (t == "scale") {
        if (z.length == 1) A.scale(x, z[0], z[0]);
        else A.scale(x, z[0], z[1]);
      } else if (t == "rotate") {
        var s = 0,
          V = 0;
        if (z.length != 1) {
          s = z[1];
          V = z[2];
        }
        A.translate(x, -s, -V);
        A.rotate(x, (-Math.PI * z[0]) / 180);
        A.translate(x, s, V);
      } else if (t == "matrix") x = z;
      else if (t == "skewX")
        x = [1, Math.tan((z[0] * Math.PI) / 180), 0, 1, 0, 0];
      else if (t == "skewY")
        x = [1, 0, Math.tan((z[0] * Math.PI) / 180), 1, 0, 0];
      else console.log("unknown transform: ", t);
      return x;
    }
    function Z(t, z) {
      var x = { N: [], Z: [] },
        E = t.getAttribute("viewBox");
      if (E) E = E.trim().split(" ").map(parseFloat);
      else E = [0, 0, 1e3, 1e3];
      var e = t;
      if (z != null) {
        var h = t.getElementById("glyph" + z);
        if (h) e = h;
      }
      o(e.children, x, null, t);
      for (var s = 0; s < x.Z.length; s += 2) {
        var V = x.Z[s],
          G = x.Z[s + 1];
        V -= E[0];
        G -= E[1];
        G = -G;
        x.Z[s] = V;
        x.Z[s + 1] = G;
      }
      return x;
    }
    var r = {
      aliceblue: "#f0f8ff",
      antiquewhite: "#faebd7",
      aqua: "#00ffff",
      aquamarine: "#7fffd4",
      azure: "#f0ffff",
      beige: "#f5f5dc",
      bisque: "#ffe4c4",
      black: "#000000",
      blanchedalmond: "#ffebcd",
      blue: "#0000ff",
      blueviolet: "#8a2be2",
      brown: "#a52a2a",
      burlywood: "#deb887",
      cadetblue: "#5f9ea0",
      chartreuse: "#7fff00",
      chocolate: "#d2691e",
      coral: "#ff7f50",
      cornflowerblue: "#6495ed",
      cornsilk: "#fff8dc",
      crimson: "#dc143c",
      cyan: "#00ffff",
      darkblue: "#00008b",
      darkcyan: "#008b8b",
      darkgoldenrod: "#b8860b",
      darkgray: "#a9a9a9",
      darkgreen: "#006400",
      darkgrey: "#a9a9a9",
      darkkhaki: "#bdb76b",
      darkmagenta: "#8b008b",
      darkolivegreen: "#556b2f",
      darkorange: "#ff8c00",
      darkorchid: "#9932cc",
      darkred: "#8b0000",
      darksalmon: "#e9967a",
      darkseagreen: "#8fbc8f",
      darkslateblue: "#483d8b",
      darkslategray: "#2f4f4f",
      darkslategrey: "#2f4f4f",
      darkturquoise: "#00ced1",
      darkviolet: "#9400d3",
      deeppink: "#ff1493",
      deepskyblue: "#00bfff",
      dimgray: "#696969",
      dimgrey: "#696969",
      dodgerblue: "#1e90ff",
      firebrick: "#b22222",
      floralwhite: "#fffaf0",
      forestgreen: "#228b22",
      fuchsia: "#ff00ff",
      gainsboro: "#dcdcdc",
      ghostwhite: "#f8f8ff",
      gold: "#ffd700",
      goldenrod: "#daa520",
      gray: "#808080",
      green: "#008000",
      greenyellow: "#adff2f",
      grey: "#808080",
      honeydew: "#f0fff0",
      hotpink: "#ff69b4",
      indianred: "#cd5c5c",
      indigo: "#4b0082",
      ivory: "#fffff0",
      khaki: "#f0e68c",
      lavender: "#e6e6fa",
      lavenderblush: "#fff0f5",
      lawngreen: "#7cfc00",
      lemonchiffon: "#fffacd",
      lightblue: "#add8e6",
      lightcoral: "#f08080",
      lightcyan: "#e0ffff",
      lightgoldenrodyellow: "#fafad2",
      lightgray: "#d3d3d3",
      lightgreen: "#90ee90",
      lightgrey: "#d3d3d3",
      lightpink: "#ffb6c1",
      lightsalmon: "#ffa07a",
      lightseagreen: "#20b2aa",
      lightskyblue: "#87cefa",
      lightslategray: "#778899",
      lightslategrey: "#778899",
      lightsteelblue: "#b0c4de",
      lightyellow: "#ffffe0",
      lime: "#00ff00",
      limegreen: "#32cd32",
      linen: "#faf0e6",
      magenta: "#ff00ff",
      maroon: "#800000",
      mediumaquamarine: "#66cdaa",
      mediumblue: "#0000cd",
      mediumorchid: "#ba55d3",
      mediumpurple: "#9370db",
      mediumseagreen: "#3cb371",
      mediumslateblue: "#7b68ee",
      mediumspringgreen: "#00fa9a",
      mediumturquoise: "#48d1cc",
      mediumvioletred: "#c71585",
      midnightblue: "#191970",
      mintcream: "#f5fffa",
      mistyrose: "#ffe4e1",
      moccasin: "#ffe4b5",
      navajowhite: "#ffdead",
      navy: "#000080",
      oldlace: "#fdf5e6",
      olive: "#808000",
      olivedrab: "#6b8e23",
      orange: "#ffa500",
      orangered: "#ff4500",
      orchid: "#da70d6",
      palegoldenrod: "#eee8aa",
      palegreen: "#98fb98",
      paleturquoise: "#afeeee",
      palevioletred: "#db7093",
      papayawhip: "#ffefd5",
      peachpuff: "#ffdab9",
      peru: "#cd853f",
      pink: "#ffc0cb",
      plum: "#dda0dd",
      powderblue: "#b0e0e6",
      purple: "#800080",
      rebeccapurple: "#663399",
      red: "#ff0000",
      rosybrown: "#bc8f8f",
      royalblue: "#4169e1",
      saddlebrown: "#8b4513",
      salmon: "#fa8072",
      sandybrown: "#f4a460",
      seagreen: "#2e8b57",
      seashell: "#fff5ee",
      sienna: "#a0522d",
      silver: "#c0c0c0",
      skyblue: "#87ceeb",
      slateblue: "#6a5acd",
      slategray: "#708090",
      slategrey: "#708090",
      snow: "#fffafa",
      springgreen: "#00ff7f",
      steelblue: "#4682b4",
      tan: "#d2b48c",
      teal: "#008080",
      thistle: "#d8bfd8",
      tomato: "#ff6347",
      turquoise: "#40e0d0",
      violet: "#ee82ee",
      wheat: "#f5deb3",
      white: "#ffffff",
      whitesmoke: "#f5f5f5",
      yellow: "#ffff00",
      yellowgreen: "#9acd32",
    };
    function o(t, z, x, E) {
      for (var e = 0; e < t.length; e++) {
        var h = t[e],
          s = h.tagName,
          V = h.getAttribute("fill");
        if (V == null) V = x;
        if (V && V.startsWith("url")) {
          var G = V.slice(5, -1),
            H = E.getElementById(G),
            u = H.children[0];
          if (u.getAttribute("stop-opacity") != null) continue;
          V = u.getAttribute("stop-color");
        }
        if (r[V]) V = r[V];
        if (s == "g" || s == "use") {
          var c = { Z: [], N: [] };
          if (s == "g") o(h.children, c, V, E);
          else {
            var L = h.getAttribute("xlink:href").slice(1),
              S = E.getElementById(L);
            o([S], c, V, E);
          }
          var i = [1, 0, 0, 1, 0, 0],
            $ = h.getAttribute("x"),
            F = h.getAttribute("y");
          $ = $ ? parseFloat($) : 0;
          F = F ? parseFloat(F) : 0;
          A.concat(i, [1, 0, 0, 1, $, F]);
          var d = h.getAttribute("transform");
          if (d) A.concat(i, f(d));
          A.aU(i, c.Z);
          z.Z = z.Z.concat(c.Z);
          z.N = z.N.concat(c.N);
        } else if (s == "path" || s == "circle" || s == "ellipse") {
          z.N.push(V ? V : "#000000");
          var a;
          if (s == "path") a = h.getAttribute("d");
          if (s == "circle" || s == "ellipse") {
            var b = [0, 0, 0, 0],
              Q = ["cx", "cy", "rx", "ry", "r"];
            for (var C = 0; C < 5; C++) {
              var W = h.getAttribute(Q[C]);
              if (W) {
                W = parseFloat(W);
                if (C < 4) b[C] = W;
                else b[2] = b[3] = W;
              }
            }
            var Y = b[0],
              P = b[1],
              U = b[2],
              _ = b[3];
            a = [
              "M",
              Y - U,
              P,
              "a",
              U,
              _,
              0,
              1,
              0,
              U * 2,
              0,
              "a",
              U,
              _,
              0,
              1,
              0,
              -U * 2,
              0,
            ].join(" ");
          }
          R(a, z);
          z.N.push("X");
        } else if (s == "image") {
          var j = parseFloat(h.getAttribute("width")),
            a6 = parseFloat(h.getAttribute("height"));
          z.N.push(h.getAttribute("xlink:href"));
          z.Z.push(0, 0, j, 0, j, a6, 0, a6);
        } else if (s == "defs") {
        } else console.log(s);
      }
    }
    function p(t) {
      var z = [],
        x = 0,
        E = !1,
        e = "",
        h = "",
        s = "",
        V = 0;
      while (x < t.length) {
        var G = t.charCodeAt(x),
          H = t.charAt(x);
        x++;
        var u =
          (48 <= G && G <= 57) ||
          H == "." ||
          H == "-" ||
          H == "+" ||
          H == "e" ||
          H == "E";
        if (E) {
          if (
            ((H == "+" || H == "-") && h != "e") ||
            (H == "." && e.indexOf(".") != -1) ||
            (u && (s == "a" || s == "A") && (V % 7 == 3 || V % 7 == 4))
          ) {
            z.push(parseFloat(e));
            V++;
            e = H;
          } else if (u) e += H;
          else {
            z.push(parseFloat(e));
            V++;
            if (H != "," && H != " ") {
              z.push(H);
              s = H;
              V = 0;
            }
            E = !1;
          }
        } else {
          if (u) {
            e = H;
            E = !0;
          } else if (H != "," && H != " ") {
            z.push(H);
            s = H;
            V = 0;
          }
        }
        h = H;
      }
      if (E) z.push(parseFloat(e));
      return z;
    }
    function k(t, z, x) {
      var E = z;
      while (E < t.length) {
        if (typeof t[E] == "string") break;
        E += x;
      }
      return (E - z) / x;
    }
    function R(t, z) {
      var x = p(t),
        E = 0,
        e = 0,
        h = 0,
        s = 0,
        V = 0,
        G = z.Z.length,
        H = { M: 2, L: 2, H: 1, V: 1, T: 2, S: 4, A: 7, Q: 4, C: 6 },
        u = z.N,
        S = z.Z;
      while (E < x.length) {
        var i = x[E];
        E++;
        var $ = i.toUpperCase();
        if ($ == "Z") {
          u.push("Z");
          e = s;
          h = V;
        } else {
          var F = H[$],
            d = k(x, E, F);
          for (var a = 0; a < d; a++) {
            if (a == 1 && $ == "M") {
              i = i == $ ? "L" : "l";
              $ = "L";
            }
            var b = 0,
              Q = 0;
            if (i != $) {
              b = e;
              Q = h;
            }
            if (!1) {
            } else if ($ == "M") {
              e = b + x[E++];
              h = Q + x[E++];
              u.push("M");
              S.push(e, h);
              s = e;
              V = h;
            } else if ($ == "L") {
              e = b + x[E++];
              h = Q + x[E++];
              u.push("L");
              S.push(e, h);
            } else if ($ == "H") {
              e = b + x[E++];
              u.push("L");
              S.push(e, h);
            } else if ($ == "V") {
              h = Q + x[E++];
              u.push("L");
              S.push(e, h);
            } else if ($ == "Q") {
              var C = b + x[E++],
                W = Q + x[E++],
                Y = b + x[E++],
                P = Q + x[E++];
              u.push("Q");
              S.push(C, W, Y, P);
              e = Y;
              h = P;
            } else if ($ == "T") {
              var U = Math.max(S.length - (u[u.length - 1] == "Q" ? 4 : 2), G),
                C = e + e - S[U],
                W = h + h - S[U + 1],
                Y = b + x[E++],
                P = Q + x[E++];
              u.push("Q");
              S.push(C, W, Y, P);
              e = Y;
              h = P;
            } else if ($ == "C") {
              var C = b + x[E++],
                W = Q + x[E++],
                Y = b + x[E++],
                P = Q + x[E++],
                _ = b + x[E++],
                j = Q + x[E++];
              u.push("C");
              S.push(C, W, Y, P, _, j);
              e = _;
              h = j;
            } else if ($ == "S") {
              var U = Math.max(S.length - (u[u.length - 1] == "C" ? 4 : 2), G),
                C = e + e - S[U],
                W = h + h - S[U + 1],
                Y = b + x[E++],
                P = Q + x[E++],
                _ = b + x[E++],
                j = Q + x[E++];
              u.push("C");
              S.push(C, W, Y, P, _, j);
              e = _;
              h = j;
            } else if ($ == "A") {
              var C = e,
                W = h,
                a6 = x[E++],
                X = x[E++],
                m = x[E++] * (Math.PI / 180),
                n = x[E++],
                D = x[E++],
                Y = b + x[E++],
                P = Q + x[E++];
              if (Y == e && P == h && a6 == 0 && X == 0) continue;
              if (a6 == 0 || X == 0) {
                u.push("L");
                S.push(Y, P);
                continue;
              }
              var M = (C - Y) / 2,
                I = (W - P) / 2,
                O = Math.cos(m),
                w = Math.sin(m),
                v = O * M + w * I,
                N = -w * M + O * I,
                y = a6 * a6,
                l = X * X,
                K = v * v,
                a7 = N * N,
                am = (y * l - y * a7 - l * K) / (y * a7 + l * K),
                a3 = (n != D ? 1 : -1) * Math.sqrt(Math.max(am, 0)),
                ao = (a3 * (a6 * N)) / X,
                af = (-a3 * (X * v)) / a6,
                at = O * ao - w * af + (C + Y) / 2,
                ai = w * ao + O * af + (W + P) / 2,
                al = function (a2, av, ab, a8) {
                  var a5 = Math.sqrt(a2 * a2 + av * av),
                    ag = Math.sqrt(ab * ab + a8 * a8),
                    aq = (a2 * ab + av * a8) / (a5 * ag);
                  return (
                    (a2 * a8 - av * ab >= 0 ? 1 : -1) *
                    Math.acos(Math.max(-1, Math.min(1, aq)))
                  );
                },
                a0 = (v - ao) / a6,
                aj = (N - af) / X,
                ap = al(1, 0, a0, aj),
                a1 = al(a0, aj, (-v - ao) / a6, (-N - af) / X);
              a1 = a1 % (2 * Math.PI);
              var ad = function (au, e, h, a2, av, ab, a8) {
                  var a5 = function (a9, ac) {
                      var ah = Math.sin(ac),
                        U = Math.cos(ac),
                        ac = a9[0],
                        ak = a9[1],
                        as = a9[2],
                        t = a9[3];
                      a9[0] = ac * U + ak * ah;
                      a9[1] = -ac * ah + ak * U;
                      a9[2] = as * U + t * ah;
                      a9[3] = -as * ah + t * U;
                    },
                    ag = function (a9, ac) {
                      for (var a = 0; a < ac.length; a += 2) {
                        var e = ac[a],
                          h = ac[a + 1];
                        ac[a] = a9[0] * e + a9[2] * h + a9[4];
                        ac[a + 1] = a9[1] * e + a9[3] * h + a9[5];
                      }
                    },
                    aq = function (a9, ac) {
                      for (var a = 0; a < ac.length; a++) a9.push(ac[a]);
                    },
                    an = function (a9, a2) {
                      aq(a9.N, a2.N);
                      aq(a9.Z, a2.Z);
                    };
                  if (a8) while (ab > av) ab -= 2 * Math.PI;
                  else while (ab < av) ab += 2 * Math.PI;
                  var ar = (ab - av) / 4,
                    aa = Math.cos(ar / 2),
                    a4 = -Math.sin(ar / 2),
                    C = (4 - aa) / 3,
                    W = a4 == 0 ? a4 : ((1 - aa) * (3 - aa)) / (3 * a4),
                    Y = C,
                    P = -W,
                    _ = aa,
                    j = -a4,
                    F = [C, W, Y, P, _, j],
                    z = { N: ["C", "C", "C", "C"], Z: F.slice(0) },
                    ae = [1, 0, 0, 1, 0, 0];
                  a5(ae, -ar);
                  for (var a = 0; a < 3; a++) {
                    ag(ae, F);
                    aq(z.Z, F);
                  }
                  a5(ae, -av + ar / 2);
                  ae[0] *= a2;
                  ae[1] *= a2;
                  ae[2] *= a2;
                  ae[3] *= a2;
                  ae[4] = e;
                  ae[5] = h;
                  ag(ae, z.Z);
                  ag(au.av, z.Z);
                  an(au.af, z);
                },
                au = { af: z, av: [a6 * O, a6 * w, -X * w, X * O, at, ai] };
              ad(au, 0, 0, 1, ap, ap + a1, D == 0);
              e = Y;
              h = P;
            } else console.log("Unknown SVG command " + i);
          }
        }
      }
    }
    return { cssMap: B, readTrnf: f, aB: R, aH: Z };
  })();
  return T;
})();

var UZIP = {};

(function () {
  var B = {
    readUshort: function (buff, p) {
      return buff[p] | (buff[p + 1] << 8);
    },
    writeUshort: function (buff, p, n) {
      buff[p] = n & 255;
      buff[p + 1] = (n >> 8) & 255;
    },
    readUint: function (buff, p) {
      return (
        buff[p + 3] * (256 * 256 * 256) +
        ((buff[p + 2] << 16) | (buff[p + 1] << 8) | buff[p])
      );
    },
    writeUint: function (buff, p, n) {
      buff[p] = n & 255;
      buff[p + 1] = (n >> 8) & 255;
      buff[p + 2] = (n >> 16) & 255;
      buff[p + 3] = (n >> 24) & 255;
    },
    readASCII: function (buff, p, l) {
      var s = "";
      for (var i = 0; i < l; i++) s += String.fromCharCode(buff[p + i]);
      return s;
    },
    writeASCII: function (data, p, s) {
      for (var i = 0; i < s.length; i++) data[p + i] = s.charCodeAt(i);
    },
    pad: function (n) {
      return n.length < 2 ? "0" + n : n;
    },
    readIBM: function (buff, p, l) {
      var codes = [
        0xc7, 0xfc, 0xe9, 0xe2, 0xe4, 0xe0, 0xe5, 0xe7, 0xea, 0xeb, 0xe8, 0xef,
        0xee, 0xec, 0xc4, 0xc5, 0xc9, 0xe6, 0xc6, 0xf4, 0xf6, 0xf2, 0xfb, 0xf9,
        0xff, 0xd6, 0xdc, 0xa2, 0xa3, 0xa5, 0xa7, 0x192, 0xe1, 0xed, 0xf3, 0xfa,
        0xf1, 0xd1, 0xaa, 0xba, 0xbf, 0x2310, 0xac, 0xbd, 0xbc, 0xa1, 0xab,
        0xbb,
      ];
      var out = "";
      for (var i = 0; i < l; i++) {
        var cc = buff[p + i];
        if (cc < 0x80) cc = cc;
        else if (cc < 0xb0) cc = codes[cc - 0x80];
        else return null;
        out += String.fromCharCode(cc);
      }
      return out;
    },
    readUTF8: function (buff, p, l) {
      var s = "",
        ns;
      for (var i = 0; i < l; i++) s += "%" + B.pad(buff[p + i].toString(16));
      try {
        ns = decodeURIComponent(s);
      } catch (e) {
        return B.readASCII(buff, p, l);
      }
      return ns;
    },
    writeUTF8: function (buff, p, str) {
      var strl = str.length,
        i = 0;
      for (var ci = 0; ci < strl; ci++) {
        var code = str.charCodeAt(ci);
        if ((code & (0xffffffff - (1 << 7) + 1)) == 0) {
          buff[p + i] = code;
          i++;
        } else if ((code & (0xffffffff - (1 << 11) + 1)) == 0) {
          buff[p + i] = 192 | (code >> 6);
          buff[p + i + 1] = 128 | ((code >> 0) & 63);
          i += 2;
        } else if ((code & (0xffffffff - (1 << 16) + 1)) == 0) {
          buff[p + i] = 224 | (code >> 12);
          buff[p + i + 1] = 128 | ((code >> 6) & 63);
          buff[p + i + 2] = 128 | ((code >> 0) & 63);
          i += 3;
        } else if ((code & (0xffffffff - (1 << 21) + 1)) == 0) {
          buff[p + i] = 240 | (code >> 18);
          buff[p + i + 1] = 128 | ((code >> 12) & 63);
          buff[p + i + 2] = 128 | ((code >> 6) & 63);
          buff[p + i + 3] = 128 | ((code >> 0) & 63);
          i += 4;
        } else throw "e";
      }
      return i;
    },
    sizeUTF8: function (str) {
      var strl = str.length,
        i = 0;
      for (var ci = 0; ci < strl; ci++) {
        var code = str.charCodeAt(ci);
        if ((code & (0xffffffff - (1 << 7) + 1)) == 0) {
          i++;
        } else if ((code & (0xffffffff - (1 << 11) + 1)) == 0) {
          i += 2;
        } else if ((code & (0xffffffff - (1 << 16) + 1)) == 0) {
          i += 3;
        } else if ((code & (0xffffffff - (1 << 21) + 1)) == 0) {
          i += 4;
        } else throw "e";
      }
      return i;
    },
  };

  var crc = {
    table: (function () {
      var tab = new Uint32Array(256);
      for (var n = 0; n < 256; n++) {
        var c = n;
        for (var k = 0; k < 8; k++) {
          if (c & 1) c = 0xedb88320 ^ (c >>> 1);
          else c = c >>> 1;
        }
        tab[n] = c;
      }
      return tab;
    })(),
    update: function (c, buf, off, len) {
      for (var i = 0; i < len; i++)
        c = crc.table[(c ^ buf[off + i]) & 0xff] ^ (c >>> 8);
      return c;
    },
    crc: function (b, o, l) {
      return crc.update(0xffffffff, b, o, l) ^ 0xffffffff;
    },
  };

  function adler(data, o, len) {
    var a = 1,
      b = 0;
    var off = o,
      end = o + len;
    while (off < end) {
      var eend = Math.min(off + 5552, end);
      while (off < eend) {
        a += data[off++];
        b += a;
      }
      a = a % 65521;
      b = b % 65521;
    }
    return (b << 16) | a;
  }

  function parseTar(data) {
    var off = 0,
      out = {};
    while (off + 1024 < data.length) {
      var no = off;
      while (data[no] != 0) no++;
      var nam = B.readASCII(data, off, no - off);
      off += 100;
      off += 24;
      var sz = parseInt(B.readASCII(data, off, 12), 8);
      off += 12;
      var tm = parseInt(B.readASCII(data, off, 12), 8);
      off += 12;
      // console.log(nam, sz, tm);
      off += 8 + 1 + 100;
      off += 6 + 2 + 32 + 32 + 8 + 8 + 155 + 12;

      out[nam] = data.slice(off, off + sz);
      off += sz;

      var ex = off & 0x1ff;
      if (ex != 0) off += 512 - ex;
    }
    return out;
  }
  /*
	var parse7z = function() {
		var rUs = B.readUshort, rUi = B.readUint;
		var data, off;
		
		function NUMBER() {
			var v = data[off++];
			if     ((v&128)==0) return v;
			else if((v& 64)==0) return ((((((v&63)<<8)+data[off++])    )           )   );
			else if((v& 32)==0) return ((((((v&31)<<8)+data[off++])<<8)+data[off++])   );
			else if((v& 16)==0) return ((((((v&31)<<8)+data[off++])<<8)+data[off++])<<8)+data[off++];
			else throw v.toString(2);
		}
		
		function readProp() {
			var ID = data[off++];  console.log(ID.toString(16));
			
			if     (ID==0x17) readProp(off);  // EncodedHeader
			else if(ID==0x06) { 			  // PackInfo
				var pos = NUMBER();  
				var cnt = NUMBER();  if(cnt!=1) throw "e";
				
				console.log(pos, cnt);
				
				console.log(data.slice(off));
				
				var siz = readProp();  console.log(siz);
				
				console.log(data.slice(off));
				
				var crc = readProp();  console.log(crc);
				
				
				console.log(data.slice(off));
			}
			else if(ID==0x09) { 			 // Size
				return NUMBER();
			}
			else throw ID;
			
		}
		
		function pars(_d) {
			data = _d;  off=8;
			
			var sign = [55, 122, 188, 175, 39, 28, 0, 4];
			for(var i=0; i<8; i++) if(data[i]!=sign[i]) throw "e";
			
			var crc = rUi(data,off);  off+=4;
			
			var nho = rUi(data,off);  off+=8;
			var nhs = rUi(data,off);  off+=8;
			var nhc = rUi(data,off);  off+=4;
			console.log(nho,nhs,nhc);
			
			//var hdr=data[off++];
			
			//console.log(hdr);
			
			off = 32+nho;
			readProp();
			
			
			
			
			
			console.log(data.slice(off));  throw "e";
		}
	
		return pars;
	}();
	*/

  function parse(buf, onlyNames) {
    // ArrayBuffer
    var rUs = B.readUshort,
      rUi = B.readUint,
      o = 0,
      out = {};
    var data = new Uint8Array(buf);
    if (data.length > 257 + 6 && B.readASCII(data, 257, 6) == "ustar ")
      return parseTar(data);
    //if(B.readASCII(data,0,2)=="7z") return parse7z(data);

    var eocd = data.length - 4;

    while (rUi(data, eocd) != 0x06054b50) eocd--;

    var o = eocd;
    o += 4; // sign  = 0x06054b50
    o += 4; // disks = 0;
    var cnu = rUs(data, o);
    o += 2;
    var cnt = rUs(data, o);
    o += 2;

    var csize = rUi(data, o);
    o += 4;
    var coffs = rUi(data, o);
    o += 4;

    o = coffs;
    for (var i = 0; i < cnu; i++) {
      var sign = rUi(data, o);
      o += 4;
      o += 4; // versions;
      o += 4; // flag + compr
      var time = _readTime(data, o);
      o += 4; // time

      var crc32 = rUi(data, o);
      o += 4;
      var csize = rUi(data, o);
      o += 4;
      var usize = rUi(data, o);
      o += 4;

      var nl = rUs(data, o),
        el = rUs(data, o + 2),
        cl = rUs(data, o + 4);
      o += 6; // name, extra, comment
      o += 8; // disk, attribs
      var roff = rUi(data, o);
      o += 4;

      o += nl;

      var lo = 0;
      while (lo < el) {
        var id = rUs(data, o + lo);
        lo += 2;
        var sz = rUs(data, o + lo);
        lo += 2;
        if (id == 1) {
          // Zip64
          if (usize == 0xffffffff) {
            usize = rUi(data, o + lo);
            lo += 8;
          }
          if (csize == 0xffffffff) {
            csize = rUi(data, o + lo);
            lo += 8;
          }
          if (roff == 0xffffffff) {
            roff = rUi(data, o + lo);
            lo += 8;
          }
        } else lo += sz;
      }

      o += el + cl;

      _readLocal(data, roff, out, csize, usize, onlyNames);
    }
    //console.log(out);
    return out;
  }

  function _readTime(data, o) {
    var time = B.readUshort(data, o),
      date = B.readUshort(data, o + 2);
    var year = 1980 + (date >>> 9);
    var mont = (date >>> 5) & 15;
    var day = date & 31;
    //console.log(year,mont,day);

    var hour = time >>> 11;
    var minu = (time >>> 5) & 63;
    var seco = 2 * (time & 31);

    var stamp = new Date(year, mont, day, hour, minu, seco).getTime();

    //console.log(date,time);
    return stamp;
  }
  function _writeTime(data, o, stamp) {
    var dt = new Date(stamp);
    var date =
      ((dt.getFullYear() - 1980) << 9) |
      ((dt.getMonth() + 1) << 5) |
      dt.getDate();
    var time =
      (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >>> 1);
    B.writeUshort(data, o, time);
    B.writeUshort(data, o + 2, date);
  }

  function _readLocal(data, o, out, csize, usize, onlyNames) {
    var rUs = B.readUshort,
      rUi = B.readUint;
    var sign = rUi(data, o);
    o += 4;
    var ver = rUs(data, o);
    o += 2;
    var gpflg = rUs(data, o);
    o += 2;
    //if((gpflg&8)!=0) throw "unknown sizes";
    var cmpr = rUs(data, o);
    o += 2;

    var time = _readTime(data, o);
    o += 4;

    var crc32 = rUi(data, o);
    o += 4;
    //var csize = rUi(data, o);  o+=4;
    //var usize = rUi(data, o);  o+=4;
    o += 8;

    var nlen = rUs(data, o);
    o += 2;
    var elen = rUs(data, o);
    o += 2;

    var name =
      (gpflg & 2048) == 0
        ? B.readIBM(data, o, nlen)
        : B.readUTF8(data, o, nlen);
    if (name == null) name = B.readUTF8(data, o, nlen);
    o += nlen; //console.log(name);
    o += elen;

    //console.log(sign.toString(16), ver, gpflg, cmpr, crc32.toString(16), "csize, usize", csize, usize, nlen, elen, name, o);
    if (onlyNames) {
      out[name] = { size: usize, csize: csize };
      return;
    }
    var file = new Uint8Array(data.buffer, o);
    if (gpflg & 1) {
      out[name] = new Uint8Array(0);
      alert("ZIPs with a password are not supported.", 3000);
    } else if (cmpr == 0)
      out[name] = new Uint8Array(file.buffer.slice(o, o + csize));
    else if (cmpr == 8) {
      var buf = new Uint8Array(usize);
      inflateRaw(file, buf);
      /*var nbuf = pako["inflateRaw"](file);
			if(usize>8514000) {
				//console.log(PUtils.readASCII(buf , 8514500, 500));
				//console.log(PUtils.readASCII(nbuf, 8514500, 500));
			}
			for(var i=0; i<buf.length; i++) if(buf[i]!=nbuf[i]) {  console.log(buf.length, nbuf.length, usize, i);  throw "e";  }
			*/
      out[name] = buf;
    } else if (cmpr == 14 && window["LZMA"]) {
      var vsn = rUs(file, 0);
      var siz = rUs(file, 2);
      if (siz != 5) throw "unknown LZMA header";

      var prp = file[4];
      var dictSize = rUi(file, 5);
      var lc = prp % 9;
      prp = ~~(prp / 9);
      var lp = prp % 5;
      var pb = ~~(prp / 5);
      //console.log(vsn,siz,dictSize,lc,lp,pb);

      //console.log(file);
      var time = Date.now();
      var buf = (out[name] = new Uint8Array(usize));

      var dec = new window["LZMA"]["Decoder"]();
      dec["setProperties"]({ dsz: dictSize, lc: lc, lp: lp, pb: pb });
      dec["decodeBody"](new Uint8Array(data.buffer, o + 9), buf, usize);

      //console.log(Date.now()-time);
    } else throw "unknown compression method: " + cmpr;
  }

  function UStream(buf) {
    this.buf = buf;
    this.off = 0;
  }
  UStream.prototype["readByte"] = function () {
    return this.buf[this.off++];
  };
  UStream.prototype["writeByte"] = function (b) {
    this.buf[this.off++] = b;
  };
  UStream.prototype["writeBytes"] = function (a, s) {
    a = new Uint8Array(
      a.buffer,
      a.byteOffset,
      Math.min(a.length, this.buf.length - this.off)
    );
    this.buf.set(a, this.off);
    this.off += a.length;
  };

  function inflateRaw(file, buf) {
    return UZIP["F"]["inflate"](file, buf);
  }
  function inflate(file, buf) {
    var CMF = file[0],
      FLG = file[1];
    if (CMF == 31 && FLG == 139) {
      // GZIP
      var CM = file[2],
        FLG = file[3];
      if (CM != 8) throw CM; /* 8 is DEFLATE */
      var off = 4;
      off += 4; // MTIME
      off += 2; // XFL, OS
      if ((FLG & 4) != 0) throw "e"; // FEXTRA
      if ((FLG & 8) != 0) {
        // FNAME
        while (file[off] != 0) off++;
        off++;
      }
      if ((FLG & 16) != 0) throw "e"; // FCOMMENT
      if ((FLG & 2) != 0) throw "e"; // FHCR
      return inflateRaw(
        new Uint8Array(
          file.buffer,
          file.byteOffset + off,
          file.length - off - 8
        ),
        buf
      );
    }
    var CM = CMF & 15,
      CINFO = CMF >>> 4;
    //console.log(CM, CINFO,CMF,FLG);
    return inflateRaw(
      new Uint8Array(file.buffer, file.byteOffset + 2, file.length - 6),
      buf
    );
  }
  function deflate(data, opts /*, buf, off*/) {
    if (opts == null) opts = { level: 6 };
    var off = 0,
      buf = new Uint8Array(50 + Math.floor(data.length * 1.1));
    buf[off] = 120;
    buf[off + 1] = 156;
    off += 2;
    off = UZIP["F"]["deflateRaw"](data, buf, off, opts["level"]);
    var crc = adler(data, 0, data.length);
    buf[off + 0] = (crc >>> 24) & 255;
    buf[off + 1] = (crc >>> 16) & 255;
    buf[off + 2] = (crc >>> 8) & 255;
    buf[off + 3] = (crc >>> 0) & 255;
    return new Uint8Array(buf.buffer, 0, off + 4);
  }
  function deflateRaw(data, opts) {
    if (opts == null) opts = { level: 6 };
    var buf = new Uint8Array(50 + Math.floor(data.length * 1.1));
    var off = UZIP["F"]["deflateRaw"](data, buf, off, opts["level"]);
    return new Uint8Array(buf.buffer, 0, off);
  }

  function encode(obj, noCmpr) {
    if (noCmpr == null) noCmpr = false;
    var tot = 0,
      wUi = B.writeUint,
      wUs = B.writeUshort;
    var zpd = {};
    for (var p in obj) {
      var cpr = !_noNeed(p) && !noCmpr,
        buf = obj[p],
        cr = crc.crc(buf, 0, buf.length);
      zpd[p] = {
        cpr: cpr,
        usize: buf.length,
        crc: cr,
        file: cpr ? deflateRaw(buf) : buf,
      };
    }

    for (var p in zpd) tot += zpd[p].file.length + 30 + 46 + 2 * B.sizeUTF8(p);
    tot += 22;

    var data = new Uint8Array(tot),
      o = 0;
    var fof = [];

    for (var p in zpd) {
      var file = zpd[p];
      fof.push(o);
      o = _writeHeader(data, o, p, file, 0);
    }
    var i = 0,
      ioff = o;
    for (var p in zpd) {
      var file = zpd[p];
      fof.push(o);
      o = _writeHeader(data, o, p, file, 1, fof[i++]);
    }
    var csize = o - ioff;

    wUi(data, o, 0x06054b50);
    o += 4;
    o += 4; // disks
    wUs(data, o, i);
    o += 2;
    wUs(data, o, i);
    o += 2; // number of c d records
    wUi(data, o, csize);
    o += 4;
    wUi(data, o, ioff);
    o += 4;
    o += 2;
    return data.buffer;
  }
  // no need to compress .PNG, .ZIP, .JPEG ....
  function _noNeed(fn) {
    var ext = fn.split(".").pop().toLowerCase();
    return "png,jpg,jpeg,zip".indexOf(ext) != -1;
  }

  function _writeHeader(data, o, p, obj, t, roff) {
    // it is a task of a user to provide valid file names
    //var bad = "#%&{}\<>*?$'\":@+`|=";
    //for(var i=0; i<p.length; i++) if(bad.indexOf(p[i])!=-1) p = p.slice(0,i)+"_"+p.slice(i+1);

    var wUi = B.writeUint,
      wUs = B.writeUshort;
    var file = obj.file;

    wUi(data, o, t == 0 ? 0x04034b50 : 0x02014b50);
    o += 4; // sign
    if (t == 1) o += 2; // ver made by
    wUs(data, o, 20);
    o += 2; // ver
    wUs(data, o, 2048);
    o += 2; // gflip
    wUs(data, o, obj.cpr ? 8 : 0);
    o += 2; // cmpr

    _writeTime(data, o, Date.now());
    o += 4; //wUi(data, o,  0);  o+=4;	// time
    wUi(data, o, obj.crc);
    o += 4; // crc32
    wUi(data, o, file.length);
    o += 4; // csize
    wUi(data, o, obj.usize);
    o += 4; // usize

    wUs(data, o, B.sizeUTF8(p));
    o += 2; // nlen
    wUs(data, o, 0);
    o += 2; // elen

    if (t == 1) {
      o += 2; // comment length
      o += 2; // disk number
      o += 6; // attributes
      wUi(data, o, roff);
      o += 4; // usize
    }
    var nlen = B.writeUTF8(data, o, p);
    o += nlen;
    if (t == 0) {
      data.set(file, o);
      o += file.length;
    }
    return o;
  }

  UZIP["crc"] = crc;
  UZIP["adler"] = adler;

  UZIP["inflate"] = inflate;
  UZIP["inflateRaw"] = inflateRaw;
  UZIP["deflate"] = deflate;
  UZIP["deflateRaw"] = deflateRaw;
  UZIP["parse"] = parse;
  UZIP["encode"] = encode;
})();

(function () {
  var U = (function () {
    var u16 = Uint16Array,
      u32 = Uint32Array;
    return {
      next_code: new u16(16),
      bl_count: new u16(16),
      ordr: [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
      of0: [
        3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59,
        67, 83, 99, 115, 131, 163, 195, 227, 258, 999, 999, 999,
      ],
      exb: [
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
        5, 5, 5, 5, 0, 0, 0, 0,
      ],
      ldef: new u16(32),
      df0: [
        1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385,
        513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577,
        65535, 65535,
      ],
      dxb: [
        0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10,
        10, 11, 11, 12, 12, 13, 13, 0, 0,
      ],
      ddef: new u32(32),
      flmap: new u16(512),
      fltree: [],
      fdmap: new u16(32),
      fdtree: [],
      lmap: new u16(32768),
      ltree: [],
      ttree: [],
      dmap: new u16(32768),
      dtree: [],
      imap: new u16(512),
      itree: [],
      //rev9 : new u16(  512)
      rev15: new u16(1 << 15),
      lhst: new u32(286),
      dhst: new u32(30),
      ihst: new u32(19),
      lits: new u32(15000),
      strt: new u16(1 << 16),
      prev: new u16(1 << 15),
    };
  })();

  function makeCodes(tree, MAX_BITS) {
    // code, length
    var max_code = tree.length;
    var code, bits, n, i, len;

    var bl_count = U.bl_count;
    for (var i = 0; i <= MAX_BITS; i++) bl_count[i] = 0;
    for (i = 1; i < max_code; i += 2) bl_count[tree[i]]++;

    var next_code = U.next_code; // smallest code for each length

    code = 0;
    bl_count[0] = 0;
    for (bits = 1; bits <= MAX_BITS; bits++) {
      code = (code + bl_count[bits - 1]) << 1;
      next_code[bits] = code;
    }

    for (n = 0; n < max_code; n += 2) {
      len = tree[n + 1];
      if (len != 0) {
        tree[n] = next_code[len];
        next_code[len]++;
      }
    }
  }
  function codes2map(tree, MAX_BITS, map) {
    var max_code = tree.length;
    var r15 = U.rev15;
    for (var i = 0; i < max_code; i += 2)
      if (tree[i + 1] != 0) {
        var lit = i >> 1;
        var cl = tree[i + 1],
          val = (lit << 4) | cl; // :  (0x8000 | (U.of0[lit-257]<<7) | (U.exb[lit-257]<<4) | cl);
        var rest = MAX_BITS - cl,
          i0 = tree[i] << rest,
          i1 = i0 + (1 << rest);
        //tree[i]=r15[i0]>>>(15-MAX_BITS);
        while (i0 != i1) {
          var p0 = r15[i0] >>> (15 - MAX_BITS);
          map[p0] = val;
          i0++;
        }
      }
  }
  function revCodes(tree, MAX_BITS) {
    var r15 = U.rev15,
      imb = 15 - MAX_BITS;
    for (var i = 0; i < tree.length; i += 2) {
      var i0 = tree[i] << (MAX_BITS - tree[i + 1]);
      tree[i] = r15[i0] >>> imb;
    }
  }

  // used only in deflate
  function _putsE(dt, pos, val) {
    val = val << (pos & 7);
    var o = pos >>> 3;
    dt[o] |= val;
    dt[o + 1] |= val >>> 8;
  }
  function _putsF(dt, pos, val) {
    val = val << (pos & 7);
    var o = pos >>> 3;
    dt[o] |= val;
    dt[o + 1] |= val >>> 8;
    dt[o + 2] |= val >>> 16;
  }

  function _bitsE(dt, pos, length) {
    return (
      ((dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8)) >>> (pos & 7)) &
      ((1 << length) - 1)
    );
  }
  function _bitsF(dt, pos, length) {
    return (
      ((dt[pos >>> 3] |
        (dt[(pos >>> 3) + 1] << 8) |
        (dt[(pos >>> 3) + 2] << 16)) >>>
        (pos & 7)) &
      ((1 << length) - 1)
    );
  }

  function _get17(dt, pos) {
    // return at least 17 meaningful bytes
    return (
      (dt[pos >>> 3] |
        (dt[(pos >>> 3) + 1] << 8) |
        (dt[(pos >>> 3) + 2] << 16)) >>>
      (pos & 7)
    );
  }
  function _get25(dt, pos) {
    // return at least 17 meaningful bytes
    return (
      (dt[pos >>> 3] |
        (dt[(pos >>> 3) + 1] << 8) |
        (dt[(pos >>> 3) + 2] << 16) |
        (dt[(pos >>> 3) + 3] << 24)) >>>
      (pos & 7)
    );
  }

  (function () {
    var len = 1 << 15;
    for (var i = 0; i < len; i++) {
      var x = i;
      x = ((x & 0xaaaaaaaa) >>> 1) | ((x & 0x55555555) << 1);
      x = ((x & 0xcccccccc) >>> 2) | ((x & 0x33333333) << 2);
      x = ((x & 0xf0f0f0f0) >>> 4) | ((x & 0x0f0f0f0f) << 4);
      x = ((x & 0xff00ff00) >>> 8) | ((x & 0x00ff00ff) << 8);
      U.rev15[i] = ((x >>> 16) | (x << 16)) >>> 17;
    }

    function pushV(tgt, n, sv) {
      while (n-- != 0) tgt.push(0, sv);
    }

    for (var i = 0; i < 32; i++) {
      U.ldef[i] = (U.of0[i] << 3) | U.exb[i];
      U.ddef[i] = (U.df0[i] << 4) | U.dxb[i];
    }

    pushV(U.fltree, 144, 8);
    pushV(U.fltree, 255 - 143, 9);
    pushV(U.fltree, 279 - 255, 7);
    pushV(U.fltree, 287 - 279, 8);
    /*
		var i = 0;
		for(; i<=143; i++) U.fltree.push(0,8);
		for(; i<=255; i++) U.fltree.push(0,9);
		for(; i<=279; i++) U.fltree.push(0,7);
		for(; i<=287; i++) U.fltree.push(0,8);
		*/
    makeCodes(U.fltree, 9);
    codes2map(U.fltree, 9, U.flmap);
    revCodes(U.fltree, 9);

    pushV(U.fdtree, 32, 5);
    //for(i=0;i<32; i++) U.fdtree.push(0,5);
    makeCodes(U.fdtree, 5);
    codes2map(U.fdtree, 5, U.fdmap);
    revCodes(U.fdtree, 5);

    pushV(U.itree, 19, 0);
    pushV(U.ltree, 286, 0);
    pushV(U.dtree, 30, 0);
    pushV(U.ttree, 320, 0);
    /*
		for(var i=0; i< 19; i++) U.itree.push(0,0);
		for(var i=0; i<286; i++) U.ltree.push(0,0);
		for(var i=0; i< 30; i++) U.dtree.push(0,0);
		for(var i=0; i<320; i++) U.ttree.push(0,0);
		*/
  })();

  function deflateRaw(data, out, opos, lvl) {
    var opts = [
      /*
			 ush good_length; /* reduce lazy search above this match length 
			 ush max_lazy;    /* do not perform lazy search above this match length 
			 ush nice_length; /* quit search above this match length 
		*/
      /*      good lazy nice chain */
      /* 0 */ [0, 0, 0, 0, 0] /* store only */,
      /* 1 */ [4, 4, 8, 4, 0] /* max speed, no lazy matches */,
      /* 2 */ [4, 5, 16, 8, 0],
      /* 3 */ [4, 6, 16, 16, 0],

      /* 4 */ [4, 10, 16, 32, 0] /* lazy matches */,
      /* 5 */ [8, 16, 32, 32, 0],
      /* 6 */ [8, 16, 128, 128, 0],
      /* 7 */ [8, 32, 128, 256, 0],
      /* 8 */ [32, 128, 258, 1024, 1],
      /* 9 */ [32, 258, 258, 4096, 1],
    ]; /* max compression */

    var opt = opts[lvl];

    //var U = UZIP.F.U, goodIndex = UZIP.F._goodIndex, hash = UZIP.F._hash, putsE = UZIP.F._putsE;
    var i = 0,
      pos = opos << 3,
      cvrd = 0,
      dlen = data.length;

    if (lvl == 0) {
      while (i < dlen) {
        var len = Math.min(0xffff, dlen - i);
        _putsE(out, pos, i + len == dlen ? 1 : 0);
        pos = _copyExact(data, i, len, out, pos + 8);
        i += len;
      }
      return pos >>> 3;
    }

    var lits = U.lits,
      strt = U.strt,
      prev = U.prev,
      li = 0,
      lc = 0,
      bs = 0,
      ebits = 0,
      c = 0,
      nc = 0; // last_item, literal_count, block_start
    if (dlen > 2) {
      nc = _hash(data, 0);
      strt[nc] = 0;
    }
    var nmch = 0,
      nmci = 0;

    for (i = 0; i < dlen; i++) {
      c = nc;
      //*
      if (i + 1 < dlen - 2) {
        nc = _hash(data, i + 1);
        var ii = (i + 1) & 0x7fff;
        prev[ii] = strt[nc];
        strt[nc] = ii;
      } //*/
      if (cvrd <= i) {
        if ((li > 14000 || lc > 26697) && dlen - i > 100) {
          if (cvrd < i) {
            lits[li] = i - cvrd;
            li += 2;
            cvrd = i;
          }
          pos = _writeBlock(
            i == dlen - 1 || cvrd == dlen ? 1 : 0,
            lits,
            li,
            ebits,
            data,
            bs,
            i - bs,
            out,
            pos
          );
          li = lc = ebits = 0;
          bs = i;
        }

        var mch = 0;
        //if(nmci==i) mch= nmch;  else
        if (i < dlen - 2)
          mch = _bestMatch(
            data,
            i,
            prev,
            c,
            Math.min(opt[2], dlen - i),
            opt[3]
          );
        /*
				if(mch!=0 && opt[4]==1 && (mch>>>16)<opt[1] && i+1<dlen-2) {
					nmch = UZIP.F._bestMatch(data, i+1, prev, nc, opt[2], opt[3]);  nmci=i+1;
					//var mch2 = UZIP.F._bestMatch(data, i+2, prev, nnc);  //nmci=i+1;
					if((nmch>>>16)>(mch>>>16)) mch=0;
				}//*/
        var len = mch >>> 16,
          dst = mch & 0xffff; //if(i-dst<0) throw "e";
        if (mch != 0) {
          var len = mch >>> 16,
            dst = mch & 0xffff; //if(i-dst<0) throw "e";
          var lgi = _goodIndex(len, U.of0);
          U.lhst[257 + lgi]++;
          var dgi = _goodIndex(dst, U.df0);
          U.dhst[dgi]++;
          ebits += U.exb[lgi] + U.dxb[dgi];
          lits[li] = (len << 23) | (i - cvrd);
          lits[li + 1] = (dst << 16) | (lgi << 8) | dgi;
          li += 2;
          cvrd = i + len;
        } else {
          U.lhst[data[i]]++;
        }
        lc++;
      }
    }
    if (bs != i || data.length == 0) {
      if (cvrd < i) {
        lits[li] = i - cvrd;
        li += 2;
        cvrd = i;
      }
      pos = _writeBlock(1, lits, li, ebits, data, bs, i - bs, out, pos);
      li = 0;
      lc = 0;
      li = lc = ebits = 0;
      bs = i;
    }
    while ((pos & 7) != 0) pos++;
    return pos >>> 3;
  }
  function _bestMatch(data, i, prev, c, nice, chain) {
    var ci = i & 0x7fff,
      pi = prev[ci];
    //console.log("----", i);
    var dif = (ci - pi + (1 << 15)) & 0x7fff;
    if (pi == ci || c != _hash(data, i - dif)) return 0;
    var tl = 0,
      td = 0; // top length, top distance
    var dlim = Math.min(0x7fff, i);
    while (
      dif <= dlim &&
      --chain != 0 &&
      pi != ci /*&& c==UZIP.F._hash(data,i-dif)*/
    ) {
      if (tl == 0 || data[i + tl] == data[i + tl - dif]) {
        var cl = _howLong(data, i, dif);
        if (cl > tl) {
          tl = cl;
          td = dif;
          if (tl >= nice) break; //*
          if (dif + 2 < cl) cl = dif + 2;
          var maxd = 0; // pi does not point to the start of the word
          for (var j = 0; j < cl - 2; j++) {
            var ei = (i - dif + j + (1 << 15)) & 0x7fff;
            var li = prev[ei];
            var curd = (ei - li + (1 << 15)) & 0x7fff;
            if (curd > maxd) {
              maxd = curd;
              pi = ei;
            }
          } //*/
        }
      }

      ci = pi;
      pi = prev[ci];
      dif += (ci - pi + (1 << 15)) & 0x7fff;
    }
    return (tl << 16) | td;
  }
  function _howLong(data, i, dif) {
    if (
      data[i] != data[i - dif] ||
      data[i + 1] != data[i + 1 - dif] ||
      data[i + 2] != data[i + 2 - dif]
    )
      return 0;
    var oi = i,
      l = Math.min(data.length, i + 258);
    i += 3;
    //while(i+4<l && data[i]==data[i-dif] && data[i+1]==data[i+1-dif] && data[i+2]==data[i+2-dif] && data[i+3]==data[i+3-dif]) i+=4;
    while (i < l && data[i] == data[i - dif]) i++;
    return i - oi;
  }
  function _hash(data, i) {
    return (((data[i] << 8) | data[i + 1]) + (data[i + 2] << 4)) & 0xffff;
    //var hash_shift = 0, hash_mask = 255;
    //var h = data[i+1] % 251;
    //h = (((h << 8) + data[i+2]) % 251);
    //h = (((h << 8) + data[i+2]) % 251);
    //h = ((h<<hash_shift) ^ (c) ) & hash_mask;
    //return h | (data[i]<<8);
    //return (data[i] | (data[i+1]<<8));
  }
  //UZIP.___toth = 0;
  //UZIP.saved = 0;
  function _writeBlock(BFINAL, lits, li, ebits, data, o0, l0, out, pos) {
    //var U = UZIP.F.U, putsF = UZIP.F._putsF, putsE = UZIP.F._putsE;

    //*
    var T, ML, MD, MH, numl, numd, numh, lset, dset;
    U.lhst[256]++;
    T = getTrees();
    ML = T[0];
    MD = T[1];
    MH = T[2];
    numl = T[3];
    numd = T[4];
    numh = T[5];
    lset = T[6];
    dset = T[7];

    var cstSize =
      (((pos + 3) & 7) == 0 ? 0 : 8 - ((pos + 3) & 7)) + 32 + (l0 << 3);
    var fxdSize =
      ebits + contSize(U.fltree, U.lhst) + contSize(U.fdtree, U.dhst);
    var dynSize = ebits + contSize(U.ltree, U.lhst) + contSize(U.dtree, U.dhst);
    dynSize +=
      14 +
      3 * numh +
      contSize(U.itree, U.ihst) +
      (U.ihst[16] * 2 + U.ihst[17] * 3 + U.ihst[18] * 7);

    for (var j = 0; j < 286; j++) U.lhst[j] = 0;
    for (var j = 0; j < 30; j++) U.dhst[j] = 0;
    for (var j = 0; j < 19; j++) U.ihst[j] = 0;
    //*/
    var BTYPE =
      cstSize < fxdSize && cstSize < dynSize ? 0 : fxdSize < dynSize ? 1 : 2;
    _putsF(out, pos, BFINAL);
    _putsF(out, pos + 1, BTYPE);
    pos += 3;

    var opos = pos;
    if (BTYPE == 0) {
      while ((pos & 7) != 0) pos++;
      pos = _copyExact(data, o0, l0, out, pos);
    } else {
      var ltree, dtree;
      if (BTYPE == 1) {
        ltree = U.fltree;
        dtree = U.fdtree;
      }
      if (BTYPE == 2) {
        makeCodes(U.ltree, ML);
        revCodes(U.ltree, ML);
        makeCodes(U.dtree, MD);
        revCodes(U.dtree, MD);
        makeCodes(U.itree, MH);
        revCodes(U.itree, MH);

        ltree = U.ltree;
        dtree = U.dtree;

        _putsE(out, pos, numl - 257);
        pos += 5; // 286
        _putsE(out, pos, numd - 1);
        pos += 5; // 30
        _putsE(out, pos, numh - 4);
        pos += 4; // 19

        for (var i = 0; i < numh; i++)
          _putsE(out, pos + i * 3, U.itree[(U.ordr[i] << 1) + 1]);
        pos += 3 * numh;
        pos = _codeTiny(lset, U.itree, out, pos);
        pos = _codeTiny(dset, U.itree, out, pos);
      }

      var off = o0;
      for (var si = 0; si < li; si += 2) {
        var qb = lits[si],
          len = qb >>> 23,
          end = off + (qb & ((1 << 23) - 1));
        while (off < end) pos = _writeLit(data[off++], ltree, out, pos);

        if (len != 0) {
          var qc = lits[si + 1],
            dst = qc >> 16,
            lgi = (qc >> 8) & 255,
            dgi = qc & 255;
          pos = _writeLit(257 + lgi, ltree, out, pos);
          _putsE(out, pos, len - U.of0[lgi]);
          pos += U.exb[lgi];

          pos = _writeLit(dgi, dtree, out, pos);
          _putsF(out, pos, dst - U.df0[dgi]);
          pos += U.dxb[dgi];
          off += len;
        }
      }
      pos = _writeLit(256, ltree, out, pos);
    }
    //console.log(pos-opos, fxdSize, dynSize, cstSize);
    return pos;
  }
  function _copyExact(data, off, len, out, pos) {
    var p8 = pos >>> 3;
    out[p8] = len;
    out[p8 + 1] = len >>> 8;
    out[p8 + 2] = 255 - out[p8];
    out[p8 + 3] = 255 - out[p8 + 1];
    p8 += 4;
    out.set(new Uint8Array(data.buffer, off, len), p8);
    //for(var i=0; i<len; i++) out[p8+i]=data[off+i];
    return pos + ((len + 4) << 3);
  }
  /*
		Interesting facts:
		- decompressed block can have bytes, which do not occur in a Huffman tree (copied from the previous block by reference)
	*/

  function getTrees() {
    var ML = _hufTree(U.lhst, U.ltree, 15);
    var MD = _hufTree(U.dhst, U.dtree, 15);
    var lset = [],
      numl = _lenCodes(U.ltree, lset);
    var dset = [],
      numd = _lenCodes(U.dtree, dset);
    for (var i = 0; i < lset.length; i += 2) U.ihst[lset[i]]++;
    for (var i = 0; i < dset.length; i += 2) U.ihst[dset[i]]++;
    var MH = _hufTree(U.ihst, U.itree, 7);
    var numh = 19;
    while (numh > 4 && U.itree[(U.ordr[numh - 1] << 1) + 1] == 0) numh--;
    return [ML, MD, MH, numl, numd, numh, lset, dset];
  }
  function getSecond(a) {
    var b = [];
    for (var i = 0; i < a.length; i += 2) b.push(a[i + 1]);
    return b;
  }
  function nonZero(a) {
    var b = "";
    for (var i = 0; i < a.length; i += 2)
      if (a[i + 1] != 0) b += (i >> 1) + ",";
    return b;
  }
  function contSize(tree, hst) {
    var s = 0;
    for (var i = 0; i < hst.length; i++) s += hst[i] * tree[(i << 1) + 1];
    return s;
  }
  function _codeTiny(set, tree, out, pos) {
    for (var i = 0; i < set.length; i += 2) {
      var l = set[i],
        rst = set[i + 1]; //console.log(l, pos, tree[(l<<1)+1]);
      pos = _writeLit(l, tree, out, pos);
      var rsl = l == 16 ? 2 : l == 17 ? 3 : 7;
      if (l > 15) {
        _putsE(out, pos, rst, rsl);
        pos += rsl;
      }
    }
    return pos;
  }
  function _lenCodes(tree, set) {
    var len = tree.length;
    while (len != 2 && tree[len - 1] == 0) len -= 2; // when no distances, keep one code with length 0
    for (var i = 0; i < len; i += 2) {
      var l = tree[i + 1],
        nxt = i + 3 < len ? tree[i + 3] : -1,
        nnxt = i + 5 < len ? tree[i + 5] : -1,
        prv = i == 0 ? -1 : tree[i - 1];
      if (l == 0 && nxt == l && nnxt == l) {
        var lz = i + 5;
        while (lz + 2 < len && tree[lz + 2] == l) lz += 2;
        var zc = Math.min((lz + 1 - i) >>> 1, 138);
        if (zc < 11) set.push(17, zc - 3);
        else set.push(18, zc - 11);
        i += zc * 2 - 2;
      } else if (l == prv && nxt == l && nnxt == l) {
        var lz = i + 5;
        while (lz + 2 < len && tree[lz + 2] == l) lz += 2;
        var zc = Math.min((lz + 1 - i) >>> 1, 6);
        set.push(16, zc - 3);
        i += zc * 2 - 2;
      } else set.push(l, 0);
    }
    return len >>> 1;
  }
  function _hufTree(hst, tree, MAXL) {
    var list = [],
      hl = hst.length,
      tl = tree.length,
      i = 0;
    for (i = 0; i < tl; i += 2) {
      tree[i] = 0;
      tree[i + 1] = 0;
    }
    for (i = 0; i < hl; i++) if (hst[i] != 0) list.push({ lit: i, f: hst[i] });
    var end = list.length,
      l2 = list.slice(0);
    if (end == 0) return 0; // empty histogram (usually for dist)
    if (end == 1) {
      var lit = list[0].lit,
        l2 = lit == 0 ? 1 : 0;
      tree[(lit << 1) + 1] = 1;
      tree[(l2 << 1) + 1] = 1;
      return 1;
    }
    list.sort(function (a, b) {
      return a.f - b.f;
    });
    var a = list[0],
      b = list[1],
      i0 = 0,
      i1 = 1,
      i2 = 2;
    list[0] = { lit: -1, f: a.f + b.f, l: a, r: b, d: 0 };
    while (i1 != end - 1) {
      if (i0 != i1 && (i2 == end || list[i0].f < list[i2].f)) {
        a = list[i0++];
      } else {
        a = list[i2++];
      }
      if (i0 != i1 && (i2 == end || list[i0].f < list[i2].f)) {
        b = list[i0++];
      } else {
        b = list[i2++];
      }
      list[i1++] = { lit: -1, f: a.f + b.f, l: a, r: b };
    }
    var maxl = setDepth(list[i1 - 1], 0);
    if (maxl > MAXL) {
      restrictDepth(l2, MAXL, maxl);
      maxl = MAXL;
    }
    for (i = 0; i < end; i++) tree[(l2[i].lit << 1) + 1] = l2[i].d;
    return maxl;
  }

  function setDepth(t, d) {
    if (t.lit != -1) {
      t.d = d;
      return d;
    }
    return Math.max(setDepth(t.l, d + 1), setDepth(t.r, d + 1));
  }

  function restrictDepth(dps, MD, maxl) {
    var i = 0,
      bCost = 1 << (maxl - MD),
      dbt = 0;
    dps.sort(function (a, b) {
      return b.d == a.d ? a.f - b.f : b.d - a.d;
    });

    for (i = 0; i < dps.length; i++)
      if (dps[i].d > MD) {
        var od = dps[i].d;
        dps[i].d = MD;
        dbt += bCost - (1 << (maxl - od));
      } else break;
    dbt = dbt >>> (maxl - MD);
    while (dbt > 0) {
      var od = dps[i].d;
      if (od < MD) {
        dps[i].d++;
        dbt -= 1 << (MD - od - 1);
      } else i++;
    }
    for (; i >= 0; i--)
      if (dps[i].d == MD && dbt < 0) {
        dps[i].d--;
        dbt++;
      }
    if (dbt != 0) console.log("debt left");
  }

  function _goodIndex(v, arr) {
    var i = 0;
    if (arr[i | 16] <= v) i |= 16;
    if (arr[i | 8] <= v) i |= 8;
    if (arr[i | 4] <= v) i |= 4;
    if (arr[i | 2] <= v) i |= 2;
    if (arr[i | 1] <= v) i |= 1;
    return i;
  }
  function _writeLit(ch, ltree, out, pos) {
    _putsF(out, pos, ltree[ch << 1]);
    return pos + ltree[(ch << 1) + 1];
  }

  function inflate(data, buf) {
    var u8 = Uint8Array;
    if (data[0] == 3 && data[1] == 0) return buf ? buf : new u8(0);
    //var F=UZIP.F, bitsF = F._bitsF, bitsE = F._bitsE, decodeTiny = F._decodeTiny, makeCodes = F.makeCodes, codes2map=F.codes2map, get17 = F._get17;

    var noBuf = buf == null;
    if (noBuf) buf = new u8((data.length >>> 2) << 3);

    var BFINAL = 0,
      BTYPE = 0,
      HLIT = 0,
      HDIST = 0,
      HCLEN = 0,
      ML = 0,
      MD = 0;
    var off = 0,
      pos = 0;
    var lmap, dmap;

    while (BFINAL == 0) {
      BFINAL = _bitsF(data, pos, 1);
      BTYPE = _bitsF(data, pos + 1, 2);
      pos += 3;
      //console.log(BFINAL, BTYPE);

      if (BTYPE == 0) {
        if ((pos & 7) != 0) pos += 8 - (pos & 7);
        var p8 = (pos >>> 3) + 4,
          len = data[p8 - 4] | (data[p8 - 3] << 8); //console.log(len);//bitsF(data, pos, 16),
        if (noBuf) buf = _check(buf, off + len);
        buf.set(new u8(data.buffer, data.byteOffset + p8, len), off);
        //for(var i=0; i<len; i++) buf[off+i] = data[p8+i];
        //for(var i=0; i<len; i++) if(buf[off+i] != data[p8+i]) throw "e";
        pos = (p8 + len) << 3;
        off += len;
        continue;
      }
      if (noBuf) buf = _check(buf, off + (1 << 17)); // really not enough in many cases (but PNG and ZIP provide buffer in advance)
      if (BTYPE == 1) {
        lmap = U.flmap;
        dmap = U.fdmap;
        ML = (1 << 9) - 1;
        MD = (1 << 5) - 1;
      }
      if (BTYPE == 2) {
        HLIT = _bitsE(data, pos, 5) + 257;
        HDIST = _bitsE(data, pos + 5, 5) + 1;
        HCLEN = _bitsE(data, pos + 10, 4) + 4;
        pos += 14;

        var ppos = pos;
        for (var i = 0; i < 38; i += 2) {
          U.itree[i] = 0;
          U.itree[i + 1] = 0;
        }
        var tl = 1;
        for (var i = 0; i < HCLEN; i++) {
          var l = _bitsE(data, pos + i * 3, 3);
          U.itree[(U.ordr[i] << 1) + 1] = l;
          if (l > tl) tl = l;
        }
        pos += 3 * HCLEN; //console.log(itree);
        makeCodes(U.itree, tl);
        codes2map(U.itree, tl, U.imap);

        lmap = U.lmap;
        dmap = U.dmap;

        pos = _decodeTiny(
          U.imap,
          (1 << tl) - 1,
          HLIT + HDIST,
          data,
          pos,
          U.ttree
        );
        var mx0 = _copyOut(U.ttree, 0, HLIT, U.ltree);
        ML = (1 << mx0) - 1;
        var mx1 = _copyOut(U.ttree, HLIT, HDIST, U.dtree);
        MD = (1 << mx1) - 1;

        //var ml = _decodeTiny(U.imap, (1<<tl)-1, HLIT , data, pos, U.ltree); ML = (1<<(ml>>>24))-1;  pos+=(ml&0xffffff);
        makeCodes(U.ltree, mx0);
        codes2map(U.ltree, mx0, lmap);

        //var md = _decodeTiny(U.imap, (1<<tl)-1, HDIST, data, pos, U.dtree); MD = (1<<(md>>>24))-1;  pos+=(md&0xffffff);
        makeCodes(U.dtree, mx1);
        codes2map(U.dtree, mx1, dmap);
      }
      //var ooff=off, opos=pos;
      while (true) {
        var code = lmap[_get17(data, pos) & ML];
        pos += code & 15;
        var lit = code >>> 4; //U.lhst[lit]++;
        if (lit >>> 8 == 0) {
          buf[off++] = lit;
        } else if (lit == 256) {
          break;
        } else {
          var end = off + lit - 254;
          if (lit > 264) {
            var ebs = U.ldef[lit - 257];
            end = off + (ebs >>> 3) + _bitsE(data, pos, ebs & 7);
            pos += ebs & 7;
          }
          //UZIP.F.dst[end-off]++;

          var dcode = dmap[_get17(data, pos) & MD];
          pos += dcode & 15;
          var dlit = dcode >>> 4;
          var dbs = U.ddef[dlit],
            dst = (dbs >>> 4) + _bitsF(data, pos, dbs & 15);
          pos += dbs & 15;

          //var o0 = off-dst, stp = Math.min(end-off, dst);
          //if(stp>20) while(off<end) {  buf.copyWithin(off, o0, o0+stp);  off+=stp;  }  else
          //if(end-dst<=off) buf.copyWithin(off, off-dst, end-dst);  else
          //if(dst==1) buf.fill(buf[off-1], off, end);  else
          if (noBuf) buf = _check(buf, off + (1 << 17));
          while (off < end) {
            buf[off] = buf[off++ - dst];
            buf[off] = buf[off++ - dst];
            buf[off] = buf[off++ - dst];
            buf[off] = buf[off++ - dst];
          }
          off = end;
          //while(off!=end) {  buf[off]=buf[off++-dst];  }
        }
      }
      //console.log(off-ooff, (pos-opos)>>>3);
    }
    //console.log(UZIP.F.dst);
    //console.log(tlen, dlen, off-tlen+tcnt);
    return buf.length == off ? buf : buf.slice(0, off);
  }
  function _check(buf, len) {
    var bl = buf.length;
    if (len <= bl) return buf;
    var nbuf = new Uint8Array(Math.max(bl << 1, len));
    nbuf.set(buf, 0);
    //for(var i=0; i<bl; i+=4) {  nbuf[i]=buf[i];  nbuf[i+1]=buf[i+1];  nbuf[i+2]=buf[i+2];  nbuf[i+3]=buf[i+3];  }
    return nbuf;
  }

  function _decodeTiny(lmap, LL, len, data, pos, tree) {
    //var bitsE = UZIP.F._bitsE, get17 = UZIP.F._get17;
    var i = 0;
    while (i < len) {
      var code = lmap[_get17(data, pos) & LL];
      pos += code & 15;
      var lit = code >>> 4;
      if (lit <= 15) {
        tree[i] = lit;
        i++;
      } else {
        var ll = 0,
          n = 0;
        if (lit == 16) {
          n = 3 + _bitsE(data, pos, 2);
          pos += 2;
          ll = tree[i - 1];
        } else if (lit == 17) {
          n = 3 + _bitsE(data, pos, 3);
          pos += 3;
        } else if (lit == 18) {
          n = 11 + _bitsE(data, pos, 7);
          pos += 7;
        }
        var ni = i + n;
        while (i < ni) {
          tree[i] = ll;
          i++;
        }
      }
    }
    return pos;
  }
  function _copyOut(src, off, len, tree) {
    var mx = 0,
      i = 0,
      tl = tree.length >>> 1;
    while (i < len) {
      var v = src[i + off];
      tree[i << 1] = 0;
      tree[(i << 1) + 1] = v;
      if (v > mx) mx = v;
      i++;
    }
    while (i < tl) {
      tree[i << 1] = 0;
      tree[(i << 1) + 1] = 0;
      i++;
    }
    return mx;
  }

  UZIP["F"] = { inflate: inflate, deflateRaw: deflateRaw };
})();

var LZMA = LZMA || {};
(function (v) {
  var h = function () {
    this.t = 0;
  };
  h.prototype = {
    A: function (q) {
      if (!this.X || this.t != q) {
        this.X = new Uint8Array(q);
      }
      this.t = q;
      this.B = 0;
      this._ = 0;
    },
    flush: function () {
      var q = this.B - this._;
      if (q != 0) {
        var t = this.X,
          x = new Uint8Array(
            t.buffer,
            t.byteOffset,
            Math.min(t.length, this.b.length - this.a)
          );
        this.b.set(x, this.a);
        this.a += x.length;
        if (this.B >= this.t) {
          this.B = 0;
        }
        this._ = this.B;
      }
    },
    c: function () {
      this.flush();
      this.b = null;
    },
    P: function (q) {
      this.c();
      this.b = q;
      this.a = 0;
    },
    q: function (q) {
      if (!q) {
        this._ = 0;
        this.B = 0;
      }
    },
    o: function (q, t) {
      var x = this.B - q - 1,
        b = this.t;
      if (x < 0) {
        x += b;
      }
      while (t--) {
        if (x >= b) {
          x = 0;
        }
        this.X[this.B++] = this.X[x++];
        if (this.B >= b) {
          this.flush();
        }
      }
    },
    C: function (q) {
      this.X[this.B++] = q;
      if (this.B >= this.t) this.flush();
    },
    z: function (q) {
      var t = this.B - q - 1;
      if (t < 0) t += this.t;
      return this.X[t];
    },
  };
  function u() {}
  u.prototype = {
    P: function (q) {
      this.b = q;
      this.a = 0;
    },
    c: function () {
      this.b = null;
    },
    q: function () {
      var q = 5;
      this.v = 0;
      this.N = -1;
      while (q--) {
        this.v = (this.v << 8) | this.b[this.a++];
      }
    },
    j: function (q) {
      var t = 0,
        x = q,
        b;
      while (x--) {
        this.N >>>= 1;
        b = (this.v - this.N) >>> 31;
        this.v -= this.N & (b - 1);
        t = (t << 1) | (1 - b);
        if ((this.N & 4278190080) == 0) {
          this.v = (this.v << 8) | this.b[this.a++];
          this.N <<= 8;
        }
      }
      return t;
    },
    G: function (q, t) {
      var x = q[t],
        b = (this.N >>> 11) * x;
      if ((this.v ^ 2147483648) < (b ^ 2147483648)) {
        this.N = b;
        q[t] += (2048 - x) >>> 5;
        if ((this.N & 4278190080) == 0) {
          this.v = (this.v << 8) | this.b[this.a++];
          this.N <<= 8;
        }
        return 0;
      }
      this.N -= b;
      this.v -= b;
      q[t] -= x >>> 5;
      if ((this.N & 4278190080) == 0) {
        this.v = (this.v << 8) | this.b[this.a++];
        this.N <<= 8;
      }
      return 1;
    },
  };
  function f(q, t) {
    while (t--) q[t] = 1024;
  }
  var r = function (q) {
    this.g = [];
    this.K = q;
  };
  r.prototype = {
    q: function () {
      f(this.g, 1 << this.K);
    },
    T: function (q) {
      var t = 1,
        x = this.K;
      while (x--) {
        t = (t << 1) | q.G(this.g, t);
      }
      return t - (1 << this.K);
    },
    Z: function (q) {
      var t = 1,
        x = 0,
        b = 0,
        a;
      for (; b < this.K; ++b) {
        a = q.G(this.g, t);
        t = (t << 1) | a;
        x |= a << b;
      }
      return x;
    },
  };
  function e(q, t, x, b) {
    var a = 1,
      m = 0,
      p = 0,
      l;
    for (; p < b; ++p) {
      l = x.G(q, t + a);
      a = (a << 1) | l;
      m |= l << p;
    }
    return m;
  }
  function d() {
    this.M = [];
    this.d = [];
    this.h = [];
    this.u = new r(8);
    this.R = 0;
  }
  d.prototype = {
    A: function (q) {
      for (; this.R < q; ++this.R) {
        this.d[this.R] = new r(3);
        this.h[this.R] = new r(3);
      }
    },
    q: function () {
      var q = this.R;
      f(this.M, 2);
      while (q--) {
        this.d[q].q();
        this.h[q].q();
      }
      this.u.q();
    },
    T: function (q, t) {
      if (q.G(this.M, 0) == 0) {
        return this.d[t].T(q);
      }
      if (q.G(this.M, 1) == 0) {
        return 8 + this.h[t].T(q);
      }
      return 16 + this.u.T(q);
    },
  };
  function k() {
    this.w = [];
  }
  k.prototype = {
    q: function () {
      f(this.w, 768);
    },
    Y: function (q) {
      var t = 1;
      do {
        t = (t << 1) | q.G(this.w, t);
      } while (t < 256);
      return t & 255;
    },
    k: function (q, t) {
      var x = 1,
        b,
        a;
      do {
        b = (t >> 7) & 1;
        t <<= 1;
        a = q.G(this.w, ((1 + b) << 8) + x);
        x = (x << 1) | a;
        if (b != a) {
          while (x < 256) {
            x = (x << 1) | q.G(this.w, x);
          }
          break;
        }
      } while (x < 256);
      return x & 255;
    },
  };
  function s() {}
  s.prototype = {
    A: function (q, t) {
      var x;
      if (this.D && this.Q == t && this.L == q) {
        return;
      }
      this.L = q;
      this.a2 = (1 << q) - 1;
      this.Q = t;
      this.D = [];
      x = 1 << (this.Q + this.L);
      while (x--) {
        this.D[x] = new k();
      }
    },
    q: function () {
      var q = 1 << (this.Q + this.L);
      while (q--) this.D[q].q();
    },
    p: function (q, t) {
      return this.D[((q & this.a2) << this.Q) + ((t & 255) >>> (8 - this.Q))];
    },
  };
  function i() {
    this.F = new h();
    this.m = new u();
    this.i = [];
    this.J = [];
    this.V = [];
    this.r = [];
    this.W = [];
    this.O = [];
    this.e = [];
    this.U = [];
    this.f = new r(4);
    this.S = new d();
    this.l = new d();
    this.s = new s();
    this.H = -1;
    this.I = -1;
    this.e[0] = new r(6);
    this.e[1] = new r(6);
    this.e[2] = new r(6);
    this.e[3] = new r(6);
  }
  i.prototype = {
    n: function (q) {
      if (this.H != q) {
        this.H = q;
        this.I = Math.max(this.H, 1);
        this.F.A(Math.max(this.I, 4096));
      }
      return !0;
    },
    $: function (q, t, x) {
      var b = 1 << x;
      this.s.A(t, q);
      this.S.A(b);
      this.l.A(b);
      this.a0 = b - 1;
      return !0;
    },
    a3: function (q) {
      this.$(q.lc, q.lp, q.pb);
      this.n(q.dsz);
    },
    q: function () {
      var q = 4;
      this.F.q(!1);
      f(this.i, 192);
      f(this.O, 192);
      f(this.J, 12);
      f(this.V, 12);
      f(this.r, 12);
      f(this.W, 12);
      f(this.U, 114);
      this.s.q();
      while (q--) {
        this.e[q].q();
      }
      this.S.q();
      this.l.q();
      this.f.q();
      this.m.q();
    },
    a1: function (q, t, x) {
      var b = 0,
        a = 0,
        m = 0,
        p = 0,
        l = 0,
        n = 0,
        A = 0,
        c,
        g,
        o,
        y,
        j,
        w;
      this.m.P(q);
      this.F.P(t);
      this.q();
      while (x < 0 || n < x) {
        c = n & this.a0;
        if (this.m.G(this.i, (b << 4) + c) == 0) {
          g = this.s.p(n++, A);
          if (b >= 7) {
            A = g.k(this.m, this.F.z(a));
          } else {
            A = g.Y(this.m);
          }
          this.F.C(A);
          b = b < 4 ? 0 : b - (b < 10 ? 3 : 6);
        } else {
          if (this.m.G(this.J, b) == 1) {
            o = 0;
            if (this.m.G(this.V, b) == 0) {
              if (this.m.G(this.O, (b << 4) + c) == 0) {
                b = b < 7 ? 9 : 11;
                o = 1;
              }
            } else {
              if (this.m.G(this.r, b) == 0) {
                y = m;
              } else {
                if (this.m.G(this.W, b) == 0) {
                  y = p;
                } else {
                  y = l;
                  l = p;
                }
                p = m;
              }
              m = a;
              a = y;
            }
            if (o == 0) {
              o = 2 + this.l.T(this.m, c);
              b = b < 7 ? 8 : 11;
            }
          } else {
            l = p;
            p = m;
            m = a;
            o = 2 + this.S.T(this.m, c);
            b = b < 7 ? 7 : 10;
            j = this.e[o <= 5 ? o - 2 : 3].T(this.m);
            if (j >= 4) {
              w = (j >> 1) - 1;
              a = (2 | (j & 1)) << w;
              if (j < 14) {
                a += e(this.U, a - j - 1, this.m, w);
              } else {
                a += this.m.j(w - 4) << 4;
                a += this.f.Z(this.m);
                if (a < 0) {
                  if (a == -1) {
                    break;
                  }
                  return !1;
                }
              }
            } else {
              a = j;
            }
          }
          if (a >= n || a >= this.I) {
            return !1;
          }
          this.F.o(a, o);
          n += o;
          A = this.F.z(0);
        }
      }
      this.F.flush();
      this.F.c();
      this.m.c();
      return !0;
    },
  };
  var z = (v.Decoder = i);
  z.prototype.setProperties = z.prototype.a3;
  z.prototype.decodeBody = z.prototype.a1;
})(LZMA);

var paper = function (t, e) {
  var i = (t = t || require("./node/self.js")).window,
    n = t.document,
    r = new (function () {
      function t(t, e, r, s, a) {
        function u(n, u) {
          "string" ==
            typeof (u = u || ((u = o(e, n)) && (u.get ? u : u.value))) &&
            "#" === u[0] &&
            (u = t[u.substring(1)] || u);
          var c,
            f = "function" == typeof u,
            d = u,
            _ = a || (f && !u.base) ? (u && u.get ? n in t : t[n]) : null;
          (a && _) ||
            (f && _ && (u.base = _),
            f &&
              !1 !== s &&
              (c = n.match(/^([gs]et|is)(([A-Z])(.*))$/)) &&
              (l[c[3].toLowerCase() + c[4]] = c[2]),
            (d &&
              !f &&
              d.get &&
              "function" == typeof d.get &&
              i.isPlainObject(d)) ||
              (d = { value: d, writable: !0 }),
            (o(t, n) || { configurable: !0 }).configurable &&
              ((d.configurable = !0), (d.enumerable = null != r ? r : !c)),
            h(t, n, d));
        }
        var l = {};
        if (e) {
          for (var c in e) e.hasOwnProperty(c) && !n.test(c) && u(c);
          for (var c in l) {
            var f = l[c],
              d = t["set" + f],
              _ = t["get" + f] || (d && t["is" + f]);
            !_ || (!0 !== s && 0 !== _.length) || u(c, { get: _, set: d });
          }
        }
        return t;
      }
      function i() {
        for (var t = 0, e = arguments.length; t < e; t++) {
          var i = arguments[t];
          i && c(this, i);
        }
        return this;
      }
      var n = /^(statics|enumerable|beans|preserve)$/,
        r = [],
        s = r.slice,
        a = Object.create,
        o = Object.getOwnPropertyDescriptor,
        h = Object.defineProperty,
        u =
          r.forEach ||
          function (t, e) {
            for (var i = 0, n = this.length; i < n; i++)
              t.call(e, this[i], i, this);
          },
        l = function (t, e) {
          for (var i in this)
            this.hasOwnProperty(i) && t.call(e, this[i], i, this);
        },
        c =
          Object.assign ||
          function (t) {
            for (var e = 1, i = arguments.length; e < i; e++) {
              var n = arguments[e];
              for (var r in n) n.hasOwnProperty(r) && (t[r] = n[r]);
            }
            return t;
          },
        f = function (t, e, i) {
          if (t) {
            var n = o(t, "length");
            (n && "number" == typeof n.value ? u : l).call(t, e, (i = i || t));
          }
          return i;
        };
      return t(i, {
        inject: function (e) {
          if (e) {
            var i = !0 === e.statics ? e : e.statics,
              n = e.beans,
              r = e.preserve;
            i !== e && t(this.prototype, e, e.enumerable, n, r),
              t(this, i, null, n, r);
          }
          for (var s = 1, a = arguments.length; s < a; s++)
            this.inject(arguments[s]);
          return this;
        },
        extend: function () {
          for (
            var e, i, n, r = this, s = 0, o = arguments.length;
            s < o && (!e || !i);
            s++
          )
            (n = arguments[s]), (e = e || n.initialize), (i = i || n.prototype);
          return (
            (e =
              e ||
              function () {
                r.apply(this, arguments);
              }),
            (i = e.prototype = i || a(this.prototype)),
            h(i, "constructor", { value: e, writable: !0, configurable: !0 }),
            t(e, this),
            arguments.length && this.inject.apply(e, arguments),
            (e.base = r),
            e
          );
        },
      }).inject({
        enumerable: !1,
        initialize: i,
        set: i,
        inject: function () {
          for (var e = 0, i = arguments.length; e < i; e++) {
            var n = arguments[e];
            n && t(this, n, n.enumerable, n.beans, n.preserve);
          }
          return this;
        },
        extend: function () {
          var t = a(this);
          return t.inject.apply(t, arguments);
        },
        each: function (t, e) {
          return f(this, t, e);
        },
        clone: function () {
          return new this.constructor(this);
        },
        statics: {
          set: c,
          each: f,
          create: a,
          define: h,
          describe: o,
          clone: function (t) {
            return c(new t.constructor(), t);
          },
          isPlainObject: function (t) {
            var e = null != t && t.constructor;
            return e && (e === Object || e === i || "Object" === e.name);
          },
          pick: function (t, i) {
            return t !== e ? t : i;
          },
          slice: function (t, e, i) {
            return s.call(t, e, i);
          },
        },
      });
    })();
  "undefined" != typeof module && (module.exports = r),
    r.inject(
      {
        enumerable: !1,
        toString: function () {
          return null != this._id
            ? (this._class || "Object") +
                (this._name ? " '" + this._name + "'" : " @" + this._id)
            : "{ " +
                r
                  .each(
                    this,
                    function (t, e) {
                      if (!/^_/.test(e)) {
                        var i = typeof t;
                        this.push(
                          e +
                            ": " +
                            ("number" === i
                              ? h.instance.number(t)
                              : "string" === i
                              ? "'" + t + "'"
                              : t)
                        );
                      }
                    },
                    []
                  )
                  .join(", ") +
                " }";
        },
        getClassName: function () {
          return this._class || "";
        },
        importJSON: function (t) {
          return r.importJSON(t, this);
        },
        exportJSON: function (t) {
          return r.exportJSON(this, t);
        },
        toJSON: function () {
          return r.serialize(this);
        },
        set: function (t, e) {
          return t && r.filter(this, t, e, this._prioritize), this;
        },
      },
      {
        beans: !1,
        statics: {
          exports: {},
          extend: function t() {
            var e = t.base.apply(this, arguments),
              i = e.prototype._class;
            return i && !r.exports[i] && (r.exports[i] = e), e;
          },
          equals: function (t, e) {
            if (t === e) return !0;
            if (t && t.equals) return t.equals(e);
            if (e && e.equals) return e.equals(t);
            if (t && e && "object" == typeof t && "object" == typeof e) {
              if (Array.isArray(t) && Array.isArray(e)) {
                if ((n = t.length) !== e.length) return !1;
                for (; n--; ) if (!r.equals(t[n], e[n])) return !1;
              } else {
                var i = Object.keys(t),
                  n = i.length;
                if (n !== Object.keys(e).length) return !1;
                for (; n--; ) {
                  var s = i[n];
                  if (!e.hasOwnProperty(s) || !r.equals(t[s], e[s])) return !1;
                }
              }
              return !0;
            }
            return !1;
          },
          read: function (t, i, n, s) {
            if (this === r) {
              var a = this.peek(t, i);
              return t.__index++, a;
            }
            var o = this.prototype,
              h = o._readIndex,
              u = i || (h && t.__index) || 0,
              l = t.length,
              c = t[u];
            if (
              ((s = s || l - u),
              c instanceof this || (n && n.readNull && null == c && s <= 1))
            )
              return (
                h && (t.__index = u + 1), c && n && n.clone ? c.clone() : c
              );
            if (
              ((c = r.create(o)),
              h && (c.__read = !0),
              (c =
                c.initialize.apply(
                  c,
                  u > 0 || u + s < l ? r.slice(t, u, u + s) : t
                ) || c),
              h)
            ) {
              t.__index = u + c.__read;
              var f = c.__filtered;
              f && ((t.__filtered = f), (c.__filtered = e)), (c.__read = e);
            }
            return c;
          },
          peek: function (t, e) {
            return t[(t.__index = e || t.__index || 0)];
          },
          remain: function (t) {
            return t.length - (t.__index || 0);
          },
          readList: function (t, e, i, n) {
            for (
              var r, s = [], a = e || 0, o = n ? a + n : t.length, h = a;
              h < o;
              h++
            )
              s.push(
                Array.isArray((r = t[h]))
                  ? this.read(r, 0, i)
                  : this.read(t, h, i, 1)
              );
            return s;
          },
          readNamed: function (t, i, n, s, a) {
            var o = this.getNamed(t, i),
              h = o !== e;
            if (h) {
              var u = t.__filtered;
              u || ((u = t.__filtered = r.create(t[0])).__unfiltered = t[0]),
                (u[i] = e);
            }
            var l = h ? [o] : t;
            return this.read(l, n, s, a);
          },
          getNamed: function (t, i) {
            var n = t[0];
            if (
              (t._hasObject === e &&
                (t._hasObject = 1 === t.length && r.isPlainObject(n)),
              t._hasObject)
            )
              return i ? n[i] : t.__filtered || n;
          },
          hasNamed: function (t, e) {
            return !!this.getNamed(t, e);
          },
          filter: function (t, i, n, r) {
            function s(r) {
              if (!((n && r in n) || (a && r in a))) {
                var s = i[r];
                s !== e && (t[r] = s);
              }
            }
            var a;
            if (r) {
              for (var o, h = {}, u = 0, l = r.length; u < l; u++)
                (o = r[u]) in i && (s(o), (h[o] = !0));
              a = h;
            }
            return Object.keys(i.__unfiltered || i).forEach(s), t;
          },
          isPlainValue: function (t, e) {
            return (
              r.isPlainObject(t) ||
              Array.isArray(t) ||
              (e && "string" == typeof t)
            );
          },
          serialize: function (t, e, i, n) {
            e = e || {};
            var s,
              a = !n;
            if (
              (a &&
                ((e.formatter = new h(e.precision)),
                (n = {
                  length: 0,
                  definitions: {},
                  references: {},
                  add: function (t, e) {
                    var i = "#" + t._id,
                      n = this.references[i];
                    if (!n) {
                      this.length++;
                      var r = e.call(t),
                        s = t._class;
                      s && r[0] !== s && r.unshift(s),
                        (this.definitions[i] = r),
                        (n = this.references[i] = [i]);
                    }
                    return n;
                  },
                })),
              t && t._serialize)
            ) {
              s = t._serialize(e, n);
              var o = t._class;
              !o ||
                t._compactSerialize ||
                (!a && i) ||
                s[0] === o ||
                s.unshift(o);
            } else if (Array.isArray(t)) {
              s = [];
              for (var u = 0, l = t.length; u < l; u++)
                s[u] = r.serialize(t[u], e, i, n);
            } else if (r.isPlainObject(t)) {
              s = {};
              for (var c = Object.keys(t), u = 0, l = c.length; u < l; u++) {
                var f = c[u];
                s[f] = r.serialize(t[f], e, i, n);
              }
            } else
              s = "number" == typeof t ? e.formatter.number(t, e.precision) : t;
            return a && n.length > 0 ? [["dictionary", n.definitions], s] : s;
          },
          deserialize: function (t, e, i, n, s) {
            var a = t,
              o = !i,
              h = o && t && t.length && "dictionary" === t[0][0];
            if (((i = i || {}), Array.isArray(t))) {
              var u = t[0],
                l = "dictionary" === u;
              if (1 == t.length && /^#/.test(u)) return i.dictionary[u];
              a = [];
              for (var c = (u = r.exports[u]) ? 1 : 0, f = t.length; c < f; c++)
                a.push(r.deserialize(t[c], e, i, l, h));
              if (u) {
                var d = a;
                e
                  ? (a = e(u, d, o || s))
                  : ((a = r.create(u.prototype)), u.apply(a, d));
              }
            } else if (r.isPlainObject(t)) {
              (a = {}), n && (i.dictionary = a);
              for (var _ in t) a[_] = r.deserialize(t[_], e, i);
            }
            return h ? a[1] : a;
          },
          exportJSON: function (t, e) {
            var i = r.serialize(t, e);
            return e && 0 == e.asString ? i : JSON.stringify(i);
          },
          importJSON: function (t, e) {
            return r.deserialize(
              "string" == typeof t ? JSON.parse(t) : t,
              function (t, i, n) {
                var s = n && e && e.constructor === t,
                  a = s ? e : r.create(t.prototype);
                if (
                  1 === i.length &&
                  a instanceof w &&
                  (s || !(a instanceof b))
                ) {
                  var o = i[0];
                  r.isPlainObject(o) && (o.insert = !1);
                }
                return (s ? a.set : t).apply(a, i), s && (e = null), a;
              }
            );
          },
          splice: function (t, i, n, r) {
            var s = i && i.length,
              a = n === e;
            (n = a ? t.length : n) > t.length && (n = t.length);
            for (u = 0; u < s; u++) i[u]._index = n + u;
            if (a) return t.push.apply(t, i), [];
            var o = [n, r];
            i && o.push.apply(o, i);
            for (var h = t.splice.apply(t, o), u = 0, l = h.length; u < l; u++)
              h[u]._index = e;
            for (var u = n + s, l = t.length; u < l; u++) t[u]._index = u;
            return h;
          },
          capitalize: function (t) {
            return t.replace(/\b[a-z]/g, function (t) {
              return t.toUpperCase();
            });
          },
          camelize: function (t) {
            return t.replace(/-(.)/g, function (t, e) {
              return e.toUpperCase();
            });
          },
          hyphenate: function (t) {
            return t.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
          },
        },
      }
    );
  var s = {
      on: function (t, e) {
        if ("string" != typeof t)
          r.each(
            t,
            function (t, e) {
              this.on(e, t);
            },
            this
          );
        else {
          var i = this._eventTypes,
            n = i && i[t],
            s = (this._callbacks = this._callbacks || {});
          -1 === (s = s[t] = s[t] || []).indexOf(e) &&
            (s.push(e),
            n && n.install && 1 === s.length && n.install.call(this, t));
        }
        return this;
      },
      off: function (t, e) {
        if ("string" == typeof t) {
          var i,
            n = this._eventTypes,
            s = n && n[t],
            a = this._callbacks && this._callbacks[t];
          return (
            a &&
              (!e || (-1 !== (i = a.indexOf(e)) && 1 === a.length)
                ? (s && s.uninstall && s.uninstall.call(this, t),
                  delete this._callbacks[t])
                : -1 !== i && a.splice(i, 1)),
            this
          );
        }
        r.each(
          t,
          function (t, e) {
            this.off(e, t);
          },
          this
        );
      },
      once: function (t, e) {
        return this.on(t, function () {
          e.apply(this, arguments), this.off(t, e);
        });
      },
      emit: function (t, e) {
        var i = this._callbacks && this._callbacks[t];
        if (!i) return !1;
        var n = r.slice(arguments, 1),
          s = e && e.target && !e.currentTarget;
        (i = i.slice()), s && (e.currentTarget = this);
        for (var a = 0, o = i.length; a < o; a++)
          if (0 == i[a].apply(this, n)) {
            e && e.stop && e.stop();
            break;
          }
        return s && delete e.currentTarget, !0;
      },
      responds: function (t) {
        return !(!this._callbacks || !this._callbacks[t]);
      },
      attach: "#on",
      detach: "#off",
      fire: "#emit",
      _installEvents: function (t) {
        var e = this._eventTypes,
          i = this._callbacks,
          n = t ? "install" : "uninstall";
        if (e)
          for (var r in i)
            if (i[r].length > 0) {
              var s = e[r],
                a = s && s[n];
              a && a.call(this, r);
            }
      },
      statics: {
        inject: function t(e) {
          var i = e._events;
          if (i) {
            var n = {};
            r.each(i, function (t, i) {
              var s = "string" == typeof t,
                a = s ? t : i,
                o = r.capitalize(a),
                h = a.substring(2).toLowerCase();
              (n[h] = s ? {} : t),
                (a = "_" + a),
                (e["get" + o] = function () {
                  return this[a];
                }),
                (e["set" + o] = function (t) {
                  var e = this[a];
                  e && this.off(h, e), t && this.on(h, t), (this[a] = t);
                });
            }),
              (e._eventTypes = n);
          }
          return t.base.apply(this, arguments);
        },
      },
    },
    a = r.extend({
      _class: "PaperScope",
      initialize: function e() {
        (paper = this),
          (this.settings = new r({
            applyMatrix: !0,
            insertItems: !0,
            handleSize: 4,
            hitTolerance: 0,
          })),
          (this.project = null),
          (this.projects = []),
          (this.tools = []),
          (this._id = e._id++),
          (e._scopes[this._id] = this);
        var i = e.prototype;
        if (!this.support) {
          var n = Q.getContext(1, 1) || {};
          (i.support = {
            nativeDash: "setLineDash" in n || "mozDash" in n,
            nativeBlendModes: tt.nativeModes,
          }),
            Q.release(n);
        }
        if (!this.agent) {
          var s = t.navigator.userAgent.toLowerCase(),
            a = (/(darwin|win|mac|linux|freebsd|sunos)/.exec(s) || [])[0],
            o = "darwin" === a ? "mac" : a,
            h = (i.agent = i.browser = { platform: o });
          o && (h[o] = !0),
            s.replace(
              /(opera|chrome|safari|webkit|firefox|msie|trident|atom|node)\/?\s*([.\d]+)(?:.*version\/([.\d]+))?(?:.*rv\:v?([.\d]+))?/g,
              function (t, e, i, n, r) {
                if (!h.chrome) {
                  var s =
                    "opera" === e ? n : /^(node|trident)$/.test(e) ? r : i;
                  (h.version = s),
                    (h.versionNumber = parseFloat(s)),
                    (e = "trident" === e ? "msie" : e),
                    (h.name = e),
                    (h[e] = !0);
                }
              }
            ),
            h.chrome && delete h.webkit,
            h.atom && delete h.chrome;
        }
      },
      version: "0.11.5",
      getView: function () {
        var t = this.project;
        return t && t._view;
      },
      getPaper: function () {
        return this;
      },
      execute: function (t, e) {
        paper.PaperScript.execute(t, this, e), U.updateFocus();
      },
      install: function (t) {
        var e = this;
        r.each(["project", "view", "tool"], function (i) {
          r.define(t, i, {
            configurable: !0,
            get: function () {
              return e[i];
            },
          });
        });
        for (var i in this) !/^_/.test(i) && this[i] && (t[i] = this[i]);
      },
      setup: function (t) {
        return (paper = this), (this.project = new y(t)), this;
      },
      createCanvas: function (t, e) {
        return Q.getCanvas(t, e);
      },
      activate: function () {
        paper = this;
      },
      clear: function () {
        for (
          var t = this.projects, e = this.tools, i = t.length - 1;
          i >= 0;
          i--
        )
          t[i].remove();
        for (i = e.length - 1; i >= 0; i--) e[i].remove();
      },
      remove: function () {
        this.clear(), delete a._scopes[this._id];
      },
      statics: new (function () {
        function t(t) {
          return (
            (t += "Attribute"),
            function (e, i) {
              return e[t](i) || e[t]("data-paper-" + i);
            }
          );
        }
        return {
          _scopes: {},
          _id: 0,
          get: function (t) {
            return this._scopes[t] || null;
          },
          getAttribute: t("get"),
          hasAttribute: t("has"),
        };
      })(),
    }),
    o = r.extend(s, {
      initialize: function (t) {
        (this._scope = paper),
          (this._index = this._scope[this._list].push(this) - 1),
          (!t && this._scope[this._reference]) || this.activate();
      },
      activate: function () {
        if (!this._scope) return !1;
        var t = this._scope[this._reference];
        return (
          t && t !== this && t.emit("deactivate"),
          (this._scope[this._reference] = this),
          this.emit("activate", t),
          !0
        );
      },
      isActive: function () {
        return this._scope[this._reference] === this;
      },
      remove: function () {
        return (
          null != this._index &&
          (r.splice(this._scope[this._list], null, this._index, 1),
          this._scope[this._reference] == this &&
            (this._scope[this._reference] = null),
          (this._scope = null),
          !0)
        );
      },
      getView: function () {
        return this._scope.getView();
      },
    }),
    h = r.extend({
      initialize: function (t) {
        (this.precision = r.pick(t, 5)),
          (this.multiplier = Math.pow(10, this.precision));
      },
      number: function (t) {
        return this.precision < 16
          ? Math.round(t * this.multiplier) / this.multiplier
          : t;
      },
      pair: function (t, e, i) {
        return this.number(t) + (i || ",") + this.number(e);
      },
      point: function (t, e) {
        return this.number(t.x) + (e || ",") + this.number(t.y);
      },
      size: function (t, e) {
        return this.number(t.width) + (e || ",") + this.number(t.height);
      },
      rectangle: function (t, e) {
        return this.point(t, e) + (e || ",") + this.size(t, e);
      },
    });
  h.instance = new h();
  var u = new (function () {
      function t(t, e, i) {
        return t < e ? e : t > i ? i : t;
      }
      function e(t, e, i) {
        function n(t) {
          var e = 134217729 * t,
            i = t - e + e;
          return [i, t - i];
        }
        var r = e * e - t * i,
          a = e * e + t * i;
        if (3 * s(r) < a) {
          var o = n(t),
            h = n(e),
            u = n(i),
            l = e * e,
            c = t * i;
          r =
            l -
            c +
            (h[0] * h[0] -
              l +
              2 * h[0] * h[1] +
              h[1] * h[1] -
              (o[0] * u[0] - c + o[0] * u[1] + o[1] * u[0] + o[1] * u[1]));
        }
        return r;
      }
      function i() {
        var t = Math.max.apply(Math, arguments);
        return t && (t < 1e-8 || t > 1e8) ? o(2, -Math.round(h(t))) : 0;
      }
      var n = [
          [0.5773502691896257],
          [0, 0.7745966692414834],
          [0.33998104358485626, 0.8611363115940526],
          [0, 0.5384693101056831, 0.906179845938664],
          [0.2386191860831969, 0.6612093864662645, 0.932469514203152],
          [0, 0.4058451513773972, 0.7415311855993945, 0.9491079123427585],
          [
            0.1834346424956498, 0.525532409916329, 0.7966664774136267,
            0.9602898564975363,
          ],
          [
            0, 0.3242534234038089, 0.6133714327005904, 0.8360311073266358,
            0.9681602395076261,
          ],
          [
            0.14887433898163122, 0.4333953941292472, 0.6794095682990244,
            0.8650633666889845, 0.9739065285171717,
          ],
          [
            0, 0.26954315595234496, 0.5190961292068118, 0.7301520055740494,
            0.8870625997680953, 0.978228658146057,
          ],
          [
            0.1252334085114689, 0.3678314989981802, 0.5873179542866175,
            0.7699026741943047, 0.9041172563704749, 0.9815606342467192,
          ],
          [
            0, 0.2304583159551348, 0.44849275103644687, 0.6423493394403402,
            0.8015780907333099, 0.9175983992229779, 0.9841830547185881,
          ],
          [
            0.10805494870734367, 0.31911236892788974, 0.5152486363581541,
            0.6872929048116855, 0.827201315069765, 0.9284348836635735,
            0.9862838086968123,
          ],
          [
            0, 0.20119409399743451, 0.3941513470775634, 0.5709721726085388,
            0.7244177313601701, 0.8482065834104272, 0.937273392400706,
            0.9879925180204854,
          ],
          [
            0.09501250983763744, 0.2816035507792589, 0.45801677765722737,
            0.6178762444026438, 0.755404408355003, 0.8656312023878318,
            0.9445750230732326, 0.9894009349916499,
          ],
        ],
        r = [
          [1],
          [0.8888888888888888, 0.5555555555555556],
          [0.6521451548625461, 0.34785484513745385],
          [0.5688888888888889, 0.47862867049936647, 0.23692688505618908],
          [0.46791393457269104, 0.3607615730481386, 0.17132449237917036],
          [
            0.4179591836734694, 0.3818300505051189, 0.27970539148927664,
            0.1294849661688697,
          ],
          [
            0.362683783378362, 0.31370664587788727, 0.22238103445337448,
            0.10122853629037626,
          ],
          [
            0.3302393550012598, 0.31234707704000286, 0.26061069640293544,
            0.1806481606948574, 0.08127438836157441,
          ],
          [
            0.29552422471475287, 0.26926671930999635, 0.21908636251598204,
            0.1494513491505806, 0.06667134430868814,
          ],
          [
            0.2729250867779006, 0.26280454451024665, 0.23319376459199048,
            0.18629021092773426, 0.1255803694649046, 0.05566856711617366,
          ],
          [
            0.24914704581340277, 0.2334925365383548, 0.20316742672306592,
            0.16007832854334622, 0.10693932599531843, 0.04717533638651183,
          ],
          [
            0.2325515532308739, 0.22628318026289723, 0.2078160475368885,
            0.17814598076194574, 0.13887351021978725, 0.09212149983772845,
            0.04048400476531588,
          ],
          [
            0.2152638534631578, 0.2051984637212956, 0.18553839747793782,
            0.15720316715819355, 0.12151857068790319, 0.08015808715976021,
            0.03511946033175186,
          ],
          [
            0.2025782419255613, 0.19843148532711158, 0.1861610000155622,
            0.16626920581699392, 0.13957067792615432, 0.10715922046717194,
            0.07036604748810812, 0.03075324199611727,
          ],
          [
            0.1894506104550685, 0.18260341504492358, 0.16915651939500254,
            0.14959598881657674, 0.12462897125553388, 0.09515851168249279,
            0.062253523938647894, 0.027152459411754096,
          ],
        ],
        s = Math.abs,
        a = Math.sqrt,
        o = Math.pow,
        h =
          Math.log2 ||
          function (t) {
            return Math.log(t) * Math.LOG2E;
          };
      return {
        EPSILON: 1e-12,
        MACHINE_EPSILON: 1.12e-16,
        CURVETIME_EPSILON: 1e-8,
        GEOMETRIC_EPSILON: 1e-7,
        TRIGONOMETRIC_EPSILON: 1e-8,
        KAPPA: (4 * (a(2) - 1)) / 3,
        isZero: function (t) {
          return t >= -1e-12 && t <= 1e-12;
        },
        clamp: t,
        integrate: function (t, e, i, s) {
          for (
            var a = n[s - 2],
              o = r[s - 2],
              h = 0.5 * (i - e),
              u = h + e,
              l = 0,
              c = (s + 1) >> 1,
              f = 1 & s ? o[l++] * t(u) : 0;
            l < c;

          ) {
            var d = h * a[l];
            f += o[l++] * (t(u + d) + t(u - d));
          }
          return h * f;
        },
        findRoot: function (e, i, n, r, a, o, h) {
          for (var u = 0; u < o; u++) {
            var l = e(n),
              c = l / i(n),
              f = n - c;
            if (s(c) < h) {
              n = f;
              break;
            }
            l > 0
              ? ((a = n), (n = f <= r ? 0.5 * (r + a) : f))
              : ((r = n), (n = f >= a ? 0.5 * (r + a) : f));
          }
          return t(n, r, a);
        },
        solveQuadratic: function (n, r, o, h, u, l) {
          var c,
            f = 1 / 0;
          if (s(n) < 1e-12) {
            if (s(r) < 1e-12) return s(o) < 1e-12 ? -1 : 0;
            c = -o / r;
          } else {
            var d = e(n, (r *= -0.5), o);
            if (d && s(d) < 1.12e-16) {
              var _ = i(s(n), s(r), s(o));
              _ && (d = e((n *= _), (r *= _), (o *= _)));
            }
            if (d >= -1.12e-16) {
              var g = d < 0 ? 0 : a(d),
                v = r + (r < 0 ? -g : g);
              0 === v ? (f = -(c = o / n)) : ((c = v / n), (f = o / v));
            }
          }
          var p = 0,
            m = null == u,
            y = u - 1e-12,
            w = l + 1e-12;
          return (
            isFinite(c) &&
              (m || (c > y && c < w)) &&
              (h[p++] = m ? c : t(c, u, l)),
            f !== c &&
              isFinite(f) &&
              (m || (f > y && f < w)) &&
              (h[p++] = m ? f : t(f, u, l)),
            p
          );
        },
        solveCubic: function (e, n, r, h, l, c, f) {
          function d(t) {
            var i = e * (_ = t);
            (p = (i + (g = i + n)) * _ + (v = g * _ + r)), (m = v * _ + h);
          }
          var _,
            g,
            v,
            p,
            m,
            y = i(s(e), s(n), s(r), s(h));
          if ((y && ((e *= y), (n *= y), (r *= y), (h *= y)), s(e) < 1e-12))
            (e = n), (g = r), (v = h), (_ = 1 / 0);
          else if (s(h) < 1e-12) (g = n), (v = r), (_ = 0);
          else {
            d(-n / e / 3);
            var w = m / e,
              x = o(s(w), 1 / 3),
              b = w < 0 ? -1 : 1,
              C = -p / e,
              S = C > 0 ? 1.324717957244746 * Math.max(x, a(C)) : x,
              P = _ - b * S;
            if (P !== _) {
              do {
                d(P), (P = 0 === p ? _ : _ - m / p / (1 + 1.12e-16));
              } while (b * P > b * _);
              s(e) * _ * _ > s(h / _) && (g = ((v = -h / _) - r) / _);
            }
          }
          var I = u.solveQuadratic(e, g, v, l, c, f),
            M = null == c;
          return (
            isFinite(_) &&
              (0 === I || (I > 0 && _ !== l[0] && _ !== l[1])) &&
              (M || (_ > c - 1e-12 && _ < f + 1e-12)) &&
              (l[I++] = M ? _ : t(_, c, f)),
            I
          );
        },
      };
    })(),
    l = {
      _id: 1,
      _pools: {},
      get: function (t) {
        if (t) {
          var e = this._pools[t];
          return e || (e = this._pools[t] = { _id: 1 }), e._id++;
        }
        return this._id++;
      },
    },
    c = r.extend(
      {
        _class: "Point",
        _readIndex: !0,
        initialize: function (t, e) {
          var i = typeof t,
            n = this.__read,
            r = 0;
          if ("number" === i) {
            var s = "number" == typeof e;
            this._set(t, s ? e : t), n && (r = s ? 2 : 1);
          } else if ("undefined" === i || null === t)
            this._set(0, 0), n && (r = null === t ? 1 : 0);
          else {
            var a = "string" === i ? t.split(/[\s,]+/) || [] : t;
            (r = 1),
              Array.isArray(a)
                ? this._set(+a[0], +(a.length > 1 ? a[1] : a[0]))
                : "x" in a
                ? this._set(a.x || 0, a.y || 0)
                : "width" in a
                ? this._set(a.width || 0, a.height || 0)
                : "angle" in a
                ? (this._set(a.length || 0, 0), this.setAngle(a.angle || 0))
                : (this._set(0, 0), (r = 0));
          }
          return n && (this.__read = r), this;
        },
        set: "#initialize",
        _set: function (t, e) {
          return (this.x = t), (this.y = e), this;
        },
        equals: function (t) {
          return (
            this === t ||
            (t &&
              ((this.x === t.x && this.y === t.y) ||
                (Array.isArray(t) && this.x === t[0] && this.y === t[1]))) ||
            !1
          );
        },
        clone: function () {
          return new c(this.x, this.y);
        },
        toString: function () {
          var t = h.instance;
          return "{ x: " + t.number(this.x) + ", y: " + t.number(this.y) + " }";
        },
        _serialize: function (t) {
          var e = t.formatter;
          return [e.number(this.x), e.number(this.y)];
        },
        getLength: function () {
          return Math.sqrt(this.x * this.x + this.y * this.y);
        },
        setLength: function (t) {
          if (this.isZero()) {
            var e = this._angle || 0;
            this._set(Math.cos(e) * t, Math.sin(e) * t);
          } else {
            var i = t / this.getLength();
            u.isZero(i) && this.getAngle(), this._set(this.x * i, this.y * i);
          }
        },
        getAngle: function () {
          return (
            (180 * this.getAngleInRadians.apply(this, arguments)) / Math.PI
          );
        },
        setAngle: function (t) {
          this.setAngleInRadians.call(this, (t * Math.PI) / 180);
        },
        getAngleInDegrees: "#getAngle",
        setAngleInDegrees: "#setAngle",
        getAngleInRadians: function () {
          if (arguments.length) {
            var t = c.read(arguments),
              e = this.getLength() * t.getLength();
            if (u.isZero(e)) return NaN;
            var i = this.dot(t) / e;
            return Math.acos(i < -1 ? -1 : i > 1 ? 1 : i);
          }
          return this.isZero()
            ? this._angle || 0
            : (this._angle = Math.atan2(this.y, this.x));
        },
        setAngleInRadians: function (t) {
          if (((this._angle = t), !this.isZero())) {
            var e = this.getLength();
            this._set(Math.cos(t) * e, Math.sin(t) * e);
          }
        },
        getQuadrant: function () {
          return this.x >= 0 ? (this.y >= 0 ? 1 : 4) : this.y >= 0 ? 2 : 3;
        },
      },
      {
        beans: !1,
        getDirectedAngle: function () {
          var t = c.read(arguments);
          return (180 * Math.atan2(this.cross(t), this.dot(t))) / Math.PI;
        },
        getDistance: function () {
          var t = c.read(arguments),
            e = t.x - this.x,
            i = t.y - this.y,
            n = e * e + i * i;
          return r.read(arguments) ? n : Math.sqrt(n);
        },
        normalize: function (t) {
          t === e && (t = 1);
          var i = this.getLength(),
            n = 0 !== i ? t / i : 0,
            r = new c(this.x * n, this.y * n);
          return n >= 0 && (r._angle = this._angle), r;
        },
        rotate: function (t, e) {
          if (0 === t) return this.clone();
          t = (t * Math.PI) / 180;
          var i = e ? this.subtract(e) : this,
            n = Math.sin(t),
            r = Math.cos(t);
          return (
            (i = new c(i.x * r - i.y * n, i.x * n + i.y * r)), e ? i.add(e) : i
          );
        },
        transform: function (t) {
          return t ? t._transformPoint(this) : this;
        },
        add: function () {
          var t = c.read(arguments);
          return new c(this.x + t.x, this.y + t.y);
        },
        subtract: function () {
          var t = c.read(arguments);
          return new c(this.x - t.x, this.y - t.y);
        },
        multiply: function () {
          var t = c.read(arguments);
          return new c(this.x * t.x, this.y * t.y);
        },
        divide: function () {
          var t = c.read(arguments);
          return new c(this.x / t.x, this.y / t.y);
        },
        modulo: function () {
          var t = c.read(arguments);
          return new c(this.x % t.x, this.y % t.y);
        },
        negate: function () {
          return new c(-this.x, -this.y);
        },
        isInside: function () {
          return g.read(arguments).contains(this);
        },
        isClose: function () {
          var t = c.read(arguments),
            e = r.read(arguments);
          return this.getDistance(t) <= e;
        },
        isCollinear: function () {
          var t = c.read(arguments);
          return c.isCollinear(this.x, this.y, t.x, t.y);
        },
        isColinear: "#isCollinear",
        isOrthogonal: function () {
          var t = c.read(arguments);
          return c.isOrthogonal(this.x, this.y, t.x, t.y);
        },
        isZero: function () {
          var t = u.isZero;
          return t(this.x) && t(this.y);
        },
        isNaN: function () {
          return isNaN(this.x) || isNaN(this.y);
        },
        isInQuadrant: function (t) {
          return (
            this.x * (t > 1 && t < 4 ? -1 : 1) >= 0 &&
            this.y * (t > 2 ? -1 : 1) >= 0
          );
        },
        dot: function () {
          var t = c.read(arguments);
          return this.x * t.x + this.y * t.y;
        },
        cross: function () {
          var t = c.read(arguments);
          return this.x * t.y - this.y * t.x;
        },
        project: function () {
          var t = c.read(arguments),
            e = t.isZero() ? 0 : this.dot(t) / t.dot(t);
          return new c(t.x * e, t.y * e);
        },
        statics: {
          min: function () {
            var t = c.read(arguments),
              e = c.read(arguments);
            return new c(Math.min(t.x, e.x), Math.min(t.y, e.y));
          },
          max: function () {
            var t = c.read(arguments),
              e = c.read(arguments);
            return new c(Math.max(t.x, e.x), Math.max(t.y, e.y));
          },
          random: function () {
            return new c(Math.random(), Math.random());
          },
          isCollinear: function (t, e, i, n) {
            return (
              Math.abs(t * n - e * i) <=
              1e-8 * Math.sqrt((t * t + e * e) * (i * i + n * n))
            );
          },
          isOrthogonal: function (t, e, i, n) {
            return (
              Math.abs(t * i + e * n) <=
              1e-8 * Math.sqrt((t * t + e * e) * (i * i + n * n))
            );
          },
        },
      },
      r.each(
        ["round", "ceil", "floor", "abs"],
        function (t) {
          var e = Math[t];
          this[t] = function () {
            return new c(e(this.x), e(this.y));
          };
        },
        {}
      )
    ),
    f = c.extend({
      initialize: function (t, e, i, n) {
        (this._x = t), (this._y = e), (this._owner = i), (this._setter = n);
      },
      _set: function (t, e, i) {
        return (
          (this._x = t),
          (this._y = e),
          i || this._owner[this._setter](this),
          this
        );
      },
      getX: function () {
        return this._x;
      },
      setX: function (t) {
        (this._x = t), this._owner[this._setter](this);
      },
      getY: function () {
        return this._y;
      },
      setY: function (t) {
        (this._y = t), this._owner[this._setter](this);
      },
      isSelected: function () {
        return !!(this._owner._selection & this._getSelection());
      },
      setSelected: function (t) {
        this._owner._changeSelection(this._getSelection(), t);
      },
      _getSelection: function () {
        return "setPosition" === this._setter ? 4 : 0;
      },
    }),
    d = r.extend(
      {
        _class: "Size",
        _readIndex: !0,
        initialize: function (t, e) {
          var i = typeof t,
            n = this.__read,
            r = 0;
          if ("number" === i) {
            var s = "number" == typeof e;
            this._set(t, s ? e : t), n && (r = s ? 2 : 1);
          } else if ("undefined" === i || null === t)
            this._set(0, 0), n && (r = null === t ? 1 : 0);
          else {
            var a = "string" === i ? t.split(/[\s,]+/) || [] : t;
            (r = 1),
              Array.isArray(a)
                ? this._set(+a[0], +(a.length > 1 ? a[1] : a[0]))
                : "width" in a
                ? this._set(a.width || 0, a.height || 0)
                : "x" in a
                ? this._set(a.x || 0, a.y || 0)
                : (this._set(0, 0), (r = 0));
          }
          return n && (this.__read = r), this;
        },
        set: "#initialize",
        _set: function (t, e) {
          return (this.width = t), (this.height = e), this;
        },
        equals: function (t) {
          return (
            t === this ||
            (t &&
              ((this.width === t.width && this.height === t.height) ||
                (Array.isArray(t) &&
                  this.width === t[0] &&
                  this.height === t[1]))) ||
            !1
          );
        },
        clone: function () {
          return new d(this.width, this.height);
        },
        toString: function () {
          var t = h.instance;
          return (
            "{ width: " +
            t.number(this.width) +
            ", height: " +
            t.number(this.height) +
            " }"
          );
        },
        _serialize: function (t) {
          var e = t.formatter;
          return [e.number(this.width), e.number(this.height)];
        },
        add: function () {
          var t = d.read(arguments);
          return new d(this.width + t.width, this.height + t.height);
        },
        subtract: function () {
          var t = d.read(arguments);
          return new d(this.width - t.width, this.height - t.height);
        },
        multiply: function () {
          var t = d.read(arguments);
          return new d(this.width * t.width, this.height * t.height);
        },
        divide: function () {
          var t = d.read(arguments);
          return new d(this.width / t.width, this.height / t.height);
        },
        modulo: function () {
          var t = d.read(arguments);
          return new d(this.width % t.width, this.height % t.height);
        },
        negate: function () {
          return new d(-this.width, -this.height);
        },
        isZero: function () {
          var t = u.isZero;
          return t(this.width) && t(this.height);
        },
        isNaN: function () {
          return isNaN(this.width) || isNaN(this.height);
        },
        statics: {
          min: function (t, e) {
            return new d(
              Math.min(t.width, e.width),
              Math.min(t.height, e.height)
            );
          },
          max: function (t, e) {
            return new d(
              Math.max(t.width, e.width),
              Math.max(t.height, e.height)
            );
          },
          random: function () {
            return new d(Math.random(), Math.random());
          },
        },
      },
      r.each(
        ["round", "ceil", "floor", "abs"],
        function (t) {
          var e = Math[t];
          this[t] = function () {
            return new d(e(this.width), e(this.height));
          };
        },
        {}
      )
    ),
    _ = d.extend({
      initialize: function (t, e, i, n) {
        (this._width = t),
          (this._height = e),
          (this._owner = i),
          (this._setter = n);
      },
      _set: function (t, e, i) {
        return (
          (this._width = t),
          (this._height = e),
          i || this._owner[this._setter](this),
          this
        );
      },
      getWidth: function () {
        return this._width;
      },
      setWidth: function (t) {
        (this._width = t), this._owner[this._setter](this);
      },
      getHeight: function () {
        return this._height;
      },
      setHeight: function (t) {
        (this._height = t), this._owner[this._setter](this);
      },
    }),
    g = r.extend(
      {
        _class: "Rectangle",
        _readIndex: !0,
        beans: !0,
        initialize: function (t, i, n, s) {
          var a,
            o = typeof t;
          if (
            ("number" === o
              ? (this._set(t, i, n, s), (a = 4))
              : "undefined" === o || null === t
              ? (this._set(0, 0, 0, 0), (a = null === t ? 1 : 0))
              : 1 === arguments.length &&
                (Array.isArray(t)
                  ? (this._set.apply(this, t), (a = 1))
                  : t.x !== e || t.width !== e
                  ? (this._set(t.x || 0, t.y || 0, t.width || 0, t.height || 0),
                    (a = 1))
                  : t.from === e &&
                    t.to === e &&
                    (this._set(0, 0, 0, 0), r.filter(this, t), (a = 1))),
            a === e)
          ) {
            var h,
              u,
              l = c.readNamed(arguments, "from"),
              f = r.peek(arguments),
              _ = l.x,
              g = l.y;
            if ((f && f.x !== e) || r.hasNamed(arguments, "to")) {
              var v = c.readNamed(arguments, "to");
              (h = v.x - _),
                (u = v.y - g),
                h < 0 && ((_ = v.x), (h = -h)),
                u < 0 && ((g = v.y), (u = -u));
            } else {
              var p = d.read(arguments);
              (h = p.width), (u = p.height);
            }
            this._set(_, g, h, u), (a = arguments.__index);
            var m = arguments.__filtered;
            m && (this.__filtered = m);
          }
          return this.__read && (this.__read = a), this;
        },
        set: "#initialize",
        _set: function (t, e, i, n) {
          return (
            (this.x = t),
            (this.y = e),
            (this.width = i),
            (this.height = n),
            this
          );
        },
        clone: function () {
          return new g(this.x, this.y, this.width, this.height);
        },
        equals: function (t) {
          var e = r.isPlainValue(t) ? g.read(arguments) : t;
          return (
            e === this ||
            (e &&
              this.x === e.x &&
              this.y === e.y &&
              this.width === e.width &&
              this.height === e.height) ||
            !1
          );
        },
        toString: function () {
          var t = h.instance;
          return (
            "{ x: " +
            t.number(this.x) +
            ", y: " +
            t.number(this.y) +
            ", width: " +
            t.number(this.width) +
            ", height: " +
            t.number(this.height) +
            " }"
          );
        },
        _serialize: function (t) {
          var e = t.formatter;
          return [
            e.number(this.x),
            e.number(this.y),
            e.number(this.width),
            e.number(this.height),
          ];
        },
        getPoint: function (t) {
          return new (t ? c : f)(this.x, this.y, this, "setPoint");
        },
        setPoint: function () {
          var t = c.read(arguments);
          (this.x = t.x), (this.y = t.y);
        },
        getSize: function (t) {
          return new (t ? d : _)(this.width, this.height, this, "setSize");
        },
        _fw: 1,
        _fh: 1,
        setSize: function () {
          var t = d.read(arguments),
            e = this._sx,
            i = this._sy,
            n = t.width,
            r = t.height;
          e && (this.x += (this.width - n) * e),
            i && (this.y += (this.height - r) * i),
            (this.width = n),
            (this.height = r),
            (this._fw = this._fh = 1);
        },
        getLeft: function () {
          return this.x;
        },
        setLeft: function (t) {
          if (!this._fw) {
            var e = t - this.x;
            this.width -= 0.5 === this._sx ? 2 * e : e;
          }
          (this.x = t), (this._sx = this._fw = 0);
        },
        getTop: function () {
          return this.y;
        },
        setTop: function (t) {
          if (!this._fh) {
            var e = t - this.y;
            this.height -= 0.5 === this._sy ? 2 * e : e;
          }
          (this.y = t), (this._sy = this._fh = 0);
        },
        getRight: function () {
          return this.x + this.width;
        },
        setRight: function (t) {
          if (!this._fw) {
            var e = t - this.x;
            this.width = 0.5 === this._sx ? 2 * e : e;
          }
          (this.x = t - this.width), (this._sx = 1), (this._fw = 0);
        },
        getBottom: function () {
          return this.y + this.height;
        },
        setBottom: function (t) {
          if (!this._fh) {
            var e = t - this.y;
            this.height = 0.5 === this._sy ? 2 * e : e;
          }
          (this.y = t - this.height), (this._sy = 1), (this._fh = 0);
        },
        getCenterX: function () {
          return this.x + this.width / 2;
        },
        setCenterX: function (t) {
          this._fw || 0.5 === this._sx
            ? (this.x = t - this.width / 2)
            : (this._sx && (this.x += 2 * (t - this.x) * this._sx),
              (this.width = 2 * (t - this.x))),
            (this._sx = 0.5),
            (this._fw = 0);
        },
        getCenterY: function () {
          return this.y + this.height / 2;
        },
        setCenterY: function (t) {
          this._fh || 0.5 === this._sy
            ? (this.y = t - this.height / 2)
            : (this._sy && (this.y += 2 * (t - this.y) * this._sy),
              (this.height = 2 * (t - this.y))),
            (this._sy = 0.5),
            (this._fh = 0);
        },
        getCenter: function (t) {
          return new (t ? c : f)(
            this.getCenterX(),
            this.getCenterY(),
            this,
            "setCenter"
          );
        },
        setCenter: function () {
          var t = c.read(arguments);
          return this.setCenterX(t.x), this.setCenterY(t.y), this;
        },
        getArea: function () {
          return this.width * this.height;
        },
        isEmpty: function () {
          return 0 === this.width || 0 === this.height;
        },
        contains: function (t) {
          return (t && t.width !== e) ||
            4 === (Array.isArray(t) ? t : arguments).length
            ? this._containsRectangle(g.read(arguments))
            : this._containsPoint(c.read(arguments));
        },
        _containsPoint: function (t) {
          var e = t.x,
            i = t.y;
          return (
            e >= this.x &&
            i >= this.y &&
            e <= this.x + this.width &&
            i <= this.y + this.height
          );
        },
        _containsRectangle: function (t) {
          var e = t.x,
            i = t.y;
          return (
            e >= this.x &&
            i >= this.y &&
            e + t.width <= this.x + this.width &&
            i + t.height <= this.y + this.height
          );
        },
        intersects: function () {
          var t = g.read(arguments),
            e = r.read(arguments) || 0;
          return (
            t.x + t.width > this.x - e &&
            t.y + t.height > this.y - e &&
            t.x < this.x + this.width + e &&
            t.y < this.y + this.height + e
          );
        },
        intersect: function () {
          var t = g.read(arguments),
            e = Math.max(this.x, t.x),
            i = Math.max(this.y, t.y),
            n = Math.min(this.x + this.width, t.x + t.width),
            r = Math.min(this.y + this.height, t.y + t.height);
          return new g(e, i, n - e, r - i);
        },
        unite: function () {
          var t = g.read(arguments),
            e = Math.min(this.x, t.x),
            i = Math.min(this.y, t.y),
            n = Math.max(this.x + this.width, t.x + t.width),
            r = Math.max(this.y + this.height, t.y + t.height);
          return new g(e, i, n - e, r - i);
        },
        include: function () {
          var t = c.read(arguments),
            e = Math.min(this.x, t.x),
            i = Math.min(this.y, t.y),
            n = Math.max(this.x + this.width, t.x),
            r = Math.max(this.y + this.height, t.y);
          return new g(e, i, n - e, r - i);
        },
        expand: function () {
          var t = d.read(arguments),
            e = t.width,
            i = t.height;
          return new g(
            this.x - e / 2,
            this.y - i / 2,
            this.width + e,
            this.height + i
          );
        },
        scale: function (t, i) {
          return this.expand(
            this.width * t - this.width,
            this.height * (i === e ? t : i) - this.height
          );
        },
      },
      r.each(
        [
          ["Top", "Left"],
          ["Top", "Right"],
          ["Bottom", "Left"],
          ["Bottom", "Right"],
          ["Left", "Center"],
          ["Top", "Center"],
          ["Right", "Center"],
          ["Bottom", "Center"],
        ],
        function (t, e) {
          var i = t.join(""),
            n = /^[RL]/.test(i);
          e >= 4 && (t[1] += n ? "Y" : "X");
          var r = t[n ? 0 : 1],
            s = t[n ? 1 : 0],
            a = "get" + r,
            o = "get" + s,
            h = "set" + r,
            u = "set" + s,
            l = "set" + i;
          (this["get" + i] = function (t) {
            return new (t ? c : f)(this[a](), this[o](), this, l);
          }),
            (this[l] = function () {
              var t = c.read(arguments);
              this[h](t.x), this[u](t.y);
            });
        },
        { beans: !0 }
      )
    ),
    v = g.extend(
      {
        initialize: function (t, e, i, n, r, s) {
          this._set(t, e, i, n, !0), (this._owner = r), (this._setter = s);
        },
        _set: function (t, e, i, n, r) {
          return (
            (this._x = t),
            (this._y = e),
            (this._width = i),
            (this._height = n),
            r || this._owner[this._setter](this),
            this
          );
        },
      },
      new (function () {
        var t = g.prototype;
        return r.each(
          ["x", "y", "width", "height"],
          function (t) {
            var e = r.capitalize(t),
              i = "_" + t;
            (this["get" + e] = function () {
              return this[i];
            }),
              (this["set" + e] = function (t) {
                (this[i] = t),
                  this._dontNotify || this._owner[this._setter](this);
              });
          },
          r.each(
            [
              "Point",
              "Size",
              "Center",
              "Left",
              "Top",
              "Right",
              "Bottom",
              "CenterX",
              "CenterY",
              "TopLeft",
              "TopRight",
              "BottomLeft",
              "BottomRight",
              "LeftCenter",
              "TopCenter",
              "RightCenter",
              "BottomCenter",
            ],
            function (e) {
              var i = "set" + e;
              this[i] = function () {
                (this._dontNotify = !0),
                  t[i].apply(this, arguments),
                  (this._dontNotify = !1),
                  this._owner[this._setter](this);
              };
            },
            {
              isSelected: function () {
                return !!(2 & this._owner._selection);
              },
              setSelected: function (t) {
                var e = this._owner;
                e._changeSelection && e._changeSelection(2, t);
              },
            }
          )
        );
      })()
    ),
    p = r.extend(
      {
        _class: "Matrix",
        initialize: function t(e, i) {
          var n = arguments.length,
            r = !0;
          if (
            (n >= 6
              ? this._set.apply(this, arguments)
              : 1 === n || 2 === n
              ? e instanceof t
                ? this._set(e._a, e._b, e._c, e._d, e._tx, e._ty, i)
                : Array.isArray(e)
                ? this._set.apply(this, i ? e.concat([i]) : e)
                : (r = !1)
              : n
              ? (r = !1)
              : this.reset(),
            !r)
          )
            throw new Error("Unsupported matrix parameters");
          return this;
        },
        set: "#initialize",
        _set: function (t, e, i, n, r, s, a) {
          return (
            (this._a = t),
            (this._b = e),
            (this._c = i),
            (this._d = n),
            (this._tx = r),
            (this._ty = s),
            a || this._changed(),
            this
          );
        },
        _serialize: function (t, e) {
          return r.serialize(this.getValues(), t, !0, e);
        },
        _changed: function () {
          var t = this._owner;
          t && (t._applyMatrix ? t.transform(null, !0) : t._changed(9));
        },
        clone: function () {
          return new p(this._a, this._b, this._c, this._d, this._tx, this._ty);
        },
        equals: function (t) {
          return (
            t === this ||
            (t &&
              this._a === t._a &&
              this._b === t._b &&
              this._c === t._c &&
              this._d === t._d &&
              this._tx === t._tx &&
              this._ty === t._ty)
          );
        },
        toString: function () {
          var t = h.instance;
          return (
            "[[" +
            [t.number(this._a), t.number(this._c), t.number(this._tx)].join(
              ", "
            ) +
            "], [" +
            [t.number(this._b), t.number(this._d), t.number(this._ty)].join(
              ", "
            ) +
            "]]"
          );
        },
        reset: function (t) {
          return (
            (this._a = this._d = 1),
            (this._b = this._c = this._tx = this._ty = 0),
            t || this._changed(),
            this
          );
        },
        apply: function (t, e) {
          var i = this._owner;
          return (
            !!i && (i.transform(null, !0, r.pick(t, !0), e), this.isIdentity())
          );
        },
        translate: function () {
          var t = c.read(arguments),
            e = t.x,
            i = t.y;
          return (
            (this._tx += e * this._a + i * this._c),
            (this._ty += e * this._b + i * this._d),
            this._changed(),
            this
          );
        },
        scale: function () {
          var t = c.read(arguments),
            e = c.read(arguments, 0, { readNull: !0 });
          return (
            e && this.translate(e),
            (this._a *= t.x),
            (this._b *= t.x),
            (this._c *= t.y),
            (this._d *= t.y),
            e && this.translate(e.negate()),
            this._changed(),
            this
          );
        },
        rotate: function (t) {
          t *= Math.PI / 180;
          var e = c.read(arguments, 1),
            i = e.x,
            n = e.y,
            r = Math.cos(t),
            s = Math.sin(t),
            a = i - i * r + n * s,
            o = n - i * s - n * r,
            h = this._a,
            u = this._b,
            l = this._c,
            f = this._d;
          return (
            (this._a = r * h + s * l),
            (this._b = r * u + s * f),
            (this._c = -s * h + r * l),
            (this._d = -s * u + r * f),
            (this._tx += a * h + o * l),
            (this._ty += a * u + o * f),
            this._changed(),
            this
          );
        },
        shear: function () {
          var t = c.read(arguments),
            e = c.read(arguments, 0, { readNull: !0 });
          e && this.translate(e);
          var i = this._a,
            n = this._b;
          return (
            (this._a += t.y * this._c),
            (this._b += t.y * this._d),
            (this._c += t.x * i),
            (this._d += t.x * n),
            e && this.translate(e.negate()),
            this._changed(),
            this
          );
        },
        skew: function () {
          var t = c.read(arguments),
            e = c.read(arguments, 0, { readNull: !0 }),
            i = Math.PI / 180,
            n = new c(Math.tan(t.x * i), Math.tan(t.y * i));
          return this.shear(n, e);
        },
        append: function (t, e) {
          if (t) {
            var i = this._a,
              n = this._b,
              r = this._c,
              s = this._d,
              a = t._a,
              o = t._c,
              h = t._b,
              u = t._d,
              l = t._tx,
              c = t._ty;
            (this._a = a * i + h * r),
              (this._c = o * i + u * r),
              (this._b = a * n + h * s),
              (this._d = o * n + u * s),
              (this._tx += l * i + c * r),
              (this._ty += l * n + c * s),
              e || this._changed();
          }
          return this;
        },
        prepend: function (t, e) {
          if (t) {
            var i = this._a,
              n = this._b,
              r = this._c,
              s = this._d,
              a = this._tx,
              o = this._ty,
              h = t._a,
              u = t._c,
              l = t._b,
              c = t._d,
              f = t._tx,
              d = t._ty;
            (this._a = h * i + u * n),
              (this._c = h * r + u * s),
              (this._b = l * i + c * n),
              (this._d = l * r + c * s),
              (this._tx = h * a + u * o + f),
              (this._ty = l * a + c * o + d),
              e || this._changed();
          }
          return this;
        },
        appended: function (t) {
          return this.clone().append(t);
        },
        prepended: function (t) {
          return this.clone().prepend(t);
        },
        invert: function () {
          var t = this._a,
            e = this._b,
            i = this._c,
            n = this._d,
            r = this._tx,
            s = this._ty,
            a = t * n - e * i,
            o = null;
          return (
            a &&
              !isNaN(a) &&
              isFinite(r) &&
              isFinite(s) &&
              ((this._a = n / a),
              (this._b = -e / a),
              (this._c = -i / a),
              (this._d = t / a),
              (this._tx = (i * s - n * r) / a),
              (this._ty = (e * r - t * s) / a),
              (o = this)),
            o
          );
        },
        inverted: function () {
          return this.clone().invert();
        },
        concatenate: "#append",
        preConcatenate: "#prepend",
        chain: "#appended",
        _shiftless: function () {
          return new p(this._a, this._b, this._c, this._d, 0, 0);
        },
        _orNullIfIdentity: function () {
          return this.isIdentity() ? null : this;
        },
        isIdentity: function () {
          return (
            1 === this._a &&
            0 === this._b &&
            0 === this._c &&
            1 === this._d &&
            0 === this._tx &&
            0 === this._ty
          );
        },
        isInvertible: function () {
          var t = this._a * this._d - this._c * this._b;
          return t && !isNaN(t) && isFinite(this._tx) && isFinite(this._ty);
        },
        isSingular: function () {
          return !this.isInvertible();
        },
        transform: function (t, e, i) {
          return arguments.length < 3
            ? this._transformPoint(c.read(arguments))
            : this._transformCoordinates(t, e, i);
        },
        _transformPoint: function (t, e, i) {
          var n = t.x,
            r = t.y;
          return (
            e || (e = new c()),
            e._set(
              n * this._a + r * this._c + this._tx,
              n * this._b + r * this._d + this._ty,
              i
            )
          );
        },
        _transformCoordinates: function (t, e, i) {
          for (var n = 0, r = 2 * i; n < r; n += 2) {
            var s = t[n],
              a = t[n + 1];
            (e[n] = s * this._a + a * this._c + this._tx),
              (e[n + 1] = s * this._b + a * this._d + this._ty);
          }
          return e;
        },
        _transformCorners: function (t) {
          var e = t.x,
            i = t.y,
            n = e + t.width,
            r = i + t.height,
            s = [e, i, n, i, n, r, e, r];
          return this._transformCoordinates(s, s, 4);
        },
        _transformBounds: function (t, e, i) {
          for (
            var n = this._transformCorners(t),
              r = n.slice(0, 2),
              s = r.slice(),
              a = 2;
            a < 8;
            a++
          ) {
            var o = n[a],
              h = 1 & a;
            o < r[h] ? (r[h] = o) : o > s[h] && (s[h] = o);
          }
          return (
            e || (e = new g()), e._set(r[0], r[1], s[0] - r[0], s[1] - r[1], i)
          );
        },
        inverseTransform: function () {
          return this._inverseTransform(c.read(arguments));
        },
        _inverseTransform: function (t, e, i) {
          var n = this._a,
            r = this._b,
            s = this._c,
            a = this._d,
            o = this._tx,
            h = this._ty,
            u = n * a - r * s,
            l = null;
          if (u && !isNaN(u) && isFinite(o) && isFinite(h)) {
            var f = t.x - this._tx,
              d = t.y - this._ty;
            e || (e = new c()),
              (l = e._set((f * a - d * s) / u, (d * n - f * r) / u, i));
          }
          return l;
        },
        decompose: function () {
          var t,
            e,
            i,
            n = this._a,
            r = this._b,
            s = this._c,
            a = this._d,
            o = n * a - r * s,
            h = Math.sqrt,
            u = Math.atan2,
            l = 180 / Math.PI;
          if (0 !== n || 0 !== r) {
            var f = h(n * n + r * r);
            (t = Math.acos(n / f) * (r > 0 ? 1 : -1)),
              (e = [f, o / f]),
              (i = [u(n * s + r * a, f * f), 0]);
          } else if (0 !== s || 0 !== a) {
            var d = h(s * s + a * a);
            (t = Math.asin(s / d) * (a > 0 ? 1 : -1)),
              (e = [o / d, d]),
              (i = [0, u(n * s + r * a, d * d)]);
          } else (t = 0), (i = e = [0, 0]);
          return {
            translation: this.getTranslation(),
            rotation: t * l,
            scaling: new c(e),
            skewing: new c(i[0] * l, i[1] * l),
          };
        },
        getValues: function () {
          return [this._a, this._b, this._c, this._d, this._tx, this._ty];
        },
        getTranslation: function () {
          return new c(this._tx, this._ty);
        },
        getScaling: function () {
          return (this.decompose() || {}).scaling;
        },
        getRotation: function () {
          return (this.decompose() || {}).rotation;
        },
        applyToContext: function (t) {
          this.isIdentity() ||
            t.transform(this._a, this._b, this._c, this._d, this._tx, this._ty);
        },
      },
      r.each(
        ["a", "b", "c", "d", "tx", "ty"],
        function (t) {
          var e = r.capitalize(t),
            i = "_" + t;
          (this["get" + e] = function () {
            return this[i];
          }),
            (this["set" + e] = function (t) {
              (this[i] = t), this._changed();
            });
        },
        {}
      )
    ),
    m = r.extend({
      _class: "Line",
      initialize: function (t, e, i, n, r) {
        var s = !1;
        arguments.length >= 4
          ? ((this._px = t),
            (this._py = e),
            (this._vx = i),
            (this._vy = n),
            (s = r))
          : ((this._px = t.x),
            (this._py = t.y),
            (this._vx = e.x),
            (this._vy = e.y),
            (s = i)),
          s || ((this._vx -= this._px), (this._vy -= this._py));
      },
      getPoint: function () {
        return new c(this._px, this._py);
      },
      getVector: function () {
        return new c(this._vx, this._vy);
      },
      getLength: function () {
        return this.getVector().getLength();
      },
      intersect: function (t, e) {
        return m.intersect(
          this._px,
          this._py,
          this._vx,
          this._vy,
          t._px,
          t._py,
          t._vx,
          t._vy,
          !0,
          e
        );
      },
      getSide: function (t, e) {
        return m.getSide(
          this._px,
          this._py,
          this._vx,
          this._vy,
          t.x,
          t.y,
          !0,
          e
        );
      },
      getDistance: function (t) {
        return Math.abs(this.getSignedDistance(t));
      },
      getSignedDistance: function (t) {
        return m.getSignedDistance(
          this._px,
          this._py,
          this._vx,
          this._vy,
          t.x,
          t.y,
          !0
        );
      },
      isCollinear: function (t) {
        return c.isCollinear(this._vx, this._vy, t._vx, t._vy);
      },
      isOrthogonal: function (t) {
        return c.isOrthogonal(this._vx, this._vy, t._vx, t._vy);
      },
      statics: {
        intersect: function (t, e, i, n, r, s, a, o, h, l) {
          h || ((i -= t), (n -= e), (a -= r), (o -= s));
          var f = i * o - n * a;
          if (!u.isZero(f)) {
            var d = t - r,
              _ = e - s,
              g = (a * _ - o * d) / f,
              v = (i * _ - n * d) / f;
            if (
              l ||
              (-1e-12 < g && g < 1 + 1e-12 && -1e-12 < v && v < 1 + 1e-12)
            )
              return (
                l || (g = g <= 0 ? 0 : g >= 1 ? 1 : g),
                new c(t + g * i, e + g * n)
              );
          }
        },
        getSide: function (t, e, i, n, r, s, a, o) {
          a || ((i -= t), (n -= e));
          var h = r - t,
            l = h * n - (s - e) * i;
          return (
            !o &&
              u.isZero(l) &&
              (l = (h * i + h * i) / (i * i + n * n)) >= 0 &&
              l <= 1 &&
              (l = 0),
            l < 0 ? -1 : l > 0 ? 1 : 0
          );
        },
        getSignedDistance: function (t, e, i, n, r, s, a) {
          return (
            a || ((i -= t), (n -= e)),
            0 === i
              ? n > 0
                ? r - t
                : t - r
              : 0 === n
              ? i < 0
                ? s - e
                : e - s
              : ((r - t) * n - (s - e) * i) / Math.sqrt(i * i + n * n)
          );
        },
        getDistance: function (t, e, i, n, r, s, a) {
          return Math.abs(m.getSignedDistance(t, e, i, n, r, s, a));
        },
      },
    }),
    y = o.extend({
      _class: "Project",
      _list: "projects",
      _reference: "project",
      _compactSerialize: !0,
      initialize: function (t) {
        o.call(this, !0),
          (this._children = []),
          (this._namedChildren = {}),
          (this._activeLayer = null),
          (this._currentStyle = new V(null, null, this)),
          (this._view = U.create(this, t || Q.getCanvas(1, 1))),
          (this._selectionItems = {}),
          (this._selectionCount = 0),
          (this._updateVersion = 0);
      },
      _serialize: function (t, e) {
        return r.serialize(this._children, t, !0, e);
      },
      _changed: function (t, e) {
        if (1 & t) {
          var i = this._view;
          i &&
            ((i._needsUpdate = !0),
            !i._requested && i._autoUpdate && i.requestUpdate());
        }
        var n = this._changes;
        if (n && e) {
          var r = this._changesById,
            s = e._id,
            a = r[s];
          a ? (a.flags |= t) : n.push((r[s] = { item: e, flags: t }));
        }
      },
      clear: function () {
        for (var t = this._children, e = t.length - 1; e >= 0; e--)
          t[e].remove();
      },
      isEmpty: function () {
        return !this._children.length;
      },
      remove: function t() {
        return !!t.base.call(this) && (this._view && this._view.remove(), !0);
      },
      getView: function () {
        return this._view;
      },
      getCurrentStyle: function () {
        return this._currentStyle;
      },
      setCurrentStyle: function (t) {
        this._currentStyle.set(t);
      },
      getIndex: function () {
        return this._index;
      },
      getOptions: function () {
        return this._scope.settings;
      },
      getLayers: function () {
        return this._children;
      },
      getActiveLayer: function () {
        return this._activeLayer || new b({ project: this, insert: !0 });
      },
      getSymbolDefinitions: function () {
        var t = [],
          e = {};
        return (
          this.getItems({
            class: P,
            match: function (i) {
              var n = i._definition,
                r = n._id;
              return e[r] || ((e[r] = !0), t.push(n)), !1;
            },
          }),
          t
        );
      },
      getSymbols: "getSymbolDefinitions",
      getSelectedItems: function () {
        var t = this._selectionItems,
          e = [];
        for (var i in t) {
          var n = t[i],
            r = n._selection;
          1 & r && n.isInserted() ? e.push(n) : r || this._updateSelection(n);
        }
        return e;
      },
      _updateSelection: function (t) {
        var e = t._id,
          i = this._selectionItems;
        t._selection
          ? i[e] !== t && (this._selectionCount++, (i[e] = t))
          : i[e] === t && (this._selectionCount--, delete i[e]);
      },
      selectAll: function () {
        for (var t = this._children, e = 0, i = t.length; e < i; e++)
          t[e].setFullySelected(!0);
      },
      deselectAll: function () {
        var t = this._selectionItems;
        for (var e in t) t[e].setFullySelected(!1);
      },
      addLayer: function (t) {
        return this.insertLayer(e, t);
      },
      insertLayer: function (t, e) {
        if (e instanceof b) {
          e._remove(!1, !0),
            r.splice(this._children, [e], t, 0),
            e._setProject(this, !0);
          var i = e._name;
          i && e.setName(i),
            this._changes && e._changed(5),
            this._activeLayer || (this._activeLayer = e);
        } else e = null;
        return e;
      },
      _insertItem: function (t, i, n) {
        return (
          (i =
            this.insertLayer(t, i) ||
            (
              this._activeLayer || this._insertItem(e, new b(w.NO_INSERT), !0)
            ).insertChild(t, i)),
          n && i.activate && i.activate(),
          i
        );
      },
      getItems: function (t) {
        return w._getItems(this, t);
      },
      getItem: function (t) {
        return w._getItems(this, t, null, null, !0)[0] || null;
      },
      importJSON: function (t) {
        this.activate();
        var e = this._activeLayer;
        return r.importJSON(t, e && e.isEmpty() && e);
      },
      removeOn: function (t) {
        var e = this._removeSets;
        if (e) {
          "mouseup" === t && (e.mousedrag = null);
          var i = e[t];
          if (i) {
            for (var n in i) {
              var r = i[n];
              for (var s in e) {
                var a = e[s];
                a && a != i && delete a[r._id];
              }
              r.remove();
            }
            e[t] = null;
          }
        }
      },
      draw: function (t, e, i) {
        this._updateVersion++, t.save(), e.applyToContext(t);
        for (
          var n = this._children,
            s = new r({
              offset: new c(0, 0),
              pixelRatio: i,
              viewMatrix: e.isIdentity() ? null : e,
              matrices: [new p()],
              updateMatrix: !0,
            }),
            a = 0,
            o = n.length;
          a < o;
          a++
        )
          n[a].draw(t, s);
        if ((t.restore(), this._selectionCount > 0)) {
          t.save(), (t.strokeWidth = 1);
          var h = this._selectionItems,
            u = this._scope.settings.handleSize,
            l = this._updateVersion;
          for (var f in h) h[f]._drawSelection(t, e, u, h, l);
          t.restore();
        }
      },
    }),
    w = r.extend(
      s,
      {
        statics: {
          extend: function t(e) {
            return (
              e._serializeFields &&
                (e._serializeFields = r.set(
                  {},
                  this.prototype._serializeFields,
                  e._serializeFields
                )),
              t.base.apply(this, arguments)
            );
          },
          NO_INSERT: { insert: !1 },
        },
        _class: "Item",
        _name: null,
        _applyMatrix: !0,
        _canApplyMatrix: !0,
        _canScaleStroke: !1,
        _pivot: null,
        _visible: !0,
        _blendMode: "normal",
        _opacity: 1,
        _locked: !1,
        _guide: !1,
        _clipMask: !1,
        _selection: 0,
        _selectBounds: !0,
        _selectChildren: !1,
        _serializeFields: {
          name: null,
          applyMatrix: null,
          matrix: new p(),
          pivot: null,
          visible: !0,
          blendMode: "normal",
          opacity: 1,
          locked: !1,
          guide: !1,
          clipMask: !1,
          selected: !1,
          data: {},
        },
        _prioritize: ["applyMatrix"],
      },
      new (function () {
        var t = [
          "onMouseDown",
          "onMouseUp",
          "onMouseDrag",
          "onClick",
          "onDoubleClick",
          "onMouseMove",
          "onMouseEnter",
          "onMouseLeave",
        ];
        return r.each(
          t,
          function (t) {
            this._events[t] = {
              install: function (t) {
                this.getView()._countItemEvent(t, 1);
              },
              uninstall: function (t) {
                this.getView()._countItemEvent(t, -1);
              },
            };
          },
          {
            _events: {
              onFrame: {
                install: function () {
                  this.getView()._animateItem(this, !0);
                },
                uninstall: function () {
                  this.getView()._animateItem(this, !1);
                },
              },
              onLoad: {},
              onError: {},
            },
            statics: { _itemHandlers: t },
          }
        );
      })(),
      {
        initialize: function () {},
        _initialize: function (t, i) {
          var n = t && r.isPlainObject(t),
            s = n && !0 === t.internal,
            a = (this._matrix = new p()),
            o = (n && t.project) || paper.project,
            h = paper.settings;
          return (
            (this._id = s ? null : l.get()),
            (this._parent = this._index = null),
            (this._applyMatrix = this._canApplyMatrix && h.applyMatrix),
            i && a.translate(i),
            (a._owner = this),
            (this._style = new V(o._currentStyle, this, o)),
            s ||
            (n && 0 == t.insert) ||
            (!h.insertItems && (!n || !0 !== t.insert))
              ? this._setProject(o)
              : ((n && t.parent) || o)._insertItem(e, this, !0),
            n &&
              t !== w.NO_INSERT &&
              this.set(t, {
                internal: !0,
                insert: !0,
                project: !0,
                parent: !0,
              }),
            n
          );
        },
        _serialize: function (t, e) {
          function i(i) {
            for (var a in i) {
              var o = s[a];
              r.equals(o, "leading" === a ? 1.2 * i.fontSize : i[a]) ||
                (n[a] = r.serialize(o, t, "data" !== a, e));
            }
          }
          var n = {},
            s = this;
          return (
            i(this._serializeFields),
            this instanceof x || i(this._style._defaults),
            [this._class, n]
          );
        },
        _changed: function (t) {
          var i = this._symbol,
            n = this._parent || i,
            r = this._project;
          8 & t &&
            (this._bounds =
              this._position =
              this._decomposed =
              this._globalMatrix =
                e),
            n && 40 & t && w._clearBoundsCache(n),
            2 & t && w._clearBoundsCache(this),
            r && r._changed(t, this),
            i && i._changed(t);
        },
        getId: function () {
          return this._id;
        },
        getName: function () {
          return this._name;
        },
        setName: function (t) {
          if ((this._name && this._removeNamed(), t === +t + ""))
            throw new Error(
              "Names consisting only of numbers are not supported."
            );
          var i = this._getOwner();
          if (t && i) {
            var n = i._children,
              r = i._namedChildren;
            (r[t] = r[t] || []).push(this), t in n || (n[t] = this);
          }
          (this._name = t || e), this._changed(128);
        },
        getStyle: function () {
          return this._style;
        },
        setStyle: function (t) {
          this.getStyle().set(t);
        },
      },
      r.each(
        ["locked", "visible", "blendMode", "opacity", "guide"],
        function (t) {
          var e = r.capitalize(t),
            i = "_" + t,
            n = { locked: 128, visible: 137 };
          (this["get" + e] = function () {
            return this[i];
          }),
            (this["set" + e] = function (e) {
              e != this[i] && ((this[i] = e), this._changed(n[t] || 129));
            });
        },
        {}
      ),
      {
        beans: !0,
        getSelection: function () {
          return this._selection;
        },
        setSelection: function (t) {
          if (t !== this._selection) {
            this._selection = t;
            var e = this._project;
            e && (e._updateSelection(this), this._changed(129));
          }
        },
        _changeSelection: function (t, e) {
          var i = this._selection;
          this.setSelection(e ? i | t : i & ~t);
        },
        isSelected: function () {
          if (this._selectChildren)
            for (var t = this._children, e = 0, i = t.length; e < i; e++)
              if (t[e].isSelected()) return !0;
          return !!(1 & this._selection);
        },
        setSelected: function (t) {
          if (this._selectChildren)
            for (var e = this._children, i = 0, n = e.length; i < n; i++)
              e[i].setSelected(t);
          this._changeSelection(1, t);
        },
        isFullySelected: function () {
          var t = this._children,
            e = !!(1 & this._selection);
          if (t && e) {
            for (var i = 0, n = t.length; i < n; i++)
              if (!t[i].isFullySelected()) return !1;
            return !0;
          }
          return e;
        },
        setFullySelected: function (t) {
          var e = this._children;
          if (e)
            for (var i = 0, n = e.length; i < n; i++) e[i].setFullySelected(t);
          this._changeSelection(1, t);
        },
        isClipMask: function () {
          return this._clipMask;
        },
        setClipMask: function (t) {
          this._clipMask != (t = !!t) &&
            ((this._clipMask = t),
            t && (this.setFillColor(null), this.setStrokeColor(null)),
            this._changed(129),
            this._parent && this._parent._changed(1024));
        },
        getData: function () {
          return this._data || (this._data = {}), this._data;
        },
        setData: function (t) {
          this._data = t;
        },
        getPosition: function (t) {
          var e = this._position,
            i = t ? c : f;
          if (!e) {
            var n = this._pivot;
            e = this._position = n
              ? this._matrix._transformPoint(n)
              : this.getBounds().getCenter(!0);
          }
          return new i(e.x, e.y, this, "setPosition");
        },
        setPosition: function () {
          this.translate(c.read(arguments).subtract(this.getPosition(!0)));
        },
        getPivot: function () {
          var t = this._pivot;
          return t ? new f(t.x, t.y, this, "setPivot") : null;
        },
        setPivot: function () {
          (this._pivot = c.read(arguments, 0, { clone: !0, readNull: !0 })),
            (this._position = e);
        },
      },
      r.each(
        {
          getStrokeBounds: { stroke: !0 },
          getHandleBounds: { handle: !0 },
          getInternalBounds: { internal: !0 },
        },
        function (t, e) {
          this[e] = function (e) {
            return this.getBounds(e, t);
          };
        },
        {
          beans: !0,
          getBounds: function (t, e) {
            var i = e || t instanceof p,
              n = r.set({}, i ? e : t, this._boundsOptions);
            (n.stroke && !this.getStrokeScaling()) || (n.cacheItem = this);
            var s = this._getCachedBounds(i && t, n).rect;
            return arguments.length
              ? s
              : new v(s.x, s.y, s.width, s.height, this, "setBounds");
          },
          setBounds: function () {
            var t = g.read(arguments),
              e = this.getBounds(),
              i = this._matrix,
              n = new p(),
              r = t.getCenter();
            n.translate(r),
              (t.width == e.width && t.height == e.height) ||
                (i.isInvertible() ||
                  (i.set(i._backup || new p().translate(i.getTranslation())),
                  (e = this.getBounds())),
                n.scale(
                  0 !== e.width ? t.width / e.width : 0,
                  0 !== e.height ? t.height / e.height : 0
                )),
              (r = e.getCenter()),
              n.translate(-r.x, -r.y),
              this.transform(n);
          },
          _getBounds: function (t, e) {
            var i = this._children;
            return i && i.length
              ? (w._updateBoundsCache(this, e.cacheItem), w._getBounds(i, t, e))
              : new g();
          },
          _getBoundsCacheKey: function (t, e) {
            return [t.stroke ? 1 : 0, t.handle ? 1 : 0, e ? 1 : 0].join("");
          },
          _getCachedBounds: function (t, e, i) {
            t = t && t._orNullIfIdentity();
            var n = e.internal && !i,
              r = e.cacheItem,
              s = n ? null : this._matrix._orNullIfIdentity(),
              a = r && (!t || t.equals(s)) && this._getBoundsCacheKey(e, n),
              o = this._bounds;
            if (
              (w._updateBoundsCache(this._parent || this._symbol, r),
              a && o && a in o)
            )
              return {
                rect: (f = o[a]).rect.clone(),
                nonscaling: f.nonscaling,
              };
            var h = this._getBounds(t || s, e),
              u = h.rect || h,
              l = this._style,
              c = h.nonscaling || (l.hasStroke() && !l.getStrokeScaling());
            if (a) {
              o || (this._bounds = o = {});
              var f = (o[a] = { rect: u.clone(), nonscaling: c, internal: n });
            }
            return { rect: u, nonscaling: c };
          },
          _getStrokeMatrix: function (t, e) {
            var i = this.getStrokeScaling()
                ? null
                : e && e.internal
                ? this
                : this._parent || (this._symbol && this._symbol._item),
              n = i ? i.getViewMatrix().invert() : t;
            return n && n._shiftless();
          },
          statics: {
            _updateBoundsCache: function (t, e) {
              if (t && e) {
                var i = e._id,
                  n = (t._boundsCache = t._boundsCache || {
                    ids: {},
                    list: [],
                  });
                n.ids[i] || (n.list.push(e), (n.ids[i] = e));
              }
            },
            _clearBoundsCache: function (t) {
              var i = t._boundsCache;
              if (i) {
                t._bounds = t._position = t._boundsCache = e;
                for (var n = 0, r = i.list, s = r.length; n < s; n++) {
                  var a = r[n];
                  a !== t &&
                    ((a._bounds = a._position = e),
                    a._boundsCache && w._clearBoundsCache(a));
                }
              }
            },
            _getBounds: function (t, e, i) {
              var n = 1 / 0,
                r = -n,
                s = n,
                a = r,
                o = !1;
              i = i || {};
              for (var h = 0, u = t.length; h < u; h++) {
                var l = t[h];
                if (l._visible && !l.isEmpty()) {
                  var c = l._getCachedBounds(e && e.appended(l._matrix), i, !0),
                    f = c.rect;
                  (n = Math.min(f.x, n)),
                    (s = Math.min(f.y, s)),
                    (r = Math.max(f.x + f.width, r)),
                    (a = Math.max(f.y + f.height, a)),
                    c.nonscaling && (o = !0);
                }
              }
              return {
                rect: isFinite(n) ? new g(n, s, r - n, a - s) : new g(),
                nonscaling: o,
              };
            },
          },
        }
      ),
      {
        beans: !0,
        _decompose: function () {
          return this._applyMatrix
            ? null
            : this._decomposed || (this._decomposed = this._matrix.decompose());
        },
        getRotation: function () {
          var t = this._decompose();
          return t ? t.rotation : 0;
        },
        setRotation: function (t) {
          var e = this.getRotation();
          if (null != e && null != t) {
            var i = this._decomposed;
            this.rotate(t - e), i && ((i.rotation = t), (this._decomposed = i));
          }
        },
        getScaling: function () {
          var t = this._decompose(),
            e = t && t.scaling;
          return new f(e ? e.x : 1, e ? e.y : 1, this, "setScaling");
        },
        setScaling: function () {
          var t = this.getScaling(),
            e = c.read(arguments, 0, { clone: !0, readNull: !0 });
          if (t && e && !t.equals(e)) {
            var i = this.getRotation(),
              n = this._decomposed,
              r = new p(),
              s = this.getPosition(!0);
            r.translate(s),
              i && r.rotate(i),
              r.scale(e.x / t.x, e.y / t.y),
              i && r.rotate(-i),
              r.translate(s.negate()),
              this.transform(r),
              n && ((n.scaling = e), (this._decomposed = n));
          }
        },
        getMatrix: function () {
          return this._matrix;
        },
        setMatrix: function () {
          var t = this._matrix;
          t.initialize.apply(t, arguments);
        },
        getGlobalMatrix: function (t) {
          var e = this._globalMatrix,
            i = this._project._updateVersion;
          if ((e && e._updateVersion !== i && (e = null), !e)) {
            e = this._globalMatrix = this._matrix.clone();
            var n = this._parent;
            n && e.prepend(n.getGlobalMatrix(!0)), (e._updateVersion = i);
          }
          return t ? e : e.clone();
        },
        getViewMatrix: function () {
          return this.getGlobalMatrix().prepend(this.getView()._matrix);
        },
        getApplyMatrix: function () {
          return this._applyMatrix;
        },
        setApplyMatrix: function (t) {
          (this._applyMatrix = this._canApplyMatrix && !!t) &&
            this.transform(null, !0);
        },
        getTransformContent: "#getApplyMatrix",
        setTransformContent: "#setApplyMatrix",
      },
      {
        getProject: function () {
          return this._project;
        },
        _setProject: function (t, e) {
          if (this._project !== t) {
            this._project && this._installEvents(!1), (this._project = t);
            for (var i = this._children, n = 0, r = i && i.length; n < r; n++)
              i[n]._setProject(t);
            e = !0;
          }
          e && this._installEvents(!0);
        },
        getView: function () {
          return this._project._view;
        },
        _installEvents: function t(e) {
          t.base.call(this, e);
          for (var i = this._children, n = 0, r = i && i.length; n < r; n++)
            i[n]._installEvents(e);
        },
        getLayer: function () {
          for (var t = this; (t = t._parent); ) if (t instanceof b) return t;
          return null;
        },
        getParent: function () {
          return this._parent;
        },
        setParent: function (t) {
          return t.addChild(this);
        },
        _getOwner: "#getParent",
        getChildren: function () {
          return this._children;
        },
        setChildren: function (t) {
          this.removeChildren(), this.addChildren(t);
        },
        getFirstChild: function () {
          return (this._children && this._children[0]) || null;
        },
        getLastChild: function () {
          return (
            (this._children && this._children[this._children.length - 1]) ||
            null
          );
        },
        getNextSibling: function () {
          var t = this._getOwner();
          return (t && t._children[this._index + 1]) || null;
        },
        getPreviousSibling: function () {
          var t = this._getOwner();
          return (t && t._children[this._index - 1]) || null;
        },
        getIndex: function () {
          return this._index;
        },
        equals: function (t) {
          return (
            t === this ||
            (t &&
              this._class === t._class &&
              this._style.equals(t._style) &&
              this._matrix.equals(t._matrix) &&
              this._locked === t._locked &&
              this._visible === t._visible &&
              this._blendMode === t._blendMode &&
              this._opacity === t._opacity &&
              this._clipMask === t._clipMask &&
              this._guide === t._guide &&
              this._equals(t)) ||
            !1
          );
        },
        _equals: function (t) {
          return r.equals(this._children, t._children);
        },
        clone: function (t) {
          var i = new this.constructor(w.NO_INSERT),
            n = this._children,
            s = r.pick(t ? t.insert : e, t === e || !0 === t),
            a = r.pick(t ? t.deep : e, !0);
          n && i.copyAttributes(this),
            (n && !a) || i.copyContent(this),
            n || i.copyAttributes(this),
            s && i.insertAbove(this);
          var o = this._name,
            h = this._parent;
          if (o && h) {
            for (var n = h._children, u = o, l = 1; n[o]; ) o = u + " " + l++;
            o !== u && i.setName(o);
          }
          return i;
        },
        copyContent: function (t) {
          for (var e = t._children, i = 0, n = e && e.length; i < n; i++)
            this.addChild(e[i].clone(!1), !0);
        },
        copyAttributes: function (t, e) {
          this.setStyle(t._style);
          for (
            var i = [
                "_locked",
                "_visible",
                "_blendMode",
                "_opacity",
                "_clipMask",
                "_guide",
              ],
              n = 0,
              s = i.length;
            n < s;
            n++
          ) {
            var a = i[n];
            t.hasOwnProperty(a) && (this[a] = t[a]);
          }
          e || this._matrix.set(t._matrix, !0),
            this.setApplyMatrix(t._applyMatrix),
            this.setPivot(t._pivot),
            this.setSelection(t._selection);
          var o = t._data,
            h = t._name;
          (this._data = o ? r.clone(o) : null), h && this.setName(h);
        },
        rasterize: function (t, i) {
          var n = this.getStrokeBounds(),
            s = (t || this.getView().getResolution()) / 72,
            a = n.getTopLeft().floor(),
            o = n.getBottomRight().ceil(),
            h = new d(o.subtract(a)),
            u = new S(w.NO_INSERT);
          if (!h.isZero()) {
            var l = Q.getCanvas(h.multiply(s)),
              c = l.getContext("2d"),
              f = new p().scale(s).translate(a.negate());
            c.save(),
              f.applyToContext(c),
              this.draw(c, new r({ matrices: [f] })),
              c.restore(),
              u.setCanvas(l);
          }
          return (
            u.transform(new p().translate(a.add(h.divide(2))).scale(1 / s)),
            (i === e || i) && u.insertAbove(this),
            u
          );
        },
        contains: function () {
          return !!this._contains(
            this._matrix._inverseTransform(c.read(arguments))
          );
        },
        _contains: function (t) {
          var e = this._children;
          if (e) {
            for (var i = e.length - 1; i >= 0; i--)
              if (e[i].contains(t)) return !0;
            return !1;
          }
          return t.isInside(this.getInternalBounds());
        },
        isInside: function () {
          return g.read(arguments).contains(this.getBounds());
        },
        _asPathItem: function () {
          return new L.Rectangle({
            rectangle: this.getInternalBounds(),
            matrix: this._matrix,
            insert: !1,
          });
        },
        intersects: function (t, e) {
          return (
            t instanceof w &&
            this._asPathItem().getIntersections(t._asPathItem(), null, e, !0)
              .length > 0
          );
        },
      },
      new (function () {
        function t() {
          return this._hitTest(c.read(arguments), M.getOptions(arguments));
        }
        function e() {
          var t = c.read(arguments),
            e = M.getOptions(arguments),
            i = [];
          return this._hitTest(t, r.set({ all: i }, e)), i;
        }
        function i(t, e, i, n) {
          var r = this._children;
          if (r)
            for (var s = r.length - 1; s >= 0; s--) {
              var a = r[s],
                o = a !== n && a._hitTest(t, e, i);
              if (o && !e.all) return o;
            }
          return null;
        }
        return (
          y.inject({ hitTest: t, hitTestAll: e, _hitTest: i }),
          { hitTest: t, hitTestAll: e, _hitTestChildren: i }
        );
      })(),
      {
        _hitTest: function (t, e, i) {
          function n(t) {
            return (
              t && _ && !_(t) && (t = null), t && e.all && e.all.push(t), t
            );
          }
          function s(e, i) {
            var n = i ? l["get" + i]() : g.getPosition();
            if (t.subtract(n).divide(u).length <= 1)
              return new M(e, g, { name: i ? r.hyphenate(i) : e, point: n });
          }
          if (
            this._locked ||
            !this._visible ||
            (this._guide && !e.guides) ||
            this.isEmpty()
          )
            return null;
          var a = this._matrix,
            o = i
              ? i.appended(a)
              : this.getGlobalMatrix().prepend(this.getView()._matrix),
            h = Math.max(e.tolerance, 1e-12),
            u = (e._tolerancePadding = new d(
              L._getStrokePadding(h, a._shiftless().invert())
            ));
          if (
            !(t = a._inverseTransform(t)) ||
            (!this._children &&
              !this.getBounds({ internal: !0, stroke: !0, handle: !0 })
                .expand(u.multiply(2))
                ._containsPoint(t))
          )
            return null;
          var l,
            c,
            f = !(
              (e.guides && !this._guide) ||
              (e.selected && !this.isSelected()) ||
              (e.type && e.type !== r.hyphenate(this._class)) ||
              (e.class && !(this instanceof e.class))
            ),
            _ = e.match,
            g = this,
            v = e.position,
            p = e.center,
            m = e.bounds;
          if (f && this._parent && (v || p || m)) {
            if (
              ((p || m) && (l = this.getInternalBounds()),
              !(c = (v && s("position")) || (p && s("center", "Center"))) && m)
            )
              for (
                var y = [
                    "TopLeft",
                    "TopRight",
                    "BottomLeft",
                    "BottomRight",
                    "LeftCenter",
                    "TopCenter",
                    "RightCenter",
                    "BottomCenter",
                  ],
                  w = 0;
                w < 8 && !c;
                w++
              )
                c = s("bounds", y[w]);
            c = n(c);
          }
          return (
            c ||
              (c =
                this._hitTestChildren(t, e, o) ||
                (f &&
                  n(
                    this._hitTestSelf(
                      t,
                      e,
                      o,
                      this.getStrokeScaling() ? null : o._shiftless().invert()
                    )
                  )) ||
                null),
            c && c.point && (c.point = a.transform(c.point)),
            c
          );
        },
        _hitTestSelf: function (t, e) {
          if (e.fill && this.hasFill() && this._contains(t))
            return new M("fill", this);
        },
        matches: function (t, e) {
          function i(t, e) {
            for (var n in t)
              if (t.hasOwnProperty(n)) {
                var s = t[n],
                  a = e[n];
                if (r.isPlainObject(s) && r.isPlainObject(a)) {
                  if (!i(s, a)) return !1;
                } else if (!r.equals(s, a)) return !1;
              }
            return !0;
          }
          var n = typeof t;
          if ("object" === n) {
            for (var s in t)
              if (t.hasOwnProperty(s) && !this.matches(s, t[s])) return !1;
            return !0;
          }
          if ("function" === n) return t(this);
          if ("match" === t) return e(this);
          var a = /^(empty|editable)$/.test(t)
            ? this["is" + r.capitalize(t)]()
            : "type" === t
            ? r.hyphenate(this._class)
            : this[t];
          if ("class" === t) {
            if ("function" == typeof e) return this instanceof e;
            a = this._class;
          }
          if ("function" == typeof e) return !!e(a);
          if (e) {
            if (e.test) return e.test(a);
            if (r.isPlainObject(e)) return i(e, a);
          }
          return r.equals(a, e);
        },
        getItems: function (t) {
          return w._getItems(this, t, this._matrix);
        },
        getItem: function (t) {
          return w._getItems(this, t, this._matrix, null, !0)[0] || null;
        },
        statics: {
          _getItems: function t(e, i, n, s, a) {
            if (!s) {
              var o = "object" == typeof i && i,
                h = o && o.overlapping,
                u = o && o.inside,
                l = (w = h || u) && g.read([w]);
              (s = {
                items: [],
                recursive: o && !1 !== o.recursive,
                inside: !!u,
                overlapping: !!h,
                rect: l,
                path: h && new L.Rectangle({ rectangle: l, insert: !1 }),
              }),
                o &&
                  (i = r.filter({}, i, {
                    recursive: !0,
                    inside: !0,
                    overlapping: !0,
                  }));
            }
            var c = e._children,
              f = s.items;
            n = (l = s.rect) && (n || new p());
            for (var d = 0, _ = c && c.length; d < _; d++) {
              var v = c[d],
                m = n && n.appended(v._matrix),
                y = !0;
              if (l) {
                var w = v.getBounds(m);
                if (!l.intersects(w)) continue;
                l.contains(w) ||
                  (s.overlapping &&
                    (w.contains(l) || s.path.intersects(v, m))) ||
                  (y = !1);
              }
              if (y && v.matches(i) && (f.push(v), a)) break;
              if ((!1 !== s.recursive && t(v, i, m, s, a), a && f.length > 0))
                break;
            }
            return f;
          },
        },
      },
      {
        importJSON: function (t) {
          var e = r.importJSON(t, this);
          return e !== this ? this.addChild(e) : e;
        },
        addChild: function (t) {
          return this.insertChild(e, t);
        },
        insertChild: function (t, e) {
          var i = e ? this.insertChildren(t, [e]) : null;
          return i && i[0];
        },
        addChildren: function (t) {
          return this.insertChildren(this._children.length, t);
        },
        insertChildren: function (t, e) {
          var i = this._children;
          if (i && e && e.length > 0) {
            for (var n = {}, s = (e = r.slice(e)).length - 1; s >= 0; s--) {
              var a = (l = e[s]) && l._id;
              !l || n[a] ? e.splice(s, 1) : (l._remove(!1, !0), (n[a] = !0));
            }
            r.splice(i, e, t, 0);
            for (
              var o = this._project, h = o._changes, s = 0, u = e.length;
              s < u;
              s++
            ) {
              var l = e[s],
                c = l._name;
              (l._parent = this),
                l._setProject(o, !0),
                c && l.setName(c),
                h && l._changed(5);
            }
            this._changed(11);
          } else e = null;
          return e;
        },
        _insertItem: "#insertChild",
        _insertAt: function (t, e) {
          var i = t && t._getOwner(),
            n = t !== this && i ? this : null;
          return n && (n._remove(!1, !0), i._insertItem(t._index + e, n)), n;
        },
        insertAbove: function (t) {
          return this._insertAt(t, 1);
        },
        insertBelow: function (t) {
          return this._insertAt(t, 0);
        },
        sendToBack: function () {
          var t = this._getOwner();
          return t ? t._insertItem(0, this) : null;
        },
        bringToFront: function () {
          var t = this._getOwner();
          return t ? t._insertItem(e, this) : null;
        },
        appendTop: "#addChild",
        appendBottom: function (t) {
          return this.insertChild(0, t);
        },
        moveAbove: "#insertAbove",
        moveBelow: "#insertBelow",
        addTo: function (t) {
          return t._insertItem(e, this);
        },
        copyTo: function (t) {
          return this.clone(!1).addTo(t);
        },
        reduce: function (t) {
          var e = this._children;
          if (e && 1 === e.length) {
            var i = e[0].reduce(t);
            return (
              this._parent ? (i.insertAbove(this), this.remove()) : i.remove(),
              i
            );
          }
          return this;
        },
        _removeNamed: function () {
          var t = this._getOwner();
          if (t) {
            var e = t._children,
              i = t._namedChildren,
              n = this._name,
              r = i[n],
              s = r ? r.indexOf(this) : -1;
            -1 !== s &&
              (e[n] == this && delete e[n],
              r.splice(s, 1),
              r.length ? (e[n] = r[0]) : delete i[n]);
          }
        },
        _remove: function (t, e) {
          var i = this._getOwner(),
            n = this._project,
            s = this._index;
          return (
            !!i &&
            (this._name && this._removeNamed(),
            null != s &&
              (n._activeLayer === this &&
                (n._activeLayer =
                  this.getNextSibling() || this.getPreviousSibling()),
              r.splice(i._children, null, s, 1)),
            this._installEvents(!1),
            t && n._changes && this._changed(5),
            e && i._changed(11, this),
            (this._parent = null),
            !0)
          );
        },
        remove: function () {
          return this._remove(!0, !0);
        },
        replaceWith: function (t) {
          var e = t && t.insertBelow(this);
          return e && this.remove(), e;
        },
        removeChildren: function (t, e) {
          if (!this._children) return null;
          (t = t || 0), (e = r.pick(e, this._children.length));
          for (
            var i = r.splice(this._children, null, t, e - t), n = i.length - 1;
            n >= 0;
            n--
          )
            i[n]._remove(!0, !1);
          return i.length > 0 && this._changed(11), i;
        },
        clear: "#removeChildren",
        reverseChildren: function () {
          if (this._children) {
            this._children.reverse();
            for (var t = 0, e = this._children.length; t < e; t++)
              this._children[t]._index = t;
            this._changed(11);
          }
        },
        isEmpty: function () {
          var t = this._children;
          return !t || !t.length;
        },
        isEditable: function () {
          for (var t = this; t; ) {
            if (!t._visible || t._locked) return !1;
            t = t._parent;
          }
          return !0;
        },
        hasFill: function () {
          return this.getStyle().hasFill();
        },
        hasStroke: function () {
          return this.getStyle().hasStroke();
        },
        hasShadow: function () {
          return this.getStyle().hasShadow();
        },
        _getOrder: function (t) {
          function e(t) {
            var e = [];
            do {
              e.unshift(t);
            } while ((t = t._parent));
            return e;
          }
          for (
            var i = e(this), n = e(t), r = 0, s = Math.min(i.length, n.length);
            r < s;
            r++
          )
            if (i[r] != n[r]) return i[r]._index < n[r]._index ? 1 : -1;
          return 0;
        },
        hasChildren: function () {
          return this._children && this._children.length > 0;
        },
        isInserted: function () {
          return !!this._parent && this._parent.isInserted();
        },
        isAbove: function (t) {
          return -1 === this._getOrder(t);
        },
        isBelow: function (t) {
          return 1 === this._getOrder(t);
        },
        isParent: function (t) {
          return this._parent === t;
        },
        isChild: function (t) {
          return t && t._parent === this;
        },
        isDescendant: function (t) {
          for (var e = this; (e = e._parent); ) if (e === t) return !0;
          return !1;
        },
        isAncestor: function (t) {
          return !!t && t.isDescendant(this);
        },
        isSibling: function (t) {
          return this._parent === t._parent;
        },
        isGroupedWith: function (t) {
          for (var e = this._parent; e; ) {
            if (
              e._parent &&
              /^(Group|Layer|CompoundPath)$/.test(e._class) &&
              t.isDescendant(e)
            )
              return !0;
            e = e._parent;
          }
          return !1;
        },
      },
      r.each(
        ["rotate", "scale", "shear", "skew"],
        function (t) {
          var e = "rotate" === t;
          this[t] = function () {
            var i = (e ? r : c).read(arguments),
              n = c.read(arguments, 0, { readNull: !0 });
            return this.transform(new p()[t](i, n || this.getPosition(!0)));
          };
        },
        {
          translate: function () {
            var t = new p();
            return this.transform(t.translate.apply(t, arguments));
          },
          transform: function (t, e, i, n) {
            var r = this._matrix,
              s = t && !t.isIdentity(),
              a =
                (e || this._applyMatrix) &&
                (!r.isIdentity() || s || (e && i && this._children));
            if (!s && !a) return this;
            if (s) {
              !t.isInvertible() &&
                r.isInvertible() &&
                (r._backup = r.getValues()),
                r.prepend(t, !0);
              var o = this._style,
                h = o.getFillColor(!0),
                u = o.getStrokeColor(!0);
              h && h.transform(t), u && u.transform(t);
            }
            if (a && (a = this._transformContent(r, i, n))) {
              var l = this._pivot;
              l && r._transformPoint(l, l, !0),
                r.reset(!0),
                n && this._canApplyMatrix && (this._applyMatrix = !0);
            }
            var c = this._bounds,
              f = this._position;
            (s || a) && this._changed(9);
            var d = s && c && t.decompose();
            if (d && d.skewing.isZero() && d.rotation % 90 == 0) {
              for (var _ in c) {
                var g = c[_];
                if (g.nonscaling) delete c[_];
                else if (a || !g.internal) {
                  var v = g.rect;
                  t._transformBounds(v, v);
                }
              }
              this._bounds = c;
              var p = c[this._getBoundsCacheKey(this._boundsOptions || {})];
              p && (this._position = p.rect.getCenter(!0));
            } else
              s &&
                f &&
                this._pivot &&
                (this._position = t._transformPoint(f, f));
            return this;
          },
          _transformContent: function (t, e, i) {
            var n = this._children;
            if (n) {
              for (var r = 0, s = n.length; r < s; r++)
                n[r].transform(t, !0, e, i);
              return !0;
            }
          },
          globalToLocal: function () {
            return this.getGlobalMatrix(!0)._inverseTransform(
              c.read(arguments)
            );
          },
          localToGlobal: function () {
            return this.getGlobalMatrix(!0)._transformPoint(c.read(arguments));
          },
          parentToLocal: function () {
            return this._matrix._inverseTransform(c.read(arguments));
          },
          localToParent: function () {
            return this._matrix._transformPoint(c.read(arguments));
          },
          fitBounds: function (t, e) {
            t = g.read(arguments);
            var i = this.getBounds(),
              n = i.height / i.width,
              r = t.height / t.width,
              s = (e ? n > r : n < r) ? t.width / i.width : t.height / i.height,
              a = new g(new c(), new d(i.width * s, i.height * s));
            a.setCenter(t.getCenter()), this.setBounds(a);
          },
        }
      ),
      {
        _setStyles: function (t, e, i) {
          var n = this._style,
            r = this._matrix;
          if (
            (n.hasFill() &&
              (t.fillStyle = n.getFillColor().toCanvasStyle(t, r)),
            n.hasStroke())
          ) {
            (t.strokeStyle = n.getStrokeColor().toCanvasStyle(t, r)),
              (t.lineWidth = n.getStrokeWidth());
            var s = n.getStrokeJoin(),
              a = n.getStrokeCap(),
              o = n.getMiterLimit();
            if (
              (s && (t.lineJoin = s),
              a && (t.lineCap = a),
              o && (t.miterLimit = o),
              paper.support.nativeDash)
            ) {
              var h = n.getDashArray(),
                u = n.getDashOffset();
              h &&
                h.length &&
                ("setLineDash" in t
                  ? (t.setLineDash(h), (t.lineDashOffset = u))
                  : ((t.mozDash = h), (t.mozDashOffset = u)));
            }
          }
          if (n.hasShadow()) {
            var l = e.pixelRatio || 1,
              f = i._shiftless().prepend(new p().scale(l, l)),
              d = f.transform(new c(n.getShadowBlur(), 0)),
              _ = f.transform(this.getShadowOffset());
            (t.shadowColor = n.getShadowColor().toCanvasStyle(t)),
              (t.shadowBlur = d.getLength()),
              (t.shadowOffsetX = _.x),
              (t.shadowOffsetY = _.y);
          }
        },
        draw: function (t, e, i) {
          var n = (this._updateVersion = this._project._updateVersion);
          if (this._visible && 0 !== this._opacity) {
            var r = e.matrices,
              s = e.viewMatrix,
              a = this._matrix,
              o = r[r.length - 1].appended(a);
            if (o.isInvertible()) {
              (s = s ? s.appended(o) : o),
                r.push(o),
                e.updateMatrix &&
                  ((o._updateVersion = n), (this._globalMatrix = o));
              var h,
                u,
                l,
                c = this._blendMode,
                f = this._opacity,
                d = "normal" === c,
                _ = tt.nativeModes[c],
                g =
                  (d && 1 === f) ||
                  e.dontStart ||
                  e.clip ||
                  ((_ || (d && f < 1)) && this._canComposite()),
                v = e.pixelRatio || 1;
              if (!g) {
                var p = this.getStrokeBounds(s);
                if (!p.width || !p.height) return;
                (l = e.offset),
                  (u = e.offset = p.getTopLeft().floor()),
                  (h = t),
                  (t = Q.getContext(p.getSize().ceil().add(1).multiply(v))),
                  1 !== v && t.scale(v, v);
              }
              t.save();
              var m = i
                  ? i.appended(a)
                  : this._canScaleStroke && !this.getStrokeScaling(!0) && s,
                y = !g && e.clipItem,
                w = !m || y;
              if (
                (g
                  ? ((t.globalAlpha = f), _ && (t.globalCompositeOperation = c))
                  : w && t.translate(-u.x, -u.y),
                w && (g ? a : s).applyToContext(t),
                y && e.clipItem.draw(t, e.extend({ clip: !0 })),
                m)
              ) {
                t.setTransform(v, 0, 0, v, 0, 0);
                var x = e.offset;
                x && t.translate(-x.x, -x.y);
              }
              this._draw(t, e, s, m),
                t.restore(),
                r.pop(),
                e.clip && !e.dontFinish && t.clip(),
                g ||
                  (tt.process(c, t, h, f, u.subtract(l).multiply(v)),
                  Q.release(t),
                  (e.offset = l));
            }
          }
        },
        _isUpdated: function (t) {
          var e = this._parent;
          if (e instanceof N) return e._isUpdated(t);
          var i = this._updateVersion === t;
          return (
            !i &&
              e &&
              e._visible &&
              e._isUpdated(t) &&
              ((this._updateVersion = t), (i = !0)),
            i
          );
        },
        _drawSelection: function (t, e, i, n, r) {
          var s = this._selection,
            a = 1 & s,
            o = 2 & s || (a && this._selectBounds),
            h = 4 & s;
          if (
            (this._drawSelected || (a = !1),
            (a || o || h) && this._isUpdated(r))
          ) {
            var u,
              l =
                this.getSelectedColor(!0) ||
                ((u = this.getLayer()) && u.getSelectedColor(!0)),
              c = e.appended(this.getGlobalMatrix(!0)),
              f = i / 2;
            if (
              ((t.strokeStyle = t.fillStyle =
                l ? l.toCanvasStyle(t) : "#009dec"),
              a && this._drawSelected(t, c, n),
              h)
            ) {
              var d = this.getPosition(!0),
                _ = d.x,
                g = d.y;
              t.beginPath(), t.arc(_, g, f, 0, 2 * Math.PI, !0), t.stroke();
              for (
                var v = [
                    [0, -1],
                    [1, 0],
                    [0, 1],
                    [-1, 0],
                  ],
                  p = f,
                  m = i + 1,
                  y = 0;
                y < 4;
                y++
              ) {
                var w = v[y],
                  x = w[0],
                  b = w[1];
                t.moveTo(_ + x * p, g + b * p),
                  t.lineTo(_ + x * m, g + b * m),
                  t.stroke();
              }
            }
            if (o) {
              var C = c._transformCorners(this.getInternalBounds());
              t.beginPath();
              for (y = 0; y < 8; y++) t[y ? "lineTo" : "moveTo"](C[y], C[++y]);
              t.closePath(), t.stroke();
              for (y = 0; y < 8; y++) t.fillRect(C[y] - f, C[++y] - f, i, i);
            }
          }
        },
        _canComposite: function () {
          return !1;
        },
      },
      r.each(
        ["down", "drag", "up", "move"],
        function (t) {
          this["removeOn" + r.capitalize(t)] = function () {
            var e = {};
            return (e[t] = !0), this.removeOn(e);
          };
        },
        {
          removeOn: function (t) {
            for (var e in t)
              if (t[e]) {
                var i = "mouse" + e,
                  n = this._project,
                  r = (n._removeSets = n._removeSets || {});
                (r[i] = r[i] || {}), (r[i][this._id] = this);
              }
            return this;
          },
        }
      )
    ),
    x = w.extend({
      _class: "Group",
      _selectBounds: !1,
      _selectChildren: !0,
      _serializeFields: { children: [] },
      initialize: function (t) {
        (this._children = []),
          (this._namedChildren = {}),
          this._initialize(t) ||
            this.addChildren(Array.isArray(t) ? t : arguments);
      },
      _changed: function t(i) {
        t.base.call(this, i), 1026 & i && (this._clipItem = e);
      },
      _getClipItem: function () {
        var t = this._clipItem;
        if (t === e) {
          t = null;
          for (var i = this._children, n = 0, r = i.length; n < r; n++)
            if (i[n]._clipMask) {
              t = i[n];
              break;
            }
          this._clipItem = t;
        }
        return t;
      },
      isClipped: function () {
        return !!this._getClipItem();
      },
      setClipped: function (t) {
        var e = this.getFirstChild();
        e && e.setClipMask(t);
      },
      _getBounds: function t(e, i) {
        var n = this._getClipItem();
        return n
          ? n._getCachedBounds(
              e && e.appended(n._matrix),
              r.set({}, i, { stroke: !1 })
            )
          : t.base.call(this, e, i);
      },
      _hitTestChildren: function t(e, i, n) {
        var r = this._getClipItem();
        return (!r || r.contains(e)) && t.base.call(this, e, i, n, r);
      },
      _draw: function (t, e) {
        var i = e.clip,
          n = !i && this._getClipItem();
        (e = e.extend({ clipItem: n, clip: !1 })),
          i
            ? (t.beginPath(), (e.dontStart = e.dontFinish = !0))
            : n && n.draw(t, e.extend({ clip: !0 }));
        for (var r = this._children, s = 0, a = r.length; s < a; s++) {
          var o = r[s];
          o !== n && o.draw(t, e);
        }
      },
    }),
    b = x.extend({
      _class: "Layer",
      initialize: function () {
        x.apply(this, arguments);
      },
      _getOwner: function () {
        return this._parent || (null != this._index && this._project);
      },
      isInserted: function t() {
        return this._parent ? t.base.call(this) : null != this._index;
      },
      activate: function () {
        this._project._activeLayer = this;
      },
      _hitTestSelf: function () {},
    }),
    C = w.extend(
      {
        _class: "Shape",
        _applyMatrix: !1,
        _canApplyMatrix: !1,
        _canScaleStroke: !0,
        _serializeFields: { type: null, size: null, radius: null },
        initialize: function (t, e) {
          this._initialize(t, e);
        },
        _equals: function (t) {
          return (
            this._type === t._type &&
            this._size.equals(t._size) &&
            r.equals(this._radius, t._radius)
          );
        },
        copyContent: function (t) {
          this.setType(t._type),
            this.setSize(t._size),
            this.setRadius(t._radius);
        },
        getType: function () {
          return this._type;
        },
        setType: function (t) {
          this._type = t;
        },
        getShape: "#getType",
        setShape: "#setType",
        getSize: function () {
          var t = this._size;
          return new _(t.width, t.height, this, "setSize");
        },
        setSize: function () {
          var t = d.read(arguments);
          if (this._size) {
            if (!this._size.equals(t)) {
              var e = this._type,
                i = t.width,
                n = t.height;
              "rectangle" === e
                ? this._radius.set(d.min(this._radius, t.divide(2)))
                : "circle" === e
                ? ((i = n = (i + n) / 2), (this._radius = i / 2))
                : "ellipse" === e && this._radius._set(i / 2, n / 2),
                this._size._set(i, n),
                this._changed(9);
            }
          } else this._size = t.clone();
        },
        getRadius: function () {
          var t = this._radius;
          return "circle" === this._type
            ? t
            : new _(t.width, t.height, this, "setRadius");
        },
        setRadius: function (t) {
          var e = this._type;
          if ("circle" === e) {
            if (t === this._radius) return;
            i = 2 * t;
            (this._radius = t), this._size._set(i, i);
          } else if (((t = d.read(arguments)), this._radius)) {
            if (this._radius.equals(t)) return;
            if ((this._radius.set(t), "rectangle" === e)) {
              var i = d.max(this._size, t.multiply(2));
              this._size.set(i);
            } else
              "ellipse" === e && this._size._set(2 * t.width, 2 * t.height);
          } else this._radius = t.clone();
          this._changed(9);
        },
        isEmpty: function () {
          return !1;
        },
        toPath: function (t) {
          var i = new L[r.capitalize(this._type)]({
            center: new c(),
            size: this._size,
            radius: this._radius,
            insert: !1,
          });
          return (
            i.copyAttributes(this),
            paper.settings.applyMatrix && i.setApplyMatrix(!0),
            (t === e || t) && i.insertAbove(this),
            i
          );
        },
        toShape: "#clone",
        _asPathItem: function () {
          return this.toPath(!1);
        },
        _draw: function (t, e, i, n) {
          var r = this._style,
            s = r.hasFill(),
            a = r.hasStroke(),
            o = e.dontFinish || e.clip,
            h = !n;
          if (s || a || o) {
            var u = this._type,
              l = this._radius,
              c = "circle" === u;
            if ((e.dontStart || t.beginPath(), h && c))
              t.arc(0, 0, l, 0, 2 * Math.PI, !0);
            else {
              var f = c ? l : l.width,
                d = c ? l : l.height,
                _ = this._size,
                g = _.width,
                v = _.height;
              if (h && "rectangle" === u && 0 === f && 0 === d)
                t.rect(-g / 2, -v / 2, g, v);
              else {
                var p = g / 2,
                  m = v / 2,
                  y = 0.44771525016920644,
                  w = f * y,
                  x = d * y,
                  b = [
                    -p,
                    -m + d,
                    -p,
                    -m + x,
                    -p + w,
                    -m,
                    -p + f,
                    -m,
                    p - f,
                    -m,
                    p - w,
                    -m,
                    p,
                    -m + x,
                    p,
                    -m + d,
                    p,
                    m - d,
                    p,
                    m - x,
                    p - w,
                    m,
                    p - f,
                    m,
                    -p + f,
                    m,
                    -p + w,
                    m,
                    -p,
                    m - x,
                    -p,
                    m - d,
                  ];
                n && n.transform(b, b, 32),
                  t.moveTo(b[0], b[1]),
                  t.bezierCurveTo(b[2], b[3], b[4], b[5], b[6], b[7]),
                  p !== f && t.lineTo(b[8], b[9]),
                  t.bezierCurveTo(b[10], b[11], b[12], b[13], b[14], b[15]),
                  m !== d && t.lineTo(b[16], b[17]),
                  t.bezierCurveTo(b[18], b[19], b[20], b[21], b[22], b[23]),
                  p !== f && t.lineTo(b[24], b[25]),
                  t.bezierCurveTo(b[26], b[27], b[28], b[29], b[30], b[31]);
              }
            }
            t.closePath();
          }
          o ||
            (!s && !a) ||
            (this._setStyles(t, e, i),
            s && (t.fill(r.getFillRule()), (t.shadowColor = "rgba(0,0,0,0)")),
            a && t.stroke());
        },
        _canComposite: function () {
          return !(this.hasFill() && this.hasStroke());
        },
        _getBounds: function (t, e) {
          var i = new g(this._size).setCenter(0, 0),
            n = this._style,
            r = e.stroke && n.hasStroke() && n.getStrokeWidth();
          return (
            t && (i = t._transformBounds(i)),
            r
              ? i.expand(L._getStrokePadding(r, this._getStrokeMatrix(t, e)))
              : i
          );
        },
      },
      new (function () {
        function t(t, e, i) {
          var n = t._radius;
          if (!n.isZero())
            for (var r = t._size.divide(2), s = 1; s <= 4; s++) {
              var a = new c(s > 1 && s < 4 ? -1 : 1, s > 2 ? -1 : 1),
                o = a.multiply(r),
                h = o.subtract(a.multiply(n));
              if (new g(i ? o.add(a.multiply(i)) : o, h).contains(e))
                return { point: h, quadrant: s };
            }
        }
        function e(t, e, i, n) {
          var r = t.divide(e);
          return (
            (!n || r.isInQuadrant(n)) &&
            r.subtract(r.normalize()).multiply(e).divide(i).length <= 1
          );
        }
        return {
          _contains: function e(i) {
            if ("rectangle" === this._type) {
              var n = t(this, i);
              return n
                ? i.subtract(n.point).divide(this._radius).getLength() <= 1
                : e.base.call(this, i);
            }
            return i.divide(this.size).getLength() <= 0.5;
          },
          _hitTestSelf: function i(n, r, s, a) {
            var o = !1,
              h = this._style,
              u = r.stroke && h.hasStroke(),
              l = r.fill && h.hasFill();
            if (u || l) {
              var c = this._type,
                f = this._radius,
                d = u ? h.getStrokeWidth() / 2 : 0,
                _ = r._tolerancePadding.add(
                  L._getStrokePadding(d, !h.getStrokeScaling() && a)
                );
              if ("rectangle" === c) {
                var v = _.multiply(2),
                  p = t(this, n, v);
                if (p) o = e(n.subtract(p.point), f, _, p.quadrant);
                else {
                  var m = new g(this._size).setCenter(0, 0),
                    y = m.expand(v),
                    w = m.expand(v.negate());
                  o = y._containsPoint(n) && !w._containsPoint(n);
                }
              } else o = e(n, f, _);
            }
            return o
              ? new M(u ? "stroke" : "fill", this)
              : i.base.apply(this, arguments);
          },
        };
      })(),
      {
        statics: new (function () {
          function t(t, e, i, n, s) {
            var a = new C(r.getNamed(s), e);
            return (a._type = t), (a._size = i), (a._radius = n), a;
          }
          return {
            Circle: function () {
              var e = c.readNamed(arguments, "center"),
                i = r.readNamed(arguments, "radius");
              return t("circle", e, new d(2 * i), i, arguments);
            },
            Rectangle: function () {
              var e = g.readNamed(arguments, "rectangle"),
                i = d.min(
                  d.readNamed(arguments, "radius"),
                  e.getSize(!0).divide(2)
                );
              return t(
                "rectangle",
                e.getCenter(!0),
                e.getSize(!0),
                i,
                arguments
              );
            },
            Ellipse: function () {
              var e = C._readEllipse(arguments),
                i = e.radius;
              return t("ellipse", e.center, i.multiply(2), i, arguments);
            },
            _readEllipse: function (t) {
              var e, i;
              if (r.hasNamed(t, "radius"))
                (e = c.readNamed(t, "center")), (i = d.readNamed(t, "radius"));
              else {
                var n = g.readNamed(t, "rectangle");
                (e = n.getCenter(!0)), (i = n.getSize(!0).divide(2));
              }
              return { center: e, radius: i };
            },
          };
        })(),
      }
    ),
    S = w.extend(
      {
        _class: "Raster",
        _applyMatrix: !1,
        _canApplyMatrix: !1,
        _boundsOptions: { stroke: !1, handle: !1 },
        _serializeFields: { crossOrigin: null, source: null },
        _prioritize: ["crossOrigin"],
        initialize: function (t, i) {
          if (!this._initialize(t, i !== e && c.read(arguments, 1))) {
            var r = "string" == typeof t ? n.getElementById(t) : t;
            r ? this.setImage(r) : this.setSource(t);
          }
          this._size || ((this._size = new d()), (this._loaded = !1));
        },
        _equals: function (t) {
          return this.getSource() === t.getSource();
        },
        copyContent: function (t) {
          var e = t._image,
            i = t._canvas;
          if (e) this._setImage(e);
          else if (i) {
            var n = Q.getCanvas(t._size);
            n.getContext("2d").drawImage(i, 0, 0), this._setImage(n);
          }
          this._crossOrigin = t._crossOrigin;
        },
        getSize: function () {
          var t = this._size;
          return new _(t ? t.width : 0, t ? t.height : 0, this, "setSize");
        },
        setSize: function () {
          var t = d.read(arguments);
          if (!t.equals(this._size))
            if (t.width > 0 && t.height > 0) {
              var e = this.getElement();
              this._setImage(Q.getCanvas(t)),
                e && this.getContext(!0).drawImage(e, 0, 0, t.width, t.height);
            } else
              this._canvas && Q.release(this._canvas), (this._size = t.clone());
        },
        getWidth: function () {
          return this._size ? this._size.width : 0;
        },
        setWidth: function (t) {
          this.setSize(t, this.getHeight());
        },
        getHeight: function () {
          return this._size ? this._size.height : 0;
        },
        setHeight: function (t) {
          this.setSize(this.getWidth(), t);
        },
        getLoaded: function () {
          return this._loaded;
        },
        isEmpty: function () {
          var t = this._size;
          return !t || (0 === t.width && 0 === t.height);
        },
        getResolution: function () {
          var t = this._matrix,
            e = new c(0, 0).transform(t),
            i = new c(1, 0).transform(t).subtract(e),
            n = new c(0, 1).transform(t).subtract(e);
          return new d(72 / i.getLength(), 72 / n.getLength());
        },
        getPpi: "#getResolution",
        getImage: function () {
          return this._image;
        },
        setImage: function (t) {
          function e(t) {
            var e = i.getView(),
              n = (t && t.type) || "load";
            e && i.responds(n) && ((paper = e._scope), i.emit(n, new G(t)));
          }
          var i = this;
          this._setImage(t),
            this._loaded
              ? setTimeout(e, 0)
              : t &&
                Z.add(t, {
                  load: function (n) {
                    i._setImage(t), e(n);
                  },
                  error: e,
                });
        },
        _setImage: function (t) {
          this._canvas && Q.release(this._canvas),
            t && t.getContext
              ? ((this._image = null), (this._canvas = t), (this._loaded = !0))
              : ((this._image = t),
                (this._canvas = null),
                (this._loaded = !!(t && t.src && t.complete))),
            (this._size = new d(
              t ? t.naturalWidth || t.width : 0,
              t ? t.naturalHeight || t.height : 0
            )),
            (this._context = null),
            this._changed(521);
        },
        getCanvas: function () {
          if (!this._canvas) {
            var t = Q.getContext(this._size);
            try {
              this._image && t.drawImage(this._image, 0, 0),
                (this._canvas = t.canvas);
            } catch (e) {
              Q.release(t);
            }
          }
          return this._canvas;
        },
        setCanvas: "#setImage",
        getContext: function (t) {
          return (
            this._context ||
              (this._context = this.getCanvas().getContext("2d")),
            t && ((this._image = null), this._changed(513)),
            this._context
          );
        },
        setContext: function (t) {
          this._context = t;
        },
        getSource: function () {
          var t = this._image;
          return (t && t.src) || this.toDataURL();
        },
        setSource: function (e) {
          var i = new t.Image(),
            n = this._crossOrigin;
          n && (i.crossOrigin = n), (i.src = e), this.setImage(i);
        },
        getCrossOrigin: function () {
          var t = this._image;
          return (t && t.crossOrigin) || this._crossOrigin || "";
        },
        setCrossOrigin: function (t) {
          this._crossOrigin = t;
          var e = this._image;
          e && (e.crossOrigin = t);
        },
        getElement: function () {
          return this._canvas || (this._loaded && this._image);
        },
      },
      {
        beans: !1,
        getSubCanvas: function () {
          var t = g.read(arguments),
            e = Q.getContext(t.getSize());
          return (
            e.drawImage(
              this.getCanvas(),
              t.x,
              t.y,
              t.width,
              t.height,
              0,
              0,
              t.width,
              t.height
            ),
            e.canvas
          );
        },
        getSubRaster: function () {
          var t = g.read(arguments),
            e = new S(w.NO_INSERT);
          return (
            e._setImage(this.getSubCanvas(t)),
            e.translate(t.getCenter().subtract(this.getSize().divide(2))),
            e._matrix.prepend(this._matrix),
            e.insertAbove(this),
            e
          );
        },
        toDataURL: function () {
          var t = this._image,
            e = t && t.src;
          if (/^data:/.test(e)) return e;
          var i = this.getCanvas();
          return i ? i.toDataURL.apply(i, arguments) : null;
        },
        drawImage: function (t) {
          var e = c.read(arguments, 1);
          this.getContext(!0).drawImage(t, e.x, e.y);
        },
        getAverageColor: function (t) {
          var e, i;
          if (
            (t
              ? t instanceof A
                ? ((i = t), (e = t.getBounds()))
                : "object" == typeof t &&
                  ("width" in t
                    ? (e = new g(t))
                    : "x" in t && (e = new g(t.x - 0.5, t.y - 0.5, 1, 1)))
              : (e = this.getBounds()),
            !e)
          )
            return null;
          var n = Math.min(e.width, 32),
            s = Math.min(e.height, 32),
            a = S._sampleContext;
          a
            ? a.clearRect(0, 0, 33, 33)
            : (a = S._sampleContext = Q.getContext(new d(32))),
            a.save();
          var o = new p()
            .scale(n / e.width, s / e.height)
            .translate(-e.x, -e.y);
          o.applyToContext(a),
            i && i.draw(a, new r({ clip: !0, matrices: [o] })),
            this._matrix.applyToContext(a);
          var h = this.getElement(),
            u = this._size;
          h && a.drawImage(h, -u.width / 2, -u.height / 2), a.restore();
          for (
            var l = a.getImageData(0.5, 0.5, Math.ceil(n), Math.ceil(s)).data,
              c = [0, 0, 0],
              f = 0,
              _ = 0,
              v = l.length;
            _ < v;
            _ += 4
          ) {
            var m = l[_ + 3];
            (f += m),
              (m /= 255),
              (c[0] += l[_] * m),
              (c[1] += l[_ + 1] * m),
              (c[2] += l[_ + 2] * m);
          }
          for (_ = 0; _ < 3; _++) c[_] /= f;
          return f ? F.read(c) : null;
        },
        getPixel: function () {
          var t = c.read(arguments),
            e = this.getContext().getImageData(t.x, t.y, 1, 1).data;
          return new F("rgb", [e[0] / 255, e[1] / 255, e[2] / 255], e[3] / 255);
        },
        setPixel: function () {
          var t = c.read(arguments),
            e = F.read(arguments),
            i = e._convert("rgb"),
            n = e._alpha,
            r = this.getContext(!0),
            s = r.createImageData(1, 1),
            a = s.data;
          (a[0] = 255 * i[0]),
            (a[1] = 255 * i[1]),
            (a[2] = 255 * i[2]),
            (a[3] = null != n ? 255 * n : 255),
            r.putImageData(s, t.x, t.y);
        },
        createImageData: function () {
          var t = d.read(arguments);
          return this.getContext().createImageData(t.width, t.height);
        },
        getImageData: function () {
          var t = g.read(arguments);
          return (
            t.isEmpty() && (t = new g(this._size)),
            this.getContext().getImageData(t.x, t.y, t.width, t.height)
          );
        },
        setImageData: function (t) {
          var e = c.read(arguments, 1);
          this.getContext(!0).putImageData(t, e.x, e.y);
        },
        _getBounds: function (t, e) {
          var i = new g(this._size).setCenter(0, 0);
          return t ? t._transformBounds(i) : i;
        },
        _hitTestSelf: function (t) {
          if (this._contains(t)) {
            var e = this;
            return new M("pixel", e, {
              offset: t.add(e._size.divide(2)).round(),
              color: {
                get: function () {
                  return e.getPixel(this.offset);
                },
              },
            });
          }
        },
        _draw: function (t) {
          var e = this.getElement();
          e &&
            ((t.globalAlpha = this._opacity),
            t.drawImage(e, -this._size.width / 2, -this._size.height / 2));
        },
        _canComposite: function () {
          return !0;
        },
      }
    ),
    P = w.extend({
      _class: "SymbolItem",
      _applyMatrix: !1,
      _canApplyMatrix: !1,
      _boundsOptions: { stroke: !0 },
      _serializeFields: { symbol: null },
      initialize: function (t, i) {
        this._initialize(t, i !== e && c.read(arguments, 1)) ||
          this.setDefinition(t instanceof I ? t : new I(t));
      },
      _equals: function (t) {
        return this._definition === t._definition;
      },
      copyContent: function (t) {
        this.setDefinition(t._definition);
      },
      getDefinition: function () {
        return this._definition;
      },
      setDefinition: function (t) {
        (this._definition = t), this._changed(9);
      },
      getSymbol: "#getDefinition",
      setSymbol: "#setDefinition",
      isEmpty: function () {
        return this._definition._item.isEmpty();
      },
      _getBounds: function (t, e) {
        var i = this._definition._item;
        return i._getCachedBounds(i._matrix.prepended(t), e);
      },
      _hitTestSelf: function (t, e, i) {
        var n = this._definition._item._hitTest(t, e, i);
        return n && (n.item = this), n;
      },
      _draw: function (t, e) {
        this._definition._item.draw(t, e);
      },
    }),
    I = r.extend({
      _class: "SymbolDefinition",
      initialize: function (t, e) {
        (this._id = l.get()),
          (this.project = paper.project),
          t && this.setItem(t, e);
      },
      _serialize: function (t, e) {
        return e.add(this, function () {
          return r.serialize([this._class, this._item], t, !1, e);
        });
      },
      _changed: function (t) {
        8 & t && w._clearBoundsCache(this), 1 & t && this.project._changed(t);
      },
      getItem: function () {
        return this._item;
      },
      setItem: function (t, e) {
        t._symbol && (t = t.clone()),
          this._item && (this._item._symbol = null),
          (this._item = t),
          t.remove(),
          t.setSelected(!1),
          e || t.setPosition(new c()),
          (t._symbol = this),
          this._changed(9);
      },
      getDefinition: "#getItem",
      setDefinition: "#setItem",
      place: function (t) {
        return new P(this, t);
      },
      clone: function () {
        return new I(this._item.clone(!1));
      },
      equals: function (t) {
        return t === this || (t && this._item.equals(t._item)) || !1;
      },
    }),
    M = r.extend({
      _class: "HitResult",
      initialize: function (t, e, i) {
        (this.type = t), (this.item = e), i && this.inject(i);
      },
      statics: {
        getOptions: function (t) {
          var e = t && r.read(t);
          return r.set(
            {
              type: null,
              tolerance: paper.settings.hitTolerance,
              fill: !e,
              stroke: !e,
              segments: !e,
              handles: !1,
              ends: !1,
              position: !1,
              center: !1,
              bounds: !1,
              guides: !1,
              selected: !1,
            },
            e
          );
        },
      },
    }),
    T = r.extend({
      _class: "Segment",
      beans: !0,
      _selection: 0,
      initialize: function (t, i, n, r, s, a) {
        var o,
          h,
          u,
          l,
          c = arguments.length;
        c > 0 &&
          (null == t || "object" == typeof t
            ? 1 === c && t && "point" in t
              ? ((o = t.point),
                (h = t.handleIn),
                (u = t.handleOut),
                (l = t.selection))
              : ((o = t), (h = i), (u = n), (l = r))
            : ((o = [t, i]),
              (h = n !== e ? [n, r] : null),
              (u = s !== e ? [s, a] : null))),
          new z(o, this, "_point"),
          new z(h, this, "_handleIn"),
          new z(u, this, "_handleOut"),
          l && this.setSelection(l);
      },
      _serialize: function (t, e) {
        var i = this._point,
          n = this._selection,
          s = n || this.hasHandles() ? [i, this._handleIn, this._handleOut] : i;
        return n && s.push(n), r.serialize(s, t, !0, e);
      },
      _changed: function (t) {
        var e = this._path;
        if (e) {
          var i,
            n = e._curves,
            r = this._index;
          n &&
            ((t && t !== this._point && t !== this._handleIn) ||
              !(i = r > 0 ? n[r - 1] : e._closed ? n[n.length - 1] : null) ||
              i._changed(),
            (t && t !== this._point && t !== this._handleOut) ||
              !(i = n[r]) ||
              i._changed()),
            e._changed(25);
        }
      },
      getPoint: function () {
        return this._point;
      },
      setPoint: function () {
        this._point.set(c.read(arguments));
      },
      getHandleIn: function () {
        return this._handleIn;
      },
      setHandleIn: function () {
        this._handleIn.set(c.read(arguments));
      },
      getHandleOut: function () {
        return this._handleOut;
      },
      setHandleOut: function () {
        this._handleOut.set(c.read(arguments));
      },
      hasHandles: function () {
        return !this._handleIn.isZero() || !this._handleOut.isZero();
      },
      isSmooth: function () {
        var t = this._handleIn,
          e = this._handleOut;
        return !t.isZero() && !e.isZero() && t.isCollinear(e);
      },
      clearHandles: function () {
        this._handleIn._set(0, 0), this._handleOut._set(0, 0);
      },
      getSelection: function () {
        return this._selection;
      },
      setSelection: function (t) {
        var e = this._selection,
          i = this._path;
        (this._selection = t = t || 0),
          i && t !== e && (i._updateSelection(this, e, t), i._changed(129));
      },
      _changeSelection: function (t, e) {
        var i = this._selection;
        this.setSelection(e ? i | t : i & ~t);
      },
      isSelected: function () {
        return !!(7 & this._selection);
      },
      setSelected: function (t) {
        this._changeSelection(7, t);
      },
      getIndex: function () {
        return this._index !== e ? this._index : null;
      },
      getPath: function () {
        return this._path || null;
      },
      getCurve: function () {
        var t = this._path,
          e = this._index;
        return t
          ? (e > 0 && !t._closed && e === t._segments.length - 1 && e--,
            t.getCurves()[e] || null)
          : null;
      },
      getLocation: function () {
        var t = this.getCurve();
        return t ? new O(t, this === t._segment1 ? 0 : 1) : null;
      },
      getNext: function () {
        var t = this._path && this._path._segments;
        return (
          (t && (t[this._index + 1] || (this._path._closed && t[0]))) || null
        );
      },
      smooth: function (t, i, n) {
        var r = t || {},
          s = r.type,
          a = r.factor,
          o = this.getPrevious(),
          h = this.getNext(),
          u = (o || this)._point,
          l = this._point,
          f = (h || this)._point,
          d = u.getDistance(l),
          _ = l.getDistance(f);
        if (s && "catmull-rom" !== s) {
          if ("geometric" !== s)
            throw new Error("Smoothing method '" + s + "' not supported.");
          if (o && h) {
            var g = u.subtract(f),
              v = a === e ? 0.4 : a,
              p = (v * d) / (d + _);
            i || this.setHandleIn(g.multiply(p)),
              n || this.setHandleOut(g.multiply(p - v));
          }
        } else {
          var m = a === e ? 0.5 : a,
            y = Math.pow(d, m),
            w = y * y,
            x = Math.pow(_, m),
            b = x * x;
          if (!i && o) {
            var C = 2 * b + 3 * x * y + w,
              S = 3 * x * (x + y);
            this.setHandleIn(
              0 !== S
                ? new c(
                    (b * u._x + C * l._x - w * f._x) / S - l._x,
                    (b * u._y + C * l._y - w * f._y) / S - l._y
                  )
                : new c()
            );
          }
          if (!n && h) {
            var C = 2 * w + 3 * y * x + b,
              S = 3 * y * (y + x);
            this.setHandleOut(
              0 !== S
                ? new c(
                    (w * f._x + C * l._x - b * u._x) / S - l._x,
                    (w * f._y + C * l._y - b * u._y) / S - l._y
                  )
                : new c()
            );
          }
        }
      },
      getPrevious: function () {
        var t = this._path && this._path._segments;
        return (
          (t &&
            (t[this._index - 1] || (this._path._closed && t[t.length - 1]))) ||
          null
        );
      },
      isFirst: function () {
        return !this._index;
      },
      isLast: function () {
        var t = this._path;
        return (t && this._index === t._segments.length - 1) || !1;
      },
      reverse: function () {
        var t = this._handleIn,
          e = this._handleOut,
          i = t.clone();
        t.set(e), e.set(i);
      },
      reversed: function () {
        return new T(this._point, this._handleOut, this._handleIn);
      },
      remove: function () {
        return !!this._path && !!this._path.removeSegment(this._index);
      },
      clone: function () {
        return new T(this._point, this._handleIn, this._handleOut);
      },
      equals: function (t) {
        return (
          t === this ||
          (t &&
            this._class === t._class &&
            this._point.equals(t._point) &&
            this._handleIn.equals(t._handleIn) &&
            this._handleOut.equals(t._handleOut)) ||
          !1
        );
      },
      toString: function () {
        var t = ["point: " + this._point];
        return (
          this._handleIn.isZero() || t.push("handleIn: " + this._handleIn),
          this._handleOut.isZero() || t.push("handleOut: " + this._handleOut),
          "{ " + t.join(", ") + " }"
        );
      },
      transform: function (t) {
        this._transformCoordinates(t, new Array(6), !0), this._changed();
      },
      interpolate: function (t, e, i) {
        var n = 1 - i,
          r = i,
          s = t._point,
          a = e._point,
          o = t._handleIn,
          h = e._handleIn,
          u = e._handleOut,
          l = t._handleOut;
        this._point._set(n * s._x + r * a._x, n * s._y + r * a._y, !0),
          this._handleIn._set(n * o._x + r * h._x, n * o._y + r * h._y, !0),
          this._handleOut._set(n * l._x + r * u._x, n * l._y + r * u._y, !0),
          this._changed();
      },
      _transformCoordinates: function (t, e, i) {
        var n = this._point,
          r = i && this._handleIn.isZero() ? null : this._handleIn,
          s = i && this._handleOut.isZero() ? null : this._handleOut,
          a = n._x,
          o = n._y,
          h = 2;
        return (
          (e[0] = a),
          (e[1] = o),
          r && ((e[h++] = r._x + a), (e[h++] = r._y + o)),
          s && ((e[h++] = s._x + a), (e[h++] = s._y + o)),
          t &&
            (t._transformCoordinates(e, e, h / 2),
            (a = e[0]),
            (o = e[1]),
            i
              ? ((n._x = a),
                (n._y = o),
                (h = 2),
                r && ((r._x = e[h++] - a), (r._y = e[h++] - o)),
                s && ((s._x = e[h++] - a), (s._y = e[h++] - o)))
              : (r || ((e[h++] = a), (e[h++] = o)),
                s || ((e[h++] = a), (e[h++] = o)))),
          e
        );
      },
    }),
    z = c.extend({
      initialize: function (t, i, n) {
        var r, s, a;
        if (t)
          if ((r = t[0]) !== e) s = t[1];
          else {
            var o = t;
            (r = o.x) === e && (r = (o = c.read(arguments)).x),
              (s = o.y),
              (a = o.selected);
          }
        else r = s = 0;
        (this._x = r),
          (this._y = s),
          (this._owner = i),
          (i[n] = this),
          a && this.setSelected(!0);
      },
      _set: function (t, e) {
        return (this._x = t), (this._y = e), this._owner._changed(this), this;
      },
      getX: function () {
        return this._x;
      },
      setX: function (t) {
        (this._x = t), this._owner._changed(this);
      },
      getY: function () {
        return this._y;
      },
      setY: function (t) {
        (this._y = t), this._owner._changed(this);
      },
      isZero: function () {
        var t = u.isZero;
        return t(this._x) && t(this._y);
      },
      isSelected: function () {
        return !!(this._owner._selection & this._getSelection());
      },
      setSelected: function (t) {
        this._owner._changeSelection(this._getSelection(), t);
      },
      _getSelection: function () {
        var t = this._owner;
        return this === t._point
          ? 1
          : this === t._handleIn
          ? 2
          : this === t._handleOut
          ? 4
          : 0;
      },
    }),
    k = r.extend(
      {
        _class: "Curve",
        beans: !0,
        initialize: function (t, e, i, n, r, s, a, o) {
          var h,
            u,
            l,
            c,
            f,
            d,
            _ = arguments.length;
          3 === _
            ? ((this._path = t), (h = e), (u = i))
            : _
            ? 1 === _
              ? "segment1" in t
                ? ((h = new T(t.segment1)), (u = new T(t.segment2)))
                : "point1" in t
                ? ((l = t.point1),
                  (f = t.handle1),
                  (d = t.handle2),
                  (c = t.point2))
                : Array.isArray(t) &&
                  ((l = [t[0], t[1]]),
                  (c = [t[6], t[7]]),
                  (f = [t[2] - t[0], t[3] - t[1]]),
                  (d = [t[4] - t[6], t[5] - t[7]]))
              : 2 === _
              ? ((h = new T(t)), (u = new T(e)))
              : 4 === _
              ? ((l = t), (f = e), (d = i), (c = n))
              : 8 === _ &&
                ((l = [t, e]),
                (c = [a, o]),
                (f = [i - t, n - e]),
                (d = [r - a, s - o]))
            : ((h = new T()), (u = new T())),
            (this._segment1 = h || new T(l, null, f)),
            (this._segment2 = u || new T(c, d, null));
        },
        _serialize: function (t, e) {
          return r.serialize(
            this.hasHandles()
              ? [
                  this.getPoint1(),
                  this.getHandle1(),
                  this.getHandle2(),
                  this.getPoint2(),
                ]
              : [this.getPoint1(), this.getPoint2()],
            t,
            !0,
            e
          );
        },
        _changed: function () {
          this._length = this._bounds = e;
        },
        clone: function () {
          return new k(this._segment1, this._segment2);
        },
        toString: function () {
          var t = ["point1: " + this._segment1._point];
          return (
            this._segment1._handleOut.isZero() ||
              t.push("handle1: " + this._segment1._handleOut),
            this._segment2._handleIn.isZero() ||
              t.push("handle2: " + this._segment2._handleIn),
            t.push("point2: " + this._segment2._point),
            "{ " + t.join(", ") + " }"
          );
        },
        classify: function () {
          return k.classify(this.getValues());
        },
        remove: function () {
          var t = !1;
          if (this._path) {
            var e = this._segment2,
              i = e._handleOut;
            (t = e.remove()) && this._segment1._handleOut.set(i);
          }
          return t;
        },
        getPoint1: function () {
          return this._segment1._point;
        },
        setPoint1: function () {
          this._segment1._point.set(c.read(arguments));
        },
        getPoint2: function () {
          return this._segment2._point;
        },
        setPoint2: function () {
          this._segment2._point.set(c.read(arguments));
        },
        getHandle1: function () {
          return this._segment1._handleOut;
        },
        setHandle1: function () {
          this._segment1._handleOut.set(c.read(arguments));
        },
        getHandle2: function () {
          return this._segment2._handleIn;
        },
        setHandle2: function () {
          this._segment2._handleIn.set(c.read(arguments));
        },
        getSegment1: function () {
          return this._segment1;
        },
        getSegment2: function () {
          return this._segment2;
        },
        getPath: function () {
          return this._path;
        },
        getIndex: function () {
          return this._segment1._index;
        },
        getNext: function () {
          var t = this._path && this._path._curves;
          return (
            (t &&
              (t[this._segment1._index + 1] || (this._path._closed && t[0]))) ||
            null
          );
        },
        getPrevious: function () {
          var t = this._path && this._path._curves;
          return (
            (t &&
              (t[this._segment1._index - 1] ||
                (this._path._closed && t[t.length - 1]))) ||
            null
          );
        },
        isFirst: function () {
          return !this._segment1._index;
        },
        isLast: function () {
          var t = this._path;
          return (t && this._segment1._index === t._curves.length - 1) || !1;
        },
        isSelected: function () {
          return (
            this.getPoint1().isSelected() &&
            this.getHandle1().isSelected() &&
            this.getHandle2().isSelected() &&
            this.getPoint2().isSelected()
          );
        },
        setSelected: function (t) {
          this.getPoint1().setSelected(t),
            this.getHandle1().setSelected(t),
            this.getHandle2().setSelected(t),
            this.getPoint2().setSelected(t);
        },
        getValues: function (t) {
          return k.getValues(this._segment1, this._segment2, t);
        },
        getPoints: function () {
          for (var t = this.getValues(), e = [], i = 0; i < 8; i += 2)
            e.push(new c(t[i], t[i + 1]));
          return e;
        },
      },
      {
        getLength: function () {
          return (
            null == this._length &&
              (this._length = k.getLength(this.getValues(), 0, 1)),
            this._length
          );
        },
        getArea: function () {
          return k.getArea(this.getValues());
        },
        getLine: function () {
          return new m(this._segment1._point, this._segment2._point);
        },
        getPart: function (t, e) {
          return new k(k.getPart(this.getValues(), t, e));
        },
        getPartLength: function (t, e) {
          return k.getLength(this.getValues(), t, e);
        },
        divideAt: function (t) {
          return this.divideAtTime(
            t && t.curve === this ? t.time : this.getTimeAt(t)
          );
        },
        divideAtTime: function (t, e) {
          var i = null;
          if (t >= 1e-8 && t <= 1 - 1e-8) {
            var n = k.subdivide(this.getValues(), t),
              r = n[0],
              s = n[1],
              a = e || this.hasHandles(),
              o = this._segment1,
              h = this._segment2,
              u = this._path;
            a &&
              (o._handleOut._set(r[2] - r[0], r[3] - r[1]),
              h._handleIn._set(s[4] - s[6], s[5] - s[7]));
            var l = r[6],
              f = r[7],
              d = new T(
                new c(l, f),
                a && new c(r[4] - l, r[5] - f),
                a && new c(s[2] - l, s[3] - f)
              );
            u
              ? (u.insert(o._index + 1, d), (i = this.getNext()))
              : ((this._segment2 = d), this._changed(), (i = new k(d, h)));
          }
          return i;
        },
        splitAt: function (t) {
          var e = this._path;
          return e ? e.splitAt(t) : null;
        },
        splitAtTime: function (t) {
          return this.splitAt(this.getLocationAtTime(t));
        },
        divide: function (t, i) {
          return this.divideAtTime(t === e ? 0.5 : i ? t : this.getTimeAt(t));
        },
        split: function (t, i) {
          return this.splitAtTime(t === e ? 0.5 : i ? t : this.getTimeAt(t));
        },
        reversed: function () {
          return new k(this._segment2.reversed(), this._segment1.reversed());
        },
        clearHandles: function () {
          this._segment1._handleOut._set(0, 0),
            this._segment2._handleIn._set(0, 0);
        },
        statics: {
          getValues: function (t, e, i, n) {
            var r = t._point,
              s = t._handleOut,
              a = e._handleIn,
              o = e._point,
              h = r.x,
              u = r.y,
              l = o.x,
              c = o.y,
              f = n
                ? [h, u, h, u, l, c, l, c]
                : [h, u, h + s._x, u + s._y, l + a._x, c + a._y, l, c];
            return i && i._transformCoordinates(f, f, 4), f;
          },
          subdivide: function (t, i) {
            var n = t[0],
              r = t[1],
              s = t[2],
              a = t[3],
              o = t[4],
              h = t[5],
              u = t[6],
              l = t[7];
            i === e && (i = 0.5);
            var c = 1 - i,
              f = c * n + i * s,
              d = c * r + i * a,
              _ = c * s + i * o,
              g = c * a + i * h,
              v = c * o + i * u,
              p = c * h + i * l,
              m = c * f + i * _,
              y = c * d + i * g,
              w = c * _ + i * v,
              x = c * g + i * p,
              b = c * m + i * w,
              C = c * y + i * x;
            return [
              [n, r, f, d, m, y, b, C],
              [b, C, w, x, v, p, u, l],
            ];
          },
          getMonoCurves: function (t, e) {
            var i = [],
              n = e ? 0 : 1,
              r = t[n + 0],
              s = t[n + 2],
              a = t[n + 4],
              o = t[n + 6];
            if ((r >= s == s >= a && s >= a == a >= o) || k.isStraight(t))
              i.push(t);
            else {
              var h = 3 * (s - a) - r + o,
                l = 2 * (r + a) - 4 * s,
                c = s - r,
                f = [],
                d = u.solveQuadratic(h, l, c, f, 1e-8, 1 - 1e-8);
              if (d) {
                f.sort();
                var _ = f[0],
                  g = k.subdivide(t, _);
                i.push(g[0]),
                  d > 1 &&
                    ((_ = (f[1] - _) / (1 - _)),
                    (g = k.subdivide(g[1], _)),
                    i.push(g[0])),
                  i.push(g[1]);
              } else i.push(t);
            }
            return i;
          },
          solveCubic: function (t, e, i, n, r, s) {
            var a = t[e],
              o = t[e + 2],
              h = t[e + 4],
              l = t[e + 6],
              c = 0;
            if (
              !(
                (a < i && l < i && o < i && h < i) ||
                (a > i && l > i && o > i && h > i)
              )
            ) {
              var f = 3 * (o - a),
                d = 3 * (h - o) - f,
                _ = l - a - f - d;
              c = u.solveCubic(_, d, f, a - i, n, r, s);
            }
            return c;
          },
          getTimeOf: function (t, e) {
            var i = new c(t[0], t[1]),
              n = new c(t[6], t[7]);
            if (
              null ===
              (e.isClose(i, 1e-12) ? 0 : e.isClose(n, 1e-12) ? 1 : null)
            )
              for (var r = [e.x, e.y], s = [], a = 0; a < 2; a++)
                for (
                  var o = k.solveCubic(t, a, r[a], s, 0, 1), h = 0;
                  h < o;
                  h++
                ) {
                  var u = s[h];
                  if (e.isClose(k.getPoint(t, u), 1e-7)) return u;
                }
            return e.isClose(i, 1e-7) ? 0 : e.isClose(n, 1e-7) ? 1 : null;
          },
          getNearestTime: function (t, e) {
            function i(i) {
              if (i >= 0 && i <= 1) {
                var n = e.getDistance(k.getPoint(t, i), !0);
                if (n < u) return (u = n), (l = i), !0;
              }
            }
            if (k.isStraight(t)) {
              var n = t[0],
                r = t[1],
                s = t[6] - n,
                a = t[7] - r,
                o = s * s + a * a;
              if (0 === o) return 0;
              var h = ((e.x - n) * s + (e.y - r) * a) / o;
              return h < 1e-12
                ? 0
                : h > 0.999999999999
                ? 1
                : k.getTimeOf(t, new c(n + h * s, r + h * a));
            }
            for (var u = 1 / 0, l = 0, f = 0; f <= 100; f++) i(f / 100);
            for (var d = 0.005; d > 1e-8; ) i(l - d) || i(l + d) || (d /= 2);
            return l;
          },
          getPart: function (t, e, i) {
            var n = e > i;
            if (n) {
              var r = e;
              (e = i), (i = r);
            }
            return (
              e > 0 && (t = k.subdivide(t, e)[1]),
              i < 1 && (t = k.subdivide(t, (i - e) / (1 - e))[0]),
              n ? [t[6], t[7], t[4], t[5], t[2], t[3], t[0], t[1]] : t
            );
          },
          isFlatEnough: function (t, e) {
            var i = t[0],
              n = t[1],
              r = t[2],
              s = t[3],
              a = t[4],
              o = t[5],
              h = t[6],
              u = t[7],
              l = 3 * r - 2 * i - h,
              c = 3 * s - 2 * n - u,
              f = 3 * a - 2 * h - i,
              d = 3 * o - 2 * u - n;
            return (
              Math.max(l * l, f * f) + Math.max(c * c, d * d) <= 16 * e * e
            );
          },
          getArea: function (t) {
            var e = t[0],
              i = t[1],
              n = t[2],
              r = t[3],
              s = t[4],
              a = t[5],
              o = t[6],
              h = t[7];
            return (
              (3 *
                ((h - i) * (n + s) -
                  (o - e) * (r + a) +
                  r * (e - s) -
                  n * (i - a) +
                  h * (s + e / 3) -
                  o * (a + i / 3))) /
              20
            );
          },
          getBounds: function (t) {
            for (
              var e = t.slice(0, 2), i = e.slice(), n = [0, 0], r = 0;
              r < 2;
              r++
            )
              k._addBounds(t[r], t[r + 2], t[r + 4], t[r + 6], r, 0, e, i, n);
            return new g(e[0], e[1], i[0] - e[0], i[1] - e[1]);
          },
          _addBounds: function (t, e, i, n, r, s, a, o, h) {
            function l(t, e) {
              var i = t - e,
                n = t + e;
              i < a[r] && (a[r] = i), n > o[r] && (o[r] = n);
            }
            s /= 2;
            var c = a[r] - s,
              f = o[r] + s;
            if (
              t < c ||
              e < c ||
              i < c ||
              n < c ||
              t > f ||
              e > f ||
              i > f ||
              n > f
            )
              if (e < t != e < n && i < t != i < n) l(t, s), l(n, s);
              else {
                var d = 3 * (e - i) - t + n,
                  _ = 2 * (t + i) - 4 * e,
                  g = e - t,
                  v = u.solveQuadratic(d, _, g, h);
                l(n, 0);
                for (var p = 0; p < v; p++) {
                  var m = h[p],
                    y = 1 - m;
                  1e-8 <= m &&
                    m <= 1 - 1e-8 &&
                    l(
                      y * y * y * t +
                        3 * y * y * m * e +
                        3 * y * m * m * i +
                        m * m * m * n,
                      s
                    );
                }
              }
          },
        },
      },
      r.each(
        ["getBounds", "getStrokeBounds", "getHandleBounds"],
        function (t) {
          this[t] = function () {
            this._bounds || (this._bounds = {});
            var e = this._bounds[t];
            return (
              e ||
                (e = this._bounds[t] =
                  L[t]([this._segment1, this._segment2], !1, this._path)),
              e.clone()
            );
          };
        },
        {}
      ),
      r.each(
        {
          isStraight: function (t, e, i, n) {
            if (e.isZero() && i.isZero()) return !0;
            var r = n.subtract(t);
            if (r.isZero()) return !1;
            if (r.isCollinear(e) && r.isCollinear(i)) {
              var s = new m(t, n);
              if (
                s.getDistance(t.add(e)) < 1e-7 &&
                s.getDistance(n.add(i)) < 1e-7
              ) {
                var a = r.dot(r),
                  o = r.dot(e) / a,
                  h = r.dot(i) / a;
                return o >= 0 && o <= 1 && h <= 0 && h >= -1;
              }
            }
            return !1;
          },
          isLinear: function (t, e, i, n) {
            var r = n.subtract(t).divide(3);
            return e.equals(r) && i.negate().equals(r);
          },
        },
        function (t, e) {
          (this[e] = function (e) {
            var i = this._segment1,
              n = this._segment2;
            return t(i._point, i._handleOut, n._handleIn, n._point, e);
          }),
            (this.statics[e] = function (e, i) {
              var n = e[0],
                r = e[1],
                s = e[6],
                a = e[7];
              return t(
                new c(n, r),
                new c(e[2] - n, e[3] - r),
                new c(e[4] - s, e[5] - a),
                new c(s, a),
                i
              );
            });
        },
        {
          statics: {},
          hasHandles: function () {
            return (
              !this._segment1._handleOut.isZero() ||
              !this._segment2._handleIn.isZero()
            );
          },
          hasLength: function (t) {
            return (
              (!this.getPoint1().equals(this.getPoint2()) ||
                this.hasHandles()) &&
              this.getLength() > (t || 0)
            );
          },
          isCollinear: function (t) {
            return (
              t &&
              this.isStraight() &&
              t.isStraight() &&
              this.getLine().isCollinear(t.getLine())
            );
          },
          isHorizontal: function () {
            return (
              this.isStraight() && Math.abs(this.getTangentAtTime(0.5).y) < 1e-8
            );
          },
          isVertical: function () {
            return (
              this.isStraight() && Math.abs(this.getTangentAtTime(0.5).x) < 1e-8
            );
          },
        }
      ),
      {
        beans: !1,
        getLocationAt: function (t, e) {
          return this.getLocationAtTime(e ? t : this.getTimeAt(t));
        },
        getLocationAtTime: function (t) {
          return null != t && t >= 0 && t <= 1 ? new O(this, t) : null;
        },
        getTimeAt: function (t, e) {
          return k.getTimeAt(this.getValues(), t, e);
        },
        getParameterAt: "#getTimeAt",
        getOffsetAtTime: function (t) {
          return this.getPartLength(0, t);
        },
        getLocationOf: function () {
          return this.getLocationAtTime(this.getTimeOf(c.read(arguments)));
        },
        getOffsetOf: function () {
          var t = this.getLocationOf.apply(this, arguments);
          return t ? t.getOffset() : null;
        },
        getTimeOf: function () {
          return k.getTimeOf(this.getValues(), c.read(arguments));
        },
        getParameterOf: "#getTimeOf",
        getNearestLocation: function () {
          var t = c.read(arguments),
            e = this.getValues(),
            i = k.getNearestTime(e, t),
            n = k.getPoint(e, i);
          return new O(this, i, n, null, t.getDistance(n));
        },
        getNearestPoint: function () {
          var t = this.getNearestLocation.apply(this, arguments);
          return t ? t.getPoint() : t;
        },
      },
      new (function () {
        var t = [
          "getPoint",
          "getTangent",
          "getNormal",
          "getWeightedTangent",
          "getWeightedNormal",
          "getCurvature",
        ];
        return r.each(
          t,
          function (t) {
            (this[t + "At"] = function (e, i) {
              var n = this.getValues();
              return k[t](n, i ? e : k.getTimeAt(n, e));
            }),
              (this[t + "AtTime"] = function (e) {
                return k[t](this.getValues(), e);
              });
          },
          { statics: { _evaluateMethods: t } }
        );
      })(),
      new (function () {
        function t(t) {
          var e = t[0],
            i = t[1],
            n = t[2],
            r = t[3],
            s = t[4],
            a = t[5],
            o = 9 * (n - s) + 3 * (t[6] - e),
            h = 6 * (e + s) - 12 * n,
            u = 3 * (n - e),
            l = 9 * (r - a) + 3 * (t[7] - i),
            c = 6 * (i + a) - 12 * r,
            f = 3 * (r - i);
          return function (t) {
            var e = (o * t + h) * t + u,
              i = (l * t + c) * t + f;
            return Math.sqrt(e * e + i * i);
          };
        }
        function i(t, e) {
          return Math.max(2, Math.min(16, Math.ceil(32 * Math.abs(e - t))));
        }
        function n(t, e, i, n) {
          if (null == e || e < 0 || e > 1) return null;
          var r = t[0],
            s = t[1],
            a = t[2],
            o = t[3],
            h = t[4],
            l = t[5],
            f = t[6],
            d = t[7],
            _ = u.isZero;
          _(a - r) && _(o - s) && ((a = r), (o = s)),
            _(h - f) && _(l - d) && ((h = f), (l = d));
          var g,
            v,
            p = 3 * (a - r),
            m = 3 * (h - a) - p,
            y = f - r - p - m,
            w = 3 * (o - s),
            x = 3 * (l - o) - w,
            b = d - s - w - x;
          if (0 === i)
            (g = 0 === e ? r : 1 === e ? f : ((y * e + m) * e + p) * e + r),
              (v = 0 === e ? s : 1 === e ? d : ((b * e + x) * e + w) * e + s);
          else {
            if (
              (e < 1e-8
                ? ((g = p), (v = w))
                : e > 1 - 1e-8
                ? ((g = 3 * (f - h)), (v = 3 * (d - l)))
                : ((g = (3 * y * e + 2 * m) * e + p),
                  (v = (3 * b * e + 2 * x) * e + w)),
              n)
            ) {
              0 === g &&
                0 === v &&
                (e < 1e-8 || e > 1 - 1e-8) &&
                ((g = h - a), (v = l - o));
              var C = Math.sqrt(g * g + v * v);
              C && ((g /= C), (v /= C));
            }
            if (3 === i) {
              var h = 6 * y * e + 2 * m,
                l = 6 * b * e + 2 * x,
                S = Math.pow(g * g + v * v, 1.5);
              (g = 0 !== S ? (g * l - v * h) / S : 0), (v = 0);
            }
          }
          return 2 === i ? new c(v, -g) : new c(g, v);
        }
        return {
          statics: {
            classify: function (t) {
              function i(t, i, n) {
                var r = i !== e,
                  s = r && i > 0 && i < 1,
                  a = r && n > 0 && n < 1;
                return (
                  !r ||
                    ((s || a) && ("loop" !== t || (s && a))) ||
                    ((t = "arch"), (s = a = !1)),
                  {
                    type: t,
                    roots:
                      s || a
                        ? s && a
                          ? i < n
                            ? [i, n]
                            : [n, i]
                          : [s ? i : n]
                        : null,
                  }
                );
              }
              var n = t[0],
                r = t[1],
                s = t[2],
                a = t[3],
                o = t[4],
                h = t[5],
                l = t[6],
                c = t[7],
                f = s * (r - c) + a * (l - n) + n * c - r * l,
                d = 3 * (o * (a - r) + h * (n - s) + s * r - a * n),
                _ = d - f,
                g = _ - f + (n * (c - h) + r * (o - l) + l * h - c * o),
                v = Math.sqrt(g * g + _ * _ + d * d),
                p = 0 !== v ? 1 / v : 0,
                m = u.isZero;
              if (((g *= p), (_ *= p), (d *= p), m(g)))
                return m(_)
                  ? i(m(d) ? "line" : "quadratic")
                  : i("serpentine", d / (3 * _));
              var y = 3 * _ * _ - 4 * g * d;
              if (m(y)) return i("cusp", _ / (2 * g));
              var w = y > 0 ? Math.sqrt(y / 3) : Math.sqrt(-y),
                x = 2 * g;
              return i(y > 0 ? "serpentine" : "loop", (_ + w) / x, (_ - w) / x);
            },
            getLength: function (n, r, s, a) {
              if ((r === e && (r = 0), s === e && (s = 1), k.isStraight(n))) {
                var o = n;
                s < 1 && ((o = k.subdivide(o, s)[0]), (r /= s)),
                  r > 0 && (o = k.subdivide(o, r)[1]);
                var h = o[6] - o[0],
                  l = o[7] - o[1];
                return Math.sqrt(h * h + l * l);
              }
              return u.integrate(a || t(n), r, s, i(r, s));
            },
            getTimeAt: function (n, r, s) {
              if ((s === e && (s = r < 0 ? 1 : 0), 0 === r)) return s;
              var a = Math.abs,
                o = r > 0,
                h = o ? s : 0,
                l = o ? 1 : s,
                c = t(n),
                f = k.getLength(n, h, l, c),
                d = a(r) - f;
              if (a(d) < 1e-12) return o ? l : h;
              if (d > 1e-12) return null;
              var _ = r / f,
                g = 0;
              return u.findRoot(
                function (t) {
                  return (g += u.integrate(c, s, t, i(s, t))), (s = t), g - r;
                },
                c,
                s + _,
                h,
                l,
                32,
                1e-12
              );
            },
            getPoint: function (t, e) {
              return n(t, e, 0, !1);
            },
            getTangent: function (t, e) {
              return n(t, e, 1, !0);
            },
            getWeightedTangent: function (t, e) {
              return n(t, e, 1, !1);
            },
            getNormal: function (t, e) {
              return n(t, e, 2, !0);
            },
            getWeightedNormal: function (t, e) {
              return n(t, e, 2, !1);
            },
            getCurvature: function (t, e) {
              return n(t, e, 3, !1).x;
            },
            getPeaks: function (t) {
              var e = t[0],
                i = t[1],
                n = t[2],
                r = t[3],
                s = t[4],
                a = t[5],
                o = 3 * n - e - 3 * s + t[6],
                h = 3 * e - 6 * n + 3 * s,
                l = -3 * e + 3 * n,
                c = 3 * r - i - 3 * a + t[7],
                f = 3 * i - 6 * r + 3 * a,
                d = -3 * i + 3 * r,
                _ = [];
              return (
                u.solveCubic(
                  9 * (o * o + c * c),
                  9 * (o * h + f * c),
                  2 * (h * h + f * f) + 3 * (l * o + d * c),
                  l * h + f * d,
                  _,
                  1e-8,
                  1 - 1e-8
                ),
                _.sort()
              );
            },
          },
        };
      })(),
      new (function () {
        function t(t, e, i, n, r, s, a) {
          var o = !a && i.getPrevious() === r,
            h = !a && i !== r && i.getNext() === r;
          if (
            null !== n &&
            n >= (o ? 1e-8 : 0) &&
            n <= (h ? 1 - 1e-8 : 1) &&
            null !== s &&
            s >= (h ? 1e-8 : 0) &&
            s <= (o ? 1 - 1e-8 : 1)
          ) {
            var u = new O(i, n, null, a),
              l = new O(r, s, null, a);
            (u._intersection = l),
              (l._intersection = u),
              (e && !e(u)) || O.insert(t, u, !0);
          }
        }
        function e(r, s, a, o, h, u, l, c, f, d, _, g, v) {
          if (++f >= 4096 || ++c >= 40) return f;
          var p,
            y,
            w = s[0],
            x = s[1],
            b = s[6],
            C = s[7],
            S = m.getSignedDistance,
            P = S(w, x, b, C, s[2], s[3]),
            I = S(w, x, b, C, s[4], s[5]),
            M = P * I > 0 ? 0.75 : 4 / 9,
            T = M * Math.min(0, P, I),
            z = M * Math.max(0, P, I),
            O = S(w, x, b, C, r[0], r[1]),
            A = S(w, x, b, C, r[2], r[3]),
            L = S(w, x, b, C, r[4], r[5]),
            N = S(w, x, b, C, r[6], r[7]),
            B = i(O, A, L, N),
            D = B[0],
            j = B[1];
          if (
            (0 === P && 0 === I && 0 === O && 0 === A && 0 === L && 0 === N) ||
            null == (p = n(D, j, T, z)) ||
            null == (y = n(D.reverse(), j.reverse(), T, z))
          )
            return f;
          var E = d + (_ - d) * p,
            F = d + (_ - d) * y;
          if (Math.max(v - g, F - E) < 1e-9) {
            var R = (E + F) / 2,
              q = (g + v) / 2;
            t(h, u, l ? o : a, l ? q : R, l ? a : o, l ? R : q);
          } else if (((r = k.getPart(r, p, y)), y - p > 0.8))
            if (F - E > v - g) {
              R = (E + F) / 2;
              (f = e(
                s,
                (V = k.subdivide(r, 0.5))[0],
                o,
                a,
                h,
                u,
                !l,
                c,
                f,
                g,
                v,
                E,
                R
              )),
                (f = e(s, V[1], o, a, h, u, !l, c, f, g, v, R, F));
            } else {
              var V = k.subdivide(s, 0.5),
                q = (g + v) / 2;
              (f = e(V[0], r, o, a, h, u, !l, c, f, g, q, E, F)),
                (f = e(V[1], r, o, a, h, u, !l, c, f, q, v, E, F));
            }
          else
            f =
              v - g >= 1e-9
                ? e(s, r, o, a, h, u, !l, c, f, g, v, E, F)
                : e(r, s, a, o, h, u, l, c, f, E, F, g, v);
          return f;
        }
        function i(t, e, i, n) {
          var r,
            s = [0, t],
            a = [1 / 3, e],
            o = [2 / 3, i],
            h = [1, n],
            u = e - (2 * t + n) / 3,
            l = i - (t + 2 * n) / 3;
          if (u * l < 0)
            r = [
              [s, a, h],
              [s, o, h],
            ];
          else {
            var c = u / l;
            r = [
              c >= 2 ? [s, a, h] : c <= 0.5 ? [s, o, h] : [s, a, o, h],
              [s, h],
            ];
          }
          return (u || l) < 0 ? r.reverse() : r;
        }
        function n(t, e, i, n) {
          return t[0][1] < i
            ? r(t, !0, i)
            : e[0][1] > n
            ? r(e, !1, n)
            : t[0][0];
        }
        function r(t, e, i) {
          for (var n = t[0][0], r = t[0][1], s = 1, a = t.length; s < a; s++) {
            var o = t[s][0],
              h = t[s][1];
            if (e ? h >= i : h <= i)
              return h === i ? o : n + ((i - r) * (o - n)) / (h - r);
            (n = o), (r = h);
          }
          return null;
        }
        function s(t, e, i, n, r) {
          var s = u.isZero;
          if (s(n) && s(r)) {
            var a = k.getTimeOf(t, new c(e, i));
            return null === a ? [] : [a];
          }
          for (
            var o = Math.atan2(-r, n),
              h = Math.sin(o),
              l = Math.cos(o),
              f = [],
              d = [],
              _ = 0;
            _ < 8;
            _ += 2
          ) {
            var g = t[_] - e,
              v = t[_ + 1] - i;
            f.push(g * l - v * h, g * h + v * l);
          }
          return k.solveCubic(f, 1, 0, d, 0, 1), d;
        }
        function a(e, i, n, r, a, o, h) {
          for (
            var u = i[0],
              l = i[1],
              c = s(e, u, l, i[6] - u, i[7] - l),
              f = 0,
              d = c.length;
            f < d;
            f++
          ) {
            var _ = c[f],
              g = k.getPoint(e, _),
              v = k.getTimeOf(i, g);
            null !== v && t(a, o, h ? r : n, h ? v : _, h ? n : r, h ? _ : v);
          }
        }
        function o(e, i, n, r, s, a) {
          var o = m.intersect(e[0], e[1], e[6], e[7], i[0], i[1], i[6], i[7]);
          o && t(s, a, n, k.getTimeOf(e, o), r, k.getTimeOf(i, o));
        }
        function h(i, n, r, s, h, u) {
          var l = Math.min,
            d = Math.max;
          if (
            d(i[0], i[2], i[4], i[6]) + 1e-12 > l(n[0], n[2], n[4], n[6]) &&
            l(i[0], i[2], i[4], i[6]) - 1e-12 < d(n[0], n[2], n[4], n[6]) &&
            d(i[1], i[3], i[5], i[7]) + 1e-12 > l(n[1], n[3], n[5], n[7]) &&
            l(i[1], i[3], i[5], i[7]) - 1e-12 < d(n[1], n[3], n[5], n[7])
          ) {
            var _ = f(i, n);
            if (_)
              for (x = 0; x < 2; x++) {
                var g = _[x];
                t(h, u, r, g[0], s, g[1], !0);
              }
            else {
              var v = k.isStraight(i),
                p = k.isStraight(n),
                m = v && p,
                y = v && !p,
                w = h.length;
              if (
                ((m ? o : v || p ? a : e)(
                  y ? n : i,
                  y ? i : n,
                  y ? s : r,
                  y ? r : s,
                  h,
                  u,
                  y,
                  0,
                  0,
                  0,
                  1,
                  0,
                  1
                ),
                !m || h.length === w)
              )
                for (var x = 0; x < 4; x++) {
                  var b = x >> 1,
                    C = 1 & x,
                    S = 6 * b,
                    P = 6 * C,
                    I = new c(i[S], i[S + 1]),
                    M = new c(n[P], n[P + 1]);
                  I.isClose(M, 1e-12) && t(h, u, r, b, s, C);
                }
            }
          }
          return h;
        }
        function l(e, i, n, r) {
          var s = k.classify(e);
          if ("loop" === s.type) {
            var a = s.roots;
            t(n, r, i, a[0], i, a[1]);
          }
          return n;
        }
        function f(t, e) {
          function i(t) {
            var e = t[6] - t[0],
              i = t[7] - t[1];
            return e * e + i * i;
          }
          var n = Math.abs,
            r = m.getDistance,
            s = k.isStraight(t),
            a = k.isStraight(e),
            o = s && a,
            h = i(t) < i(e),
            u = h ? e : t,
            l = h ? t : e,
            f = u[0],
            d = u[1],
            _ = u[6] - f,
            g = u[7] - d;
          if (
            r(f, d, _, g, l[0], l[1], !0) < 1e-7 &&
            r(f, d, _, g, l[6], l[7], !0) < 1e-7
          )
            !o &&
              r(f, d, _, g, u[2], u[3], !0) < 1e-7 &&
              r(f, d, _, g, u[4], u[5], !0) < 1e-7 &&
              r(f, d, _, g, l[2], l[3], !0) < 1e-7 &&
              r(f, d, _, g, l[4], l[5], !0) < 1e-7 &&
              (s = a = o = !0);
          else if (o) return null;
          if (s ^ a) return null;
          for (var v = [t, e], p = [], y = 0; y < 4 && p.length < 2; y++) {
            var w = 1 & y,
              x = 1 ^ w,
              b = y >> 1,
              C = k.getTimeOf(v[w], new c(v[x][b ? 6 : 0], v[x][b ? 7 : 1]));
            if (null != C) {
              var S = w ? [b, C] : [C, b];
              (!p.length ||
                (n(S[0] - p[0][0]) > 1e-8 && n(S[1] - p[0][1]) > 1e-8)) &&
                p.push(S);
            }
            if (y > 2 && !p.length) break;
          }
          if (2 !== p.length) p = null;
          else if (!o) {
            var P = k.getPart(t, p[0][0], p[1][0]),
              I = k.getPart(e, p[0][1], p[1][1]);
            (n(I[2] - P[2]) > 1e-7 ||
              n(I[3] - P[3]) > 1e-7 ||
              n(I[4] - P[4]) > 1e-7 ||
              n(I[5] - P[5]) > 1e-7) &&
              (p = null);
          }
          return p;
        }
        return {
          getIntersections: function (t) {
            var e = this.getValues(),
              i = t && t !== this && t.getValues();
            return i ? h(e, i, this, t, []) : l(e, this, []);
          },
          statics: {
            getOverlaps: f,
            getIntersections: function (t, e, i, n, r, s) {
              var a = !e;
              a && (e = t);
              for (
                var o, u, c = t.length, f = e.length, d = [], _ = [], g = 0;
                g < f;
                g++
              )
                d[g] = e[g].getValues(r);
              for (g = 0; g < c; g++) {
                var v = t[g],
                  p = a ? d[g] : v.getValues(n),
                  m = v.getPath();
                m !== u && ((u = m), (o = []), _.push(o)), a && l(p, v, o, i);
                for (var y = a ? g + 1 : 0; y < f; y++) {
                  if (s && o.length) return o;
                  h(p, d[y], v, e[y], o, i);
                }
              }
              o = [];
              for (var g = 0, w = _.length; g < w; g++) o.push.apply(o, _[g]);
              return o;
            },
            getCurveLineIntersections: s,
          },
        };
      })()
    ),
    O = r.extend(
      {
        _class: "CurveLocation",
        initialize: function (t, e, i, n, r) {
          if (e >= 0.99999999) {
            var s = t.getNext();
            s && ((e = 0), (t = s));
          }
          this._setCurve(t),
            (this._time = e),
            (this._point = i || t.getPointAtTime(e)),
            (this._overlap = n),
            (this._distance = r),
            (this._intersection = this._next = this._previous = null);
        },
        _setCurve: function (t) {
          var e = t._path;
          (this._path = e),
            (this._version = e ? e._version : 0),
            (this._curve = t),
            (this._segment = null),
            (this._segment1 = t._segment1),
            (this._segment2 = t._segment2);
        },
        _setSegment: function (t) {
          this._setCurve(t.getCurve()),
            (this._segment = t),
            (this._time = t === this._segment1 ? 0 : 1),
            (this._point = t._point.clone());
        },
        getSegment: function () {
          var t = this._segment;
          if (!t) {
            var e = this.getCurve(),
              i = this.getTime();
            0 === i
              ? (t = e._segment1)
              : 1 === i
              ? (t = e._segment2)
              : null != i &&
                (t =
                  e.getPartLength(0, i) < e.getPartLength(i, 1)
                    ? e._segment1
                    : e._segment2),
              (this._segment = t);
          }
          return t;
        },
        getCurve: function () {
          function t(t) {
            var e = t && t.getCurve();
            if (e && null != (i._time = e.getTimeOf(i._point)))
              return i._setCurve(e), e;
          }
          var e = this._path,
            i = this;
          return (
            e &&
              e._version !== this._version &&
              (this._time =
                this._offset =
                this._curveOffset =
                this._curve =
                  null),
            this._curve ||
              t(this._segment) ||
              t(this._segment1) ||
              t(this._segment2.getPrevious())
          );
        },
        getPath: function () {
          var t = this.getCurve();
          return t && t._path;
        },
        getIndex: function () {
          var t = this.getCurve();
          return t && t.getIndex();
        },
        getTime: function () {
          var t = this.getCurve(),
            e = this._time;
          return t && null == e ? (this._time = t.getTimeOf(this._point)) : e;
        },
        getParameter: "#getTime",
        getPoint: function () {
          return this._point;
        },
        getOffset: function () {
          var t = this._offset;
          if (null == t) {
            t = 0;
            var e = this.getPath(),
              i = this.getIndex();
            if (e && null != i)
              for (var n = e.getCurves(), r = 0; r < i; r++)
                t += n[r].getLength();
            this._offset = t += this.getCurveOffset();
          }
          return t;
        },
        getCurveOffset: function () {
          var t = this._curveOffset;
          if (null == t) {
            var e = this.getCurve(),
              i = this.getTime();
            this._curveOffset = t = null != i && e && e.getPartLength(0, i);
          }
          return t;
        },
        getIntersection: function () {
          return this._intersection;
        },
        getDistance: function () {
          return this._distance;
        },
        divide: function () {
          var t = this.getCurve(),
            e = t && t.divideAtTime(this.getTime());
          return e && this._setSegment(e._segment1), e;
        },
        split: function () {
          var t = this.getCurve(),
            e = t._path,
            i = t && t.splitAtTime(this.getTime());
          return i && this._setSegment(e.getLastSegment()), i;
        },
        equals: function (t, e) {
          var i = this === t;
          if (!i && t instanceof O) {
            var n = this.getCurve(),
              r = t.getCurve(),
              s = n._path;
            if (s === r._path) {
              var a = Math.abs,
                o = a(this.getOffset() - t.getOffset()),
                h = !e && this._intersection,
                u = !e && t._intersection;
              i =
                (o < 1e-7 || (s && a(s.getLength() - o) < 1e-7)) &&
                ((!h && !u) || (h && u && h.equals(u, !0)));
            }
          }
          return i;
        },
        toString: function () {
          var t = [],
            e = this.getPoint(),
            i = h.instance;
          e && t.push("point: " + e);
          var n = this.getIndex();
          null != n && t.push("index: " + n);
          var r = this.getTime();
          return (
            null != r && t.push("time: " + i.number(r)),
            null != this._distance &&
              t.push("distance: " + i.number(this._distance)),
            "{ " + t.join(", ") + " }"
          );
        },
        isTouching: function () {
          var t = this._intersection;
          if (t && this.getTangent().isCollinear(t.getTangent())) {
            var e = this.getCurve(),
              i = t.getCurve();
            return !(
              e.isStraight() &&
              i.isStraight() &&
              e.getLine().intersect(i.getLine())
            );
          }
          return !1;
        },
        isCrossing: function () {
          function t(t, e) {
            var i = t.getValues(),
              n = k.classify(i).roots || k.getPeaks(i),
              r = n.length,
              s = e && r > 1 ? n[r - 1] : r > 0 ? n[0] : 0.5;
            c.push(k.getLength(i, e ? s : 0, e ? 1 : s) / 2);
          }
          function e(t, e, i) {
            return e < i ? t > e && t < i : t > e || t < i;
          }
          var i = this._intersection;
          if (!i) return !1;
          var n = this.getTime(),
            r = i.getTime(),
            s = n >= 1e-8 && n <= 1 - 1e-8,
            a = r >= 1e-8 && r <= 1 - 1e-8;
          if (s && a) return !this.isTouching();
          var o = this.getCurve(),
            h = n < 1e-8 ? o.getPrevious() : o,
            u = i.getCurve(),
            l = r < 1e-8 ? u.getPrevious() : u;
          if (
            (n > 1 - 1e-8 && (o = o.getNext()),
            r > 1 - 1e-8 && (u = u.getNext()),
            !(h && o && l && u))
          )
            return !1;
          var c = [];
          s || (t(h, !0), t(o, !1)), a || (t(l, !0), t(u, !1));
          var f = this.getPoint(),
            d = Math.min.apply(Math, c),
            _ = s ? o.getTangentAtTime(n) : o.getPointAt(d).subtract(f),
            g = s ? _.negate() : h.getPointAt(-d).subtract(f),
            v = a ? u.getTangentAtTime(r) : u.getPointAt(d).subtract(f),
            p = a ? v.negate() : l.getPointAt(-d).subtract(f),
            m = g.getAngle(),
            y = _.getAngle(),
            w = p.getAngle(),
            x = v.getAngle();
          return !!(s
            ? e(m, w, x) ^ e(y, w, x) && e(m, x, w) ^ e(y, x, w)
            : e(w, m, y) ^ e(x, m, y) && e(w, y, m) ^ e(x, y, m));
        },
        hasOverlap: function () {
          return !!this._overlap;
        },
      },
      r.each(
        k._evaluateMethods,
        function (t) {
          var e = t + "At";
          this[t] = function () {
            var t = this.getCurve(),
              i = this.getTime();
            return null != i && t && t[e](i, !0);
          };
        },
        { preserve: !0 }
      ),
      new (function () {
        function t(t, e, i) {
          function n(i, n) {
            for (var s = i + n; s >= -1 && s <= r; s += n) {
              var a = t[((s % r) + r) % r];
              if (!e.getPoint().isClose(a.getPoint(), 1e-7)) break;
              if (e.equals(a)) return a;
            }
            return null;
          }
          for (var r = t.length, s = 0, a = r - 1; s <= a; ) {
            var o,
              h = (s + a) >>> 1,
              u = t[h];
            if (i && (o = e.equals(u) ? u : n(h, -1) || n(h, 1)))
              return (
                e._overlap && (o._overlap = o._intersection._overlap = !0), o
              );
            var l = e.getPath(),
              c = u.getPath();
            (l !== c
              ? l._id - c._id
              : e.getIndex() + e.getTime() - (u.getIndex() + u.getTime())) < 0
              ? (a = h - 1)
              : (s = h + 1);
          }
          return t.splice(s, 0, e), e;
        }
        return {
          statics: {
            insert: t,
            expand: function (e) {
              for (var i = e.slice(), n = e.length - 1; n >= 0; n--)
                t(i, e[n]._intersection, !1);
              return i;
            },
          },
        };
      })()
    ),
    A = w.extend({
      _class: "PathItem",
      _selectBounds: !1,
      _canScaleStroke: !0,
      beans: !0,
      initialize: function () {},
      statics: {
        create: function (t) {
          var e, i, n;
          if (
            (r.isPlainObject(t)
              ? ((i = t.segments), (e = t.pathData))
              : Array.isArray(t)
              ? (i = t)
              : "string" == typeof t && (e = t),
            i)
          ) {
            var s = i[0];
            n = s && Array.isArray(s[0]);
          } else
            e && (n = (e.match(/m/gi) || []).length > 1 || /z\s*\S+/i.test(e));
          return new (n ? N : L)(t);
        },
      },
      _asPathItem: function () {
        return this;
      },
      isClockwise: function () {
        return this.getArea() >= 0;
      },
      setClockwise: function (t) {
        this.isClockwise() != (t = !!t) && this.reverse();
      },
      setPathData: function (t) {
        function e(t, e) {
          var i = +n[t];
          return o && (i += h[e]), i;
        }
        function i(t) {
          return new c(e(t, "x"), e(t + 1, "y"));
        }
        var n,
          r,
          s,
          a = t && t.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/gi),
          o = !1,
          h = new c(),
          u = new c();
        this.clear();
        for (var l = 0, f = a && a.length; l < f; l++) {
          var _ = a[l],
            g = _[0],
            v = g.toLowerCase(),
            p =
              (n = _.match(/[+-]?(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?/g)) &&
              n.length;
          switch (
            ((o = g === v), "z" !== r || /[mz]/.test(v) || this.moveTo(h), v)
          ) {
            case "m":
            case "l":
              for (var m = "m" === v, y = 0; y < p; y += 2)
                this[m ? "moveTo" : "lineTo"]((h = i(y))),
                  m && ((u = h), (m = !1));
              s = h;
              break;
            case "h":
            case "v":
              var w = "h" === v ? "x" : "y";
              h = h.clone();
              for (y = 0; y < p; y++) (h[w] = e(y, w)), this.lineTo(h);
              s = h;
              break;
            case "c":
              for (y = 0; y < p; y += 6)
                this.cubicCurveTo(i(y), (s = i(y + 2)), (h = i(y + 4)));
              break;
            case "s":
              for (y = 0; y < p; y += 4)
                this.cubicCurveTo(
                  /[cs]/.test(r) ? h.multiply(2).subtract(s) : h,
                  (s = i(y)),
                  (h = i(y + 2))
                ),
                  (r = v);
              break;
            case "q":
              for (y = 0; y < p; y += 4)
                this.quadraticCurveTo((s = i(y)), (h = i(y + 2)));
              break;
            case "t":
              for (y = 0; y < p; y += 2)
                this.quadraticCurveTo(
                  (s = /[qt]/.test(r) ? h.multiply(2).subtract(s) : h),
                  (h = i(y))
                ),
                  (r = v);
              break;
            case "a":
              for (y = 0; y < p; y += 7)
                this.arcTo(
                  (h = i(y + 5)),
                  new d(+n[y], +n[y + 1]),
                  +n[y + 2],
                  +n[y + 4],
                  +n[y + 3]
                );
              break;
            case "z":
              this.closePath(1e-12), (h = u);
          }
          r = v;
        }
      },
      _canComposite: function () {
        return !(this.hasFill() && this.hasStroke());
      },
      _contains: function (t) {
        var e = t.isInside(this.getBounds({ internal: !0, handle: !0 }))
          ? this._getWinding(t)
          : {};
        return (
          e.onPath ||
          !!("evenodd" === this.getFillRule()
            ? 1 & e.windingL || 1 & e.windingR
            : e.winding)
        );
      },
      getIntersections: function (t, e, i, n) {
        var r = this === t || !t,
          s = this._matrix._orNullIfIdentity(),
          a = r ? s : (i || t._matrix)._orNullIfIdentity();
        return r || this.getBounds(s).intersects(t.getBounds(a), 1e-12)
          ? k.getIntersections(
              this.getCurves(),
              !r && t.getCurves(),
              e,
              s,
              a,
              n
            )
          : [];
      },
      getCrossings: function (t) {
        return this.getIntersections(t, function (t) {
          return t.hasOverlap() || t.isCrossing();
        });
      },
      getNearestLocation: function () {
        for (
          var t = c.read(arguments),
            e = this.getCurves(),
            i = 1 / 0,
            n = null,
            r = 0,
            s = e.length;
          r < s;
          r++
        ) {
          var a = e[r].getNearestLocation(t);
          a._distance < i && ((i = a._distance), (n = a));
        }
        return n;
      },
      getNearestPoint: function () {
        var t = this.getNearestLocation.apply(this, arguments);
        return t ? t.getPoint() : t;
      },
      interpolate: function (t, e, i) {
        var n = !this._children,
          r = n ? "_segments" : "_children",
          s = t[r],
          a = e[r],
          o = this[r];
        if (!s || !a || s.length !== a.length)
          throw new Error(
            "Invalid operands in interpolate() call: " + t + ", " + e
          );
        var h = o.length,
          u = a.length;
        if (h < u) for (var l = n ? T : L, c = h; c < u; c++) this.add(new l());
        else h > u && this[n ? "removeSegments" : "removeChildren"](u, h);
        for (c = 0; c < u; c++) o[c].interpolate(s[c], a[c], i);
        n && (this.setClosed(t._closed), this._changed(9));
      },
      compare: function (t) {
        var e = !1;
        if (t) {
          var i = this._children || [this],
            n = t._children ? t._children.slice() : [t],
            r = i.length,
            s = n.length,
            a = [],
            o = 0;
          e = !0;
          for (var h = r - 1; h >= 0 && e; h--) {
            var u = i[h];
            e = !1;
            for (var l = s - 1; l >= 0 && !e; l--)
              u.compare(n[l]) && (a[l] || ((a[l] = !0), o++), (e = !0));
          }
          e = e && o === s;
        }
        return e;
      },
    }),
    L = A.extend(
      {
        _class: "Path",
        _serializeFields: { segments: [], closed: !1 },
        initialize: function (t) {
          (this._closed = !1), (this._segments = []), (this._version = 0);
          var i = Array.isArray(t)
            ? "object" == typeof t[0]
              ? t
              : arguments
            : !t || t.size !== e || (t.x === e && t.point === e)
            ? null
            : arguments;
          i && i.length > 0
            ? this.setSegments(i)
            : ((this._curves = e),
              (this._segmentSelection = 0),
              i || "string" != typeof t || (this.setPathData(t), (t = null))),
            this._initialize(!i && t);
        },
        _equals: function (t) {
          return (
            this._closed === t._closed && r.equals(this._segments, t._segments)
          );
        },
        copyContent: function (t) {
          this.setSegments(t._segments), (this._closed = t._closed);
        },
        _changed: function t(i) {
          if ((t.base.call(this, i), 8 & i)) {
            if (((this._length = this._area = e), 16 & i)) this._version++;
            else if (this._curves)
              for (var n = 0, r = this._curves.length; n < r; n++)
                this._curves[n]._changed();
          } else 32 & i && (this._bounds = e);
        },
        getStyle: function () {
          var t = this._parent;
          return (t instanceof N ? t : this)._style;
        },
        getSegments: function () {
          return this._segments;
        },
        setSegments: function (t) {
          var i = this.isFullySelected(),
            n = t && t.length;
          if (
            ((this._segments.length = 0),
            (this._segmentSelection = 0),
            (this._curves = e),
            n)
          ) {
            var r = t[n - 1];
            "boolean" == typeof r && (this.setClosed(r), n--),
              this._add(T.readList(t, 0, {}, n));
          }
          i && this.setFullySelected(!0);
        },
        getFirstSegment: function () {
          return this._segments[0];
        },
        getLastSegment: function () {
          return this._segments[this._segments.length - 1];
        },
        getCurves: function () {
          var t = this._curves,
            e = this._segments;
          if (!t) {
            var i = this._countCurves();
            t = this._curves = new Array(i);
            for (var n = 0; n < i; n++)
              t[n] = new k(this, e[n], e[n + 1] || e[0]);
          }
          return t;
        },
        getFirstCurve: function () {
          return this.getCurves()[0];
        },
        getLastCurve: function () {
          var t = this.getCurves();
          return t[t.length - 1];
        },
        isClosed: function () {
          return this._closed;
        },
        setClosed: function (t) {
          if (this._closed != (t = !!t)) {
            if (((this._closed = t), this._curves)) {
              var e = (this._curves.length = this._countCurves());
              t &&
                (this._curves[e - 1] = new k(
                  this,
                  this._segments[e - 1],
                  this._segments[0]
                ));
            }
            this._changed(25);
          }
        },
      },
      {
        beans: !0,
        getPathData: function (t, e) {
          function i(e, i) {
            if ((e._transformCoordinates(t, g), (n = g[0]), (r = g[1]), v))
              p.push("M" + _.pair(n, r)), (v = !1);
            else if (
              ((o = g[2]), (u = g[3]), o === n && u === r && l === s && c === a)
            ) {
              if (!i) {
                var h = n - s,
                  f = r - a;
                p.push(
                  0 === h
                    ? "v" + _.number(f)
                    : 0 === f
                    ? "h" + _.number(h)
                    : "l" + _.pair(h, f)
                );
              }
            } else
              p.push(
                "c" +
                  _.pair(l - s, c - a) +
                  " " +
                  _.pair(o - s, u - a) +
                  " " +
                  _.pair(n - s, r - a)
              );
            (s = n), (a = r), (l = g[4]), (c = g[5]);
          }
          var n,
            r,
            s,
            a,
            o,
            u,
            l,
            c,
            f = this._segments,
            d = f.length,
            _ = new h(e),
            g = new Array(6),
            v = !0,
            p = [];
          if (!d) return "";
          for (var m = 0; m < d; m++) i(f[m]);
          return (
            this._closed && d > 0 && (i(f[0], !0), p.push("z")), p.join("")
          );
        },
        isEmpty: function () {
          return !this._segments.length;
        },
        _transformContent: function (t) {
          for (
            var e = this._segments, i = new Array(6), n = 0, r = e.length;
            n < r;
            n++
          )
            e[n]._transformCoordinates(t, i, !0);
          return !0;
        },
        _add: function (t, e) {
          for (
            var i = this._segments,
              n = this._curves,
              r = t.length,
              s = null == e,
              e = s ? i.length : e,
              a = 0;
            a < r;
            a++
          ) {
            var o = t[a];
            o._path && (o = t[a] = o.clone()),
              (o._path = this),
              (o._index = e + a),
              o._selection && this._updateSelection(o, 0, o._selection);
          }
          if (s) i.push.apply(i, t);
          else {
            i.splice.apply(i, [e, 0].concat(t));
            for (var a = e + r, h = i.length; a < h; a++) i[a]._index = a;
          }
          if (n) {
            var u = this._countCurves(),
              l = e > 0 && e + r - 1 === u ? e - 1 : e,
              c = l,
              f = Math.min(l + r, u);
            t._curves &&
              (n.splice.apply(n, [l, 0].concat(t._curves)),
              (c += t._curves.length));
            for (a = c; a < f; a++) n.splice(a, 0, new k(this, null, null));
            this._adjustCurves(l, f);
          }
          return this._changed(25), t;
        },
        _adjustCurves: function (t, e) {
          for (var i, n = this._segments, r = this._curves, s = t; s < e; s++)
            ((i = r[s])._path = this),
              (i._segment1 = n[s]),
              (i._segment2 = n[s + 1] || n[0]),
              i._changed();
          (i = r[this._closed && !t ? n.length - 1 : t - 1]) &&
            ((i._segment2 = n[t] || n[0]), i._changed()),
            (i = r[e]) && ((i._segment1 = n[e]), i._changed());
        },
        _countCurves: function () {
          var t = this._segments.length;
          return !this._closed && t > 0 ? t - 1 : t;
        },
        add: function (t) {
          return arguments.length > 1 && "number" != typeof t
            ? this._add(T.readList(arguments))
            : this._add([T.read(arguments)])[0];
        },
        insert: function (t, e) {
          return arguments.length > 2 && "number" != typeof e
            ? this._add(T.readList(arguments, 1), t)
            : this._add([T.read(arguments, 1)], t)[0];
        },
        addSegment: function () {
          return this._add([T.read(arguments)])[0];
        },
        insertSegment: function (t) {
          return this._add([T.read(arguments, 1)], t)[0];
        },
        addSegments: function (t) {
          return this._add(T.readList(t));
        },
        insertSegments: function (t, e) {
          return this._add(T.readList(e), t);
        },
        removeSegment: function (t) {
          return this.removeSegments(t, t + 1)[0] || null;
        },
        removeSegments: function (t, e, i) {
          (t = t || 0), (e = r.pick(e, this._segments.length));
          var n = this._segments,
            s = this._curves,
            a = n.length,
            o = n.splice(t, e - t),
            h = o.length;
          if (!h) return o;
          for (l = 0; l < h; l++) {
            var u = o[l];
            u._selection && this._updateSelection(u, u._selection, 0),
              (u._index = u._path = null);
          }
          for (var l = t, c = n.length; l < c; l++) n[l]._index = l;
          if (s) {
            for (
              var f = t > 0 && e === a + (this._closed ? 1 : 0) ? t - 1 : t,
                l = (s = s.splice(f, h)).length - 1;
              l >= 0;
              l--
            )
              s[l]._path = null;
            i && (o._curves = s.slice(1)), this._adjustCurves(f, f);
          }
          return this._changed(25), o;
        },
        clear: "#removeSegments",
        hasHandles: function () {
          for (var t = this._segments, e = 0, i = t.length; e < i; e++)
            if (t[e].hasHandles()) return !0;
          return !1;
        },
        clearHandles: function () {
          for (var t = this._segments, e = 0, i = t.length; e < i; e++)
            t[e].clearHandles();
        },
        getLength: function () {
          if (null == this._length) {
            for (
              var t = this.getCurves(), e = 0, i = 0, n = t.length;
              i < n;
              i++
            )
              e += t[i].getLength();
            this._length = e;
          }
          return this._length;
        },
        getArea: function () {
          var t = this._area;
          if (null == t) {
            var e = this._segments,
              i = this._closed;
            t = 0;
            for (var n = 0, r = e.length; n < r; n++) {
              var s = n + 1 === r;
              t += k.getArea(
                k.getValues(e[n], e[s ? 0 : n + 1], null, s && !i)
              );
            }
            this._area = t;
          }
          return t;
        },
        isFullySelected: function () {
          var t = this._segments.length;
          return this.isSelected() && t > 0 && this._segmentSelection === 7 * t;
        },
        setFullySelected: function (t) {
          t && this._selectSegments(!0), this.setSelected(t);
        },
        setSelection: function t(e) {
          1 & e || this._selectSegments(!1), t.base.call(this, e);
        },
        _selectSegments: function (t) {
          var e = this._segments,
            i = e.length,
            n = t ? 7 : 0;
          this._segmentSelection = n * i;
          for (var r = 0; r < i; r++) e[r]._selection = n;
        },
        _updateSelection: function (t, e, i) {
          (t._selection = i),
            (this._segmentSelection += i - e) > 0 && this.setSelected(!0);
        },
        divideAt: function (t) {
          var e,
            i = this.getLocationAt(t);
          return i && (e = i.getCurve().divideAt(i.getCurveOffset()))
            ? e._segment1
            : null;
        },
        splitAt: function (t) {
          var e = this.getLocationAt(t),
            i = e && e.index,
            n = e && e.time;
          n > 1 - 1e-8 && (i++, (n = 0));
          var r = this.getCurves();
          if (i >= 0 && i < r.length) {
            n >= 1e-8 && r[i++].divideAtTime(n);
            var s,
              a = this.removeSegments(i, this._segments.length, !0);
            return (
              this._closed
                ? (this.setClosed(!1), (s = this))
                : ((s = new L(w.NO_INSERT)).insertAbove(this),
                  s.copyAttributes(this)),
              s._add(a, 0),
              this.addSegment(a[0]),
              s
            );
          }
          return null;
        },
        split: function (t, i) {
          var n,
            r =
              i === e ? t : (n = this.getCurves()[t]) && n.getLocationAtTime(i);
          return null != r ? this.splitAt(r) : null;
        },
        join: function (t, e) {
          var i = e || 0;
          if (t && t !== this) {
            var n = t._segments,
              r = this.getLastSegment(),
              s = t.getLastSegment();
            if (!s) return this;
            r && r._point.isClose(s._point, i) && t.reverse();
            var a = t.getFirstSegment();
            if (r && r._point.isClose(a._point, i))
              r.setHandleOut(a._handleOut), this._add(n.slice(1));
            else {
              var o = this.getFirstSegment();
              o && o._point.isClose(a._point, i) && t.reverse(),
                (s = t.getLastSegment()),
                o && o._point.isClose(s._point, i)
                  ? (o.setHandleIn(s._handleIn),
                    this._add(n.slice(0, n.length - 1), 0))
                  : this._add(n.slice());
            }
            t._closed && this._add([n[0]]), t.remove();
          }
          var h = this.getFirstSegment(),
            u = this.getLastSegment();
          return (
            h !== u &&
              h._point.isClose(u._point, i) &&
              (h.setHandleIn(u._handleIn), u.remove(), this.setClosed(!0)),
            this
          );
        },
        reduce: function (t) {
          for (
            var e = this.getCurves(),
              i = t && t.simplify,
              n = i ? 1e-7 : 0,
              r = e.length - 1;
            r >= 0;
            r--
          ) {
            var s = e[r];
            !s.hasHandles() &&
              (!s.hasLength(n) || (i && s.isCollinear(s.getNext()))) &&
              s.remove();
          }
          return this;
        },
        reverse: function () {
          this._segments.reverse();
          for (var t = 0, e = this._segments.length; t < e; t++) {
            var i = this._segments[t],
              n = i._handleIn;
            (i._handleIn = i._handleOut), (i._handleOut = n), (i._index = t);
          }
          (this._curves = null), this._changed(9);
        },
        flatten: function (t) {
          for (
            var e = new B(this, t || 0.25, 256, !0).parts,
              i = e.length,
              n = [],
              r = 0;
            r < i;
            r++
          )
            n.push(new T(e[r].curve.slice(0, 2)));
          !this._closed && i > 0 && n.push(new T(e[i - 1].curve.slice(6))),
            this.setSegments(n);
        },
        simplify: function (t) {
          var e = new D(this).fit(t || 2.5);
          return e && this.setSegments(e), !!e;
        },
        smooth: function (t) {
          function i(t, e) {
            var i = t && t.index;
            if (null != i) {
              var r = t.path;
              if (r && r !== n)
                throw new Error(
                  t._class + " " + i + " of " + r + " is not part of " + n
                );
              e && t instanceof k && i++;
            } else i = "number" == typeof t ? t : e;
            return Math.min(i < 0 && h ? i % o : i < 0 ? i + o : i, o - 1);
          }
          var n = this,
            r = t || {},
            s = r.type || "asymmetric",
            a = this._segments,
            o = a.length,
            h = this._closed,
            u = h && r.from === e && r.to === e,
            l = i(r.from, 0),
            c = i(r.to, o - 1);
          if (l > c)
            if (h) l -= o;
            else {
              var f = l;
              (l = c), (c = f);
            }
          if (/^(?:asymmetric|continuous)$/.test(s)) {
            var d = "asymmetric" === s,
              _ = Math.min,
              g = c - l + 1,
              v = g - 1,
              p = u ? _(g, 4) : 1,
              m = p,
              y = p,
              w = [];
            if (
              (h || ((m = _(1, l)), (y = _(1, o - c - 1))), (v += m + y) <= 1)
            )
              return;
            for (var x = 0, b = l - m; x <= v; x++, b++)
              w[x] = a[(b < 0 ? b + o : b) % o]._point;
            for (
              var C = w[0]._x + 2 * w[1]._x,
                S = w[0]._y + 2 * w[1]._y,
                P = 2,
                I = v - 1,
                M = [C],
                T = [S],
                z = [P],
                O = [],
                A = [],
                x = 1;
              x < v;
              x++
            ) {
              var L = x < I,
                N = L ? 1 : d ? 1 : 2,
                B = L ? 4 : d ? 2 : 7,
                D = L ? 4 : d ? 3 : 8,
                j = L ? 2 : d ? 0 : 1,
                E = N / P;
              (P = z[x] = B - E),
                (C = M[x] = D * w[x]._x + j * w[x + 1]._x - E * C),
                (S = T[x] = D * w[x]._y + j * w[x + 1]._y - E * S);
            }
            (O[I] = M[I] / z[I]), (A[I] = T[I] / z[I]);
            for (x = v - 2; x >= 0; x--)
              (O[x] = (M[x] - O[x + 1]) / z[x]),
                (A[x] = (T[x] - A[x + 1]) / z[x]);
            (O[v] = (3 * w[v]._x - O[I]) / 2),
              (A[v] = (3 * w[v]._y - A[I]) / 2);
            for (var x = m, F = v - y, b = l; x <= F; x++, b++) {
              var R = a[b < 0 ? b + o : b],
                q = R._point,
                V = O[x] - q._x,
                H = A[x] - q._y;
              (u || x < F) && R.setHandleOut(V, H),
                (u || x > m) && R.setHandleIn(-V, -H);
            }
          } else
            for (x = l; x <= c; x++)
              a[x < 0 ? x + o : x].smooth(r, !u && x === l, !u && x === c);
        },
        toShape: function (t) {
          function i(t, e) {
            var i = l[t],
              n = i.getNext(),
              r = l[e],
              s = r.getNext();
            return (
              i._handleOut.isZero() &&
              n._handleIn.isZero() &&
              r._handleOut.isZero() &&
              s._handleIn.isZero() &&
              n._point
                .subtract(i._point)
                .isCollinear(s._point.subtract(r._point))
            );
          }
          function n(t) {
            var e = l[t],
              i = e.getNext(),
              n = e._handleOut,
              r = i._handleIn;
            if (n.isOrthogonal(r)) {
              var s = e._point,
                a = i._point,
                o = new m(s, n, !0).intersect(new m(a, r, !0), !0);
              return (
                o &&
                u.isZero(
                  n.getLength() / o.subtract(s).getLength() - 0.5522847498307936
                ) &&
                u.isZero(
                  r.getLength() / o.subtract(a).getLength() - 0.5522847498307936
                )
              );
            }
            return !1;
          }
          function r(t, e) {
            return l[t]._point.getDistance(l[e]._point);
          }
          if (!this._closed) return null;
          var s,
            a,
            o,
            h,
            l = this._segments;
          if (
            (!this.hasHandles() &&
            4 === l.length &&
            i(0, 2) &&
            i(1, 3) &&
            (function (t) {
              var e = l[t],
                i = e.getPrevious(),
                n = e.getNext();
              return (
                i._handleOut.isZero() &&
                e._handleIn.isZero() &&
                e._handleOut.isZero() &&
                n._handleIn.isZero() &&
                e._point
                  .subtract(i._point)
                  .isOrthogonal(n._point.subtract(e._point))
              );
            })(1)
              ? ((s = C.Rectangle),
                (a = new d(r(0, 3), r(0, 1))),
                (h = l[1]._point.add(l[2]._point).divide(2)))
              : 8 === l.length &&
                n(0) &&
                n(2) &&
                n(4) &&
                n(6) &&
                i(1, 5) &&
                i(3, 7)
              ? ((s = C.Rectangle),
                (o = (a = new d(r(1, 6), r(0, 3)))
                  .subtract(new d(r(0, 7), r(1, 2)))
                  .divide(2)),
                (h = l[3]._point.add(l[4]._point).divide(2)))
              : 4 === l.length &&
                n(0) &&
                n(1) &&
                n(2) &&
                n(3) &&
                (u.isZero(r(0, 2) - r(1, 3))
                  ? ((s = C.Circle), (o = r(0, 2) / 2))
                  : ((s = C.Ellipse), (o = new d(r(2, 0) / 2, r(3, 1) / 2))),
                (h = l[1]._point)),
            s)
          ) {
            var c = this.getPosition(!0),
              f = new s({ center: c, size: a, radius: o, insert: !1 });
            return (
              f.copyAttributes(this, !0),
              f._matrix.prepend(this._matrix),
              f.rotate(h.subtract(c).getAngle() + 90),
              (t === e || t) && f.insertAbove(this),
              f
            );
          }
          return null;
        },
        toPath: "#clone",
        compare: function t(e) {
          if (!e || e instanceof N) return t.base.call(this, e);
          var i = this.getCurves(),
            n = e.getCurves(),
            r = i.length,
            s = n.length;
          if (!r || !s) return r == s;
          for (
            var a, o, h = i[0].getValues(), u = [], l = 0, c = 0, f = 0;
            f < s;
            f++
          ) {
            g = n[f].getValues();
            if ((u.push(g), (v = k.getOverlaps(h, g)))) {
              (a = !f && v[0][0] > 0 ? s - 1 : f), (o = v[0][1]);
              break;
            }
          }
          for (var d, _ = Math.abs, g = u[a]; h && g; ) {
            var v = k.getOverlaps(h, g);
            if (v && _(v[0][0] - c) < 1e-8) {
              1 === (c = v[1][0]) &&
                ((h = ++l < r ? i[l].getValues() : null), (c = 0));
              var p = v[0][1];
              if (_(p - o) < 1e-8) {
                if (
                  (d || (d = [a, p]),
                  1 === (o = v[1][1]) &&
                    (++a >= s && (a = 0),
                    (g = u[a] || n[a].getValues()),
                    (o = 0)),
                  !h)
                )
                  return d[0] === a && d[1] === o;
                continue;
              }
            }
            break;
          }
          return !1;
        },
        _hitTestSelf: function (t, e, i, n) {
          function r(e, i) {
            return t.subtract(e).divide(i).length <= 1;
          }
          function s(t, i, n) {
            if (!e.selected || i.isSelected()) {
              var s = t._point;
              if ((i !== s && (i = i.add(s)), r(i, x)))
                return new M(n, g, { segment: t, point: i });
            }
          }
          function a(t, i) {
            return (
              ((i || e.segments) && s(t, t._point, "segment")) ||
              (!i &&
                e.handles &&
                (s(t, t._handleIn, "handle-in") ||
                  s(t, t._handleOut, "handle-out")))
            );
          }
          function o(t) {
            f.add(t);
          }
          function h(e) {
            var i = y || (e._index > 0 && e._index < m - 1);
            if ("round" === (i ? u : l)) return r(e._point, x);
            if (
              ((f = new L({ internal: !0, closed: !0 })),
              i
                ? e.isSmooth() || L._addBevelJoin(e, u, P, c, null, n, o, !0)
                : "square" === l && L._addSquareCap(e, l, P, null, n, o, !0),
              !f.isEmpty())
            ) {
              var s;
              return (
                f.contains(t) ||
                ((s = f.getNearestLocation(t)) && r(s.getPoint(), w))
              );
            }
          }
          var u,
            l,
            c,
            f,
            d,
            _,
            g = this,
            v = this.getStyle(),
            p = this._segments,
            m = p.length,
            y = this._closed,
            w = e._tolerancePadding,
            x = w,
            b = e.stroke && v.hasStroke(),
            C = e.fill && v.hasFill(),
            S = e.curves,
            P = b
              ? v.getStrokeWidth() / 2
              : (C && e.tolerance > 0) || S
              ? 0
              : null;
          if (
            (null !== P &&
              (P > 0
                ? ((u = v.getStrokeJoin()),
                  (l = v.getStrokeCap()),
                  (c = v.getMiterLimit()),
                  (x = x.add(L._getStrokePadding(P, n))))
                : (u = l = "round")),
            !e.ends || e.segments || y)
          ) {
            if (e.segments || e.handles)
              for (T = 0; T < m; T++) if ((_ = a(p[T]))) return _;
          } else if ((_ = a(p[0], !0) || a(p[m - 1], !0))) return _;
          if (null !== P) {
            if ((d = this.getNearestLocation(t))) {
              var I = d.getTime();
              0 === I || (1 === I && m > 1)
                ? h(d.getSegment()) || (d = null)
                : r(d.getPoint(), x) || (d = null);
            }
            if (!d && "miter" === u && m > 1)
              for (var T = 0; T < m; T++) {
                var z = p[T];
                if (t.getDistance(z._point) <= c * P && h(z)) {
                  d = z.getLocation();
                  break;
                }
              }
          }
          return (!d && C && this._contains(t)) || (d && !b && !S)
            ? new M("fill", this)
            : d
            ? new M(b ? "stroke" : "curve", this, {
                location: d,
                point: d.getPoint(),
              })
            : null;
        },
      },
      r.each(
        k._evaluateMethods,
        function (t) {
          this[t + "At"] = function (e) {
            var i = this.getLocationAt(e);
            return i && i[t]();
          };
        },
        {
          beans: !1,
          getLocationOf: function () {
            for (
              var t = c.read(arguments),
                e = this.getCurves(),
                i = 0,
                n = e.length;
              i < n;
              i++
            ) {
              var r = e[i].getLocationOf(t);
              if (r) return r;
            }
            return null;
          },
          getOffsetOf: function () {
            var t = this.getLocationOf.apply(this, arguments);
            return t ? t.getOffset() : null;
          },
          getLocationAt: function (t) {
            if ("number" == typeof t) {
              for (
                var e = this.getCurves(), i = 0, n = 0, r = e.length;
                n < r;
                n++
              ) {
                var s = i,
                  a = e[n];
                if ((i += a.getLength()) > t) return a.getLocationAt(t - s);
              }
              if (e.length > 0 && t <= this.getLength())
                return new O(e[e.length - 1], 1);
            } else if (t && t.getPath && t.getPath() === this) return t;
            return null;
          },
        }
      ),
      new (function () {
        function t(t, e, i, n) {
          function r(e) {
            var i = h[e],
              n = h[e + 1];
            (s == i && a == n) ||
              (t.beginPath(),
              t.moveTo(s, a),
              t.lineTo(i, n),
              t.stroke(),
              t.beginPath(),
              t.arc(i, n, o, 0, 2 * Math.PI, !0),
              t.fill());
          }
          for (
            var s, a, o = n / 2, h = new Array(6), u = 0, l = e.length;
            u < l;
            u++
          ) {
            var c = e[u],
              f = c._selection;
            if (
              (c._transformCoordinates(i, h),
              (s = h[0]),
              (a = h[1]),
              2 & f && r(2),
              4 & f && r(4),
              t.fillRect(s - o, a - o, n, n),
              !(1 & f))
            ) {
              var d = t.fillStyle;
              (t.fillStyle = "#ffffff"),
                t.fillRect(s - o + 1, a - o + 1, n - 2, n - 2),
                (t.fillStyle = d);
            }
          }
        }
        function e(t, e, i) {
          function n(e) {
            if (i) e._transformCoordinates(i, _), (r = _[0]), (s = _[1]);
            else {
              var n = e._point;
              (r = n._x), (s = n._y);
            }
            if (g) t.moveTo(r, s), (g = !1);
            else {
              if (i) (h = _[2]), (u = _[3]);
              else {
                f = e._handleIn;
                (h = r + f._x), (u = s + f._y);
              }
              h === r && u === s && l === a && c === o
                ? t.lineTo(r, s)
                : t.bezierCurveTo(l, c, h, u, r, s);
            }
            if (((a = r), (o = s), i)) (l = _[4]), (c = _[5]);
            else {
              var f = e._handleOut;
              (l = a + f._x), (c = o + f._y);
            }
          }
          for (
            var r,
              s,
              a,
              o,
              h,
              u,
              l,
              c,
              f = e._segments,
              d = f.length,
              _ = new Array(6),
              g = !0,
              v = 0;
            v < d;
            v++
          )
            n(f[v]);
          e._closed && d > 0 && n(f[0]);
        }
        return {
          _draw: function (t, i, n, r) {
            function s(t) {
              return c[((t % f) + f) % f];
            }
            var a = i.dontStart,
              o = i.dontFinish || i.clip,
              h = this.getStyle(),
              u = h.hasFill(),
              l = h.hasStroke(),
              c = h.getDashArray(),
              f = !paper.support.nativeDash && l && c && c.length;
            if (
              (a || t.beginPath(),
              (u || (l && !f) || o) &&
                (e(t, this, r), this._closed && t.closePath()),
              !o &&
                (u || l) &&
                (this._setStyles(t, i, n),
                u &&
                  (t.fill(h.getFillRule()), (t.shadowColor = "rgba(0,0,0,0)")),
                l))
            ) {
              if (f) {
                a || t.beginPath();
                var d,
                  _ = new B(this, 0.25, 32, !1, r),
                  g = _.length,
                  v = -h.getDashOffset(),
                  p = 0;
                for (v %= g; v > 0; ) v -= s(p--) + s(p--);
                for (; v < g; )
                  (d = v + s(p++)),
                    (v > 0 || d > 0) &&
                      _.drawPart(t, Math.max(v, 0), Math.max(d, 0)),
                    (v = d + s(p++));
              }
              t.stroke();
            }
          },
          _drawSelected: function (i, n) {
            i.beginPath(),
              e(i, this, n),
              i.stroke(),
              t(i, this._segments, n, paper.settings.handleSize);
          },
        };
      })(),
      new (function () {
        function t(t) {
          var e = t._segments;
          if (!e.length) throw new Error("Use a moveTo() command first");
          return e[e.length - 1];
        }
        return {
          moveTo: function () {
            var t = this._segments;
            1 === t.length && this.removeSegment(0),
              t.length || this._add([new T(c.read(arguments))]);
          },
          moveBy: function () {
            throw new Error("moveBy() is unsupported on Path items.");
          },
          lineTo: function () {
            this._add([new T(c.read(arguments))]);
          },
          cubicCurveTo: function () {
            var e = c.read(arguments),
              i = c.read(arguments),
              n = c.read(arguments),
              r = t(this);
            r.setHandleOut(e.subtract(r._point)),
              this._add([new T(n, i.subtract(n))]);
          },
          quadraticCurveTo: function () {
            var e = c.read(arguments),
              i = c.read(arguments),
              n = t(this)._point;
            this.cubicCurveTo(
              e.add(n.subtract(e).multiply(1 / 3)),
              e.add(i.subtract(e).multiply(1 / 3)),
              i
            );
          },
          curveTo: function () {
            var e = c.read(arguments),
              i = c.read(arguments),
              n = r.pick(r.read(arguments), 0.5),
              s = 1 - n,
              a = t(this)._point,
              o = e
                .subtract(a.multiply(s * s))
                .subtract(i.multiply(n * n))
                .divide(2 * n * s);
            if (o.isNaN())
              throw new Error(
                "Cannot put a curve through points with parameter = " + n
              );
            this.quadraticCurveTo(o, i);
          },
          arcTo: function () {
            var e,
              i,
              n,
              s,
              a = Math.abs,
              o = Math.sqrt,
              h = t(this),
              l = h._point,
              f = c.read(arguments),
              _ = r.peek(arguments);
            if ("boolean" == typeof (x = r.pick(_, !0)))
              var g = (C = l.add(f).divide(2)).add(
                C.subtract(l).rotate(x ? -90 : 90)
              );
            else if (r.remain(arguments) <= 2) (g = f), (f = c.read(arguments));
            else {
              var v = d.read(arguments),
                y = u.isZero;
              if (y(v.width) || y(v.height)) return this.lineTo(f);
              var w = r.read(arguments),
                x = !!r.read(arguments),
                b = !!r.read(arguments),
                C = l.add(f).divide(2),
                S = (W = l.subtract(C).rotate(-w)).x,
                P = W.y,
                I = a(v.width),
                M = a(v.height),
                z = I * I,
                k = M * M,
                O = S * S,
                A = P * P,
                L = o(O / z + A / k);
              if (
                (L > 1 && ((z = (I *= L) * I), (k = (M *= L) * M)),
                (L = (z * k - z * A - k * O) / (z * A + k * O)),
                a(L) < 1e-12 && (L = 0),
                L < 0)
              )
                throw new Error(
                  "Cannot create an arc with the given arguments"
                );
              (e = new c((I * P) / M, (-M * S) / I)
                .multiply((b === x ? -1 : 1) * o(L))
                .rotate(w)
                .add(C)),
                (i = (n = (s = new p()
                  .translate(e)
                  .rotate(w)
                  .scale(I, M))._inverseTransform(l)).getDirectedAngle(
                  s._inverseTransform(f)
                )),
                !x && i > 0 ? (i -= 360) : x && i < 0 && (i += 360);
            }
            if (g) {
              var N = new m(l.add(g).divide(2), g.subtract(l).rotate(90), !0),
                B = new m(g.add(f).divide(2), f.subtract(g).rotate(90), !0),
                D = new m(l, f),
                j = D.getSide(g);
              if (!(e = N.intersect(B, !0))) {
                if (!j) return this.lineTo(f);
                throw new Error(
                  "Cannot create an arc with the given arguments"
                );
              }
              i = (n = l.subtract(e)).getDirectedAngle(f.subtract(e));
              var E = D.getSide(e);
              0 === E ? (i = j * a(i)) : j === E && (i += i < 0 ? 360 : -360);
            }
            for (
              var F = a(i),
                R = F >= 360 ? 4 : Math.ceil((F - 1e-7) / 90),
                q = i / R,
                V = (q * Math.PI) / 360,
                H = ((4 / 3) * Math.sin(V)) / (1 + Math.cos(V)),
                Z = [],
                U = 0;
              U <= R;
              U++
            ) {
              var W = f,
                G = null;
              if (
                (U < R &&
                  ((G = n.rotate(90).multiply(H)),
                  s
                    ? ((W = s._transformPoint(n)),
                      (G = s._transformPoint(n.add(G)).subtract(W)))
                    : (W = e.add(n))),
                U)
              ) {
                var J = n.rotate(-90).multiply(H);
                s && (J = s._transformPoint(n.add(J)).subtract(W)),
                  Z.push(new T(W, J, G));
              } else h.setHandleOut(G);
              n = n.rotate(q);
            }
            this._add(Z);
          },
          lineBy: function () {
            var e = c.read(arguments),
              i = t(this)._point;
            this.lineTo(i.add(e));
          },
          curveBy: function () {
            var e = c.read(arguments),
              i = c.read(arguments),
              n = r.read(arguments),
              s = t(this)._point;
            this.curveTo(s.add(e), s.add(i), n);
          },
          cubicCurveBy: function () {
            var e = c.read(arguments),
              i = c.read(arguments),
              n = c.read(arguments),
              r = t(this)._point;
            this.cubicCurveTo(r.add(e), r.add(i), r.add(n));
          },
          quadraticCurveBy: function () {
            var e = c.read(arguments),
              i = c.read(arguments),
              n = t(this)._point;
            this.quadraticCurveTo(n.add(e), n.add(i));
          },
          arcBy: function () {
            var e = t(this)._point,
              i = e.add(c.read(arguments)),
              n = r.pick(r.peek(arguments), !0);
            "boolean" == typeof n
              ? this.arcTo(i, n)
              : this.arcTo(i, e.add(c.read(arguments)));
          },
          closePath: function (t) {
            this.setClosed(!0), this.join(this, t);
          },
        };
      })(),
      {
        _getBounds: function (t, e) {
          var i = e.handle
            ? "getHandleBounds"
            : e.stroke
            ? "getStrokeBounds"
            : "getBounds";
          return L[i](this._segments, this._closed, this, t, e);
        },
        statics: {
          getBounds: function (t, e, i, n, r, s) {
            function a(t) {
              t._transformCoordinates(n, h);
              for (var e = 0; e < 2; e++)
                k._addBounds(
                  u[e],
                  u[e + 4],
                  h[e + 2],
                  h[e],
                  e,
                  s ? s[e] : 0,
                  l,
                  c,
                  f
                );
              var i = u;
              (u = h), (h = i);
            }
            var o = t[0];
            if (!o) return new g();
            for (
              var h = new Array(6),
                u = o._transformCoordinates(n, new Array(6)),
                l = u.slice(0, 2),
                c = l.slice(),
                f = new Array(2),
                d = 1,
                _ = t.length;
              d < _;
              d++
            )
              a(t[d]);
            return e && a(o), new g(l[0], l[1], c[0] - l[0], c[1] - l[1]);
          },
          getStrokeBounds: function (t, e, i, n, r) {
            function s(t) {
              v = v.include(t);
            }
            function a(t) {
              v = v.unite(x.setCenter(t._point.transform(n)));
            }
            function o(t, e) {
              "round" === e || t.isSmooth()
                ? a(t)
                : L._addBevelJoin(t, e, p, w, n, f, s);
            }
            function h(t, e) {
              "round" === e ? a(t) : L._addSquareCap(t, e, p, n, f, s);
            }
            var u = i.getStyle(),
              l = u.hasStroke(),
              c = u.getStrokeWidth(),
              f = l && i._getStrokeMatrix(n, r),
              _ = l && L._getStrokePadding(c, f),
              v = L.getBounds(t, e, i, n, r, _);
            if (!l) return v;
            for (
              var p = c / 2,
                m = u.getStrokeJoin(),
                y = u.getStrokeCap(),
                w = u.getMiterLimit(),
                x = new g(new d(_)),
                b = t.length - (e ? 0 : 1),
                C = 1;
              C < b;
              C++
            )
              o(t[C], m);
            return (
              e ? o(t[0], m) : b > 0 && (h(t[0], y), h(t[t.length - 1], y)), v
            );
          },
          _getStrokePadding: function (t, e) {
            if (!e) return [t, t];
            var i = new c(t, 0).transform(e),
              n = new c(0, t).transform(e),
              r = i.getAngleInRadians(),
              s = i.getLength(),
              a = n.getLength(),
              o = Math.sin(r),
              h = Math.cos(r),
              u = Math.tan(r),
              l = Math.atan2(a * u, s),
              f = Math.atan2(a, u * s);
            return [
              Math.abs(s * Math.cos(l) * h + a * Math.sin(l) * o),
              Math.abs(a * Math.sin(f) * h + s * Math.cos(f) * o),
            ];
          },
          _addBevelJoin: function (t, e, i, n, r, s, a, o) {
            var h = t.getCurve(),
              u = h.getPrevious(),
              l = h.getPoint1().transform(r),
              f = u.getNormalAtTime(1).multiply(i).transform(s),
              d = h.getNormalAtTime(0).multiply(i).transform(s);
            if (
              (f.getDirectedAngle(d) < 0 &&
                ((f = f.negate()), (d = d.negate())),
              o && a(l),
              a(l.add(f)),
              "miter" === e)
            ) {
              var _ = new m(l.add(f), new c(-f.y, f.x), !0).intersect(
                new m(l.add(d), new c(-d.y, d.x), !0),
                !0
              );
              _ && l.getDistance(_) <= n * i && a(_);
            }
            a(l.add(d));
          },
          _addSquareCap: function (t, e, i, n, r, s, a) {
            var o = t._point.transform(n),
              h = t.getLocation(),
              u = h
                .getNormal()
                .multiply(0 === h.getTime() ? i : -i)
                .transform(r);
            "square" === e &&
              (a && (s(o.subtract(u)), s(o.add(u))),
              (o = o.add(u.rotate(-90)))),
              s(o.add(u)),
              s(o.subtract(u));
          },
          getHandleBounds: function (t, e, i, n, r) {
            var s,
              a,
              o = i.getStyle();
            if (r.stroke && o.hasStroke()) {
              var h = i._getStrokeMatrix(n, r),
                u = o.getStrokeWidth() / 2,
                l = u;
              "miter" === o.getStrokeJoin() && (l = u * o.getMiterLimit()),
                "square" === o.getStrokeCap() &&
                  (l = Math.max(l, u * Math.SQRT2)),
                (s = L._getStrokePadding(u, h)),
                (a = L._getStrokePadding(l, h));
            }
            for (
              var c = new Array(6),
                f = 1 / 0,
                d = -f,
                _ = f,
                v = d,
                p = 0,
                m = t.length;
              p < m;
              p++
            ) {
              t[p]._transformCoordinates(n, c);
              for (var y = 0; y < 6; y += 2) {
                var w = y ? s : a,
                  x = w ? w[0] : 0,
                  b = w ? w[1] : 0,
                  C = c[y],
                  S = c[y + 1],
                  P = C - x,
                  I = C + x,
                  M = S - b,
                  T = S + b;
                P < f && (f = P),
                  I > d && (d = I),
                  M < _ && (_ = M),
                  T > v && (v = T);
              }
            }
            return new g(f, _, d - f, v - _);
          },
        },
      }
    );
  L.inject({
    statics: new (function () {
      function t(t, e, i) {
        var n = r.getNamed(i),
          s = new L(n && 0 == n.insert && w.NO_INSERT);
        return s._add(t), (s._closed = e), s.set(n, { insert: !0 });
      }
      function e(e, i, r) {
        for (var s = new Array(4), a = 0; a < 4; a++) {
          var o = n[a];
          s[a] = new T(
            o._point.multiply(i).add(e),
            o._handleIn.multiply(i),
            o._handleOut.multiply(i)
          );
        }
        return t(s, !0, r);
      }
      var i = 0.5522847498307936,
        n = [
          new T([-1, 0], [0, i], [0, -i]),
          new T([0, -1], [-i, 0], [i, 0]),
          new T([1, 0], [0, -i], [0, i]),
          new T([0, 1], [i, 0], [-i, 0]),
        ];
      return {
        Line: function () {
          return t(
            [
              new T(c.readNamed(arguments, "from")),
              new T(c.readNamed(arguments, "to")),
            ],
            !1,
            arguments
          );
        },
        Circle: function () {
          var t = c.readNamed(arguments, "center"),
            i = r.readNamed(arguments, "radius");
          return e(t, new d(i), arguments);
        },
        Rectangle: function () {
          var e,
            n = g.readNamed(arguments, "rectangle"),
            r = d.readNamed(arguments, "radius", 0, { readNull: !0 }),
            s = n.getBottomLeft(!0),
            a = n.getTopLeft(!0),
            o = n.getTopRight(!0),
            h = n.getBottomRight(!0);
          if (!r || r.isZero()) e = [new T(s), new T(a), new T(o), new T(h)];
          else {
            var u = (r = d.min(r, n.getSize(!0).divide(2))).width,
              l = r.height,
              c = u * i,
              f = l * i;
            e = [
              new T(s.add(u, 0), null, [-c, 0]),
              new T(s.subtract(0, l), [0, f]),
              new T(a.add(0, l), null, [0, -f]),
              new T(a.add(u, 0), [-c, 0], null),
              new T(o.subtract(u, 0), null, [c, 0]),
              new T(o.add(0, l), [0, -f], null),
              new T(h.subtract(0, l), null, [0, f]),
              new T(h.subtract(u, 0), [c, 0]),
            ];
          }
          return t(e, !0, arguments);
        },
        RoundRectangle: "#Rectangle",
        Ellipse: function () {
          var t = C._readEllipse(arguments);
          return e(t.center, t.radius, arguments);
        },
        Oval: "#Ellipse",
        Arc: function () {
          var t = c.readNamed(arguments, "from"),
            e = c.readNamed(arguments, "through"),
            i = c.readNamed(arguments, "to"),
            n = r.getNamed(arguments),
            s = new L(n && 0 == n.insert && w.NO_INSERT);
          return s.moveTo(t), s.arcTo(e, i), s.set(n);
        },
        RegularPolygon: function () {
          for (
            var e = c.readNamed(arguments, "center"),
              i = r.readNamed(arguments, "sides"),
              n = r.readNamed(arguments, "radius"),
              s = 360 / i,
              a = i % 3 == 0,
              o = new c(0, a ? -n : n),
              h = a ? -1 : 0.5,
              u = new Array(i),
              l = 0;
            l < i;
            l++
          )
            u[l] = new T(e.add(o.rotate((l + h) * s)));
          return t(u, !0, arguments);
        },
        Star: function () {
          for (
            var e = c.readNamed(arguments, "center"),
              i = 2 * r.readNamed(arguments, "points"),
              n = r.readNamed(arguments, "radius1"),
              s = r.readNamed(arguments, "radius2"),
              a = 360 / i,
              o = new c(0, -1),
              h = new Array(i),
              u = 0;
            u < i;
            u++
          )
            h[u] = new T(e.add(o.rotate(a * u).multiply(u % 2 ? s : n)));
          return t(h, !0, arguments);
        },
      };
    })(),
  });
  var N = A.extend(
    {
      _class: "CompoundPath",
      _serializeFields: { children: [] },
      beans: !0,
      initialize: function (t) {
        (this._children = []),
          (this._namedChildren = {}),
          this._initialize(t) ||
            ("string" == typeof t
              ? this.setPathData(t)
              : this.addChildren(Array.isArray(t) ? t : arguments));
      },
      insertChildren: function t(e, i) {
        var n = i,
          s = n[0];
        s && "number" == typeof s[0] && (n = [n]);
        for (var a = i.length - 1; a >= 0; a--) {
          var o = n[a];
          n !== i || o instanceof L || (n = r.slice(n)),
            Array.isArray(o)
              ? (n[a] = new L({ segments: o, insert: !1 }))
              : o instanceof N &&
                (n.splice.apply(n, [a, 1].concat(o.removeChildren())),
                o.remove());
        }
        return t.base.call(this, e, n);
      },
      reduce: function t(e) {
        for (var i = this._children, n = i.length - 1; n >= 0; n--)
          (r = i[n].reduce(e)).isEmpty() && r.remove();
        if (!i.length) {
          var r = new L(w.NO_INSERT);
          return r.copyAttributes(this), r.insertAbove(this), this.remove(), r;
        }
        return t.base.call(this);
      },
      isClosed: function () {
        for (var t = this._children, e = 0, i = t.length; e < i; e++)
          if (!t[e]._closed) return !1;
        return !0;
      },
      setClosed: function (t) {
        for (var e = this._children, i = 0, n = e.length; i < n; i++)
          e[i].setClosed(t);
      },
      getFirstSegment: function () {
        var t = this.getFirstChild();
        return t && t.getFirstSegment();
      },
      getLastSegment: function () {
        var t = this.getLastChild();
        return t && t.getLastSegment();
      },
      getCurves: function () {
        for (var t = this._children, e = [], i = 0, n = t.length; i < n; i++)
          e.push.apply(e, t[i].getCurves());
        return e;
      },
      getFirstCurve: function () {
        var t = this.getFirstChild();
        return t && t.getFirstCurve();
      },
      getLastCurve: function () {
        var t = this.getLastChild();
        return t && t.getLastCurve();
      },
      getArea: function () {
        for (var t = this._children, e = 0, i = 0, n = t.length; i < n; i++)
          e += t[i].getArea();
        return e;
      },
      getLength: function () {
        for (var t = this._children, e = 0, i = 0, n = t.length; i < n; i++)
          e += t[i].getLength();
        return e;
      },
      getPathData: function (t, e) {
        for (var i = this._children, n = [], r = 0, s = i.length; r < s; r++) {
          var a = i[r],
            o = a._matrix;
          n.push(a.getPathData(t && !o.isIdentity() ? t.appended(o) : t, e));
        }
        return n.join("");
      },
      _hitTestChildren: function t(e, i, n) {
        return t.base.call(
          this,
          e,
          i.class === L || "path" === i.type ? i : r.set({}, i, { fill: !1 }),
          n
        );
      },
      _draw: function (t, e, i, n) {
        var r = this._children;
        if (r.length) {
          (e = e.extend({ dontStart: !0, dontFinish: !0 })), t.beginPath();
          for (var s = 0, a = r.length; s < a; s++) r[s].draw(t, e, n);
          if (!e.clip) {
            this._setStyles(t, e, i);
            var o = this._style;
            o.hasFill() &&
              (t.fill(o.getFillRule()), (t.shadowColor = "rgba(0,0,0,0)")),
              o.hasStroke() && t.stroke();
          }
        }
      },
      _drawSelected: function (t, e, i) {
        for (var n = this._children, r = 0, s = n.length; r < s; r++) {
          var a = n[r],
            o = a._matrix;
          i[a._id] || a._drawSelected(t, o.isIdentity() ? e : e.appended(o));
        }
      },
    },
    new (function () {
      function t(t, e) {
        var i = t._children;
        if (e && !i.length) throw new Error("Use a moveTo() command first");
        return i[i.length - 1];
      }
      return r.each(
        [
          "lineTo",
          "cubicCurveTo",
          "quadraticCurveTo",
          "curveTo",
          "arcTo",
          "lineBy",
          "cubicCurveBy",
          "quadraticCurveBy",
          "curveBy",
          "arcBy",
        ],
        function (e) {
          this[e] = function () {
            var i = t(this, !0);
            i[e].apply(i, arguments);
          };
        },
        {
          moveTo: function () {
            var e = t(this),
              i = e && e.isEmpty() ? e : new L(w.NO_INSERT);
            i !== e && this.addChild(i), i.moveTo.apply(i, arguments);
          },
          moveBy: function () {
            var e = t(this, !0),
              i = e && e.getLastSegment(),
              n = c.read(arguments);
            this.moveTo(i ? n.add(i._point) : n);
          },
          closePath: function (e) {
            t(this, !0).closePath(e);
          },
        }
      );
    })(),
    r.each(
      ["reverse", "flatten", "simplify", "smooth"],
      function (t) {
        this[t] = function (e) {
          for (var i, n = this._children, r = 0, s = n.length; r < s; r++)
            i = n[r][t](e) || i;
          return i;
        };
      },
      {}
    )
  );
  A.inject(
    new (function () {
      function t(t, e) {
        var i = t.clone(!1).reduce({ simplify: !0 }).transform(null, !0, !0);
        return e
          ? i.resolveCrossings().reorient("nonzero" === i.getFillRule(), !0)
          : i;
      }
      function i(t, e, i, n, r) {
        var s = new N(w.NO_INSERT);
        return (
          s.addChildren(t, !0),
          (s = s.reduce({ simplify: e })),
          (r && 0 == r.insert) ||
            s.insertAbove(
              n && i.isSibling(n) && i.getIndex() < n.getIndex() ? n : i
            ),
          s.copyAttributes(i, !0),
          s
        );
      }
      function n(e, n, r, a) {
        function o(t) {
          for (var e = 0, i = t.length; e < i; e++) {
            var n = t[e];
            w.push.apply(w, n._segments),
              x.push.apply(x, n.getCurves()),
              (n._overlapsOnly = !0);
          }
        }
        if (a && (0 == a.trace || a.stroke) && /^(subtract|intersect)$/.test(r))
          return s(e, n, r);
        var u = t(e, !0),
          c = n && e !== n && t(n, !0),
          _ = p[r];
        (_[r] = !0),
          c &&
            (_.subtract || _.exclude) ^ c.isClockwise() ^ u.isClockwise() &&
            c.reverse();
        var g,
          v = l(O.expand(u.getCrossings(c))),
          m = u._children || [u],
          y = c && (c._children || [c]),
          w = [],
          x = [];
        if (v.length) {
          o(m), y && o(y);
          for (var b = 0, C = v.length; b < C; b++)
            f(v[b]._segment, u, c, x, _);
          for (var b = 0, C = w.length; b < C; b++) {
            var S = w[b],
              P = S._intersection;
            S._winding || f(S, u, c, x, _),
              (P && P._overlap) || (S._path._overlapsOnly = !1);
          }
          g = d(w, _);
        } else
          g = h(y ? m.concat(y) : m.slice(), function (t) {
            return !!_[t];
          });
        return i(g, !0, e, n, a);
      }
      function s(e, n, r) {
        function s(t) {
          if (
            !c[t._id] &&
            (l || o.contains(t.getPointAt(t.getLength() / 2)) ^ u)
          )
            return f.unshift(t), (c[t._id] = !0);
        }
        for (
          var a = t(e),
            o = t(n),
            h = a.getCrossings(o),
            u = "subtract" === r,
            l = "divide" === r,
            c = {},
            f = [],
            d = h.length - 1;
          d >= 0;
          d--
        ) {
          var _ = h[d].split();
          _ &&
            (s(_) && _.getFirstSegment().setHandleIn(0, 0),
            a.getLastSegment().setHandleOut(0, 0));
        }
        return s(a), i(f, !1, e, n);
      }
      function a(t, e) {
        for (var i = t; i; ) {
          if (i === e) return;
          i = i._previous;
        }
        for (; t._next && t._next !== e; ) t = t._next;
        if (!t._next) {
          for (; e._previous; ) e = e._previous;
          (t._next = e), (e._previous = t);
        }
      }
      function o(t) {
        for (var e = t.length - 1; e >= 0; e--) t[e].clearHandles();
      }
      function h(t, e, i) {
        var n = t && t.length;
        if (n) {
          var s = r.each(
              t,
              function (t, e) {
                this[t._id] = {
                  container: null,
                  winding: t.isClockwise() ? 1 : -1,
                  index: e,
                };
              },
              {}
            ),
            a = t.slice().sort(function (t, e) {
              return v(e.getArea()) - v(t.getArea());
            }),
            o = a[0];
          null == i && (i = o.isClockwise());
          for (var h = 0; h < n; h++) {
            for (
              var u = a[h],
                l = s[u._id],
                c = u.getInteriorPoint(),
                f = 0,
                d = h - 1;
              d >= 0;
              d--
            ) {
              var _ = a[d];
              if (_.contains(c)) {
                var g = s[_._id];
                (f = g.winding),
                  (l.winding += f),
                  (l.container = g.exclude ? g.container : _);
                break;
              }
            }
            if (e(l.winding) === e(f)) (l.exclude = !0), (t[l.index] = null);
            else {
              var p = l.container;
              u.setClockwise(p ? !p.isClockwise() : i);
            }
          }
        }
        return t;
      }
      function l(t, e, i) {
        function n(t) {
          return t._path._id + "." + t._segment1._index;
        }
        for (
          var r,
            s,
            h,
            u = e && [],
            l = !1,
            c = i || [],
            f = i && {},
            d = (i && i.length) - 1;
          d >= 0;
          d--
        )
          (y = i[d])._path && (f[n(y)] = !0);
        for (d = t.length - 1; d >= 0; d--) {
          var _,
            g = t[d],
            v = g._time,
            p = v,
            m = e && !e(g),
            y = g._curve;
          if (
            (y &&
              (y !== s
                ? ((l = !y.hasHandles() || (f && f[n(y)])),
                  (r = []),
                  (h = null),
                  (s = y))
                : h >= 1e-8 && (v /= h)),
            m)
          )
            r && r.push(g);
          else {
            if ((e && u.unshift(g), (h = p), v < 1e-8)) _ = y._segment1;
            else if (v > 1 - 1e-8) _ = y._segment2;
            else {
              var w = y.divideAtTime(v, !0);
              l && c.push(y, w), (_ = w._segment1);
              for (var x = r.length - 1; x >= 0; x--) {
                var b = r[x];
                b._time = (b._time - v) / (1 - v);
              }
            }
            g._setSegment(_);
            var C = _._intersection,
              S = g._intersection;
            if (C) {
              a(C, S);
              for (var P = C; P; ) a(P._intersection, C), (P = P._next);
            } else _._intersection = S;
          }
        }
        return i || o(c), u || t;
      }
      function c(t, e, i, n, r) {
        function s(s) {
          var a = s[l + 0],
            h = s[l + 6];
          if (!(p < _(a, h) || p > g(a, h))) {
            var f = s[u + 0],
              v = s[u + 2],
              x = s[u + 4],
              b = s[u + 6];
            if (a !== h) {
              var I =
                  p === a
                    ? 0
                    : p === h
                    ? 1
                    : y > g(f, v, x, b) || w < _(f, v, x, b)
                    ? 1
                    : k.solveCubic(s, l, p, T, 0, 1) > 0
                    ? T[0]
                    : 1,
                z = 0 === I ? f : 1 === I ? b : k.getPoint(s, I)[i ? "y" : "x"],
                O = a > h ? 1 : -1,
                A = o[l] > o[l + 6] ? 1 : -1,
                L = o[u + 6];
              return (
                p !== a
                  ? (z < y ? (C += O) : z > w ? (S += O) : (P = !0),
                    z > d - m && z < d + m && (M /= 2))
                  : (O !== A
                      ? f < y
                        ? (C += O)
                        : f > w && (S += O)
                      : f != L &&
                        (L < w && z > w
                          ? ((S += O), (P = !0))
                          : L > y && z < y && ((C += O), (P = !0))),
                    (M = 0)),
                (o = s),
                !r &&
                  z > y &&
                  z < w &&
                  0 === k.getTangent(s, I)[i ? "x" : "y"] &&
                  c(t, e, !i, n, !0)
              );
            }
            ((f < w && b > y) || (b < w && f > y)) && (P = !0);
          }
        }
        function a(t) {
          var e = t[l + 0],
            n = t[l + 2],
            r = t[l + 4],
            a = t[l + 6];
          if (p <= g(e, n, r, a) && p >= _(e, n, r, a))
            for (
              var o,
                h = t[u + 0],
                c = t[u + 2],
                f = t[u + 4],
                d = t[u + 6],
                v =
                  y > g(h, c, f, d) || w < _(h, c, f, d)
                    ? [t]
                    : k.getMonoCurves(t, i),
                m = 0,
                x = v.length;
              m < x;
              m++
            )
              if ((o = s(v[m]))) return o;
        }
        for (
          var o,
            h,
            u = i ? 1 : 0,
            l = 1 ^ u,
            f = [t.x, t.y],
            d = f[u],
            p = f[l],
            m = 1e-6,
            y = d - 1e-9,
            w = d + 1e-9,
            x = 0,
            b = 0,
            C = 0,
            S = 0,
            P = !1,
            I = !1,
            M = 1,
            T = [],
            z = 0,
            O = e.length;
          z < O;
          z++
        ) {
          var A,
            L = e[z],
            N = L._path,
            B = L.getValues();
          if (
            !(
              (z && e[z - 1]._path === N) ||
              ((o = null),
              N._closed ||
                ((h = k.getValues(
                  N.getLastCurve().getSegment2(),
                  L.getSegment1(),
                  null,
                  !n
                ))[l] !== h[l + 6] &&
                  (o = h)),
              o)
            )
          ) {
            o = B;
            for (var D = N.getLastCurve(); D && D !== L; ) {
              var j = D.getValues();
              if (j[l] !== j[l + 6]) {
                o = j;
                break;
              }
              D = D.getPrevious();
            }
          }
          if ((A = a(B))) return A;
          if (z + 1 === O || e[z + 1]._path !== N) {
            if (h && (A = a(h))) return A;
            !P || C || S || (C = S = N.isClockwise(n) ^ i ? 1 : -1),
              (x += C),
              (b += S),
              (C = S = 0),
              P && ((I = !0), (P = !1)),
              (h = null);
          }
        }
        return (
          (x = v(x)),
          (b = v(b)),
          { winding: g(x, b), windingL: x, windingR: b, quality: M, onPath: I }
        );
      }
      function f(t, e, i, n, r) {
        var s = [],
          a = t,
          o = 0;
        do {
          d = (y = t.getCurve()).getLength();
          s.push({ segment: t, curve: y, length: d }),
            (o += d),
            (t = t.getNext());
        } while (t && !t._intersection && t !== a);
        for (
          var h = [0.5, 0.25, 0.75], l = { winding: 0, quality: -1 }, f = 0;
          f < h.length && l.quality < 0.5;
          f++
        )
          for (var d = o * h[f], _ = 0, g = s.length; _ < g; _++) {
            var p = s[_],
              m = p.length;
            if (d <= m) {
              var y = p.curve,
                w = y._path,
                x = w._parent,
                b = x instanceof N ? x : w,
                C = u.clamp(y.getTimeAt(d), 1e-8, 1 - 1e-8),
                S = y.getPointAtTime(C),
                P = v(y.getTangentAtTime(C).y) < Math.SQRT1_2,
                I =
                  r.subtract &&
                  i &&
                  ((b === e && i._getWinding(S, P, !0).winding) ||
                    (b === i && !e._getWinding(S, P, !0).winding))
                    ? { winding: 0, quality: 1 }
                    : c(S, n, P, !0);
              I.quality > l.quality && (l = I);
              break;
            }
            d -= m;
          }
        for (_ = s.length - 1; _ >= 0; _--) s[_].segment._winding = l;
      }
      function d(t, e) {
        function i(t) {
          var i;
          return !(
            !t ||
            t._visited ||
            (e &&
              (!e[(i = t._winding || {}).winding] ||
                (e.unite && 2 === i.winding && i.windingL && i.windingR)))
          );
        }
        function n(t) {
          if (t)
            for (var e = 0, i = s.length; e < i; e++) if (t === s[e]) return !0;
          return !1;
        }
        function r(t) {
          for (var e = t._segments, i = 0, n = e.length; i < n; i++)
            e[i]._visited = !0;
        }
        var s,
          a = [];
        t.sort(function (t, e) {
          var i = t._intersection,
            n = e._intersection,
            r = !(!i || !i._overlap),
            s = !(!n || !n._overlap),
            a = t._path,
            o = e._path;
          return r ^ s
            ? r
              ? 1
              : -1
            : !i ^ !n
            ? i
              ? 1
              : -1
            : a !== o
            ? a._id - o._id
            : t._index - e._index;
        });
        for (var o = 0, h = t.length; o < h; o++) {
          var u,
            l,
            c,
            f = t[o],
            d = i(f),
            _ = null,
            g = !1,
            v = !0,
            p = [];
          if (d && f._path._overlapsOnly) {
            var m = f._path,
              y = f._intersection._segment._path;
            m.compare(y) &&
              (m.getArea() && a.push(m.clone(!1)), r(m), r(y), (d = !1));
          }
          for (; d; ) {
            var x = !_,
              b = (function (t, e) {
                function r(r, a) {
                  for (; r && r !== a; ) {
                    var o = r._segment,
                      u = o && o._path;
                    if (u) {
                      var l = o.getNext() || u.getFirstSegment(),
                        c = l._intersection;
                      o !== t &&
                        (n(o) ||
                          n(l) ||
                          (l && i(o) && (i(l) || (c && i(c._segment))))) &&
                        h.push(o),
                        e && s.push(o);
                    }
                    r = r._next;
                  }
                }
                var a = t._intersection,
                  o = a,
                  h = [];
                if ((e && (s = [t]), a)) {
                  for (r(a); a && a._prev; ) a = a._prev;
                  r(a, o);
                }
                return h;
              })(f, x),
              C = b.shift(),
              S = !(g = !x && (n(f) || n(C))) && C;
            if ((x && ((_ = new L(w.NO_INSERT)), (u = null)), g)) {
              (f.isFirst() || f.isLast()) && (v = f._path._closed),
                (f._visited = !0);
              break;
            }
            if (
              (S && u && (p.push(u), (u = null)),
              u ||
                (S && b.push(f),
                (u = {
                  start: _._segments.length,
                  crossings: b,
                  visited: (l = []),
                  handleIn: c,
                })),
              S && (f = C),
              !i(f))
            ) {
              _.removeSegments(u.start);
              for (var P = 0, I = l.length; P < I; P++) l[P]._visited = !1;
              l.length = 0;
              do {
                ((f = u && u.crossings.shift()) && f._path) ||
                  ((f = null),
                  (u = p.pop()) && ((l = u.visited), (c = u.handleIn)));
              } while (u && !i(f));
              if (!f) break;
            }
            var M = f.getNext();
            _.add(new T(f._point, c, M && f._handleOut)),
              (f._visited = !0),
              l.push(f),
              (f = M || f._path.getFirstSegment()),
              (c = M && M._handleIn);
          }
          g &&
            (v && (_.getFirstSegment().setHandleIn(c), _.setClosed(v)),
            0 !== _.getArea() && a.push(_));
        }
        return a;
      }
      var _ = Math.min,
        g = Math.max,
        v = Math.abs,
        p = {
          unite: { 1: !0, 2: !0 },
          intersect: { 2: !0 },
          subtract: { 1: !0 },
          exclude: { 1: !0, "-1": !0 },
        };
      return {
        _getWinding: function (t, e, i) {
          return c(t, this.getCurves(), e, i);
        },
        unite: function (t, e) {
          return n(this, t, "unite", e);
        },
        intersect: function (t, e) {
          return n(this, t, "intersect", e);
        },
        subtract: function (t, e) {
          return n(this, t, "subtract", e);
        },
        exclude: function (t, e) {
          return n(this, t, "exclude", e);
        },
        divide: function (t, e) {
          return e && (0 == e.trace || e.stroke)
            ? s(this, t, "divide")
            : i([this.subtract(t, e), this.intersect(t, e)], !0, this, t, e);
        },
        resolveCrossings: function () {
          function t(t, e) {
            var i = t && t._intersection;
            return i && i._overlap && i._path === e;
          }
          var e = this._children,
            i = e || [this],
            n = !1,
            s = !1,
            a = this.getIntersections(null, function (t) {
              return (
                (t.hasOverlap() && (n = !0)) || (t.isCrossing() && (s = !0))
              );
            }),
            h = n && s && [];
          if (((a = O.expand(a)), n))
            for (
              var u = l(
                  a,
                  function (t) {
                    return t.hasOverlap();
                  },
                  h
                ),
                c = u.length - 1;
              c >= 0;
              c--
            ) {
              var f = u[c],
                _ = f._path,
                g = f._segment,
                v = g.getPrevious(),
                p = g.getNext();
              t(v, _) &&
                t(p, _) &&
                (g.remove(),
                v._handleOut._set(0, 0),
                p._handleIn._set(0, 0),
                v === g ||
                  v.getCurve().hasLength() ||
                  (p._handleIn.set(v._handleIn), v.remove()));
            }
          s &&
            (l(
              a,
              n &&
                function (t) {
                  var e = t.getCurve(),
                    i = t.getSegment(),
                    n = t._intersection,
                    r = n._curve,
                    s = n._segment;
                  if (e && r && e._path && r._path) return !0;
                  i && (i._intersection = null), s && (s._intersection = null);
                },
              h
            ),
            h && o(h),
            (i = d(
              r.each(
                i,
                function (t) {
                  this.push.apply(this, t._segments);
                },
                []
              )
            )));
          var m,
            y = i.length;
          return (
            y > 1 && e
              ? (i !== e && this.setChildren(i), (m = this))
              : 1 !== y ||
                e ||
                (i[0] !== this && this.setSegments(i[0].removeSegments()),
                (m = this)),
            m ||
              ((m = new N(w.NO_INSERT)).addChildren(i),
              (m = m.reduce()).copyAttributes(this),
              this.replaceWith(m)),
            m
          );
        },
        reorient: function (t, i) {
          var n = this._children;
          return (
            n && n.length
              ? this.setChildren(
                  h(
                    this.removeChildren(),
                    function (e) {
                      return !!(t ? e : 1 & e);
                    },
                    i
                  )
                )
              : i !== e && this.setClockwise(i),
            this
          );
        },
        getInteriorPoint: function () {
          var t = this.getBounds().getCenter(!0);
          if (!this.contains(t)) {
            for (
              var e = this.getCurves(),
                i = t.y,
                n = [],
                r = [],
                s = 0,
                a = e.length;
              s < a;
              s++
            ) {
              var o = e[s].getValues(),
                h = o[1],
                u = o[3],
                l = o[5],
                c = o[7];
              if (i >= _(h, u, l, c) && i <= g(h, u, l, c))
                for (
                  var f = k.getMonoCurves(o), d = 0, v = f.length;
                  d < v;
                  d++
                ) {
                  var p = f[d],
                    m = p[1],
                    y = p[7];
                  if (m !== y && ((i >= m && i <= y) || (i >= y && i <= m))) {
                    var w =
                      i === m
                        ? p[0]
                        : i === y
                        ? p[6]
                        : 1 === k.solveCubic(p, 1, i, r, 0, 1)
                        ? k.getPoint(p, r[0]).x
                        : (p[0] + p[6]) / 2;
                    n.push(w);
                  }
                }
            }
            n.length > 1 &&
              (n.sort(function (t, e) {
                return t - e;
              }),
              (t.x = (n[0] + n[1]) / 2));
          }
          return t;
        },
      };
    })()
  );
  var B = r.extend(
      {
        _class: "PathFlattener",
        initialize: function (t, e, i, n, r) {
          function s(t, e) {
            var i = k.getValues(t, e, r);
            h.push(i), a(i, t._index, 0, 1);
          }
          function a(t, i, r, s) {
            if (
              !(s - r > c) ||
              (n && k.isStraight(t)) ||
              k.isFlatEnough(t, e || 0.25)
            ) {
              var o = t[6] - t[0],
                h = t[7] - t[1],
                f = Math.sqrt(o * o + h * h);
              f > 0 &&
                ((l += f), u.push({ offset: l, curve: t, index: i, time: s }));
            } else {
              var d = k.subdivide(t, 0.5),
                _ = (r + s) / 2;
              a(d[0], i, r, _), a(d[1], i, _, s);
            }
          }
          for (
            var o,
              h = [],
              u = [],
              l = 0,
              c = 1 / (i || 32),
              f = t._segments,
              d = f[0],
              _ = 1,
              g = f.length;
            _ < g;
            _++
          )
            s(d, (o = f[_])), (d = o);
          t._closed && s(o, f[0]),
            (this.curves = h),
            (this.parts = u),
            (this.length = l),
            (this.index = 0);
        },
        _get: function (t) {
          for (
            var e, i = this.parts, n = i.length, r = this.index;
            (e = r), r && !(i[--r].offset < t);

          );
          for (; e < n; e++) {
            var s = i[e];
            if (s.offset >= t) {
              this.index = e;
              var a = i[e - 1],
                o = a && a.index === s.index ? a.time : 0,
                h = a ? a.offset : 0;
              return {
                index: s.index,
                time: o + ((s.time - o) * (t - h)) / (s.offset - h),
              };
            }
          }
          return { index: i[n - 1].index, time: 1 };
        },
        drawPart: function (t, e, i) {
          for (
            var n = this._get(e), r = this._get(i), s = n.index, a = r.index;
            s <= a;
            s++
          ) {
            var o = k.getPart(
              this.curves[s],
              s === n.index ? n.time : 0,
              s === r.index ? r.time : 1
            );
            s === n.index && t.moveTo(o[0], o[1]),
              t.bezierCurveTo.apply(t, o.slice(2));
          }
        },
      },
      r.each(
        k._evaluateMethods,
        function (t) {
          this[t + "At"] = function (e) {
            var i = this._get(e);
            return k[t](this.curves[i.index], i.time);
          };
        },
        {}
      )
    ),
    D = r.extend({
      initialize: function (t) {
        for (
          var e,
            i = (this.points = []),
            n = t._segments,
            r = t._closed,
            s = 0,
            a = n.length;
          s < a;
          s++
        ) {
          var o = n[s].point;
          (e && e.equals(o)) || i.push((e = o.clone()));
        }
        r && (i.unshift(i[i.length - 1]), i.push(i[1])), (this.closed = r);
      },
      fit: function (t) {
        var e = this.points,
          i = e.length,
          n = null;
        return (
          i > 0 &&
            ((n = [new T(e[0])]),
            i > 1 &&
              (this.fitCubic(
                n,
                t,
                0,
                i - 1,
                e[1].subtract(e[0]),
                e[i - 2].subtract(e[i - 1])
              ),
              this.closed && (n.shift(), n.pop()))),
          n
        );
      },
      fitCubic: function (t, e, i, n, r, s) {
        var a = this.points;
        if (n - i != 1) {
          for (
            var o,
              h = this.chordLengthParameterize(i, n),
              u = Math.max(e, e * e),
              l = !0,
              c = 0;
            c <= 4;
            c++
          ) {
            var f = this.generateBezier(i, n, h, r, s),
              d = this.findMaxError(i, n, f, h);
            if (d.error < e && l) return void this.addCurve(t, f);
            if (((o = d.index), d.error >= u)) break;
            (l = this.reparameterize(i, n, h, f)), (u = d.error);
          }
          var _ = a[o - 1].subtract(a[o + 1]);
          this.fitCubic(t, e, i, o, r, _),
            this.fitCubic(t, e, o, n, _.negate(), s);
        } else {
          var g = a[i],
            v = a[n],
            p = g.getDistance(v) / 3;
          this.addCurve(t, [
            g,
            g.add(r.normalize(p)),
            v.add(s.normalize(p)),
            v,
          ]);
        }
      },
      addCurve: function (t, e) {
        t[t.length - 1].setHandleOut(e[1].subtract(e[0])),
          t.push(new T(e[3], e[2].subtract(e[3])));
      },
      generateBezier: function (t, e, i, n, r) {
        for (
          var s = Math.abs,
            a = this.points,
            o = a[t],
            h = a[e],
            u = [
              [0, 0],
              [0, 0],
            ],
            l = [0, 0],
            c = 0,
            f = e - t + 1;
          c < f;
          c++
        ) {
          var d = i[c],
            _ = 1 - d,
            g = 3 * d * _,
            v = _ * _ * _,
            p = g * _,
            m = g * d,
            y = d * d * d,
            w = n.normalize(p),
            x = r.normalize(m),
            b = a[t + c]
              .subtract(o.multiply(v + p))
              .subtract(h.multiply(m + y));
          (u[0][0] += w.dot(w)),
            (u[0][1] += w.dot(x)),
            (u[1][0] = u[0][1]),
            (u[1][1] += x.dot(x)),
            (l[0] += w.dot(b)),
            (l[1] += x.dot(b));
        }
        var C,
          S,
          P = u[0][0] * u[1][1] - u[1][0] * u[0][1];
        if (s(P) > 1e-12) {
          var I = u[0][0] * l[1] - u[1][0] * l[0];
          (C = (l[0] * u[1][1] - l[1] * u[0][1]) / P), (S = I / P);
        } else {
          var M = u[0][0] + u[0][1],
            T = u[1][0] + u[1][1];
          C = S = s(M) > 1e-12 ? l[0] / M : s(T) > 1e-12 ? l[1] / T : 0;
        }
        var z,
          k,
          O = h.getDistance(o),
          A = 1e-12 * O;
        if (C < A || S < A) C = S = O / 3;
        else {
          var L = h.subtract(o);
          (z = n.normalize(C)),
            (k = r.normalize(S)),
            z.dot(L) - k.dot(L) > O * O && ((C = S = O / 3), (z = k = null));
        }
        return [o, o.add(z || n.normalize(C)), h.add(k || r.normalize(S)), h];
      },
      reparameterize: function (t, e, i, n) {
        for (r = t; r <= e; r++)
          i[r - t] = this.findRoot(n, this.points[r], i[r - t]);
        for (var r = 1, s = i.length; r < s; r++)
          if (i[r] <= i[r - 1]) return !1;
        return !0;
      },
      findRoot: function (t, e, i) {
        for (var n = [], r = [], s = 0; s <= 2; s++)
          n[s] = t[s + 1].subtract(t[s]).multiply(3);
        for (s = 0; s <= 1; s++) r[s] = n[s + 1].subtract(n[s]).multiply(2);
        var a = this.evaluate(3, t, i),
          o = this.evaluate(2, n, i),
          h = this.evaluate(1, r, i),
          l = a.subtract(e),
          c = o.dot(o) + l.dot(h);
        return u.isZero(c) ? i : i - l.dot(o) / c;
      },
      evaluate: function (t, e, i) {
        for (var n = e.slice(), r = 1; r <= t; r++)
          for (var s = 0; s <= t - r; s++)
            n[s] = n[s].multiply(1 - i).add(n[s + 1].multiply(i));
        return n[0];
      },
      chordLengthParameterize: function (t, e) {
        for (var i = [0], n = t + 1; n <= e; n++)
          i[n - t] =
            i[n - t - 1] + this.points[n].getDistance(this.points[n - 1]);
        for (var n = 1, r = e - t; n <= r; n++) i[n] /= i[r];
        return i;
      },
      findMaxError: function (t, e, i, n) {
        for (
          var r = Math.floor((e - t + 1) / 2), s = 0, a = t + 1;
          a < e;
          a++
        ) {
          var o = this.evaluate(3, i, n[a - t]).subtract(this.points[a]),
            h = o.x * o.x + o.y * o.y;
          h >= s && ((s = h), (r = a));
        }
        return { error: s, index: r };
      },
    }),
    j = w.extend({
      _class: "TextItem",
      _applyMatrix: !1,
      _canApplyMatrix: !1,
      _serializeFields: { content: null },
      _boundsOptions: { stroke: !1, handle: !1 },
      initialize: function (t) {
        (this._content = ""), (this._lines = []);
        var i = t && r.isPlainObject(t) && t.x === e && t.y === e;
        this._initialize(i && t, !i && c.read(arguments));
      },
      _equals: function (t) {
        return this._content === t._content;
      },
      copyContent: function (t) {
        this.setContent(t._content);
      },
      getContent: function () {
        return this._content;
      },
      setContent: function (t) {
        (this._content = "" + t),
          (this._lines = this._content.split(/\r\n|\n|\r/gm)),
          this._changed(265);
      },
      isEmpty: function () {
        return !this._content;
      },
      getCharacterStyle: "#getStyle",
      setCharacterStyle: "#setStyle",
      getParagraphStyle: "#getStyle",
      setParagraphStyle: "#setStyle",
    }),
    E = j.extend({
      _class: "PointText",
      initialize: function () {
        j.apply(this, arguments);
      },
      getPoint: function () {
        var t = this._matrix.getTranslation();
        return new f(t.x, t.y, this, "setPoint");
      },
      setPoint: function () {
        var t = c.read(arguments);
        this.translate(t.subtract(this._matrix.getTranslation()));
      },
      _draw: function (t, e, i) {
        if (this._content) {
          this._setStyles(t, e, i);
          var n = this._lines,
            r = this._style,
            s = r.hasFill(),
            a = r.hasStroke(),
            o = r.getLeading(),
            h = t.shadowColor;
          (t.font = r.getFontStyle()), (t.textAlign = r.getJustification());
          for (var u = 0, l = n.length; u < l; u++) {
            t.shadowColor = h;
            var c = n[u];
            s && (t.fillText(c, 0, 0), (t.shadowColor = "rgba(0,0,0,0)")),
              a && t.strokeText(c, 0, 0),
              t.translate(0, o);
          }
        }
      },
      _getBounds: function (t, e) {
        var i = this._style,
          n = this._lines,
          r = n.length,
          s = i.getJustification(),
          a = i.getLeading(),
          o = this.getView().getTextWidth(i.getFontStyle(), n),
          h = 0;
        "left" !== s && (h -= o / ("center" === s ? 2 : 1));
        var u = new g(h, r ? -0.75 * a : 0, o, r * a);
        return t ? t._transformBounds(u, u) : u;
      },
    }),
    F = r.extend(
      new (function () {
        function t(t) {
          var n,
            r = t.match(/^#(\w{1,2})(\w{1,2})(\w{1,2})$/);
          if (r) {
            n = [0, 0, 0];
            for (s = 0; s < 3; s++) {
              h = r[s + 1];
              n[s] = parseInt(1 == h.length ? h + h : h, 16) / 255;
            }
          } else if ((r = t.match(/^rgba?\((.*)\)$/)))
            for (var s = 0, o = (n = r[1].split(",")).length; s < o; s++) {
              var h = +n[s];
              n[s] = s < 3 ? h / 255 : h;
            }
          else if (i) {
            var u = a[t];
            if (!u) {
              e || ((e = Q.getContext(1, 1)).globalCompositeOperation = "copy"),
                (e.fillStyle = "rgba(0,0,0,0)"),
                (e.fillStyle = t),
                e.fillRect(0, 0, 1, 1);
              var l = e.getImageData(0, 0, 1, 1).data;
              u = a[t] = [l[0] / 255, l[1] / 255, l[2] / 255];
            }
            n = u.slice();
          } else n = [0, 0, 0];
          return n;
        }
        var e,
          n = {
            gray: ["gray"],
            rgb: ["red", "green", "blue"],
            hsb: ["hue", "saturation", "brightness"],
            hsl: ["hue", "saturation", "lightness"],
            gradient: ["gradient", "origin", "destination", "highlight"],
          },
          s = {},
          a = {},
          o = [
            [0, 3, 1],
            [2, 0, 1],
            [1, 0, 3],
            [1, 2, 0],
            [3, 1, 0],
            [0, 1, 2],
          ],
          u = {
            "rgb-hsb": function (t, e, i) {
              var n = Math.max(t, e, i),
                r = n - Math.min(t, e, i);
              return [
                0 === r
                  ? 0
                  : 60 *
                    (n == t
                      ? (e - i) / r + (e < i ? 6 : 0)
                      : n == e
                      ? (i - t) / r + 2
                      : (t - e) / r + 4),
                0 === n ? 0 : r / n,
                n,
              ];
            },
            "hsb-rgb": function (t, e, i) {
              t = (((t / 60) % 6) + 6) % 6;
              var n = Math.floor(t),
                r = t - n,
                s = [i, i * (1 - e), i * (1 - e * r), i * (1 - e * (1 - r))];
              return [s[(n = o[n])[0]], s[n[1]], s[n[2]]];
            },
            "rgb-hsl": function (t, e, i) {
              var n = Math.max(t, e, i),
                r = Math.min(t, e, i),
                s = n - r,
                a = 0 === s,
                o = (n + r) / 2;
              return [
                a
                  ? 0
                  : 60 *
                    (n == t
                      ? (e - i) / s + (e < i ? 6 : 0)
                      : n == e
                      ? (i - t) / s + 2
                      : (t - e) / s + 4),
                a ? 0 : o < 0.5 ? s / (n + r) : s / (2 - n - r),
                o,
              ];
            },
            "hsl-rgb": function (t, e, i) {
              if (((t = (((t / 360) % 1) + 1) % 1), 0 === e)) return [i, i, i];
              for (
                var n = [t + 1 / 3, t, t - 1 / 3],
                  r = i < 0.5 ? i * (1 + e) : i + e - i * e,
                  s = 2 * i - r,
                  a = [],
                  o = 0;
                o < 3;
                o++
              ) {
                var h = n[o];
                h < 0 && (h += 1),
                  h > 1 && (h -= 1),
                  (a[o] =
                    6 * h < 1
                      ? s + 6 * (r - s) * h
                      : 2 * h < 1
                      ? r
                      : 3 * h < 2
                      ? s + (r - s) * (2 / 3 - h) * 6
                      : s);
              }
              return a;
            },
            "rgb-gray": function (t, e, i) {
              return [0.2989 * t + 0.587 * e + 0.114 * i];
            },
            "gray-rgb": function (t) {
              return [t, t, t];
            },
            "gray-hsb": function (t) {
              return [0, 0, t];
            },
            "gray-hsl": function (t) {
              return [0, 0, t];
            },
            "gradient-rgb": function () {
              return [];
            },
            "rgb-gradient": function () {
              return [];
            },
          };
        return r.each(
          n,
          function (t, e) {
            (s[e] = []),
              r.each(
                t,
                function (t, i) {
                  var a = r.capitalize(t),
                    o = /^(hue|saturation)$/.test(t),
                    h = (s[e][i] =
                      "gradient" === t
                        ? function (t) {
                            var e = this._components[0];
                            return (
                              (t = R.read(Array.isArray(t) ? t : arguments, 0, {
                                readNull: !0,
                              })),
                              e !== t &&
                                (e && e._removeOwner(this),
                                t && t._addOwner(this)),
                              t
                            );
                          }
                        : "gradient" === e
                        ? function () {
                            return c.read(arguments, 0, {
                              readNull: "highlight" === t,
                              clone: !0,
                            });
                          }
                        : function (t) {
                            return null == t || isNaN(t) ? 0 : t;
                          });
                  (this["get" + a] = function () {
                    return this._type === e ||
                      (o && /^hs[bl]$/.test(this._type))
                      ? this._components[i]
                      : this._convert(e)[i];
                  }),
                    (this["set" + a] = function (t) {
                      this._type === e ||
                        (o && /^hs[bl]$/.test(this._type)) ||
                        ((this._components = this._convert(e)),
                        (this._properties = n[e]),
                        (this._type = e)),
                        (this._components[i] = h.call(this, t)),
                        this._changed();
                    });
                },
                this
              );
          },
          {
            _class: "Color",
            _readIndex: !0,
            initialize: function e(i) {
              var a,
                o,
                h,
                u,
                l = arguments,
                c = this.__read,
                f = 0;
              Array.isArray(i) && (i = (l = i)[0]);
              var d = null != i && typeof i;
              if (
                ("string" === d &&
                  i in n &&
                  ((a = i),
                  (i = l[1]),
                  Array.isArray(i)
                    ? ((o = i), (h = l[2]))
                    : (c && (f = 1), (l = r.slice(l, 1)), (d = typeof i))),
                !o)
              ) {
                if (
                  (u =
                    "number" === d
                      ? l
                      : "object" === d && null != i.length
                      ? i
                      : null)
                ) {
                  a || (a = u.length >= 3 ? "rgb" : "gray");
                  var _ = n[a].length;
                  (h = u[_]),
                    c && (f += u === arguments ? _ + (null != h ? 1 : 0) : 1),
                    u.length > _ && (u = r.slice(u, 0, _));
                } else if ("string" === d)
                  (a = "rgb"),
                    4 === (o = t(i)).length && ((h = o[3]), o.length--);
                else if ("object" === d)
                  if (i.constructor === e) {
                    if (
                      ((a = i._type),
                      (o = i._components.slice()),
                      (h = i._alpha),
                      "gradient" === a)
                    )
                      for (var g = 1, v = o.length; g < v; g++) {
                        var p = o[g];
                        p && (o[g] = p.clone());
                      }
                  } else if (i.constructor === R) (a = "gradient"), (u = l);
                  else {
                    var m =
                        n[
                          (a =
                            "hue" in i
                              ? "lightness" in i
                                ? "hsl"
                                : "hsb"
                              : "gradient" in i || "stops" in i || "radial" in i
                              ? "gradient"
                              : "gray" in i
                              ? "gray"
                              : "rgb")
                        ],
                      y = s[a];
                    this._components = o = [];
                    for (var g = 0, v = m.length; g < v; g++)
                      null == (w = i[m[g]]) &&
                        !g &&
                        "gradient" === a &&
                        "stops" in i &&
                        (w = { stops: i.stops, radial: i.radial }),
                        null != (w = y[g].call(this, w)) && (o[g] = w);
                    h = i.alpha;
                  }
                c && a && (f = 1);
              }
              if (((this._type = a || "rgb"), !o)) {
                this._components = o = [];
                for (var g = 0, v = (y = s[this._type]).length; g < v; g++) {
                  var w = y[g].call(this, u && u[g]);
                  null != w && (o[g] = w);
                }
              }
              return (
                (this._components = o),
                (this._properties = n[this._type]),
                (this._alpha = h),
                c && (this.__read = f),
                this
              );
            },
            set: "#initialize",
            _serialize: function (t, e) {
              var i = this.getComponents();
              return r.serialize(
                /^(gray|rgb)$/.test(this._type) ? i : [this._type].concat(i),
                t,
                !0,
                e
              );
            },
            _changed: function () {
              (this._canvasStyle = null),
                this._owner && this._owner._changed(65);
            },
            _convert: function (t) {
              var e;
              return this._type === t
                ? this._components.slice()
                : (e = u[this._type + "-" + t])
                ? e.apply(this, this._components)
                : u["rgb-" + t].apply(
                    this,
                    u[this._type + "-rgb"].apply(this, this._components)
                  );
            },
            convert: function (t) {
              return new F(t, this._convert(t), this._alpha);
            },
            getType: function () {
              return this._type;
            },
            setType: function (t) {
              (this._components = this._convert(t)),
                (this._properties = n[t]),
                (this._type = t);
            },
            getComponents: function () {
              var t = this._components.slice();
              return null != this._alpha && t.push(this._alpha), t;
            },
            getAlpha: function () {
              return null != this._alpha ? this._alpha : 1;
            },
            setAlpha: function (t) {
              (this._alpha = null == t ? null : Math.min(Math.max(t, 0), 1)),
                this._changed();
            },
            hasAlpha: function () {
              return null != this._alpha;
            },
            equals: function (t) {
              var e = r.isPlainValue(t, !0) ? F.read(arguments) : t;
              return (
                e === this ||
                (e &&
                  this._class === e._class &&
                  this._type === e._type &&
                  this.getAlpha() === e.getAlpha() &&
                  r.equals(this._components, e._components)) ||
                !1
              );
            },
            toString: function () {
              for (
                var t = this._properties,
                  e = [],
                  i = "gradient" === this._type,
                  n = h.instance,
                  r = 0,
                  s = t.length;
                r < s;
                r++
              ) {
                var a = this._components[r];
                null != a && e.push(t[r] + ": " + (i ? a : n.number(a)));
              }
              return (
                null != this._alpha &&
                  e.push("alpha: " + n.number(this._alpha)),
                "{ " + e.join(", ") + " }"
              );
            },
            toCSS: function (t) {
              function e(t) {
                return Math.round(255 * (t < 0 ? 0 : t > 1 ? 1 : t));
              }
              var i = this._convert("rgb"),
                n = t || null == this._alpha ? 1 : this._alpha;
              return (
                (i = [e(i[0]), e(i[1]), e(i[2])]),
                n < 1 && i.push(n < 0 ? 0 : n),
                t
                  ? "#" +
                    ((1 << 24) + (i[0] << 16) + (i[1] << 8) + i[2])
                      .toString(16)
                      .slice(1)
                  : (4 == i.length ? "rgba(" : "rgb(") + i.join(",") + ")"
              );
            },
            toCanvasStyle: function (t, e) {
              if (this._canvasStyle) return this._canvasStyle;
              if ("gradient" !== this._type)
                return (this._canvasStyle = this.toCSS());
              var i,
                n = this._components,
                r = n[0],
                s = r._stops,
                a = n[1],
                o = n[2],
                h = n[3],
                u = e && e.inverted();
              if (
                (u &&
                  ((a = u._transformPoint(a)),
                  (o = u._transformPoint(o)),
                  h && (h = u._transformPoint(h))),
                r._radial)
              ) {
                var l = o.getDistance(a);
                if (h) {
                  var c = h.subtract(a);
                  c.getLength() > l && (h = a.add(c.normalize(l - 0.1)));
                }
                var f = h || a;
                i = t.createRadialGradient(f.x, f.y, 0, a.x, a.y, l);
              } else i = t.createLinearGradient(a.x, a.y, o.x, o.y);
              for (var d = 0, _ = s.length; d < _; d++) {
                var g = s[d],
                  v = g._offset;
                i.addColorStop(
                  null == v ? d / (_ - 1) : v,
                  g._color.toCanvasStyle()
                );
              }
              return (this._canvasStyle = i);
            },
            transform: function (t) {
              if ("gradient" === this._type) {
                for (
                  var e = this._components, i = 1, n = e.length;
                  i < n;
                  i++
                ) {
                  var r = e[i];
                  t._transformPoint(r, r, !0);
                }
                this._changed();
              }
            },
            statics: {
              _types: n,
              random: function () {
                var t = Math.random;
                return new F(t(), t(), t());
              },
            },
          }
        );
      })(),
      new (function () {
        var t = {
          add: function (t, e) {
            return t + e;
          },
          subtract: function (t, e) {
            return t - e;
          },
          multiply: function (t, e) {
            return t * e;
          },
          divide: function (t, e) {
            return t / e;
          },
        };
        return r.each(
          t,
          function (t, e) {
            this[e] = function (e) {
              e = F.read(arguments);
              for (
                var i = this._type,
                  n = this._components,
                  r = e._convert(i),
                  s = 0,
                  a = n.length;
                s < a;
                s++
              )
                r[s] = t(n[s], r[s]);
              return new F(
                i,
                r,
                null != this._alpha ? t(this._alpha, e.getAlpha()) : null
              );
            };
          },
          {}
        );
      })()
    ),
    R = r.extend({
      _class: "Gradient",
      initialize: function (t, e) {
        (this._id = l.get()),
          t && r.isPlainObject(t) && (this.set(t), (t = e = null)),
          null == this._stops && this.setStops(t || ["white", "black"]),
          null == this._radial &&
            this.setRadial(("string" == typeof e && "radial" === e) || e || !1);
      },
      _serialize: function (t, e) {
        return e.add(this, function () {
          return r.serialize([this._stops, this._radial], t, !0, e);
        });
      },
      _changed: function () {
        for (var t = 0, e = this._owners && this._owners.length; t < e; t++)
          this._owners[t]._changed();
      },
      _addOwner: function (t) {
        this._owners || (this._owners = []), this._owners.push(t);
      },
      _removeOwner: function (t) {
        var i = this._owners ? this._owners.indexOf(t) : -1;
        -1 != i &&
          (this._owners.splice(i, 1),
          this._owners.length || (this._owners = e));
      },
      clone: function () {
        for (var t = [], e = 0, i = this._stops.length; e < i; e++)
          t[e] = this._stops[e].clone();
        return new R(t, this._radial);
      },
      getStops: function () {
        return this._stops;
      },
      setStops: function (t) {
        if (t.length < 2)
          throw new Error(
            "Gradient stop list needs to contain at least two stops."
          );
        var i = this._stops;
        if (i) for (var n = 0, r = i.length; n < r; n++) i[n]._owner = e;
        for (
          var n = 0,
            r = (i = this._stops = q.readList(t, 0, { clone: !0 })).length;
          n < r;
          n++
        )
          i[n]._owner = this;
        this._changed();
      },
      getRadial: function () {
        return this._radial;
      },
      setRadial: function (t) {
        (this._radial = t), this._changed();
      },
      equals: function (t) {
        if (t === this) return !0;
        if (t && this._class === t._class) {
          var e = this._stops,
            i = t._stops,
            n = e.length;
          if (n === i.length) {
            for (var r = 0; r < n; r++) if (!e[r].equals(i[r])) return !1;
            return !0;
          }
        }
        return !1;
      },
    }),
    q = r.extend({
      _class: "GradientStop",
      initialize: function (t, i) {
        var n = t,
          r = i;
        "object" == typeof t &&
          i === e &&
          (Array.isArray(t) && "number" != typeof t[0]
            ? ((n = t[0]), (r = t[1]))
            : ("color" in t || "offset" in t || "rampPoint" in t) &&
              ((n = t.color), (r = t.offset || t.rampPoint || 0))),
          this.setColor(n),
          this.setOffset(r);
      },
      clone: function () {
        return new q(this._color.clone(), this._offset);
      },
      _serialize: function (t, e) {
        var i = this._color,
          n = this._offset;
        return r.serialize(null == n ? [i] : [i, n], t, !0, e);
      },
      _changed: function () {
        this._owner && this._owner._changed(65);
      },
      getOffset: function () {
        return this._offset;
      },
      setOffset: function (t) {
        (this._offset = t), this._changed();
      },
      getRampPoint: "#getOffset",
      setRampPoint: "#setOffset",
      getColor: function () {
        return this._color;
      },
      setColor: function () {
        var t = F.read(arguments, 0, { clone: !0 });
        t && (t._owner = this), (this._color = t), this._changed();
      },
      equals: function (t) {
        return (
          t === this ||
          (t &&
            this._class === t._class &&
            this._color.equals(t._color) &&
            this._offset == t._offset) ||
          !1
        );
      },
    }),
    V = r.extend(
      new (function () {
        var t = {
            fillColor: null,
            fillRule: "nonzero",
            strokeColor: null,
            strokeWidth: 1,
            strokeCap: "butt",
            strokeJoin: "miter",
            strokeScaling: !0,
            miterLimit: 10,
            dashOffset: 0,
            dashArray: [],
            shadowColor: null,
            shadowBlur: 0,
            shadowOffset: new c(),
            selectedColor: null,
          },
          i = r.set({}, t, {
            fontFamily: "sans-serif",
            fontWeight: "normal",
            fontSize: 12,
            leading: null,
            justification: "left",
          }),
          n = r.set({}, i, { fillColor: new F() }),
          s = {
            strokeWidth: 97,
            strokeCap: 97,
            strokeJoin: 97,
            strokeScaling: 105,
            miterLimit: 97,
            fontFamily: 9,
            fontWeight: 9,
            fontSize: 9,
            font: 9,
            leading: 9,
            justification: 9,
          },
          a = { beans: !0 },
          o = {
            _class: "Style",
            beans: !0,
            initialize: function (e, r, s) {
              (this._values = {}),
                (this._owner = r),
                (this._project = (r && r._project) || s || paper.project),
                (this._defaults =
                  !r || r instanceof x ? i : r instanceof j ? n : t),
                e && this.set(e);
            },
          };
        return (
          r.each(i, function (t, i) {
            var n = /Color$/.test(i),
              h = "shadowOffset" === i,
              u = r.capitalize(i),
              l = s[i],
              f = "set" + u,
              d = "get" + u;
            (o[f] = function (t) {
              var r = this._owner,
                s = r && r._children;
              if (s && s.length > 0 && !(r instanceof N))
                for (var a = 0, o = s.length; a < o; a++) s[a]._style[f](t);
              else if (i in this._defaults) {
                var h = this._values[i];
                h !== t &&
                  (n &&
                    (h && h._owner !== e && (h._owner = e),
                    t &&
                      t.constructor === F &&
                      (t._owner && (t = t.clone()), (t._owner = r))),
                  (this._values[i] = t),
                  r && r._changed(l || 65));
              }
            }),
              (o[d] = function (t) {
                var s,
                  a = this._owner,
                  o = a && a._children;
                if (
                  i in this._defaults &&
                  (!o || !o.length || t || a instanceof N)
                )
                  if ((s = this._values[i]) === e)
                    (s = this._defaults[i]) && s.clone && (s = s.clone());
                  else {
                    var u = n ? F : h ? c : null;
                    !u ||
                      (s && s.constructor === u) ||
                      ((this._values[i] = s =
                        u.read([s], 0, { readNull: !0, clone: !0 })),
                      s && n && (s._owner = a));
                  }
                else if (o)
                  for (var l = 0, f = o.length; l < f; l++) {
                    var _ = o[l]._style[d]();
                    if (l) {
                      if (!r.equals(s, _)) return e;
                    } else s = _;
                  }
                return s;
              }),
              (a[d] = function (t) {
                return this._style[d](t);
              }),
              (a[f] = function (t) {
                this._style[f](t);
              });
          }),
          r.each(
            { Font: "FontFamily", WindingRule: "FillRule" },
            function (t, e) {
              var i = "get" + e,
                n = "set" + e;
              (o[i] = a[i] = "#get" + t), (o[n] = a[n] = "#set" + t);
            }
          ),
          w.inject(a),
          o
        );
      })(),
      {
        set: function (t) {
          var e = t instanceof V,
            i = e ? t._values : t;
          if (i)
            for (var n in i)
              if (n in this._defaults) {
                var r = i[n];
                this[n] = r && e && r.clone ? r.clone() : r;
              }
        },
        equals: function (t) {
          function i(t, i, n) {
            var s = t._values,
              a = i._values,
              o = i._defaults;
            for (var h in s) {
              var u = s[h],
                l = a[h];
              if (!((n && h in a) || r.equals(u, l === e ? o[h] : l)))
                return !1;
            }
            return !0;
          }
          return (
            t === this ||
            (t && this._class === t._class && i(this, t) && i(t, this, !0)) ||
            !1
          );
        },
        hasFill: function () {
          var t = this.getFillColor();
          return !!t && t.alpha > 0;
        },
        hasStroke: function () {
          var t = this.getStrokeColor();
          return !!t && t.alpha > 0 && this.getStrokeWidth() > 0;
        },
        hasShadow: function () {
          var t = this.getShadowColor();
          return (
            !!t &&
            t.alpha > 0 &&
            (this.getShadowBlur() > 0 || !this.getShadowOffset().isZero())
          );
        },
        getView: function () {
          return this._project._view;
        },
        getFontStyle: function () {
          var t = this.getFontSize();
          return (
            this.getFontWeight() +
            " " +
            t +
            (/[a-z]/i.test(t + "") ? " " : "px ") +
            this.getFontFamily()
          );
        },
        getFont: "#getFontFamily",
        setFont: "#setFontFamily",
        getLeading: function t() {
          var e = t.base.call(this),
            i = this.getFontSize();
          return (
            /pt|em|%|px/.test(i) && (i = this.getView().getPixelSize(i)),
            null != e ? e : 1.2 * i
          );
        },
      }
    ),
    H = new (function () {
      function t(t, e, i, n) {
        for (
          var r = ["", "webkit", "moz", "Moz", "ms", "o"],
            s = e[0].toUpperCase() + e.substring(1),
            a = 0;
          a < 6;
          a++
        ) {
          var o = r[a],
            h = o ? o + s : e;
          if (h in t) {
            if (!i) return t[h];
            t[h] = n;
            break;
          }
        }
      }
      return {
        getStyles: function (t) {
          var e = t && 9 !== t.nodeType ? t.ownerDocument : t,
            i = e && e.defaultView;
          return i && i.getComputedStyle(t, "");
        },
        getBounds: function (t, e) {
          var i,
            n = t.ownerDocument,
            r = n.body,
            s = n.documentElement;
          try {
            i = t.getBoundingClientRect();
          } catch (t) {
            i = { left: 0, top: 0, width: 0, height: 0 };
          }
          var a = i.left - (s.clientLeft || r.clientLeft || 0),
            o = i.top - (s.clientTop || r.clientTop || 0);
          if (!e) {
            var h = n.defaultView;
            (a += h.pageXOffset || s.scrollLeft || r.scrollLeft),
              (o += h.pageYOffset || s.scrollTop || r.scrollTop);
          }
          return new g(a, o, i.width, i.height);
        },
        getViewportBounds: function (t) {
          var e = t.ownerDocument,
            i = e.defaultView,
            n = e.documentElement;
          return new g(
            0,
            0,
            i.innerWidth || n.clientWidth,
            i.innerHeight || n.clientHeight
          );
        },
        getOffset: function (t, e) {
          return H.getBounds(t, e).getPoint();
        },
        getSize: function (t) {
          return H.getBounds(t, !0).getSize();
        },
        isInvisible: function (t) {
          return H.getSize(t).equals(new d(0, 0));
        },
        isInView: function (t) {
          return (
            !H.isInvisible(t) &&
            H.getViewportBounds(t).intersects(H.getBounds(t, !0))
          );
        },
        isInserted: function (t) {
          return n.body.contains(t);
        },
        getPrefixed: function (e, i) {
          return e && t(e, i);
        },
        setPrefixed: function (e, i, n) {
          if ("object" == typeof i) for (var r in i) t(e, r, !0, i[r]);
          else t(e, i, !0, n);
        },
      };
    })(),
    Z = {
      add: function (t, e) {
        if (t)
          for (var i in e)
            for (
              var n = e[i], r = i.split(/[\s,]+/g), s = 0, a = r.length;
              s < a;
              s++
            )
              t.addEventListener(r[s], n, !1);
      },
      remove: function (t, e) {
        if (t)
          for (var i in e)
            for (
              var n = e[i], r = i.split(/[\s,]+/g), s = 0, a = r.length;
              s < a;
              s++
            )
              t.removeEventListener(r[s], n, !1);
      },
      getPoint: function (t) {
        var e = t.targetTouches
          ? t.targetTouches.length
            ? t.targetTouches[0]
            : t.changedTouches[0]
          : t;
        return new c(
          e.pageX || e.clientX + n.documentElement.scrollLeft,
          e.pageY || e.clientY + n.documentElement.scrollTop
        );
      },
      getTarget: function (t) {
        return t.target || t.srcElement;
      },
      getRelatedTarget: function (t) {
        return t.relatedTarget || t.toElement;
      },
      getOffset: function (t, e) {
        return Z.getPoint(t).subtract(H.getOffset(e || Z.getTarget(t)));
      },
    };
  Z.requestAnimationFrame = new (function () {
    function t() {
      var e = s;
      s = [];
      for (var i = 0, a = e.length; i < a; i++) e[i]();
      (r = n && s.length) && n(t);
    }
    var e,
      n = H.getPrefixed(i, "requestAnimationFrame"),
      r = !1,
      s = [];
    return function (i) {
      s.push(i),
        n ? r || (n(t), (r = !0)) : e || (e = setInterval(t, 1e3 / 60));
    };
  })();
  var U = r.extend(
      s,
      {
        _class: "View",
        initialize: function t(e, r) {
          function s(t) {
            return r[t] || parseInt(r.getAttribute(t), 10);
          }
          function o() {
            var t = H.getSize(r);
            return t.isNaN() || t.isZero() ? new d(s("width"), s("height")) : t;
          }
          var h;
          if (i && r) {
            (this._id = r.getAttribute("id")),
              null == this._id &&
                r.setAttribute("id", (this._id = "view-" + t._id++)),
              Z.add(r, this._viewEvents);
            if (
              (H.setPrefixed(r.style, {
                userDrag: "none",
                userSelect: "none",
                touchCallout: "none",
                contentZooming: "none",
                tapHighlightColor: "rgba(0,0,0,0)",
              }),
              a.hasAttribute(r, "resize"))
            ) {
              var u = this;
              Z.add(
                i,
                (this._windowEvents = {
                  resize: function () {
                    u.setViewSize(o());
                  },
                })
              );
            }
            if (
              ((h = o()),
              a.hasAttribute(r, "stats") && "undefined" != typeof Stats)
            ) {
              this._stats = new Stats();
              var l = this._stats.domElement,
                c = l.style,
                f = H.getOffset(r);
              (c.position = "absolute"),
                (c.left = f.x + "px"),
                (c.top = f.y + "px"),
                n.body.appendChild(l);
            }
          } else (h = new d(r)), (r = null);
          (this._project = e),
            (this._scope = e._scope),
            (this._element = r),
            this._pixelRatio ||
              (this._pixelRatio = (i && i.devicePixelRatio) || 1),
            this._setElementSize(h.width, h.height),
            (this._viewSize = h),
            t._views.push(this),
            (t._viewsById[this._id] = this),
            ((this._matrix = new p())._owner = this),
            t._focused || (t._focused = this),
            (this._frameItems = {}),
            (this._frameItemCount = 0),
            (this._itemEvents = { native: {}, virtual: {} }),
            (this._autoUpdate = !paper.agent.node),
            (this._needsUpdate = !1);
        },
        remove: function () {
          if (!this._project) return !1;
          U._focused === this && (U._focused = null),
            U._views.splice(U._views.indexOf(this), 1),
            delete U._viewsById[this._id];
          var t = this._project;
          return (
            t._view === this && (t._view = null),
            Z.remove(this._element, this._viewEvents),
            Z.remove(i, this._windowEvents),
            (this._element = this._project = null),
            this.off("frame"),
            (this._animate = !1),
            (this._frameItems = {}),
            !0
          );
        },
        _events: r.each(
          w._itemHandlers.concat(["onResize", "onKeyDown", "onKeyUp"]),
          function (t) {
            this[t] = {};
          },
          {
            onFrame: {
              install: function () {
                this.play();
              },
              uninstall: function () {
                this.pause();
              },
            },
          }
        ),
        _animate: !1,
        _time: 0,
        _count: 0,
        getAutoUpdate: function () {
          return this._autoUpdate;
        },
        setAutoUpdate: function (t) {
          (this._autoUpdate = t), t && this.requestUpdate();
        },
        update: function () {},
        draw: function () {
          this.update();
        },
        requestUpdate: function () {
          if (!this._requested) {
            var t = this;
            Z.requestAnimationFrame(function () {
              if (((t._requested = !1), t._animate)) {
                t.requestUpdate();
                var e = t._element;
                (H.getPrefixed(n, "hidden") &&
                  "true" !== a.getAttribute(e, "keepalive")) ||
                  !H.isInView(e) ||
                  t._handleFrame();
              }
              t._autoUpdate && t.update();
            }),
              (this._requested = !0);
          }
        },
        play: function () {
          (this._animate = !0), this.requestUpdate();
        },
        pause: function () {
          this._animate = !1;
        },
        _handleFrame: function () {
          paper = this._scope;
          var t = Date.now() / 1e3,
            e = this._last ? t - this._last : 0;
          (this._last = t),
            this.emit(
              "frame",
              new r({ delta: e, time: (this._time += e), count: this._count++ })
            ),
            this._stats && this._stats.update();
        },
        _animateItem: function (t, e) {
          var i = this._frameItems;
          e
            ? ((i[t._id] = { item: t, time: 0, count: 0 }),
              1 == ++this._frameItemCount &&
                this.on("frame", this._handleFrameItems))
            : (delete i[t._id],
              0 == --this._frameItemCount &&
                this.off("frame", this._handleFrameItems));
        },
        _handleFrameItems: function (t) {
          for (var e in this._frameItems) {
            var i = this._frameItems[e];
            i.item.emit(
              "frame",
              new r(t, { time: (i.time += t.delta), count: i.count++ })
            );
          }
        },
        _changed: function () {
          this._project._changed(2049), (this._bounds = this._decomposed = e);
        },
        getElement: function () {
          return this._element;
        },
        getPixelRatio: function () {
          return this._pixelRatio;
        },
        getResolution: function () {
          return 72 * this._pixelRatio;
        },
        getViewSize: function () {
          var t = this._viewSize;
          return new _(t.width, t.height, this, "setViewSize");
        },
        setViewSize: function () {
          var t = d.read(arguments),
            e = t.subtract(this._viewSize);
          e.isZero() ||
            (this._setElementSize(t.width, t.height),
            this._viewSize.set(t),
            this._changed(),
            this.emit("resize", { size: t, delta: e }),
            this._autoUpdate && this.update());
        },
        _setElementSize: function (t, e) {
          var i = this._element;
          i &&
            (i.width !== t && (i.width = t), i.height !== e && (i.height = e));
        },
        getBounds: function () {
          return (
            this._bounds ||
              (this._bounds = this._matrix
                .inverted()
                ._transformBounds(new g(new c(), this._viewSize))),
            this._bounds
          );
        },
        getSize: function () {
          return this.getBounds().getSize();
        },
        isVisible: function () {
          return H.isInView(this._element);
        },
        isInserted: function () {
          return H.isInserted(this._element);
        },
        getPixelSize: function (t) {
          var e,
            i = this._element;
          if (i) {
            var r = i.parentNode,
              s = n.createElement("div");
            (s.style.fontSize = t),
              r.appendChild(s),
              (e = parseFloat(H.getStyles(s).fontSize)),
              r.removeChild(s);
          } else e = parseFloat(e);
          return e;
        },
        getTextWidth: function (t, e) {
          return 0;
        },
      },
      r.each(
        ["rotate", "scale", "shear", "skew"],
        function (t) {
          var e = "rotate" === t;
          this[t] = function () {
            var i = (e ? r : c).read(arguments),
              n = c.read(arguments, 0, { readNull: !0 });
            return this.transform(new p()[t](i, n || this.getCenter(!0)));
          };
        },
        {
          _decompose: function () {
            return (
              this._decomposed || (this._decomposed = this._matrix.decompose())
            );
          },
          translate: function () {
            var t = new p();
            return this.transform(t.translate.apply(t, arguments));
          },
          getCenter: function () {
            return this.getBounds().getCenter();
          },
          setCenter: function () {
            var t = c.read(arguments);
            this.translate(this.getCenter().subtract(t));
          },
          getZoom: function () {
            var t = this._decompose(),
              e = t && t.scaling;
            return e ? (e.x + e.y) / 2 : 0;
          },
          setZoom: function (t) {
            this.transform(new p().scale(t / this.getZoom(), this.getCenter()));
          },
          getRotation: function () {
            var t = this._decompose();
            return t && t.rotation;
          },
          setRotation: function (t) {
            var e = this.getRotation();
            null != e && null != t && this.rotate(t - e);
          },
          getScaling: function () {
            var t = this._decompose(),
              i = t && t.scaling;
            return i ? new f(i.x, i.y, this, "setScaling") : e;
          },
          setScaling: function () {
            var t = this.getScaling(),
              e = c.read(arguments, 0, { clone: !0, readNull: !0 });
            t && e && this.scale(e.x / t.x, e.y / t.y);
          },
          getMatrix: function () {
            return this._matrix;
          },
          setMatrix: function () {
            var t = this._matrix;
            t.initialize.apply(t, arguments);
          },
          transform: function (t) {
            this._matrix.append(t);
          },
          scrollBy: function () {
            this.translate(c.read(arguments).negate());
          },
        }
      ),
      {
        projectToView: function () {
          return this._matrix._transformPoint(c.read(arguments));
        },
        viewToProject: function () {
          return this._matrix._inverseTransform(c.read(arguments));
        },
        getEventPoint: function (t) {
          return this.viewToProject(Z.getOffset(t, this._element));
        },
      },
      {
        statics: {
          _views: [],
          _viewsById: {},
          _id: 0,
          create: function (t, e) {
            return (
              n && "string" == typeof e && (e = n.getElementById(e)),
              new (i ? W : U)(t, e)
            );
          },
        },
      },
      new (function () {
        function t(t) {
          var e = Z.getTarget(t);
          return e.getAttribute && U._viewsById[e.getAttribute("id")];
        }
        function e() {
          var t = U._focused;
          if (!t || !t.isVisible())
            for (var e = 0, i = U._views.length; e < i; e++)
              if ((t = U._views[e]).isVisible()) {
                U._focused = h = t;
                break;
              }
        }
        function r(t, e, i) {
          t._handleMouseEvent("mousemove", e, i);
        }
        function s(t, e, i, n, r, s, a) {
          function o(t, i) {
            if (t.responds(i)) {
              if (
                (h || (h = new X(i, n, r, e || t, s ? r.subtract(s) : null)),
                t.emit(i, h) && ((I = !0), h.prevented && (M = !0), h.stopped))
              )
                return (u = !0);
            } else {
              var a = T[i];
              if (a) return o(t, a);
            }
          }
          for (var h, u = !1; t && t !== a && !o(t, i); ) t = t._parent;
          return u;
        }
        function a(t, e, i, n, r, a) {
          return (
            t._project.removeOn(i),
            (M = I = !1),
            (b && s(b, null, i, n, r, a)) ||
              (e &&
                e !== b &&
                !e.isDescendant(b) &&
                s(e, null, i, n, r, a, b)) ||
              s(t, b || e || t, i, n, r, a)
          );
        }
        if (i) {
          var o,
            h,
            u,
            l,
            c,
            f = !1,
            d = !1,
            _ = i.navigator;
          _.pointerEnabled || _.msPointerEnabled
            ? ((u = "pointerdown MSPointerDown"),
              (l = "pointermove MSPointerMove"),
              (c = "pointerup pointercancel MSPointerUp MSPointerCancel"))
            : ((u = "touchstart"),
              (l = "touchmove"),
              (c = "touchend touchcancel"),
              ("ontouchstart" in i &&
                _.userAgent.match(
                  /mobile|tablet|ip(ad|hone|od)|android|silk/i
                )) ||
                ((u += " mousedown"), (l += " mousemove"), (c += " mouseup")));
          var g = {},
            v = {
              mouseout: function (t) {
                var e = U._focused,
                  i = Z.getRelatedTarget(t);
                if (e && (!i || "HTML" === i.nodeName)) {
                  var n = Z.getOffset(t, e._element),
                    s = n.x,
                    a = Math.abs,
                    o = a(s),
                    h = o - (1 << 25);
                  (n.x = a(h) < o ? h * (s < 0 ? -1 : 1) : s),
                    r(e, t, e.viewToProject(n));
                }
              },
              scroll: e,
            };
          (g[u] = function (e) {
            var i = (U._focused = t(e));
            f || ((f = !0), i._handleMouseEvent("mousedown", e));
          }),
            (v[l] = function (i) {
              var n = U._focused;
              if (!d) {
                var s = t(i);
                s
                  ? n !== s &&
                    (n && r(n, i), o || (o = n), (n = U._focused = h = s))
                  : h &&
                    h === n &&
                    (o && !o.isInserted() && (o = null),
                    (n = U._focused = o),
                    (o = null),
                    e());
              }
              n && r(n, i);
            }),
            (v[u] = function () {
              d = !0;
            }),
            (v[c] = function (t) {
              var e = U._focused;
              e && f && e._handleMouseEvent("mouseup", t), (d = f = !1);
            }),
            Z.add(n, v),
            Z.add(i, { load: e });
          var p,
            m,
            y,
            w,
            x,
            b,
            C,
            S,
            P,
            I = !1,
            M = !1,
            T = { doubleclick: "click", mousedrag: "mousemove" },
            z = !1,
            k = {
              mousedown: {
                mousedown: 1,
                mousedrag: 1,
                click: 1,
                doubleclick: 1,
              },
              mouseup: { mouseup: 1, mousedrag: 1, click: 1, doubleclick: 1 },
              mousemove: {
                mousedrag: 1,
                mousemove: 1,
                mouseenter: 1,
                mouseleave: 1,
              },
            };
          return {
            _viewEvents: g,
            _handleMouseEvent: function (t, e, i) {
              function n(t) {
                return r.virtual[t] || l.responds(t) || (u && u.responds(t));
              }
              var r = this._itemEvents,
                o = r.native[t],
                h = "mousemove" === t,
                u = this._scope.tool,
                l = this;
              h && f && n("mousedrag") && (t = "mousedrag"),
                i || (i = this.getEventPoint(e));
              var c = this.getBounds().contains(i),
                d =
                  o &&
                  c &&
                  l._project.hitTest(i, { tolerance: 0, fill: !0, stroke: !0 }),
                _ = (d && d.item) || null,
                g = !1,
                v = {};
              if (
                ((v[t.substr(5)] = !0),
                o &&
                  _ !== x &&
                  (x && s(x, null, "mouseleave", e, i),
                  _ && s(_, null, "mouseenter", e, i),
                  (x = _)),
                z ^ c &&
                  (s(this, null, c ? "mouseenter" : "mouseleave", e, i),
                  (p = c ? this : null),
                  (g = !0)),
                (!c && !v.drag) ||
                  i.equals(y) ||
                  (a(this, _, h ? t : "mousemove", e, i, y), (g = !0)),
                (z = c),
                (v.down && c) || (v.up && m))
              ) {
                if ((a(this, _, t, e, i, m), v.down)) {
                  if (
                    ((P = _ === C && Date.now() - S < 300),
                    (w = C = _),
                    !M && _)
                  ) {
                    for (var T = _; T && !T.responds("mousedrag"); )
                      T = T._parent;
                    T && (b = _);
                  }
                  m = i;
                } else
                  v.up &&
                    (M ||
                      _ !== w ||
                      ((S = Date.now()),
                      a(this, _, P ? "doubleclick" : "click", e, i, m),
                      (P = !1)),
                    (w = b = null));
                (z = !1), (g = !0);
              }
              (y = i),
                g && u && (I = u._handleMouseEvent(t, e, i, v) || I),
                ((I && !v.move) || (v.down && n("mouseup"))) &&
                  e.preventDefault();
            },
            _handleKeyEvent: function (t, e, i, n) {
              function r(r) {
                r.responds(t) &&
                  ((paper = a), r.emit(t, (s = s || new J(t, e, i, n))));
              }
              var s,
                a = this._scope,
                o = a.tool;
              this.isVisible() && (r(this), o && o.responds(t) && r(o));
            },
            _countItemEvent: function (t, e) {
              var i = this._itemEvents,
                n = i.native,
                r = i.virtual;
              for (var s in k) n[s] = (n[s] || 0) + (k[s][t] || 0) * e;
              r[t] = (r[t] || 0) + e;
            },
            statics: { updateFocus: e },
          };
        }
      })()
    ),
    W = U.extend({
      _class: "CanvasView",
      initialize: function (t, e) {
        if (!(e instanceof i.HTMLCanvasElement)) {
          var n = d.read(arguments, 1);
          if (n.isZero())
            throw new Error(
              "Cannot create CanvasView with the provided argument: " +
                r.slice(arguments, 1)
            );
          e = Q.getCanvas(n);
        }
        var s = (this._context = e.getContext("2d"));
        if (
          (s.save(),
          (this._pixelRatio = 1),
          !/^off|false$/.test(a.getAttribute(e, "hidpi")))
        ) {
          var o = i.devicePixelRatio || 1,
            h = H.getPrefixed(s, "backingStorePixelRatio") || 1;
          this._pixelRatio = o / h;
        }
        U.call(this, t, e), (this._needsUpdate = !0);
      },
      remove: function t() {
        return this._context.restore(), t.base.call(this);
      },
      _setElementSize: function t(e, i) {
        var n = this._pixelRatio;
        if ((t.base.call(this, e * n, i * n), 1 !== n)) {
          var r = this._element,
            s = this._context;
          if (!a.hasAttribute(r, "resize")) {
            var o = r.style;
            (o.width = e + "px"), (o.height = i + "px");
          }
          s.restore(), s.save(), s.scale(n, n);
        }
      },
      getPixelSize: function t(e) {
        var i,
          n = paper.agent;
        if (n && n.firefox) i = t.base.call(this, e);
        else {
          var r = this._context,
            s = r.font;
          (r.font = e + " serif"), (i = parseFloat(r.font)), (r.font = s);
        }
        return i;
      },
      getTextWidth: function (t, e) {
        var i = this._context,
          n = i.font,
          r = 0;
        i.font = t;
        for (var s = 0, a = e.length; s < a; s++)
          r = Math.max(r, i.measureText(e[s]).width);
        return (i.font = n), r;
      },
      update: function () {
        if (!this._needsUpdate) return !1;
        var t = this._project,
          e = this._context,
          i = this._viewSize;
        return (
          e.clearRect(0, 0, i.width + 1, i.height + 1),
          t && t.draw(e, this._matrix, this._pixelRatio),
          (this._needsUpdate = !1),
          !0
        );
      },
    }),
    G = r.extend({
      _class: "Event",
      initialize: function (t) {
        (this.event = t), (this.type = t && t.type);
      },
      prevented: !1,
      stopped: !1,
      preventDefault: function () {
        (this.prevented = !0), this.event.preventDefault();
      },
      stopPropagation: function () {
        (this.stopped = !0), this.event.stopPropagation();
      },
      stop: function () {
        this.stopPropagation(), this.preventDefault();
      },
      getTimeStamp: function () {
        return this.event.timeStamp;
      },
      getModifiers: function () {
        return $.modifiers;
      },
    }),
    J = G.extend({
      _class: "KeyEvent",
      initialize: function (t, e, i, n) {
        (this.type = t), (this.event = e), (this.key = i), (this.character = n);
      },
      toString: function () {
        return (
          "{ type: '" +
          this.type +
          "', key: '" +
          this.key +
          "', character: '" +
          this.character +
          "', modifiers: " +
          this.getModifiers() +
          " }"
        );
      },
    }),
    $ = new (function () {
      function t(t) {
        var i = t.key || t.keyIdentifier;
        return (
          (i = /^U\+/.test(i)
            ? String.fromCharCode(parseInt(i.substr(2), 16))
            : /^Arrow[A-Z]/.test(i)
            ? i.substr(5)
            : "Unidentified" === i || i === e
            ? String.fromCharCode(t.keyCode)
            : i),
          h[i] || (i.length > 1 ? r.hyphenate(i) : i.toLowerCase())
        );
      }
      function s(t, e, i, n) {
        var o,
          h = U._focused;
        if (
          ((l[e] = t),
          t ? (c[e] = i) : delete c[e],
          e.length > 1 && (o = r.camelize(e)) in f)
        ) {
          f[o] = t;
          var u = paper && paper.agent;
          if ("meta" === o && u && u.mac)
            if (t) a = {};
            else {
              for (var d in a) d in c && s(!1, d, a[d], n);
              a = null;
            }
        } else t && a && (a[e] = i);
        h && h._handleKeyEvent(t ? "keydown" : "keyup", n, e, i);
      }
      var a,
        o,
        h = {
          "\t": "tab",
          " ": "space",
          "\b": "backspace",
          "": "delete",
          Spacebar: "space",
          Del: "delete",
          Win: "meta",
          Esc: "escape",
        },
        u = { tab: "\t", space: " ", enter: "\r" },
        l = {},
        c = {},
        f = new r({
          shift: !1,
          control: !1,
          alt: !1,
          meta: !1,
          capsLock: !1,
          space: !1,
        }).inject({
          option: {
            get: function () {
              return this.alt;
            },
          },
          command: {
            get: function () {
              var t = paper && paper.agent;
              return t && t.mac ? this.meta : this.control;
            },
          },
        });
      return (
        Z.add(n, {
          keydown: function (e) {
            var i = t(e),
              n = paper && paper.agent;
            i.length > 1 ||
            (n &&
              n.chrome &&
              (e.altKey || (n.mac && e.metaKey) || (!n.mac && e.ctrlKey)))
              ? s(!0, i, u[i] || (i.length > 1 ? "" : i), e)
              : (o = i);
          },
          keypress: function (e) {
            if (o) {
              var i = t(e),
                n = e.charCode,
                r = n >= 32 ? String.fromCharCode(n) : i.length > 1 ? "" : i;
              i !== o && (i = r.toLowerCase()), s(!0, i, r, e), (o = null);
            }
          },
          keyup: function (e) {
            var i = t(e);
            i in c && s(!1, i, c[i], e);
          },
        }),
        Z.add(i, {
          blur: function (t) {
            for (var e in c) s(!1, e, c[e], t);
          },
        }),
        {
          modifiers: f,
          isDown: function (t) {
            return !!l[t];
          },
        }
      );
    })(),
    X = G.extend({
      _class: "MouseEvent",
      initialize: function (t, e, i, n, r) {
        (this.type = t),
          (this.event = e),
          (this.point = i),
          (this.target = n),
          (this.delta = r);
      },
      toString: function () {
        return (
          "{ type: '" +
          this.type +
          "', point: " +
          this.point +
          ", target: " +
          this.target +
          (this.delta ? ", delta: " + this.delta : "") +
          ", modifiers: " +
          this.getModifiers() +
          " }"
        );
      },
    }),
    Y = G.extend({
      _class: "ToolEvent",
      _item: null,
      initialize: function (t, e, i) {
        (this.tool = t), (this.type = e), (this.event = i);
      },
      _choosePoint: function (t, e) {
        return t || (e ? e.clone() : null);
      },
      getPoint: function () {
        return this._choosePoint(this._point, this.tool._point);
      },
      setPoint: function (t) {
        this._point = t;
      },
      getLastPoint: function () {
        return this._choosePoint(this._lastPoint, this.tool._lastPoint);
      },
      setLastPoint: function (t) {
        this._lastPoint = t;
      },
      getDownPoint: function () {
        return this._choosePoint(this._downPoint, this.tool._downPoint);
      },
      setDownPoint: function (t) {
        this._downPoint = t;
      },
      getMiddlePoint: function () {
        return !this._middlePoint && this.tool._lastPoint
          ? this.tool._point.add(this.tool._lastPoint).divide(2)
          : this._middlePoint;
      },
      setMiddlePoint: function (t) {
        this._middlePoint = t;
      },
      getDelta: function () {
        return !this._delta && this.tool._lastPoint
          ? this.tool._point.subtract(this.tool._lastPoint)
          : this._delta;
      },
      setDelta: function (t) {
        this._delta = t;
      },
      getCount: function () {
        return this.tool[
          /^mouse(down|up)$/.test(this.type) ? "_downCount" : "_moveCount"
        ];
      },
      setCount: function (t) {
        this.tool[/^mouse(down|up)$/.test(this.type) ? "downCount" : "count"] =
          t;
      },
      getItem: function () {
        if (!this._item) {
          var t = this.tool._scope.project.hitTest(this.getPoint());
          if (t) {
            for (
              var e = t.item, i = e._parent;
              /^(Group|CompoundPath)$/.test(i._class);

            )
              (e = i), (i = i._parent);
            this._item = e;
          }
        }
        return this._item;
      },
      setItem: function (t) {
        this._item = t;
      },
      toString: function () {
        return (
          "{ type: " +
          this.type +
          ", point: " +
          this.getPoint() +
          ", count: " +
          this.getCount() +
          ", modifiers: " +
          this.getModifiers() +
          " }"
        );
      },
    }),
    K =
      (o.extend({
        _class: "Tool",
        _list: "tools",
        _reference: "tool",
        _events: [
          "onMouseDown",
          "onMouseUp",
          "onMouseDrag",
          "onMouseMove",
          "onActivate",
          "onDeactivate",
          "onEditOptions",
          "onKeyDown",
          "onKeyUp",
        ],
        initialize: function (t) {
          o.call(this),
            (this._moveCount = -1),
            (this._downCount = -1),
            this.set(t);
        },
        getMinDistance: function () {
          return this._minDistance;
        },
        setMinDistance: function (t) {
          (this._minDistance = t),
            null != t &&
              null != this._maxDistance &&
              t > this._maxDistance &&
              (this._maxDistance = t);
        },
        getMaxDistance: function () {
          return this._maxDistance;
        },
        setMaxDistance: function (t) {
          (this._maxDistance = t),
            null != this._minDistance &&
              null != t &&
              t < this._minDistance &&
              (this._minDistance = t);
        },
        getFixedDistance: function () {
          return this._minDistance == this._maxDistance
            ? this._minDistance
            : null;
        },
        setFixedDistance: function (t) {
          this._minDistance = this._maxDistance = t;
        },
        _handleMouseEvent: function (t, e, i, n) {
          function r(t, e) {
            var r = i,
              s = a ? c._point : c._downPoint || r;
            if (a) {
              if (c._moveCount && r.equals(s)) return !1;
              if (s && (null != t || null != e)) {
                var o = r.subtract(s),
                  h = o.getLength();
                if (h < (t || 0)) return !1;
                e && (r = s.add(o.normalize(Math.min(h, e))));
              }
              c._moveCount++;
            }
            return (
              (c._point = r),
              (c._lastPoint = s || r),
              n.down &&
                ((c._moveCount = -1), (c._downPoint = r), c._downCount++),
              !0
            );
          }
          function s() {
            o && (l = c.emit(t, new Y(c, t, e)) || l);
          }
          (paper = this._scope),
            n.drag && !this.responds(t) && (t = "mousemove");
          var a = n.move || n.drag,
            o = this.responds(t),
            h = this.minDistance,
            u = this.maxDistance,
            l = !1,
            c = this;
          if (n.down) r(), s();
          else if (n.up) r(null, u), s();
          else if (o) for (; r(h, u); ) s();
          return l;
        },
      }),
      {
        request: function (e) {
          var i = new t.XMLHttpRequest();
          return (
            i.open(
              (e.method || "get").toUpperCase(),
              e.url,
              r.pick(e.async, !0)
            ),
            e.mimeType && i.overrideMimeType(e.mimeType),
            (i.onload = function () {
              var t = i.status;
              0 === t || 200 === t
                ? e.onLoad && e.onLoad.call(i, i.responseText)
                : i.onerror();
            }),
            (i.onerror = function () {
              var t = i.status,
                n = 'Could not load "' + e.url + '" (Status: ' + t + ")";
              if (!e.onError) throw new Error(n);
              e.onError(n, t);
            }),
            i.send(null)
          );
        },
      }),
    Q = {
      canvases: [],
      getCanvas: function (t, e) {
        if (!i) return null;
        var r,
          s = !0;
        "object" == typeof t && ((e = t.height), (t = t.width)),
          this.canvases.length
            ? (r = this.canvases.pop())
            : ((r = n.createElement("canvas")), (s = !1));
        var a = r.getContext("2d", { willReadFrequently: true });
        if (!a)
          throw new Error(
            "Canvas " + r + " is unable to provide a 2D context."
          );
        return (
          r.width === t && r.height === e
            ? s && a.clearRect(0, 0, t + 1, e + 1)
            : ((r.width = t), (r.height = e)),
          a.save(),
          r
        );
      },
      getContext: function (t, e) {
        var i = this.getCanvas(t, e);
        return i ? i.getContext("2d") : null;
      },
      release: function (t) {
        var e = t && t.canvas ? t.canvas : t;
        e &&
          e.getContext &&
          (e.getContext("2d").restore(), this.canvases.push(e));
      },
    },
    tt = new (function () {
      function t(t, e, i) {
        return 0.2989 * t + 0.587 * e + 0.114 * i;
      }
      function e(e, i, n, r) {
        var s = r - t(e, i, n),
          r = t((d = e + s), (_ = i + s), (g = n + s)),
          a = v(d, _, g),
          o = p(d, _, g);
        if (a < 0) {
          var h = r - a;
          (d = r + ((d - r) * r) / h),
            (_ = r + ((_ - r) * r) / h),
            (g = r + ((g - r) * r) / h);
        }
        if (o > 255) {
          var u = 255 - r,
            l = o - r;
          (d = r + ((d - r) * u) / l),
            (_ = r + ((_ - r) * u) / l),
            (g = r + ((g - r) * u) / l);
        }
      }
      function i(t, e, i) {
        return p(t, e, i) - v(t, e, i);
      }
      function n(t, e, i, n) {
        var r,
          s = [t, e, i],
          a = p(t, e, i),
          o = v(t, e, i);
        (r =
          0 ===
          v(
            (o = o === t ? 0 : o === e ? 1 : 2),
            (a = a === t ? 0 : a === e ? 1 : 2)
          )
            ? 1 === p(o, a)
              ? 2
              : 1
            : 0),
          s[a] > s[o]
            ? ((s[r] = ((s[r] - s[o]) * n) / (s[a] - s[o])), (s[a] = n))
            : (s[r] = s[a] = 0),
          (s[o] = 0),
          (d = s[0]),
          (_ = s[1]),
          (g = s[2]);
      }
      var s,
        a,
        o,
        h,
        u,
        l,
        c,
        f,
        d,
        _,
        g,
        v = Math.min,
        p = Math.max,
        m = Math.abs,
        y = {
          multiply: function () {
            (d = (u * s) / 255), (_ = (l * a) / 255), (g = (c * o) / 255);
          },
          screen: function () {
            (d = u + s - (u * s) / 255),
              (_ = l + a - (l * a) / 255),
              (g = c + o - (c * o) / 255);
          },
          overlay: function () {
            (d =
              u < 128
                ? (2 * u * s) / 255
                : 255 - (2 * (255 - u) * (255 - s)) / 255),
              (_ =
                l < 128
                  ? (2 * l * a) / 255
                  : 255 - (2 * (255 - l) * (255 - a)) / 255),
              (g =
                c < 128
                  ? (2 * c * o) / 255
                  : 255 - (2 * (255 - c) * (255 - o)) / 255);
          },
          "soft-light": function () {
            var t = (s * u) / 255;
            (d = t + (u * (255 - ((255 - u) * (255 - s)) / 255 - t)) / 255),
              (_ =
                (t = (a * l) / 255) +
                (l * (255 - ((255 - l) * (255 - a)) / 255 - t)) / 255),
              (g =
                (t = (o * c) / 255) +
                (c * (255 - ((255 - c) * (255 - o)) / 255 - t)) / 255);
          },
          "hard-light": function () {
            (d =
              s < 128
                ? (2 * s * u) / 255
                : 255 - (2 * (255 - s) * (255 - u)) / 255),
              (_ =
                a < 128
                  ? (2 * a * l) / 255
                  : 255 - (2 * (255 - a) * (255 - l)) / 255),
              (g =
                o < 128
                  ? (2 * o * c) / 255
                  : 255 - (2 * (255 - o) * (255 - c)) / 255);
          },
          "color-dodge": function () {
            (d = 0 === u ? 0 : 255 === s ? 255 : v(255, (255 * u) / (255 - s))),
              (_ =
                0 === l ? 0 : 255 === a ? 255 : v(255, (255 * l) / (255 - a))),
              (g =
                0 === c ? 0 : 255 === o ? 255 : v(255, (255 * c) / (255 - o)));
          },
          "color-burn": function () {
            (d =
              255 === u
                ? 255
                : 0 === s
                ? 0
                : p(0, 255 - (255 * (255 - u)) / s)),
              (_ =
                255 === l
                  ? 255
                  : 0 === a
                  ? 0
                  : p(0, 255 - (255 * (255 - l)) / a)),
              (g =
                255 === c
                  ? 255
                  : 0 === o
                  ? 0
                  : p(0, 255 - (255 * (255 - c)) / o));
          },
          darken: function () {
            (d = u < s ? u : s), (_ = l < a ? l : a), (g = c < o ? c : o);
          },
          lighten: function () {
            (d = u > s ? u : s), (_ = l > a ? l : a), (g = c > o ? c : o);
          },
          difference: function () {
            (d = u - s) < 0 && (d = -d),
              (_ = l - a) < 0 && (_ = -_),
              (g = c - o) < 0 && (g = -g);
          },
          exclusion: function () {
            (d = u + (s * (255 - u - u)) / 255),
              (_ = l + (a * (255 - l - l)) / 255),
              (g = c + (o * (255 - c - c)) / 255);
          },
          hue: function () {
            n(s, a, o, i(u, l, c)), e(d, _, g, t(u, l, c));
          },
          saturation: function () {
            n(u, l, c, i(s, a, o)), e(d, _, g, t(u, l, c));
          },
          luminosity: function () {
            e(u, l, c, t(s, a, o));
          },
          color: function () {
            e(s, a, o, t(u, l, c));
          },
          add: function () {
            (d = v(u + s, 255)), (_ = v(l + a, 255)), (g = v(c + o, 255));
          },
          subtract: function () {
            (d = p(u - s, 0)), (_ = p(l - a, 0)), (g = p(c - o, 0));
          },
          average: function () {
            (d = (u + s) / 2), (_ = (l + a) / 2), (g = (c + o) / 2);
          },
          negation: function () {
            (d = 255 - m(255 - s - u)),
              (_ = 255 - m(255 - a - l)),
              (g = 255 - m(255 - o - c));
          },
        },
        w = (this.nativeModes = r.each(
          [
            "source-over",
            "source-in",
            "source-out",
            "source-atop",
            "destination-over",
            "destination-in",
            "destination-out",
            "destination-atop",
            "lighter",
            "darker",
            "copy",
            "xor",
          ],
          function (t) {
            this[t] = !0;
          },
          {}
        )),
        x = Q.getContext(1, 1);
      x &&
        (r.each(y, function (t, e) {
          var i = "darken" === e,
            n = !1;
          x.save();
          try {
            (x.fillStyle = i ? "#300" : "#a00"),
              x.fillRect(0, 0, 1, 1),
              (x.globalCompositeOperation = e),
              x.globalCompositeOperation === e &&
                ((x.fillStyle = i ? "#a00" : "#300"),
                x.fillRect(0, 0, 1, 1),
                (n = x.getImageData(0, 0, 1, 1).data[0] !== i ? 170 : 51));
          } catch (t) {}
          x.restore(), (w[e] = n);
        }),
        Q.release(x)),
        (this.process = function (t, e, i, n, r) {
          var v = e.canvas,
            p = "normal" === t;
          if (p || w[t])
            i.save(),
              i.setTransform(1, 0, 0, 1, 0, 0),
              (i.globalAlpha = n),
              p || (i.globalCompositeOperation = t),
              i.drawImage(v, r.x, r.y),
              i.restore();
          else {
            var m = y[t];
            if (!m) return;
            for (
              var x = i.getImageData(r.x, r.y, v.width, v.height),
                b = x.data,
                C = e.getImageData(0, 0, v.width, v.height).data,
                S = 0,
                P = b.length;
              S < P;
              S += 4
            ) {
              (s = C[S]),
                (u = b[S]),
                (a = C[S + 1]),
                (l = b[S + 1]),
                (o = C[S + 2]),
                (c = b[S + 2]),
                (h = C[S + 3]),
                (f = b[S + 3]),
                m();
              var I = (h * n) / 255,
                M = 1 - I;
              (b[S] = I * d + M * u),
                (b[S + 1] = I * _ + M * l),
                (b[S + 2] = I * g + M * c),
                (b[S + 3] = h * n + M * f);
            }
            i.putImageData(x, r.x, r.y);
          }
        });
    })(),
    et = new (function () {
      function t(t, e, i) {
        for (var n in e) {
          var r = e[n],
            a = s[n];
          "number" == typeof r && i && (r = i.number(r)),
            a ? t.setAttributeNS(a, n, r) : t.setAttribute(n, r);
        }
        return t;
      }
      var e = "http://www.w3.org/2000/svg",
        i = "http://www.w3.org/2000/xmlns",
        r = "http://www.w3.org/1999/xlink",
        s = { href: r, xlink: i, xmlns: i + "/", "xmlns:xlink": i + "/" };
      return {
        svg: e,
        xmlns: i,
        xlink: r,
        create: function (i, r, s) {
          return t(n.createElementNS(e, i), r, s);
        },
        get: function (t, e) {
          var i = s[e],
            n = i ? t.getAttributeNS(i, e) : t.getAttribute(e);
          return "null" === n ? null : n;
        },
        set: t,
      };
    })(),
    it = r.each(
      {
        fillColor: ["fill", "color"],
        fillRule: ["fill-rule", "string"],
        strokeColor: ["stroke", "color"],
        strokeWidth: ["stroke-width", "number"],
        strokeCap: ["stroke-linecap", "string"],
        strokeJoin: ["stroke-linejoin", "string"],
        strokeScaling: [
          "vector-effect",
          "lookup",
          { true: "none", false: "non-scaling-stroke" },
          function (t, e) {
            return !e && (t instanceof A || t instanceof C || t instanceof j);
          },
        ],
        miterLimit: ["stroke-miterlimit", "number"],
        dashArray: ["stroke-dasharray", "array"],
        dashOffset: ["stroke-dashoffset", "number"],
        fontFamily: ["font-family", "string"],
        fontWeight: ["font-weight", "string"],
        fontSize: ["font-size", "number"],
        justification: [
          "text-anchor",
          "lookup",
          { left: "start", center: "middle", right: "end" },
        ],
        opacity: ["opacity", "number"],
        blendMode: ["mix-blend-mode", "style"],
      },
      function (t, e) {
        var i = r.capitalize(e),
          n = t[2];
        this[e] = {
          type: t[1],
          property: e,
          attribute: t[0],
          toSVG: n,
          fromSVG:
            n &&
            r.each(
              n,
              function (t, e) {
                this[t] = e;
              },
              {}
            ),
          exportFilter: t[3],
          get: "get" + i,
          set: "set" + i,
        };
      },
      {}
    );
  return (
    new (function () {
      function e(t, e, i) {
        var n = new r(),
          s = t.getTranslation();
        if (e) {
          var a = (t = t._shiftless())._inverseTransform(s);
          (n[i ? "cx" : "x"] = a.x), (n[i ? "cy" : "y"] = a.y), (s = null);
        }
        if (!t.isIdentity()) {
          var o = t.decompose();
          if (o) {
            var h = [],
              l = o.rotation,
              c = o.scaling,
              f = o.skewing;
            s && !s.isZero() && h.push("translate(" + v.point(s) + ")"),
              l && h.push("rotate(" + v.number(l) + ")"),
              (u.isZero(c.x - 1) && u.isZero(c.y - 1)) ||
                h.push("scale(" + v.point(c) + ")"),
              f.x && h.push("skewX(" + v.number(f.x) + ")"),
              f.y && h.push("skewY(" + v.number(f.y) + ")"),
              (n.transform = h.join(" "));
          } else n.transform = "matrix(" + t.getValues().join(",") + ")";
        }
        return n;
      }
      function i(t, i) {
        for (
          var n = e(t._matrix),
            r = t._children,
            s = et.create("g", n, v),
            a = 0,
            o = r.length;
          a < o;
          a++
        ) {
          var h = r[a],
            u = d(h, i);
          if (u)
            if (h.isClipMask()) {
              var l = et.create("clipPath");
              l.appendChild(u),
                c(h, l, "clip"),
                et.set(s, { "clip-path": "url(#" + l.id + ")" });
            } else s.appendChild(u);
        }
        return s;
      }
      function n(t) {
        var i = t._type,
          n = t._radius,
          r = e(t._matrix, !0, "rectangle" !== i);
        if ("rectangle" === i) {
          i = "rect";
          var s = t._size,
            a = s.width,
            o = s.height;
          (r.x -= a / 2),
            (r.y -= o / 2),
            (r.width = a),
            (r.height = o),
            n.isZero() && (n = null);
        }
        return (
          n &&
            ("circle" === i
              ? (r.r = n)
              : ((r.rx = n.width), (r.ry = n.height))),
          et.create(i, r, v)
        );
      }
      function s(t) {
        var e = o(t, "color");
        if (!e) {
          var i,
            n = t.getGradient(),
            r = n._radial,
            s = t.getOrigin(),
            a = t.getDestination();
          if (r) {
            i = { cx: s.x, cy: s.y, r: s.getDistance(a) };
            var h = t.getHighlight();
            h && ((i.fx = h.x), (i.fy = h.y));
          } else i = { x1: s.x, y1: s.y, x2: a.x, y2: a.y };
          (i.gradientUnits = "userSpaceOnUse"),
            (e = et.create((r ? "radial" : "linear") + "Gradient", i, v));
          for (var u = n._stops, l = 0, f = u.length; l < f; l++) {
            var d = u[l],
              _ = d._color,
              g = _.getAlpha(),
              p = d._offset;
            (i = { offset: null == p ? l / (f - 1) : p }),
              _ && (i["stop-color"] = _.toCSS(!0)),
              g < 1 && (i["stop-opacity"] = g),
              e.appendChild(et.create("stop", i, v));
          }
          c(t, e, "color");
        }
        return "url(#" + e.id + ")";
      }
      function a(t, e, i) {
        var n = {},
          a = !i && t.getParent(),
          o = [];
        return (
          null != t._name && (n.id = t._name),
          r.each(it, function (e) {
            var i = e.get,
              h = e.type,
              u = t[i]();
            if (
              e.exportFilter ? e.exportFilter(t, u) : !a || !r.equals(a[i](), u)
            ) {
              if ("color" === h && null != u) {
                var l = u.getAlpha();
                l < 1 && (n[e.attribute + "-opacity"] = l);
              }
              "style" === h
                ? o.push(e.attribute + ": " + u)
                : (n[e.attribute] =
                    null == u
                      ? "none"
                      : "color" === h
                      ? u.gradient
                        ? s(u, t)
                        : u.toCSS(!0)
                      : "array" === h
                      ? u.join(",")
                      : "lookup" === h
                      ? e.toSVG[u]
                      : u);
            }
          }),
          o.length && (n.style = o.join(";")),
          1 === n.opacity && delete n.opacity,
          t._visible || (n.visibility = "hidden"),
          et.set(e, n, v)
        );
      }
      function o(t, e) {
        return (
          m || (m = { ids: {}, svgs: {} }),
          t && m.svgs[e + "-" + (t._id || t.__id || (t.__id = l.get("svg")))]
        );
      }
      function c(t, e, i) {
        m || o();
        var n = (m.ids[i] = (m.ids[i] || 0) + 1);
        (e.id = i + "-" + n), (m.svgs[i + "-" + (t._id || t.__id)] = e);
      }
      function f(e, i) {
        var n = e,
          r = null;
        if (m) {
          n = "svg" === e.nodeName.toLowerCase() && e;
          for (var s in m.svgs)
            r ||
              (n || (n = et.create("svg")).appendChild(e),
              (r = n.insertBefore(et.create("defs"), n.firstChild))),
              r.appendChild(m.svgs[s]);
          m = null;
        }
        return i.asString ? new t.XMLSerializer().serializeToString(n) : n;
      }
      function d(t, e, i) {
        var n = x[t._class],
          r = n && n(t, e);
        if (r) {
          var s = e.onExport;
          s && (r = s(t, r, e) || r);
          var o = JSON.stringify(t._data);
          o &&
            "{}" !== o &&
            "null" !== o &&
            r.setAttribute("data-paper-data", o);
        }
        return r && a(t, r, i);
      }
      function _(t) {
        return t || (t = {}), (v = new h(t.precision)), t;
      }
      var v,
        m,
        x = {
          Group: i,
          Layer: i,
          Raster: function (t, i) {
            var n = e(t._matrix, !0),
              r = t.getSize(),
              s = t.getImage();
            return (
              (n.x -= r.width / 2),
              (n.y -= r.height / 2),
              (n.width = r.width),
              (n.height = r.height),
              (n.href = (0 == i.embedImages && s && s.src) || t.toDataURL()),
              et.create("image", n, v)
            );
          },
          Path: function (t, i) {
            var r = i.matchShapes;
            if (r) {
              var s = t.toShape(!1);
              if (s) return n(s);
            }
            var a,
              o = t._segments,
              h = o.length,
              u = e(t._matrix);
            if (r && h >= 2 && !t.hasHandles())
              if (h > 2) {
                a = t._closed ? "polygon" : "polyline";
                for (var l = [], c = 0; c < h; c++)
                  l.push(v.point(o[c]._point));
                u.points = l.join(" ");
              } else {
                a = "line";
                var f = o[0]._point,
                  d = o[1]._point;
                u.set({ x1: f.x, y1: f.y, x2: d.x, y2: d.y });
              }
            else (a = "path"), (u.d = t.getPathData(null, i.precision));
            return et.create(a, u, v);
          },
          Shape: n,
          CompoundPath: function (t, i) {
            var n = e(t._matrix),
              r = t.getPathData(null, i.precision);
            return r && (n.d = r), et.create("path", n, v);
          },
          SymbolItem: function (t, i) {
            var n = e(t._matrix, !0),
              r = t._definition,
              s = o(r, "symbol"),
              a = r._item,
              h = a.getBounds();
            return (
              s ||
                ((s = et.create("symbol", {
                  viewBox: v.rectangle(h),
                })).appendChild(d(a, i)),
                c(r, s, "symbol")),
              (n.href = "#" + s.id),
              (n.x += h.x),
              (n.y += h.y),
              (n.width = h.width),
              (n.height = h.height),
              (n.overflow = "visible"),
              et.create("use", n, v)
            );
          },
          PointText: function (t) {
            var i = et.create("text", e(t._matrix, !0), v);
            return (i.textContent = t._content), i;
          },
        };
      w.inject({
        exportSVG: function (t) {
          return (t = _(t)), f(d(this, t, !0), t);
        },
      }),
        y.inject({
          exportSVG: function (t) {
            t = _(t);
            var i = this._children,
              n = this.getView(),
              s = r.pick(t.bounds, "view"),
              a = t.matrix || ("view" === s && n._matrix),
              o = a && p.read([a]),
              h =
                "view" === s
                  ? new g([0, 0], n.getViewSize())
                  : "content" === s
                  ? w._getBounds(i, o, { stroke: !0 }).rect
                  : g.read([s], 0, { readNull: !0 }),
              u = { version: "1.1", xmlns: et.svg, "xmlns:xlink": et.xlink };
            h &&
              ((u.width = h.width),
              (u.height = h.height),
              (h.x || h.y) && (u.viewBox = v.rectangle(h)));
            var l = et.create("svg", u, v),
              c = l;
            o &&
              !o.isIdentity() &&
              (c = l.appendChild(et.create("g", e(o), v)));
            for (var m = 0, y = i.length; m < y; m++)
              c.appendChild(d(i[m], t, !0));
            return f(l, t);
          },
        });
    })(),
    new (function () {
      function s(t, e, i, n, r) {
        var s = et.get(t, e),
          a = null == s ? (n ? null : i ? "" : 0) : i ? s : parseFloat(s);
        return /%\s*$/.test(s)
          ? (a / 100) * (r ? 1 : z[/x|^width/.test(e) ? "width" : "height"])
          : a;
      }
      function a(t, e, i, n, r) {
        return (
          (e = s(t, e || "x", !1, n, r)),
          (i = s(t, i || "y", !1, n, r)),
          !n || (null != e && null != i) ? new c(e, i) : null
        );
      }
      function o(t, e, i, n, r) {
        return (
          (e = s(t, e || "width", !1, n, r)),
          (i = s(t, i || "height", !1, n, r)),
          !n || (null != e && null != i) ? new d(e, i) : null
        );
      }
      function h(t, e, i) {
        return "none" === t
          ? null
          : "number" === e
          ? parseFloat(t)
          : "array" === e
          ? t
            ? t.split(/[\s,]+/g).map(parseFloat)
            : []
          : "color" === e
          ? P(t) || t
          : "lookup" === e
          ? i[t]
          : t;
      }
      function u(t, e, i, n) {
        var r = t.childNodes,
          s = "clippath" === e,
          a = "defs" === e,
          o = new x(),
          h = o._project,
          u = h._currentStyle,
          l = [];
        if (
          (s || a || ((o = b(o, t, n)), (h._currentStyle = o._style.clone())),
          n)
        )
          for (
            var c = t.querySelectorAll("defs"), f = 0, d = c.length;
            f < d;
            f++
          )
            M(c[f], i, !1);
        for (var f = 0, d = r.length; f < d; f++) {
          var _,
            g = r[f];
          1 !== g.nodeType ||
            /^defs$/i.test(g.nodeName) ||
            !(_ = M(g, i, !1)) ||
            _ instanceof I ||
            l.push(_);
        }
        return (
          o.addChildren(l),
          s && (o = b(o.reduce(), t, n)),
          (h._currentStyle = u),
          (s || a) && (o.remove(), (o = null)),
          o
        );
      }
      function l(t, e) {
        for (
          var i = t
              .getAttribute("points")
              .match(/[+-]?(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?/g),
            n = [],
            r = 0,
            s = i.length;
          r < s;
          r += 2
        )
          n.push(new c(parseFloat(i[r]), parseFloat(i[r + 1])));
        var a = new L(n);
        return "polygon" === e && a.closePath(), a;
      }
      function f(t, e) {
        var i,
          n = (s(t, "href", !0) || "").substring(1),
          r = "radialgradient" === e;
        if (n)
          (i = k[n].getGradient())._radial ^ r && ((i = i.clone())._radial = r);
        else {
          for (var o = t.childNodes, h = [], u = 0, l = o.length; u < l; u++) {
            var c = o[u];
            1 === c.nodeType && h.push(b(new q(), c));
          }
          i = new R(h, r);
        }
        var f,
          d,
          _,
          g = "userSpaceOnUse" !== s(t, "gradientUnits", !0);
        return (
          r
            ? ((d = (f = a(t, "cx", "cy", !1, g)).add(s(t, "r", !1, !1, g), 0)),
              (_ = a(t, "fx", "fy", !0, g)))
            : ((f = a(t, "x1", "y1", !1, g)), (d = a(t, "x2", "y2", !1, g))),
          (b(new F(i, f, d, _), t)._scaleToBounds = g),
          null
        );
      }
      function _(t, e, i, n) {
        if (t.transform) {
          for (
            var r = (n.getAttribute(i) || "").split(/\)\s*/g),
              s = new p(),
              a = 0,
              o = r.length;
            a < o;
            a++
          ) {
            var h = r[a];
            if (!h) break;
            for (
              var u = h.split(/\(\s*/),
                l = u[0],
                c = u[1].split(/[\s,]+/g),
                f = 0,
                d = c.length;
              f < d;
              f++
            )
              c[f] = parseFloat(c[f]);
            switch (l) {
              case "matrix":
                s.append(new p(c[0], c[1], c[2], c[3], c[4], c[5]));
                break;
              case "rotate":
                s.rotate(c[0], c[1], c[2]);
                break;
              case "translate":
                s.translate(c[0], c[1]);
                break;
              case "scale":
                s.scale(c);
                break;
              case "skewX":
                s.skew(c[0], 0);
                break;
              case "skewY":
                s.skew(0, c[0]);
            }
          }
          t.transform(s);
        }
      }
      function v(t, e, i) {
        var n = "fill-opacity" === i ? "getFillColor" : "getStrokeColor",
          r = t[n] && t[n]();
        r && r.setAlpha(parseFloat(e));
      }
      function m(t, i, n) {
        var s = t.attributes[i],
          a = s && s.value;
        if (!a) {
          var o = r.camelize(i);
          (a = t.style[o]) || n.node[o] === n.parent[o] || (a = n.node[o]);
        }
        return a ? ("none" === a ? null : a) : e;
      }
      function b(t, i, n) {
        if (i.style) {
          var s = i.parentNode,
            a = {
              node: H.getStyles(i) || {},
              parent:
                (!n && !/^defs$/i.test(s.tagName) && H.getStyles(s)) || {},
            };
          r.each(N, function (n, r) {
            var s = m(i, r, a);
            t = (s !== e && n(t, s, r, i, a)) || t;
          });
        }
        return t;
      }
      function P(t) {
        var e = t && t.match(/\((?:["'#]*)([^"')]+)/),
          n = e && e[1],
          r =
            n && k[i ? n.replace(i.location.href.split("#")[0] + "#", "") : n];
        return (
          r && r._scaleToBounds && ((r = r.clone())._scaleToBounds = !0), r
        );
      }
      function M(t, e, i) {
        var s,
          a,
          h,
          u = t.nodeName.toLowerCase(),
          l = "#document" !== u,
          c = n.body;
        i &&
          l &&
          ((z = paper.getView().getSize()),
          (z = o(t, null, null, !0) || z),
          (s = et.create("svg", {
            style: "stroke-width: 1px; stroke-miterlimit: 10",
          })),
          (a = t.parentNode),
          (h = t.nextSibling),
          s.appendChild(t),
          c.appendChild(s));
        var f = paper.settings,
          d = f.applyMatrix,
          _ = f.insertItems;
        (f.applyMatrix = !1), (f.insertItems = !1);
        var g = O[u],
          v = (g && g(t, u, e, i)) || null;
        if (((f.insertItems = _), (f.applyMatrix = d), v)) {
          !l || v instanceof x || (v = b(v, t, i));
          var p = e.onImport,
            m = l && t.getAttribute("data-paper-data");
          p && (v = p(t, v, e) || v),
            e.expandShapes && v instanceof C && (v.remove(), (v = v.toPath())),
            m && (v._data = JSON.parse(m));
        }
        return (
          s &&
            (c.removeChild(s),
            a && (h ? a.insertBefore(t, h) : a.appendChild(t))),
          i &&
            ((k = {}), v && r.pick(e.applyMatrix, d) && v.matrix.apply(!0, !0)),
          v
        );
      }
      function T(i, r, s) {
        function a(n) {
          try {
            var a =
              "object" == typeof n
                ? n
                : new t.DOMParser().parseFromString(n, "image/svg+xml");
            if (!a.nodeName)
              throw ((a = null), new Error("Unsupported SVG source: " + i));
            (paper = h),
              (u = M(a, r, !0)),
              (r && !1 === r.insert) || s._insertItem(e, u);
            var l = r.onLoad;
            l && l(u, n);
          } catch (t) {
            o(t);
          }
        }
        function o(t, e) {
          var i = r.onError;
          if (!i) throw new Error(t);
          i(t, e);
        }
        if (!i) return null;
        r = "function" == typeof r ? { onLoad: r } : r || {};
        var h = paper,
          u = null;
        if ("string" != typeof i || /^.*</.test(i)) {
          if ("undefined" != typeof File && i instanceof File) {
            var l = new FileReader();
            return (
              (l.onload = function () {
                a(l.result);
              }),
              (l.onerror = function () {
                o(l.error);
              }),
              l.readAsText(i)
            );
          }
          a(i);
        } else {
          var c = n.getElementById(i);
          c ? a(c) : K.request({ url: i, async: !0, onLoad: a, onError: o });
        }
        return u;
      }
      var z,
        k = {},
        O = {
          "#document": function (t, e, i, n) {
            for (var r = t.childNodes, s = 0, a = r.length; s < a; s++) {
              var o = r[s];
              if (1 === o.nodeType) return M(o, i, n);
            }
          },
          g: u,
          svg: u,
          clippath: u,
          polygon: l,
          polyline: l,
          path: function (t) {
            return A.create(t.getAttribute("d"));
          },
          lineargradient: f,
          radialgradient: f,
          image: function (t) {
            var e = new S(s(t, "href", !0));
            return (
              e.on("load", function () {
                var e = o(t);
                this.setSize(e);
                var i = this._matrix._transformPoint(a(t).add(e.divide(2)));
                this.translate(i);
              }),
              e
            );
          },
          symbol: function (t, e, i, n) {
            return new I(u(t, e, i, n), !0);
          },
          defs: u,
          use: function (t) {
            var e = (s(t, "href", !0) || "").substring(1),
              i = k[e],
              n = a(t);
            return i
              ? i instanceof I
                ? i.place(n)
                : i.clone().translate(n)
              : null;
          },
          circle: function (t) {
            return new C.Circle(a(t, "cx", "cy"), s(t, "r"));
          },
          ellipse: function (t) {
            return new C.Ellipse({
              center: a(t, "cx", "cy"),
              radius: o(t, "rx", "ry"),
            });
          },
          rect: function (t) {
            return new C.Rectangle(new g(a(t), o(t)), o(t, "rx", "ry"));
          },
          line: function (t) {
            return new L.Line(a(t, "x1", "y1"), a(t, "x2", "y2"));
          },
          text: function (t) {
            var e = new E(a(t).add(a(t, "dx", "dy")));
            return e.setContent(t.textContent.trim() || ""), e;
          },
        },
        N = r.set(
          r.each(
            it,
            function (t) {
              this[t.attribute] = function (e, i) {
                if (
                  e[t.set] &&
                  (e[t.set](h(i, t.type, t.fromSVG)), "color" === t.type)
                ) {
                  var n = e[t.get]();
                  if (n && n._scaleToBounds) {
                    var r = e.getBounds();
                    n.transform(
                      new p().translate(r.getPoint()).scale(r.getSize())
                    );
                  }
                }
              };
            },
            {}
          ),
          {
            id: function (t, e) {
              (k[e] = t), t.setName && t.setName(e);
            },
            "clip-path": function (t, e) {
              var i = P(e);
              if (i) {
                if (((i = i.clone()).setClipMask(!0), !(t instanceof x)))
                  return new x(i, t);
                t.insertChild(0, i);
              }
            },
            gradientTransform: _,
            transform: _,
            "fill-opacity": v,
            "stroke-opacity": v,
            visibility: function (t, e) {
              t.setVisible && t.setVisible("visible" === e);
            },
            display: function (t, e) {
              t.setVisible && t.setVisible(null !== e);
            },
            "stop-color": function (t, e) {
              t.setColor && t.setColor(e);
            },
            "stop-opacity": function (t, e) {
              t._color && t._color.setAlpha(parseFloat(e));
            },
            offset: function (t, e) {
              if (t.setOffset) {
                var i = e.match(/(.*)%$/);
                t.setOffset(i ? i[1] / 100 : parseFloat(e));
              }
            },
            viewBox: function (t, e, i, n, r) {
              var s,
                a = new g(h(e, "array")),
                u = o(n, null, null, !0);
              if (t instanceof x) {
                var l = u ? u.divide(a.getSize()) : 1,
                  c = new p().scale(l).translate(a.getPoint().negate());
                s = t;
              } else t instanceof I && (u && a.setSize(u), (s = t._item));
              if (s) {
                if ("visible" !== m(n, "overflow", r)) {
                  var f = new C.Rectangle(a);
                  f.setClipMask(!0), s.addChild(f);
                }
                c && s.transform(c);
              }
            },
          }
        );
      w.inject({
        importSVG: function (t, e) {
          return T(t, e, this);
        },
      }),
        y.inject({
          importSVG: function (t, e) {
            return this.activate(), T(t, e, this);
          },
        });
    })(),
    (paper = new (a.inject(r.exports, {
      Base: r,
      Numerical: u,
      Key: $,
      DomEvent: Z,
      DomElement: H,
      document: n,
      window: i,
      Symbol: I,
      PlacedSymbol: P,
    }))()).agent.node && require("./node/extend.js")(paper),
    "function" == typeof define && define.amd
      ? define("paper", paper)
      : "object" == typeof module && module && (module.exports = paper),
    paper
  );
}.call(this, "object" == typeof self ? self : null);
if (typeof NETXUS === "undefined") var NETXUS = function () {};

NETXUS.RectanglePacker = function (width, height) {
  this.root = {};

  // initialize
  this.reset(width, height);
};

NETXUS.RectanglePacker.prototype.reset = function (width, height) {
  this.root.x = 0;
  this.root.y = 0;
  this.root.w = width;
  this.root.h = height;
  delete this.root.lft;
  delete this.root.rgt;

  this.usedWidth = 0;
  this.usedHeight = 0;
};

NETXUS.RectanglePacker.prototype.getDimensions = function () {
  return { w: this.usedWidth, h: this.usedHeight };
};

NETXUS.RectanglePacker.prototype.findCoords = function (w, h) {
  function recursiveFindCoords(node, w, h) {
    function cloneNode(node) {
      return {
        x: node.x,
        y: node.y,
        w: node.w,
        h: node.h,
      };
    }

    if (node.lft) {
      var coords = recursiveFindCoords(node.lft, w, h);
      return coords ? coords : recursiveFindCoords(node.rgt, w, h);
    } else {
      if (node.used || w > node.w || h > node.h) return null;

      if (w == node.w && h == node.h) {
        node.used = true;
        return { x: node.x, y: node.y };
      }

      node.lft = cloneNode(node);
      node.rgt = cloneNode(node);

      if (node.w - w > node.h - h) {
        node.lft.w = w;
        node.rgt.x = node.x + w;
        node.rgt.w = node.w - w;
      } else {
        node.lft.h = h;
        node.rgt.y = node.y + h;
        node.rgt.h = node.h - h;
      }

      return recursiveFindCoords(node.lft, w, h);
    }
  }

  var coords = recursiveFindCoords(this.root, w, h);
  if (coords) {
    if (this.usedWidth < coords.x + w) this.usedWidth = coords.x + w;
    if (this.usedHeight < coords.y + h) this.usedHeight = coords.y + h;
  }
  return coords;
};

function UnionFind(count) {
  this.roots = new Array(count);
  this.ranks = new Array(count);

  for (var i = 0; i < count; ++i) {
    this.roots[i] = i;
    this.ranks[i] = 0;
  }
}
// Two calls find(x) always return the same result, if link(..) has not been called in between (unique representatives)
UnionFind.prototype.find = function (x) {
  var x0 = x;
  var roots = this.roots;
  while (roots[x] != x) x = roots[x];

  while (roots[x0] != x) {
    var y = roots[x0];
    roots[x0] = x;
    x0 = y;
  }
  return x;
};

UnionFind.prototype.link = function (x, y) {
  var xr = this.find(x),
    yr = this.find(y);
  if (xr == yr) return;

  var ranks = this.ranks,
    roots = this.roots,
    xd = ranks[xr],
    yd = ranks[yr];

  if (xd < yd) {
    roots[xr] = yr;
  } else if (yd < xd) {
    roots[yr] = xr;
  } else {
    roots[yr] = xr;
    ++ranks[xr];
  }
};

var ICC = (function () {
  var X = new Int16Array(1),
    E = new Uint8Array(X.buffer);
  function F(b, O) {
    return (b[O] << 8) | b[O + 1];
  }
  function r(b, O) {
    E[0] = b[O + 1];
    E[1] = b[O];
    return X[0];
  }
  function p(b, O) {
    return (b[O] << 24) | (b[O + 1] << 16) | (b[O + 2] << 8) | b[O + 3];
  }
  function Z(b, O, Y) {
    var N = "";
    for (var K = 0; K < Y; K++) N += String.fromCharCode(b[O + K]);
    return N;
  }
  function L(b, O, Y) {
    var N = [];
    for (var K = 0; K < Y; K++) N.push(String.fromCharCode(b[O + K]));
    return N;
  }
  function a(b, O, Y) {
    var N = "";
    for (var K = 0; K < Y; K++) {
      var k = (b[O++] << 8) | b[O++];
      N += String.fromCharCode(k);
    }
    return N;
  }
  function W(b) {
    var O = new Uint8Array(b),
      Y = A(O, 128);
    if (Y == null) return null;
    return { header: I(O, 0), tags: Y };
  }
  function I(b, O) {
    var Y = Z,
      N = p,
      K = {
        cmmType: Y(b, 4, 4),
        version: b[8] + "." + (b[9] >>> 4) + "." + (b[9] & 15),
        profileClass: Y(b, 12, 4),
        spaceIn: Y(b, 16, 4),
        spaceOut: Y(b, 20, 4),
        date: F(b, 24),
        platform: Y(b, 40, 4),
        flags: N(b, 44),
        deviceManufac: Y(b, 48, 4),
        deviceModel: N(b, 52),
        deviceAttribs: [N(b, 56), N(b, 60)],
        rendIntent: N(b, 64),
        illuminant: n(b, 68),
        creator: Y(b, 80, 4),
      };
    for (var k = 0; k < 5; k++) K.date += "." + F(b, 26 + 2 * k);
    return K;
  }
  function A(b, O) {
    var Y = p,
      N = {},
      K = Y(b, O);
    O += 4;
    if (K > 100) return null;
    for (var k = 0; k < K; k++) {
      var l = Z(b, O, 4);
      O += 4;
      var t = Y(b, O);
      O += 4;
      var d = Y(b, O);
      O += 4;
      N[l] = U(b, t, d);
    }
    return N;
  }
  function U(b, O, Y) {
    var N = Z(b, O, 4),
      K = { v: N, r: Y };
    O += 4;
    O += 4;
    if (N == "mluc") {
      var k = [];
      for (var l = 0; l < Y; l++) k.push(b[O - 8 + l]);
    }
    if (N == "mluc") h(K, b, O, Y);
    else if (N == "text") S(K, b, O, Y);
    else if (N == "desc") z(K, b, O, Y);
    else if (N == "mAB ") v(K, b, O, Y);
    else if (N == "mft1") V(K, b, O, Y);
    else if (N == "mft2") s(K, b, O, Y);
    else if (N == "XYZ ") j(K, b, O, Y);
    else if (N == "para") Q(K, b, O, Y);
    else if (N == "curv") T(K, b, O, Y);
    else if (N == "sf32") R(K, b, O, Y);
    if ((K.r & 3) != 0) K.r += 4 - (K.r & 3);
    return K;
  }
  function h(b, O, Y, N) {
    var K = Y - 8,
      k = p(O, Y);
    Y += 4;
    var l = p(O, Y);
    Y += 4;
    b.z = [];
    for (var t = 0; t < k; t++) {
      var d = {};
      b.z.push(d);
      d.code = Z(O, Y, 4);
      var g = p(O, Y + 4),
        y = p(O, Y + 8);
      Y += 12;
      d.text = a(O, K + y, g >>> 1);
    }
  }
  function z(b, O, Y, N) {
    var K = p(O, Y);
    Y += 4;
    b.O = Z(O, Y, K - 1);
    Y += K;
    var k = p(O, Y);
    Y += 4;
    var l = p(O, Y);
    Y += 4;
    b.l = a(O, Y, l);
    Y += l;
    var t = F(O, Y);
    Y += 2;
    var d = O[Y];
    Y++;
    b.K = Z(O, Y, d);
  }
  function v(b, O, Y, N) {
    var K = Y - 8;
    b.c = O[Y];
    Y++;
    b.g = O[Y];
    Y++;
    Y += 2;
    var k = p(O, Y);
    Y += 4;
    var l = p(O, Y);
    Y += 4;
    var t = p(O, Y);
    Y += 4;
    var d = p(O, Y);
    Y += 4;
    var g = p(O, Y);
    Y += 4;
    if (k != 0) {
      b.N = [];
      Y = K + k;
      for (var y = 0; y < b.g; y++) {
        var G = U(O, Y, 0);
        Y += G.r;
        b.N.push(G);
      }
    }
    if (l != 0) {
      b.m = [];
      for (var y = 0; y < 12; y++) b.m.push(P(O, K + l + y * 4));
    }
    if (t != 0) {
      b.q = [];
      Y = K + t;
      for (var y = 0; y < b.g; y++) {
        var G = U(O, Y, 0);
        Y += G.r;
        b.q.push(G);
      }
    }
    if (d != 0) {
      b.n = [];
      Y = K + d;
      b.w = [];
      for (var y = 0; y < b.c; y++) b.w.push(O[Y + y]);
      Y += 16;
      var w = O[Y];
      Y += 4;
      var H = b.g;
      for (var y = 0; y < b.c; y++) H *= b.w[y];
      if (w == 1) for (var y = 0; y < H; y++) b.n.push(O[Y + y] * (1 / 255));
      if (w == 2)
        for (var y = 0; y < H; y++) b.n.push(F(O, Y + 2 * y) * (1 / 65535));
    }
    if (g != 0) {
      b.j = [];
      Y = K + g;
      for (var y = 0; y < b.c; y++) {
        var G = U(O, Y, 0);
        Y += G.r;
        b.j.push(G);
      }
    }
  }
  function V(b, O, Y, N) {
    M(b, O, Y);
    Y += 40;
    b.d = c(O, Y, b.c, 256);
    Y += b.c * 256;
    b.n = [];
    var K = Math.round(Math.pow(b.G, b.c)) * b.g;
    for (var k = 0; k < K; k++) b.n.push(O[Y + k] * (1 / 255));
    Y += K;
    b.p = c(O, Y, b.g, 256);
    Y += b.g * 256;
  }
  function s(b, O, Y, N) {
    M(b, O, Y);
    Y += 40;
    var K = F(O, Y);
    Y += 2;
    var k = F(O, Y);
    Y += 2;
    b.d = C(O, Y, b.c, K);
    Y += 2 * b.c * K;
    b.n = [];
    var l = Math.round(Math.pow(b.G, b.c)) * b.g;
    for (var t = 0; t < l; t++) b.n.push(F(O, Y + t * 2) * (1 / 65535));
    Y += l * 2;
    b.p = C(O, Y, b.g, k);
    Y += 2 * b.g * k;
  }
  function M(b, O, Y) {
    b.c = O[Y];
    Y++;
    b.g = O[Y];
    Y++;
    b.G = O[Y];
    Y++;
    Y++;
    b.m = [];
    for (var N = 0; N < 9; N++) {
      b.m.push(P(O, Y));
      Y += 4;
    }
  }
  function c(b, O, Y, N) {
    var K = [];
    for (var k = 0; k < Y; k++) {
      var l = [];
      K.push(l);
      for (var t = 0; t < N; t++) {
        l.push(b[O] * (1 / 255));
        O++;
      }
    }
    return K;
  }
  function C(b, O, Y, N) {
    var K = [];
    for (var k = 0; k < Y; k++) {
      var l = [];
      K.push(l);
      for (var t = 0; t < N; t++) {
        l.push(F(b, O) * (1 / 65535));
        O += 2;
      }
    }
    return K;
  }
  function Q(b, O, Y, N) {
    b.u = F(O, Y);
    Y += 2;
    Y += 2;
    var K = [1, 3, 4, 5, 7];
    b.z = [];
    for (var k = 0; k < K[b.u]; k++) b.z.push(P(O, Y + k * 4));
  }
  function T(b, O, Y, N) {
    var K = p(O, Y);
    Y += 4;
    b.z = [];
    if (K == 1) b.z.push(f(O, Y));
    else for (var k = 0; k < K; k++) b.z.push(F(O, Y + k * 2) * (1 / 65535));
    b.r = 12 + 2 * K;
  }
  function j(b, O, Y) {
    b.value = n(O, Y);
  }
  function S(b, O, Y, N) {
    b.value = Z(O, Y, N - 9);
  }
  function f(b, O) {
    return b[O] + b[O + 1] / 256;
  }
  function P(b, O) {
    return r(b, O) + F(b, O + 2) * (1 / 65536);
  }
  function n(b, O) {
    var Y = [];
    for (var N = 0; N < 3; N++) Y.push(P(b, O + N * 4));
    return Y;
  }
  function R(b, O, Y, N) {
    var K = N / 4 - 2;
    b.value = [];
    for (var k = 0; k < K; k++) b.value.push(P(O, Y + k * 4));
  }
  return { R: W };
})();
ICC.U = (function () {
  var X = [0.9642, 1, 0.8249],
    E = {
      J: [
        3.1338561, -1.6168667, -0.4906146, -0.9787684, 1.9161415, 0.033454,
        0.0719453, -0.2289914, 1.4052427,
      ],
      F: [
        0.4360747, 0.3850649, 0.14308038, 0.2225045, 0.7168786, 0.0606169,
        0.0139322, 0.0971045, 0.7141733,
      ],
      h: function (P) {
        return P < 0.0031308 ? 12.92 * P : 1.055 * Math.pow(P, 1 / 2.4) - 0.055;
      },
      b: function (P) {
        return P < 0.04045 ? P / 12.92 : Math.pow((P + 0.055) / 1.055, 2.4);
      },
      C: function (P, n, R) {
        var O = E.H[0],
          Y = E.H[1];
        P = O[~~(0.5 + P * 4e3)];
        n = O[~~(0.5 + n * 4e3)];
        R = O[~~(0.5 + R * 4e3)];
        var N = E.F,
          K = N[0] * P + N[1] * n + N[2] * R,
          k = N[3] * P + N[4] * n + N[5] * R,
          l = N[6] * P + N[7] * n + N[8] * R;
        return { x: K, y: k, D: l };
      },
      k: function (P, n, R) {
        var O = E.C(P, n, R);
        return E.t(O.x, O.y, O.D);
      },
      t: function (P, n, R, O) {
        if (O == null) O = X;
        P = P * (1 / O[0]);
        n = n * (1 / O[1]);
        R = R < 0 ? 0 : R * (1 / O[2]);
        var Y = E.H[1],
          N = Y[~~(0.5 + P * 4e3)],
          K = Y[~~(0.5 + n * 4e3)],
          k = Y[~~(0.5 + R * 4e3)];
        return { e: 116 * K - 16, f: 500 * (N - K), a: 200 * (K - k) };
      },
      I: function (P, n, R, O) {
        if (O == null) O = X;
        var Y = 903.3,
          N = 0.008856,
          K = (P + 16) / 116,
          k = K * K * K,
          l = K - R / 200,
          t = l * l * l,
          d = n / 500 + K,
          y = d * d * d,
          G = t > N ? t : (116 * l - 16) / Y,
          w = k > N ? k : (116 * K - 16) / Y,
          H = y > N ? y : (116 * d - 16) / Y,
          i = H * O[0],
          q = w * O[1],
          R = G * O[2],
          o = E.J,
          D = [
            o[0] * i + o[1] * q + o[2] * R,
            o[3] * i + o[4] * q + o[5] * R,
            o[6] * i + o[7] * q + o[8] * R,
          ];
        for (var m = 0; m < 3; m++) D[m] = Math.max(0, Math.min(1, E.h(D[m])));
        return { s: D[0], G: D[1], a: D[2] };
      },
    };
  E.H = (function () {
    var P = [],
      n = [];
    for (var R = 0; R < 8e3; R++) {
      var O = R / 4e3;
      P[R] = E.b(O);
      n[R] = O > 0.008856 ? Math.pow(O, 1 / 3) : (903.3 * O + 16) * (1 / 116);
    }
    return [P, n];
  })();
  function F(P) {
    var n = P[0],
      R = P[1],
      O = P[2],
      Y = P[3],
      N = P[4],
      K = P[5],
      k = P[6],
      l = P[7],
      t = P[8],
      d = N * t - l * K,
      g = K * k - Y * t,
      y = Y * l - k * N,
      G = 1 / (n * d + R * g + O * y),
      w = [
        d,
        O * l - R * t,
        R * K - O * N,
        g,
        n * t - O * k,
        Y * O - n * K,
        y,
        k * R - n * l,
        n * N - Y * R,
      ];
    for (var t = 0; t < 9; t++) w[t] = w[t] * G;
    return w;
  }
  function r(P, n, R) {
    var O = 1 / (P - 1),
      Y = [],
      N = [];
    for (var K = 0; K < P; K++)
      for (var k = 0; k < P; k++)
        for (var l = 0; l < P; l++) {
          if (n == 3) {
            Y.push([K * O, k * O, l * O, 0]);
            N.push(0, 0, 0);
            if (R == 4) N.push(0);
          } else
            for (var t = 0; t < P; t++) {
              Y.push([K * O, k * O, l * O, t * O]);
              N.push(0, 0, 0);
              if (R == 4) N.push(0);
            }
        }
    return [Y, N];
  }
  function p(P, n, R, O) {
    var Y = P.tags,
      N = P.header,
      K = N.spaceIn.toLowerCase(),
      k = N.spaceOut.toLowerCase();
    if (R) {
      var l = K;
      K = k;
      k = l;
    }
    console.log(R, K, k);
    var t = K == "cmyk" ? 4 : 3,
      d = k == "cmyk" ? 4 : 3,
      g = r(n, t, d),
      y = g[0],
      w = g[1],
      H = Y.wtpt ? Y.wtpt.value : null;
    if (K == "cmyk") H = null;
    if (O) y = [O];
    var i = R ? "B2A0" : "A2B0";
    for (var q = 0; q < y.length; q++) {
      var o = y[q];
      if (K == "rgb " || K == "gray") {
      } else if (K == "cmyk") {
      } else if (K == "lab ") Z(o, 0, E.k(o[0], o[1], o[2]));
      else if (K == "xyz ") {
        var D = E.C(o[0], o[1], o[2]);
        o[0] = D.x;
        o[1] = D.y;
        o[2] = D.D;
      } else throw K;
      if (R) {
        if (Y.rXYZ) {
          var m = Y.rXYZ.value,
            B = Y.gXYZ.value,
            x = Y.bXYZ.value,
            u = m.concat(B.concat(x)),
            e = F(u);
          I(o, e.slice(0, 3), e.slice(3, 6), e.slice(6, 9));
        }
        if (Y.rTRC) {
          var m = Y.rTRC,
            B = Y.gTRC,
            x = Y.bTRC;
          U(o, m, B, x, !0);
        }
      } else {
        if (Y.rTRC) {
          var m = Y.rTRC,
            B = Y.gTRC,
            x = Y.bTRC;
          U(o, m, B, x);
        }
        if (Y.rXYZ) {
          var m = Y.rXYZ.value,
            B = Y.gXYZ.value,
            x = Y.bXYZ.value;
          I(o, m, B, x);
        }
      }
      if (Y[i]) {
        var _ = Y[i],
          J = _.v;
        if (J == "mAB ") a(o, _);
        else if (J == "mft1" || J == "mft2") L(o, _);
        else throw J;
      }
      if (k == "rgb ") {
      } else if (k == "xyz " || k == "lab ") {
        if (k == "xyz ") Z(o, 0, E.t(o[0], o[1], o[2], H));
        var $ = E.I(o[0] * 100, -127.5 + 255 * o[1], -127.5 + 255 * o[2], H);
        o[0] = $.s;
        o[1] = $.G;
        o[2] = $.a;
      } else if (k == "cmyk") {
      } else throw k;
      w[q * d] = o[0];
      w[q * d + 1] = o[1];
      w[q * d + 2] = o[2];
      if (d == 4) w[q * d + 3] = o[3];
    }
    return w;
  }
  function Z(P, n, R) {
    P[n] = R.e / 100;
    P[n + 1] = (127.5 + R.f) / 255;
    P[n + 2] = (127.5 + R.a) / 255;
  }
  function L(P, n) {
    for (var R = 0; R < n.c; R++) P[R] = z(P[R], n.d[R]);
    if (n.c == 3) {
      if (n.g == 3) j(n.n, n.G, P, P);
      if (n.g == 4) T(n.n, n.G, P, P);
    }
    if (n.c == 4) S(n.n, n.G, P, P);
    if (n.p) for (var R = 0; R < n.g; R++) P[R] = z(P[R], n.p[R]);
  }
  function a(P, n) {
    if (n.n) j(n.n, n.w[0], P, P);
    if (n.q) U(P, n.q[0], n.q[1], n.q[2]);
    if (n.m) W(P, n.m);
  }
  function W(P, n) {
    var R = P[0],
      O = P[1],
      Y = P[2];
    P[0] = Math.max(0, Math.min(1, n[0] * R + n[1] * O + n[2] * Y + n[9]));
    P[1] = Math.max(0, Math.min(1, n[3] * R + n[4] * O + n[5] * Y + n[10]));
    P[2] = Math.max(0, Math.min(1, n[6] * R + n[7] * O + n[8] * Y + n[11]));
  }
  function I(P, n, R, O) {
    var Y = P[0],
      N = P[1],
      k = P[2];
    P[0] = Math.max(0, Math.min(1, Y * n[0] + N * R[0] + k * O[0]));
    P[1] = Math.max(0, Math.min(1, Y * n[1] + N * R[1] + k * O[1]));
    P[2] = Math.max(0, Math.min(1, Y * n[2] + N * R[2] + k * O[2]));
  }
  function A(P, n) {
    var R = P[0],
      O = P[1],
      Y = P[2];
    P[0] = R * n[0] + O * n[1] + Y * n[2];
    P[1] = R * n[3] + O * n[4] + Y * n[5];
    P[2] = R * n[6] + O * n[7] + Y * n[8];
  }
  function U(P, n, R, O, Y) {
    P[0] = h(P[0], n, Y);
    P[1] = h(P[1], R, Y);
    P[2] = h(P[2], O, Y);
  }
  function h(P, n, R) {
    var O = n.v,
      Y = n.z;
    if (O == "curv") return z(P, Y, R);
    else if (O == "para") return v(P, Y, R);
    else throw O;
  }
  function z(P, n, R) {
    var O = n.length;
    if (O == 0) return P;
    if (O == 1) return Math.pow(P, R ? 1 / n[0] : n[0]);
    if (R) {
      var Y = 0,
        N = O >>> 1,
        K = O;
      if (P < n[N]) K = N;
      else Y = N;
      while (Y < K && n[Y] < P) Y++;
      if (Y == 0) return 0;
      if (Y == O) return 1;
      Y += (P - n[Y - 1]) / (n[Y] - n[Y - 1]);
      return Y / O;
    } else {
      var l = P * (O - 1) * 0.9999999,
        t = ~~l,
        d = l - t;
      return (1 - d) * n[t] + d * n[t + 1];
    }
  }
  function v(P, n, R) {
    var O = n.length,
      Y = P,
      N = n[0],
      K = n[1],
      k = n[2],
      l = n[3],
      t = n[4],
      d = n[5],
      g = n[6];
    if (R) {
      if (O == 1) P = Math.pow(Y, 1 / N);
      else if (O == 5) P = Y / l >= t ? (Math.pow(Y, 1 / N) - k) / K : Y / l;
      else if (O == 7)
        P = Y / l >= t ? (Math.pow(Y - d, 1 / N) - k) / K : (Y - g) / l;
      else throw O;
      return P;
    }
    if (O == 1) Y = Math.pow(P, N);
    else if (O == 3) Y = P >= -k / K ? Math.pow(K * P + k, N) : 0;
    else if (O == 4) Y = P >= -k / K ? Math.pow(K * P + k, N) + l : l;
    else if (O == 5) Y = P >= t ? Math.pow(K * P + k, N) : l * P;
    else if (O == 7) Y = P >= t ? Math.pow(K * P + k, N) + d : l * P + g;
    return Y;
  }
  function V(P, n, R, O, Y, N) {
    var K = ~~P,
      k = ~~n,
      l = ~~R,
      t = O * O,
      d = l + O * k + O * O * K,
      g = l + O * (k + 1) + O * O * K;
    M(d, d + 1, Y, R - l, 0, N);
    M(g, g + 1, Y, R - l, 1, N);
    M(d + t, d + 1 + t, Y, R - l, 2, N);
    M(g + t, g + 1 + t, Y, R - l, 3, N);
    M(0, 1, N, n - k, 0, N);
    M(2, 3, N, n - k, 2, N);
    M(0, 2, N, P - K, 0, N);
  }
  function s(P, n, R, O, Y, N) {
    var K = ~~P,
      k = ~~n,
      l = ~~R,
      t = O * O,
      d = l + O * k + O * O * K,
      g = l + O * (k + 1) + O * O * K;
    c(d, d + 1, Y, R - l, 0, N);
    c(g, g + 1, Y, R - l, 1, N);
    c(d + t, d + 1 + t, Y, R - l, 2, N);
    c(g + t, g + 1 + t, Y, R - l, 3, N);
    c(0, 1, N, n - k, 0, N);
    c(2, 3, N, n - k, 2, N);
    c(0, 2, N, P - K, 0, N);
  }
  function M(P, n, R, O, Y, N) {
    P *= 3;
    n *= 3;
    Y *= 3;
    N[Y] = (1 - O) * R[P] + O * R[n];
    N[Y + 1] = (1 - O) * R[P + 1] + O * R[n + 1];
    N[Y + 2] = (1 - O) * R[P + 2] + O * R[n + 2];
  }
  function c(P, n, R, O, Y, N) {
    var K = P << 2,
      k = n << 2,
      l = Y << 2;
    N[l] = (1 - O) * R[K] + O * R[k];
    N[l + 1] = (1 - O) * R[K + 1] + O * R[k + 1];
    N[l + 2] = (1 - O) * R[K + 2] + O * R[k + 2];
    N[l + 3] = (1 - O) * R[K + 3] + O * R[k + 3];
  }
  function C(P, n) {
    function R(l) {
      return l < 0 ? 0 : l > 1 ? 1 : l;
    }
    var O = n * n * n,
      Y = new Float32Array(O * 4);
    for (var N = 0; N < O; N++) {
      var K = N * 3,
        k = K + N;
      Y[k] = R(P[K]);
      Y[k + 1] = R(P[K + 1]);
      Y[k + 2] = R(P[K + 2]);
      Y[k + 3] = 1;
    }
    return Y;
  }
  function Q(P) {
    return P instanceof Uint8Array ? 8 : P instanceof Uint16Array ? 16 : 32;
  }
  function T(P, n, R, O) {
    var Y = Q(R),
      N = Y == 8 ? 255 : Y == 16 ? 65535 : 1,
      K = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      k = (n - 1.000001) / N,
      l = R.length,
      t,
      d,
      g = 0;
    if (Y == 8) {
      t = new Uint32Array(R.buffer);
      d = new Uint32Array(O.buffer);
    }
    for (var y = 0; y < l; y += 4) {
      if (Y == 8 && y != 0 && t[y >>> 2] == g) {
        d[y >>> 2] = d[(y >>> 2) - 1];
        continue;
      } else if (Y == 8) g = t[y >>> 2];
      s(k * R[y], k * R[y + 1], k * R[y + 2], n, P, K);
      if (Y == 8) {
        O[y] = ~~(0.5 + K[0] * N);
        O[y + 1] = ~~(0.5 + K[1] * N);
        O[y + 2] = ~~(0.5 + K[2] * N);
        O[y + 3] = ~~(0.5 + K[3] * N);
      } else if (Y == 16) {
        O[y] = ~~(0.5 + K[0] * N);
        O[y + 1] = ~~(0.5 + K[1] * N);
        O[y + 2] = ~~(0.5 + K[2] * N);
        O[y + 3] = ~~(0.5 + K[3] * N);
      } else {
        O[y] = K[0];
        O[y + 1] = K[1];
        O[y + 2] = K[2];
        O[y + 3] = K[3];
      }
    }
  }
  function j(P, n, R, O) {
    var Y = Q(R),
      N = Y == 8 ? 255 : Y == 16 ? 65535 : 1,
      K = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      k = (n - 1.000001) / N,
      l = R.length;
    for (var t = 0; t < l; t += 4) {
      V(k * R[t], k * R[t + 1], k * R[t + 2], n, P, K);
      if (Y == 8) {
        O[t] = ~~(0.5 + K[0] * N);
        O[t + 1] = ~~(0.5 + K[1] * N);
        O[t + 2] = ~~(0.5 + K[2] * N);
      } else if (Y == 16) {
        O[t] = ~~(0.5 + K[0] * N);
        O[t + 1] = ~~(0.5 + K[1] * N);
        O[t + 2] = ~~(0.5 + K[2] * N);
      } else {
        O[t] = K[0];
        O[t + 1] = K[1];
        O[t + 2] = K[2];
      }
    }
  }
  function S(P, n, R, O) {
    var Y = Q(R),
      N = Y == 8 ? 255 : Y == 16 ? 65535 : 1,
      K = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      k = (n - 1.000001) / N,
      l = R.length,
      t = n * n * n,
      d = -1,
      g = -1,
      y = -1,
      w = -1;
    for (var H = 0; H < l; H += 4) {
      var i = k * R[H],
        q = k * R[H + 1],
        o = k * R[H + 2],
        D = k * R[H + 3];
      if (d == i && g == q && y == o && w == D) {
      } else {
        var m = ~~i;
        V(q, o, D + m * t, n, P, K);
        K[12] = K[0];
        K[13] = K[1];
        K[14] = K[2];
        V(q, o, D + (m + 1) * t, n, P, K);
        M(4, 0, K, i - m, 0, K);
        d = i;
        g = q;
        y = o;
        w = D;
      }
      if (Y == 8) {
        O[H] = ~~(0.5 + K[0] * N);
        O[H + 1] = ~~(0.5 + K[1] * N);
        O[H + 2] = ~~(0.5 + K[2] * N);
      } else if (Y == 16) {
        O[H] = ~~(0.5 + K[0] * N);
        O[H + 1] = ~~(0.5 + K[1] * N);
        O[H + 2] = ~~(0.5 + K[2] * N);
      } else {
        O[H] = K[0];
        O[H + 1] = K[1];
        O[H + 2] = K[2];
      }
    }
  }
  function f(P) {
    var n = P.tags.desc;
    if (n.O) return n.O;
    return n.z[0].text;
  }
  return {
    lutToRGBA32: C,
    sampleLUT: p,
    applyLUT: j,
    applyLUT4: S,
    applyLUT3to4: T,
    profileName: f,
  };
})();

/*
 * [js-sha1]{@link https://github.com/emn178/js-sha1}
 *
 * @version 0.6.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2014-2017
 * @license MIT
 */
!(function () {
  "use strict";
  function t(t) {
    t
      ? ((f[0] =
          f[16] =
          f[1] =
          f[2] =
          f[3] =
          f[4] =
          f[5] =
          f[6] =
          f[7] =
          f[8] =
          f[9] =
          f[10] =
          f[11] =
          f[12] =
          f[13] =
          f[14] =
          f[15] =
            0),
        (this.blocks = f))
      : (this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
      (this.h0 = 1732584193),
      (this.h1 = 4023233417),
      (this.h2 = 2562383102),
      (this.h3 = 271733878),
      (this.h4 = 3285377520),
      (this.block = this.start = this.bytes = this.hBytes = 0),
      (this.finalized = this.hashed = !1),
      (this.first = !0);
  }
  var h = "object" == typeof window ? window : {},
    s =
      !h.JS_SHA1_NO_NODE_JS &&
      "object" == typeof process &&
      process.versions &&
      process.versions.node;
  s && (h = global);
  var i =
      !h.JS_SHA1_NO_COMMON_JS && "object" == typeof module && module.exports,
    e = "function" == typeof define && define.amd,
    r = "0123456789abcdef".split(""),
    o = [-2147483648, 8388608, 32768, 128],
    n = [24, 16, 8, 0],
    a = ["hex", "array", "digest", "arrayBuffer"],
    f = [],
    u = function (h) {
      return function (s) {
        return new t(!0).update(s)[h]();
      };
    },
    c = function () {
      var h = u("hex");
      s && (h = p(h)),
        (h.create = function () {
          return new t();
        }),
        (h.update = function (t) {
          return h.create().update(t);
        });
      for (var i = 0; i < a.length; ++i) {
        var e = a[i];
        h[e] = u(e);
      }
      return h;
    },
    p = function (t) {
      var h = eval("require('crypto')"),
        s = eval("require('buffer').Buffer"),
        i = function (i) {
          if ("string" == typeof i)
            return h.createHash("sha1").update(i, "utf8").digest("hex");
          if (i.constructor === ArrayBuffer) i = new Uint8Array(i);
          else if (void 0 === i.length) return t(i);
          return h.createHash("sha1").update(new s(i)).digest("hex");
        };
      return i;
    };
  (t.prototype.update = function (t) {
    if (!this.finalized) {
      var s = "string" != typeof t;
      s && t.constructor === h.ArrayBuffer && (t = new Uint8Array(t));
      for (var i, e, r = 0, o = t.length || 0, a = this.blocks; r < o; ) {
        if (
          (this.hashed &&
            ((this.hashed = !1),
            (a[0] = this.block),
            (a[16] =
              a[1] =
              a[2] =
              a[3] =
              a[4] =
              a[5] =
              a[6] =
              a[7] =
              a[8] =
              a[9] =
              a[10] =
              a[11] =
              a[12] =
              a[13] =
              a[14] =
              a[15] =
                0)),
          s)
        )
          for (e = this.start; r < o && e < 64; ++r)
            a[e >> 2] |= t[r] << n[3 & e++];
        else
          for (e = this.start; r < o && e < 64; ++r)
            (i = t.charCodeAt(r)) < 128
              ? (a[e >> 2] |= i << n[3 & e++])
              : i < 2048
              ? ((a[e >> 2] |= (192 | (i >> 6)) << n[3 & e++]),
                (a[e >> 2] |= (128 | (63 & i)) << n[3 & e++]))
              : i < 55296 || i >= 57344
              ? ((a[e >> 2] |= (224 | (i >> 12)) << n[3 & e++]),
                (a[e >> 2] |= (128 | ((i >> 6) & 63)) << n[3 & e++]),
                (a[e >> 2] |= (128 | (63 & i)) << n[3 & e++]))
              : ((i =
                  65536 + (((1023 & i) << 10) | (1023 & t.charCodeAt(++r)))),
                (a[e >> 2] |= (240 | (i >> 18)) << n[3 & e++]),
                (a[e >> 2] |= (128 | ((i >> 12) & 63)) << n[3 & e++]),
                (a[e >> 2] |= (128 | ((i >> 6) & 63)) << n[3 & e++]),
                (a[e >> 2] |= (128 | (63 & i)) << n[3 & e++]));
        (this.lastByteIndex = e),
          (this.bytes += e - this.start),
          e >= 64
            ? ((this.block = a[16]),
              (this.start = e - 64),
              this.hash(),
              (this.hashed = !0))
            : (this.start = e);
      }
      return (
        this.bytes > 4294967295 &&
          ((this.hBytes += (this.bytes / 4294967296) << 0),
          (this.bytes = this.bytes % 4294967296)),
        this
      );
    }
  }),
    (t.prototype.finalize = function () {
      if (!this.finalized) {
        this.finalized = !0;
        var t = this.blocks,
          h = this.lastByteIndex;
        (t[16] = this.block),
          (t[h >> 2] |= o[3 & h]),
          (this.block = t[16]),
          h >= 56 &&
            (this.hashed || this.hash(),
            (t[0] = this.block),
            (t[16] =
              t[1] =
              t[2] =
              t[3] =
              t[4] =
              t[5] =
              t[6] =
              t[7] =
              t[8] =
              t[9] =
              t[10] =
              t[11] =
              t[12] =
              t[13] =
              t[14] =
              t[15] =
                0)),
          (t[14] = (this.hBytes << 3) | (this.bytes >>> 29)),
          (t[15] = this.bytes << 3),
          this.hash();
      }
    }),
    (t.prototype.hash = function () {
      var t,
        h,
        s = this.h0,
        i = this.h1,
        e = this.h2,
        r = this.h3,
        o = this.h4,
        n = this.blocks;
      for (t = 16; t < 80; ++t)
        (h = n[t - 3] ^ n[t - 8] ^ n[t - 14] ^ n[t - 16]),
          (n[t] = (h << 1) | (h >>> 31));
      for (t = 0; t < 20; t += 5)
        (s =
          ((h =
            ((i =
              ((h =
                ((e =
                  ((h =
                    ((r =
                      ((h =
                        ((o =
                          ((h = (s << 5) | (s >>> 27)) +
                            ((i & e) | (~i & r)) +
                            o +
                            1518500249 +
                            n[t]) <<
                          0) <<
                          5) |
                        (o >>> 27)) +
                        ((s & (i = (i << 30) | (i >>> 2))) | (~s & e)) +
                        r +
                        1518500249 +
                        n[t + 1]) <<
                      0) <<
                      5) |
                    (r >>> 27)) +
                    ((o & (s = (s << 30) | (s >>> 2))) | (~o & i)) +
                    e +
                    1518500249 +
                    n[t + 2]) <<
                  0) <<
                  5) |
                (e >>> 27)) +
                ((r & (o = (o << 30) | (o >>> 2))) | (~r & s)) +
                i +
                1518500249 +
                n[t + 3]) <<
              0) <<
              5) |
            (i >>> 27)) +
            ((e & (r = (r << 30) | (r >>> 2))) | (~e & o)) +
            s +
            1518500249 +
            n[t + 4]) <<
          0),
          (e = (e << 30) | (e >>> 2));
      for (; t < 40; t += 5)
        (s =
          ((h =
            ((i =
              ((h =
                ((e =
                  ((h =
                    ((r =
                      ((h =
                        ((o =
                          ((h = (s << 5) | (s >>> 27)) +
                            (i ^ e ^ r) +
                            o +
                            1859775393 +
                            n[t]) <<
                          0) <<
                          5) |
                        (o >>> 27)) +
                        (s ^ (i = (i << 30) | (i >>> 2)) ^ e) +
                        r +
                        1859775393 +
                        n[t + 1]) <<
                      0) <<
                      5) |
                    (r >>> 27)) +
                    (o ^ (s = (s << 30) | (s >>> 2)) ^ i) +
                    e +
                    1859775393 +
                    n[t + 2]) <<
                  0) <<
                  5) |
                (e >>> 27)) +
                (r ^ (o = (o << 30) | (o >>> 2)) ^ s) +
                i +
                1859775393 +
                n[t + 3]) <<
              0) <<
              5) |
            (i >>> 27)) +
            (e ^ (r = (r << 30) | (r >>> 2)) ^ o) +
            s +
            1859775393 +
            n[t + 4]) <<
          0),
          (e = (e << 30) | (e >>> 2));
      for (; t < 60; t += 5)
        (s =
          ((h =
            ((i =
              ((h =
                ((e =
                  ((h =
                    ((r =
                      ((h =
                        ((o =
                          ((h = (s << 5) | (s >>> 27)) +
                            ((i & e) | (i & r) | (e & r)) +
                            o -
                            1894007588 +
                            n[t]) <<
                          0) <<
                          5) |
                        (o >>> 27)) +
                        ((s & (i = (i << 30) | (i >>> 2))) |
                          (s & e) |
                          (i & e)) +
                        r -
                        1894007588 +
                        n[t + 1]) <<
                      0) <<
                      5) |
                    (r >>> 27)) +
                    ((o & (s = (s << 30) | (s >>> 2))) | (o & i) | (s & i)) +
                    e -
                    1894007588 +
                    n[t + 2]) <<
                  0) <<
                  5) |
                (e >>> 27)) +
                ((r & (o = (o << 30) | (o >>> 2))) | (r & s) | (o & s)) +
                i -
                1894007588 +
                n[t + 3]) <<
              0) <<
              5) |
            (i >>> 27)) +
            ((e & (r = (r << 30) | (r >>> 2))) | (e & o) | (r & o)) +
            s -
            1894007588 +
            n[t + 4]) <<
          0),
          (e = (e << 30) | (e >>> 2));
      for (; t < 80; t += 5)
        (s =
          ((h =
            ((i =
              ((h =
                ((e =
                  ((h =
                    ((r =
                      ((h =
                        ((o =
                          ((h = (s << 5) | (s >>> 27)) +
                            (i ^ e ^ r) +
                            o -
                            899497514 +
                            n[t]) <<
                          0) <<
                          5) |
                        (o >>> 27)) +
                        (s ^ (i = (i << 30) | (i >>> 2)) ^ e) +
                        r -
                        899497514 +
                        n[t + 1]) <<
                      0) <<
                      5) |
                    (r >>> 27)) +
                    (o ^ (s = (s << 30) | (s >>> 2)) ^ i) +
                    e -
                    899497514 +
                    n[t + 2]) <<
                  0) <<
                  5) |
                (e >>> 27)) +
                (r ^ (o = (o << 30) | (o >>> 2)) ^ s) +
                i -
                899497514 +
                n[t + 3]) <<
              0) <<
              5) |
            (i >>> 27)) +
            (e ^ (r = (r << 30) | (r >>> 2)) ^ o) +
            s -
            899497514 +
            n[t + 4]) <<
          0),
          (e = (e << 30) | (e >>> 2));
      (this.h0 = (this.h0 + s) << 0),
        (this.h1 = (this.h1 + i) << 0),
        (this.h2 = (this.h2 + e) << 0),
        (this.h3 = (this.h3 + r) << 0),
        (this.h4 = (this.h4 + o) << 0);
    }),
    (t.prototype.hex = function () {
      this.finalize();
      var t = this.h0,
        h = this.h1,
        s = this.h2,
        i = this.h3,
        e = this.h4;
      return (
        r[(t >> 28) & 15] +
        r[(t >> 24) & 15] +
        r[(t >> 20) & 15] +
        r[(t >> 16) & 15] +
        r[(t >> 12) & 15] +
        r[(t >> 8) & 15] +
        r[(t >> 4) & 15] +
        r[15 & t] +
        r[(h >> 28) & 15] +
        r[(h >> 24) & 15] +
        r[(h >> 20) & 15] +
        r[(h >> 16) & 15] +
        r[(h >> 12) & 15] +
        r[(h >> 8) & 15] +
        r[(h >> 4) & 15] +
        r[15 & h] +
        r[(s >> 28) & 15] +
        r[(s >> 24) & 15] +
        r[(s >> 20) & 15] +
        r[(s >> 16) & 15] +
        r[(s >> 12) & 15] +
        r[(s >> 8) & 15] +
        r[(s >> 4) & 15] +
        r[15 & s] +
        r[(i >> 28) & 15] +
        r[(i >> 24) & 15] +
        r[(i >> 20) & 15] +
        r[(i >> 16) & 15] +
        r[(i >> 12) & 15] +
        r[(i >> 8) & 15] +
        r[(i >> 4) & 15] +
        r[15 & i] +
        r[(e >> 28) & 15] +
        r[(e >> 24) & 15] +
        r[(e >> 20) & 15] +
        r[(e >> 16) & 15] +
        r[(e >> 12) & 15] +
        r[(e >> 8) & 15] +
        r[(e >> 4) & 15] +
        r[15 & e]
      );
    }),
    (t.prototype.toString = t.prototype.hex),
    (t.prototype.digest = function () {
      this.finalize();
      var t = this.h0,
        h = this.h1,
        s = this.h2,
        i = this.h3,
        e = this.h4;
      return [
        (t >> 24) & 255,
        (t >> 16) & 255,
        (t >> 8) & 255,
        255 & t,
        (h >> 24) & 255,
        (h >> 16) & 255,
        (h >> 8) & 255,
        255 & h,
        (s >> 24) & 255,
        (s >> 16) & 255,
        (s >> 8) & 255,
        255 & s,
        (i >> 24) & 255,
        (i >> 16) & 255,
        (i >> 8) & 255,
        255 & i,
        (e >> 24) & 255,
        (e >> 16) & 255,
        (e >> 8) & 255,
        255 & e,
      ];
    }),
    (t.prototype.array = t.prototype.digest),
    (t.prototype.arrayBuffer = function () {
      this.finalize();
      var t = new ArrayBuffer(20),
        h = new DataView(t);
      return (
        h.setUint32(0, this.h0),
        h.setUint32(4, this.h1),
        h.setUint32(8, this.h2),
        h.setUint32(12, this.h3),
        h.setUint32(16, this.h4),
        t
      );
    });
  var y = c();
  i
    ? (module.exports = y)
    : ((h.sha1 = y),
      e &&
        define(function () {
          return y;
        }));
})();
var EXRLoader = {};
(function () {
  var a_ = 1015,
    ai = 1016,
    ab = 1023,
    aK = 1028,
    ar = "",
    ae = "srgb-linear";
  function be() {
    var d = new ArrayBuffer(4),
      V = new Float32Array(d),
      e = new Uint32Array(d),
      K = new Uint32Array(512),
      v = new Uint32Array(512);
    for (var I = 0; I < 256; ++I) {
      var u = I - 127;
      if (u < -27) {
        K[I] = 0;
        K[I | 256] = 32768;
        v[I] = 24;
        v[I | 256] = 24;
      } else if (u < -14) {
        K[I] = 1024 >> (-u - 14);
        K[I | 256] = (1024 >> (-u - 14)) | 32768;
        v[I] = -u - 1;
        v[I | 256] = -u - 1;
      } else if (u <= 15) {
        K[I] = (u + 15) << 10;
        K[I | 256] = ((u + 15) << 10) | 32768;
        v[I] = 13;
        v[I | 256] = 13;
      } else if (u < 128) {
        K[I] = 31744;
        K[I | 256] = 64512;
        v[I] = 24;
        v[I | 256] = 24;
      } else {
        K[I] = 31744;
        K[I | 256] = 64512;
        v[I] = 13;
        v[I | 256] = 13;
      }
    }
    var aj = new Uint32Array(2048),
      C = new Uint32Array(64),
      a7 = new Uint32Array(64);
    for (var I = 1; I < 1024; ++I) {
      var X = I << 13,
        u = 0;
      while ((X & 8388608) === 0) {
        X <<= 1;
        u -= 8388608;
      }
      X &= ~8388608;
      u += 947912704;
      aj[I] = X | u;
    }
    for (var I = 1024; I < 2048; ++I) {
      aj[I] = 939524096 + ((I - 1024) << 13);
    }
    for (var I = 1; I < 31; ++I) {
      C[I] = I << 23;
    }
    C[31] = 1199570944;
    C[32] = 2147483648;
    for (var I = 33; I < 63; ++I) {
      C[I] = 2147483648 + ((I - 32) << 23);
    }
    C[63] = 3347054592;
    for (var I = 1; I < 64; ++I) {
      if (I !== 32) {
        a7[I] = 1024;
      }
    }
    return {
      floatView: V,
      uint32View: e,
      baseTable: K,
      shiftTable: v,
      mantissaTable: aj,
      exponentTable: C,
      offsetTable: a7,
    };
  }
  var bi = be(),
    af = {
      toHalfFloat(d) {
        if (Math.abs(d) > 65504)
          console.warn("DataUtils.toHalfFloat(): Value out of range.");
        d = Math.max(-65504, Math.min(d, 65504));
        bi.floatView[0] = d;
        var V = bi.uint32View[0],
          e = (V >> 23) & 511;
        return bi.baseTable[e] + ((V & 8388607) >> bi.shiftTable[e]);
      },
    };
  function aZ(d, type = ai) {
    var V = 1 << 16,
      e = V >> 3,
      K = 16,
      v = 14,
      I = (1 << K) + 1,
      u = 1 << v,
      aj = u - 1,
      C = 16,
      a7 = 1 << (C - 1),
      X = (1 << C) - 1,
      aM = 59,
      ay = 63,
      bg = 2 + ay - aM,
      ac = 8,
      ad = 4,
      aQ = 4,
      T = 2,
      ax = 1,
      aq = 0,
      av = 1,
      aA = 0,
      bp = 1,
      a4 = 2,
      aJ = Math.pow(2.7182818, 2.2);
    function ap(H, k) {
      var Y = 0;
      for (var F = 0; F < V; ++F) {
        if (F == 0 || H[F >> 3] & (1 << (F & 7))) {
          k[Y++] = F;
        }
      }
      var U = Y - 1;
      while (Y < V) k[Y++] = 0;
      return U;
    }
    function bn(H) {
      for (var k = 0; k < u; k++) {
        H[k] = {};
        H[k].len = 0;
        H[k].lit = 0;
        H[k].p = null;
      }
    }
    var o = { l: 0, c: 0, lc: 0 };
    function aC(H, k, Y, P, F) {
      while (Y < H) {
        k = (k << 8) | aN(P, F);
        Y += 8;
      }
      Y -= H;
      o.l = (k >> Y) & ((1 << H) - 1);
      o.c = k;
      o.lc = Y;
    }
    var a6 = new Array(59);
    function aI(H) {
      for (var k = 0; k <= 58; ++k) a6[k] = 0;
      for (var k = 0; k < I; ++k) a6[H[k]] += 1;
      var Y = 0;
      for (var k = 58; k > 0; --k) {
        var F = (Y + a6[k]) >> 1;
        a6[k] = Y;
        Y = F;
      }
      for (var k = 0; k < I; ++k) {
        var U = H[k];
        if (U > 0) H[k] = U | (a6[U]++ << 6);
      }
    }
    function am(P, H, k, Y, F, U) {
      var q = H,
        g = 0,
        A = 0;
      for (; Y <= F; Y++) {
        if (q.value - H.value > k) return !1;
        aC(6, g, A, P, q);
        var N = o.l;
        g = o.c;
        A = o.lc;
        U[Y] = N;
        if (N == ay) {
          if (q.value - H.value > k) {
            throw new Error("Something wrong with hufUnpackEncTable");
          }
          aC(8, g, A, P, q);
          var E = o.l + bg;
          g = o.c;
          A = o.lc;
          if (Y + E > F + 1) {
            throw new Error("Something wrong with hufUnpackEncTable");
          }
          while (E--) U[Y++] = 0;
          Y--;
        } else if (N >= aM) {
          var E = N - aM + 2;
          if (Y + E > F + 1) {
            throw new Error("Something wrong with hufUnpackEncTable");
          }
          while (E--) U[Y++] = 0;
          Y--;
        }
      }
      aI(U);
    }
    function bl(H) {
      return H & 63;
    }
    function aY(H) {
      return H >> 6;
    }
    function b1(H, k, Y, F) {
      for (; k <= Y; k++) {
        var U = aY(H[k]),
          q = bl(H[k]);
        if (U >> q) {
          throw new Error("Invalid table entry");
        }
        if (q > v) {
          var g = F[U >> (q - v)];
          if (g.len) {
            throw new Error("Invalid table entry");
          }
          g.lit++;
          if (g.p) {
            var A = g.p;
            g.p = new Array(g.lit);
            for (var N = 0; N < g.lit - 1; ++N) {
              g.p[N] = A[N];
            }
          } else {
            g.p = new Array(1);
          }
          g.p[g.lit - 1] = k;
        } else if (q) {
          var E = 0;
          for (var N = 1 << (v - q); N > 0; N--) {
            var g = F[(U << (v - q)) + E];
            if (g.len || g.p) {
              throw new Error("Invalid table entry");
            }
            g.len = q;
            g.lit = k;
            E++;
          }
        }
      }
      return !0;
    }
    var r = { c: 0, lc: 0 };
    function bb(H, k, P, Y) {
      H = (H << 8) | aN(P, Y);
      k += 8;
      r.c = H;
      r.lc = k;
    }
    var Q = { c: 0, lc: 0 };
    function aO(H, k, Y, F, P, U, q, g, A) {
      if (H == k) {
        if (F < 8) {
          bb(Y, F, P, U);
          Y = r.c;
          F = r.lc;
        }
        F -= 8;
        var N = Y >> F;
        N = new Uint8Array([N])[0];
        if (g.value + N > A) {
          return !1;
        }
        var E = q[g.value - 1];
        while (N-- > 0) {
          q[g.value++] = E;
        }
      } else if (g.value < A) {
        q[g.value++] = H;
      } else {
        return !1;
      }
      Q.c = Y;
      Q.lc = F;
    }
    function an(H) {
      return H & 65535;
    }
    function au(H) {
      var k = an(H);
      return k > 32767 ? k - 65536 : k;
    }
    var f = { a: 0, b: 0 };
    function a5(H, k) {
      var Y = au(H),
        F = au(k),
        U = F,
        q = Y + (U & 1) + (U >> 1),
        g = q,
        A = q - U;
      f.a = g;
      f.b = A;
    }
    function bc(H, k) {
      var Y = an(H),
        F = an(k),
        U = (Y - (F >> 1)) & X,
        q = (F + U - a7) & X;
      f.a = q;
      f.b = U;
    }
    function aG(d, H, k, Y, F, U, q) {
      var g = q < 1 << 14,
        A = k > F ? F : k,
        N = 1,
        E,
        m;
      while (N <= A) N <<= 1;
      N >>= 1;
      E = N;
      N >>= 1;
      while (N >= 1) {
        m = 0;
        var z = m + U * (F - E),
          s = U * N,
          G = U * E,
          c = Y * N,
          B = Y * E,
          i,
          S,
          W,
          a;
        for (; m <= z; m += G) {
          var J = m,
            j = m + Y * (k - E);
          for (; J <= j; J += B) {
            var l = J + c,
              y = J + s,
              x = y + c;
            if (g) {
              a5(d[J + H], d[y + H]);
              i = f.a;
              W = f.b;
              a5(d[l + H], d[x + H]);
              S = f.a;
              a = f.b;
              a5(i, S);
              d[J + H] = f.a;
              d[l + H] = f.b;
              a5(W, a);
              d[y + H] = f.a;
              d[x + H] = f.b;
            } else {
              bc(d[J + H], d[y + H]);
              i = f.a;
              W = f.b;
              bc(d[l + H], d[x + H]);
              S = f.a;
              a = f.b;
              bc(i, S);
              d[J + H] = f.a;
              d[l + H] = f.b;
              bc(W, a);
              d[y + H] = f.a;
              d[x + H] = f.b;
            }
          }
          if (k & N) {
            var y = J + s;
            if (g) a5(d[J + H], d[y + H]);
            else bc(d[J + H], d[y + H]);
            i = f.a;
            d[y + H] = f.b;
            d[J + H] = i;
          }
        }
        if (F & N) {
          var J = m,
            j = m + Y * (k - E);
          for (; J <= j; J += B) {
            var l = J + c;
            if (g) a5(d[J + H], d[l + H]);
            else bc(d[J + H], d[l + H]);
            i = f.a;
            d[l + H] = f.b;
            d[J + H] = i;
          }
        }
        E = N;
        N >>= 1;
      }
      return m;
    }
    function aB(H, k, P, Y, F, U, q, g, A) {
      var N = 0,
        E = 0,
        m = q,
        z = Math.trunc(Y.value + (F + 7) / 8);
      while (Y.value < z) {
        bb(N, E, P, Y);
        N = r.c;
        E = r.lc;
        while (E >= v) {
          var s = (N >> (E - v)) & aj,
            G = k[s];
          if (G.len) {
            E -= G.len;
            aO(G.lit, U, N, E, P, Y, g, A, m);
            N = Q.c;
            E = Q.lc;
          } else {
            if (!G.p) {
              throw new Error("hufDecode issues");
            }
            var c;
            for (c = 0; c < G.lit; c++) {
              var B = bl(H[G.p[c]]);
              while (E < B && Y.value < z) {
                bb(N, E, P, Y);
                N = r.c;
                E = r.lc;
              }
              if (E >= B) {
                if (aY(H[G.p[c]]) == ((N >> (E - B)) & ((1 << B) - 1))) {
                  E -= B;
                  aO(G.p[c], U, N, E, P, Y, g, A, m);
                  N = Q.c;
                  E = Q.lc;
                  break;
                }
              }
            }
            if (c == G.lit) {
              throw new Error("hufDecode issues");
            }
          }
        }
      }
      var i = (8 - F) & 7;
      N >>= i;
      E -= i;
      while (E > 0) {
        var G = k[(N << (v - E)) & aj];
        if (G.len) {
          E -= G.len;
          aO(G.lit, U, N, E, P, Y, g, A, m);
          N = Q.c;
          E = Q.lc;
        } else {
          throw new Error("hufDecode issues");
        }
      }
      return !0;
    }
    function bf(P, H, k, Y, F, U) {
      var q = { value: 0 },
        g = k.value,
        A = Z(H, k),
        N = Z(H, k);
      k.value += 4;
      var E = Z(H, k);
      k.value += 4;
      if (A < 0 || A >= I || N < 0 || N >= I) {
        throw new Error("Something wrong with HUF_ENCSIZE");
      }
      var m = new Array(I),
        z = new Array(u);
      bn(z);
      var s = Y - (k.value - g);
      am(P, k, s, A, N, m);
      if (E > 8 * (Y - (k.value - g))) {
        throw new Error("Something wrong with hufUncompress");
      }
      b1(m, A, N, z);
      aB(m, z, P, k, E, N, U, F, q);
    }
    function aF(H, k, Y) {
      for (var F = 0; F < Y; ++F) {
        k[F] = H[k[F]];
      }
    }
    function az(H) {
      for (var k = 1; k < H.length; k++) {
        var Y = H[k - 1] + H[k] - 128;
        H[k] = Y;
      }
    }
    function aH(H, k) {
      var Y = 0,
        F = Math.floor((H.length + 1) / 2),
        U = 0,
        q = H.length - 1;
      while (!0) {
        if (U > q) break;
        k[U++] = H[Y++];
        if (U > q) break;
        k[U++] = H[F++];
      }
    }
    function ao(H) {
      var k = H.byteLength,
        Y = new Array(),
        F = 0,
        U = new DataView(H);
      while (k > 0) {
        var q = U.getInt8(F++);
        if (q < 0) {
          var g = -q;
          k -= g + 1;
          for (var A = 0; A < g; A++) {
            Y.push(U.getUint8(F++));
          }
        } else {
          var g = q;
          k -= 2;
          var N = U.getUint8(F++);
          for (var A = 0; A < g + 1; A++) {
            Y.push(N);
          }
        }
      }
      return Y;
    }
    function bo(H, k, Y, F, U, q) {
      var g = new DataView(q.buffer),
        A = Y[H.idx[0]].width,
        N = Y[H.idx[0]].height,
        E = 3,
        m = Math.floor(A / 8),
        z = Math.ceil(A / 8),
        s = Math.ceil(N / 8),
        G = A - (z - 1) * 8,
        c = N - (s - 1) * 8,
        B = { value: 0 },
        i = new Array(E),
        S = new Array(E),
        W = new Array(E),
        a = new Array(E),
        J = new Array(E);
      for (var j = 0; j < E; ++j) {
        J[j] = k[H.idx[j]];
        i[j] = j < 1 ? 0 : i[j - 1] + z * s;
        S[j] = new Float32Array(64);
        W[j] = new Uint16Array(64);
        a[j] = new Uint16Array(z * 64);
      }
      for (var l = 0; l < s; ++l) {
        var y = 8,
          x = 8,
          w = 0;
        if (l == s - 1) y = c;
        for (var L = 0; L < z; ++L) {
          if (L == z - 1) x = G;
          for (var j = 0; j < E; ++j) {
            W[j].fill(0);
            W[j][0] = U[i[j]++];
            a2(B, F, W[j]);
            a1(W[j], S[j]);
            bq(S[j]);
          }
          if (E == 3) {
            aL(S);
          }
          for (var j = 0; j < E; ++j) {
            aT(S[j], a[j], L * 64);
          }
        }
        for (var j = 0; j < E; ++j) {
          var D = Y[H.idx[j]].type;
          for (var _ = 8 * l; _ < 8 * l + y; ++_) {
            w = J[j][_];
            for (var L = 0; L < m; ++L) {
              var p = L * 64 + (_ & 7) * 8;
              g.setUint16(w + 0 * T * D, a[j][p + 0], !0);
              g.setUint16(w + 1 * T * D, a[j][p + 1], !0);
              g.setUint16(w + 2 * T * D, a[j][p + 2], !0);
              g.setUint16(w + 3 * T * D, a[j][p + 3], !0);
              g.setUint16(w + 4 * T * D, a[j][p + 4], !0);
              g.setUint16(w + 5 * T * D, a[j][p + 5], !0);
              g.setUint16(w + 6 * T * D, a[j][p + 6], !0);
              g.setUint16(w + 7 * T * D, a[j][p + 7], !0);
              w += 8 * T * D;
            }
          }
          if (m != z) {
            for (var _ = 8 * l; _ < 8 * l + y; ++_) {
              w = J[j][_] + 8 * m * T * D;
              var p = m * 64 + (_ & 7) * 8;
              for (var b = 0; b < x; ++b) {
                g.setUint16(w + b * T * D, a[j][p + b], !0);
              }
            }
          }
        }
      }
      var bh = new Uint16Array(A);
      g = new DataView(q.buffer);
      for (var j = 0; j < E; ++j) {
        Y[H.idx[j]].decoded = !0;
        var D = Y[H.idx[j]].type;
        if (Y[j].type != 2) continue;
        for (var _ = 0; _ < N; ++_) {
          var w = J[j][_];
          for (var b = 0; b < A; ++b) {
            bh[b] = g.getUint16(w + b * T * D, !0);
          }
          for (var b = 0; b < A; ++b) {
            g.setFloat32(w + b * T * D, R(bh[b]), !0);
          }
        }
      }
    }
    function a2(H, k, Y) {
      var F,
        U = 1;
      while (U < 64) {
        F = k[H.value];
        if (F == 65280) {
          U = 64;
        } else if (F >> 8 == 255) {
          U += F & 255;
        } else {
          Y[U] = F;
          U++;
        }
        H.value++;
      }
    }
    function a1(H, k) {
      k[0] = R(H[0]);
      k[1] = R(H[1]);
      k[2] = R(H[5]);
      k[3] = R(H[6]);
      k[4] = R(H[14]);
      k[5] = R(H[15]);
      k[6] = R(H[27]);
      k[7] = R(H[28]);
      k[8] = R(H[2]);
      k[9] = R(H[4]);
      k[10] = R(H[7]);
      k[11] = R(H[13]);
      k[12] = R(H[16]);
      k[13] = R(H[26]);
      k[14] = R(H[29]);
      k[15] = R(H[42]);
      k[16] = R(H[3]);
      k[17] = R(H[8]);
      k[18] = R(H[12]);
      k[19] = R(H[17]);
      k[20] = R(H[25]);
      k[21] = R(H[30]);
      k[22] = R(H[41]);
      k[23] = R(H[43]);
      k[24] = R(H[9]);
      k[25] = R(H[11]);
      k[26] = R(H[18]);
      k[27] = R(H[24]);
      k[28] = R(H[31]);
      k[29] = R(H[40]);
      k[30] = R(H[44]);
      k[31] = R(H[53]);
      k[32] = R(H[10]);
      k[33] = R(H[19]);
      k[34] = R(H[23]);
      k[35] = R(H[32]);
      k[36] = R(H[39]);
      k[37] = R(H[45]);
      k[38] = R(H[52]);
      k[39] = R(H[54]);
      k[40] = R(H[20]);
      k[41] = R(H[22]);
      k[42] = R(H[33]);
      k[43] = R(H[38]);
      k[44] = R(H[46]);
      k[45] = R(H[51]);
      k[46] = R(H[55]);
      k[47] = R(H[60]);
      k[48] = R(H[21]);
      k[49] = R(H[34]);
      k[50] = R(H[37]);
      k[51] = R(H[47]);
      k[52] = R(H[50]);
      k[53] = R(H[56]);
      k[54] = R(H[59]);
      k[55] = R(H[61]);
      k[56] = R(H[35]);
      k[57] = R(H[36]);
      k[58] = R(H[48]);
      k[59] = R(H[49]);
      k[60] = R(H[57]);
      k[61] = R(H[58]);
      k[62] = R(H[62]);
      k[63] = R(H[63]);
    }
    function bq(H) {
      var k = 0.5 * Math.cos(3.14159 / 4),
        Y = 0.5 * Math.cos(3.14159 / 16),
        F = 0.5 * Math.cos(3.14159 / 8),
        U = 0.5 * Math.cos((3 * 3.14159) / 16),
        q = 0.5 * Math.cos((5 * 3.14159) / 16),
        g = 0.5 * Math.cos((3 * 3.14159) / 8),
        A = 0.5 * Math.cos((7 * 3.14159) / 16),
        N = new Array(4),
        E = new Array(4),
        m = new Array(4),
        z = new Array(4);
      for (var s = 0; s < 8; ++s) {
        var G = s * 8;
        N[0] = F * H[G + 2];
        N[1] = g * H[G + 2];
        N[2] = F * H[G + 6];
        N[3] = g * H[G + 6];
        E[0] = Y * H[G + 1] + U * H[G + 3] + q * H[G + 5] + A * H[G + 7];
        E[1] = U * H[G + 1] - A * H[G + 3] - Y * H[G + 5] - q * H[G + 7];
        E[2] = q * H[G + 1] - Y * H[G + 3] + A * H[G + 5] + U * H[G + 7];
        E[3] = A * H[G + 1] - q * H[G + 3] + U * H[G + 5] - Y * H[G + 7];
        m[0] = k * (H[G + 0] + H[G + 4]);
        m[3] = k * (H[G + 0] - H[G + 4]);
        m[1] = N[0] + N[3];
        m[2] = N[1] - N[2];
        z[0] = m[0] + m[1];
        z[1] = m[3] + m[2];
        z[2] = m[3] - m[2];
        z[3] = m[0] - m[1];
        H[G + 0] = z[0] + E[0];
        H[G + 1] = z[1] + E[1];
        H[G + 2] = z[2] + E[2];
        H[G + 3] = z[3] + E[3];
        H[G + 4] = z[3] - E[3];
        H[G + 5] = z[2] - E[2];
        H[G + 6] = z[1] - E[1];
        H[G + 7] = z[0] - E[0];
      }
      for (var c = 0; c < 8; ++c) {
        N[0] = F * H[16 + c];
        N[1] = g * H[16 + c];
        N[2] = F * H[48 + c];
        N[3] = g * H[48 + c];
        E[0] = Y * H[8 + c] + U * H[24 + c] + q * H[40 + c] + A * H[56 + c];
        E[1] = U * H[8 + c] - A * H[24 + c] - Y * H[40 + c] - q * H[56 + c];
        E[2] = q * H[8 + c] - Y * H[24 + c] + A * H[40 + c] + U * H[56 + c];
        E[3] = A * H[8 + c] - q * H[24 + c] + U * H[40 + c] - Y * H[56 + c];
        m[0] = k * (H[c] + H[32 + c]);
        m[3] = k * (H[c] - H[32 + c]);
        m[1] = N[0] + N[3];
        m[2] = N[1] - N[2];
        z[0] = m[0] + m[1];
        z[1] = m[3] + m[2];
        z[2] = m[3] - m[2];
        z[3] = m[0] - m[1];
        H[0 + c] = z[0] + E[0];
        H[8 + c] = z[1] + E[1];
        H[16 + c] = z[2] + E[2];
        H[24 + c] = z[3] + E[3];
        H[32 + c] = z[3] - E[3];
        H[40 + c] = z[2] - E[2];
        H[48 + c] = z[1] - E[1];
        H[56 + c] = z[0] - E[0];
      }
    }
    function aL(H) {
      for (var k = 0; k < 64; ++k) {
        var Y = H[0][k],
          F = H[1][k],
          U = H[2][k];
        H[0][k] = Y + 1.5747 * U;
        H[1][k] = Y - 0.1873 * F - 0.4682 * U;
        H[2][k] = Y + 1.8556 * F;
      }
    }
    function aT(H, k, Y) {
      for (var F = 0; F < 64; ++F) {
        k[Y + F] = af.toHalfFloat(b3(H[F]));
      }
    }
    function b3(H) {
      if (H <= 1) {
        return Math.sign(H) * Math.pow(Math.abs(H), 2.2);
      } else {
        return Math.sign(H) * Math.pow(aJ, Math.abs(H) - 1);
      }
    }
    function ak(H) {
      return new DataView(H.array.buffer, H.offset.value, H.size);
    }
    function aU(H) {
      var k = H.viewer.buffer.slice(H.offset.value, H.offset.value + H.size),
        Y = new Uint8Array(ao(k)),
        F = new Uint8Array(Y.length);
      az(Y);
      aH(Y, F);
      return new DataView(F.buffer);
    }
    function b6(H) {
      var k = H.array.slice(H.offset.value, H.offset.value + H.size),
        Y = UZIP.inflate(k),
        F = new Uint8Array(Y.length);
      az(Y);
      aH(Y, F);
      return new DataView(F.buffer);
    }
    function aR(H) {
      var k = H.viewer,
        Y = { value: H.offset.value },
        F = new Uint16Array(
          H.columns * H.lines * (H.inputChannels.length * H.type)
        ),
        U = new Uint8Array(e),
        q = 0,
        g = new Array(H.inputChannels.length),
        i = 0;
      for (var A = 0, N = H.inputChannels.length; A < N; A++) {
        g[A] = {};
        g[A].start = q;
        g[A].end = g[A].start;
        g[A].nx = H.columns;
        g[A].ny = H.lines;
        g[A].size = H.type;
        q += g[A].nx * g[A].ny * g[A].size;
      }
      var E = a$(k, Y),
        m = a$(k, Y);
      if (m >= e) {
        throw new Error("Something is wrong with PIZ_COMPRESSION BITMAP_SIZE");
      }
      if (E <= m) {
        for (var A = 0; A < m - E + 1; A++) {
          U[A + E] = n(k, Y);
        }
      }
      var z = new Uint16Array(V),
        s = ap(U, z),
        G = Z(k, Y);
      bf(H.array, k, Y, G, F, q);
      for (var A = 0; A < H.inputChannels.length; ++A) {
        var c = g[A];
        for (var B = 0; B < g[A].size; ++B) {
          aG(F, c.start + B, c.nx, c.size, c.ny, c.nx * c.size, s);
        }
      }
      aF(z, F, q);
      var S = new Uint8Array(F.buffer.byteLength);
      for (var W = 0; W < H.lines; W++) {
        for (var a = 0; a < H.inputChannels.length; a++) {
          var c = g[a],
            J = c.nx * c.size,
            j = new Uint8Array(F.buffer, c.end * T, J * T);
          S.set(j, i);
          i += J * T;
          c.end += J;
        }
      }
      return new DataView(S.buffer);
    }
    function aw(H) {
      var k = H.array.slice(H.offset.value, H.offset.value + H.size),
        Y = UZIP.inflate(k),
        F = H.inputChannels.length * H.lines * H.columns * H.totalBytes,
        U = new ArrayBuffer(F),
        q = new DataView(U),
        g = 0,
        A = 0,
        N = new Array(4);
      for (var E = 0; E < H.lines; E++) {
        for (var m = 0; m < H.inputChannels.length; m++) {
          var z = 0,
            s = H.inputChannels[m].pixelType;
          switch (s) {
            case 1:
              N[0] = g;
              N[1] = N[0] + H.columns;
              g = N[1] + H.columns;
              for (var G = 0; G < H.columns; ++G) {
                var c = (Y[N[0]++] << 8) | Y[N[1]++];
                z += c;
                q.setUint16(A, z, !0);
                A += 2;
              }
              break;
            case 2:
              N[0] = g;
              N[1] = N[0] + H.columns;
              N[2] = N[1] + H.columns;
              g = N[2] + H.columns;
              for (var G = 0; G < H.columns; ++G) {
                var c =
                  (Y[N[0]++] << 24) | (Y[N[1]++] << 16) | (Y[N[2]++] << 8);
                z += c;
                q.setUint32(A, z, !0);
                A += 4;
              }
              break;
          }
        }
      }
      return q;
    }
    function b7(H) {
      var k = H.viewer,
        Y = { value: H.offset.value },
        F = new Uint8Array(
          H.columns * H.lines * (H.inputChannels.length * H.type * T)
        ),
        U = {
          version: t(k, Y),
          unknownUncompressedSize: t(k, Y),
          unknownCompressedSize: t(k, Y),
          acCompressedSize: t(k, Y),
          dcCompressedSize: t(k, Y),
          rleCompressedSize: t(k, Y),
          rleUncompressedSize: t(k, Y),
          rleRawSize: t(k, Y),
          totalAcUncompressedCount: t(k, Y),
          totalDcUncompressedCount: t(k, Y),
          acCompression: t(k, Y),
        },
        J,
        j,
        l,
        D = 0;
      if (U.version < 2)
        throw new Error(
          "EXRLoader.parse: " +
            $.compression +
            " version " +
            U.version +
            " is unsupported"
        );
      var q = new Array(),
        g = a$(k, Y) - T;
      while (g > 0) {
        var A = b2(k.buffer, Y),
          N = n(k, Y),
          E = (N >> 2) & 3,
          m = (N >> 4) - 1,
          z = new Int8Array([m])[0],
          s = n(k, Y);
        q.push({ name: A, index: z, type: s, compression: E });
        g -= A.length + 3;
      }
      var G = $.channels,
        c = new Array(H.inputChannels.length);
      for (var B = 0; B < H.inputChannels.length; ++B) {
        var i = (c[B] = {}),
          S = G[B];
        i.name = S.name;
        i.compression = aA;
        i.decoded = !1;
        i.type = S.pixelType;
        i.pLinear = S.pLinear;
        i.width = H.columns;
        i.height = H.lines;
      }
      var W = { idx: new Array(3) };
      for (var w = 0; w < H.inputChannels.length; ++w) {
        var i = c[w];
        for (var B = 0; B < q.length; ++B) {
          var a = q[B];
          if (i.name == a.name) {
            i.compression = a.compression;
            if (a.index >= 0) {
              W.idx[a.index] = w;
            }
            i.offset = w;
          }
        }
      }
      if (U.acCompressedSize > 0) {
        switch (U.acCompression) {
          case aq:
            J = new Uint16Array(U.totalAcUncompressedCount);
            bf(
              H.array,
              k,
              Y,
              U.acCompressedSize,
              J,
              U.totalAcUncompressedCount
            );
            break;
          case av:
            var y = H.array.slice(
                Y.value,
                Y.value + U.totalAcUncompressedCount
              ),
              x = UZIP.inflate(y);
            J = new Uint16Array(x.buffer);
            Y.value += U.totalAcUncompressedCount;
            break;
        }
      }
      if (U.dcCompressedSize > 0) {
        var L = { array: H.array, offset: Y, size: U.dcCompressedSize };
        j = new Uint16Array(b6(L).buffer);
        Y.value += U.dcCompressedSize;
      }
      if (U.rleRawSize > 0) {
        var y = H.array.slice(Y.value, Y.value + U.rleCompressedSize),
          x = UZIP.inflate(y);
        l = ao(x.buffer);
        Y.value += U.rleCompressedSize;
      }
      var _ = new Array(c.length);
      for (var B = 0; B < _.length; ++B) {
        _[B] = new Array();
      }
      for (var p = 0; p < H.lines; ++p) {
        for (var b = 0; b < c.length; ++b) {
          _[b].push(D);
          D += c[b].width * H.type * T;
        }
      }
      bo(W, _, c, J, j, F);
      for (var B = 0; B < c.length; ++B) {
        var i = c[B];
        if (i.decoded) continue;
        switch (i.compression) {
          case a4:
            var bh = 0,
              a9 = 0;
            for (var p = 0; p < H.lines; ++p) {
              var a0 = _[B][bh];
              for (var ah = 0; ah < i.width; ++ah) {
                for (var aD = 0; aD < T * i.type; ++aD) {
                  F[a0++] = l[a9 + aD * i.width * i.height];
                }
                a9++;
              }
              bh++;
            }
            break;
          case bp:
          default: {
          }
        }
      }
      return new DataView(F.buffer);
    }
    function b2(d, w) {
      var H = new Uint8Array(d),
        k = 0;
      while (H[w.value + k] != 0) {
        k += 1;
      }
      var Y = new TextDecoder().decode(H.slice(w.value, w.value + k));
      w.value = w.value + k + 1;
      return Y;
    }
    function aV(d, w, H) {
      var k = new TextDecoder().decode(
        new Uint8Array(d).slice(w.value, w.value + H)
      );
      w.value = w.value + H;
      return k;
    }
    function aP(H, w) {
      var k = h(H, w),
        Y = Z(H, w);
      return [k, Y];
    }
    function b9(H, w) {
      var k = Z(H, w),
        Y = Z(H, w);
      return [k, Y];
    }
    function h(H, w) {
      var k = H.getInt32(w.value, !0);
      w.value = w.value + aQ;
      return k;
    }
    function Z(H, w) {
      var k = H.getUint32(w.value, !0);
      w.value = w.value + aQ;
      return k;
    }
    function aN(P, w) {
      var H = P[w.value];
      w.value = w.value + ax;
      return H;
    }
    function n(H, w) {
      var k = H.getUint8(w.value);
      w.value = w.value + ax;
      return k;
    }
    var t = function (H, w) {
      var k;
      if ("getBigInt64" in DataView.prototype) {
        k = Number(H.getBigInt64(w.value, !0));
      } else {
        k =
          H.getUint32(w.value + 4, !0) + Number(H.getUint32(w.value, !0) << 32);
      }
      w.value += ac;
      return k;
    };
    function O(H, w) {
      var k = H.getFloat32(w.value, !0);
      w.value += ad;
      return k;
    }
    function aX(H, w) {
      return af.toHalfFloat(O(H, w));
    }
    function R(H) {
      var k = (H & 31744) >> 10,
        Y = H & 1023;
      return (
        (H >> 15 ? -1 : 1) *
        (k
          ? k === 31
            ? Y
              ? NaN
              : Infinity
            : Math.pow(2, k - 15) * (1 + Y / 1024)
          : 6103515625e-14 * (Y / 1024))
      );
    }
    function a$(H, w) {
      var k = H.getUint16(w.value, !0);
      w.value += T;
      return k;
    }
    function bk(d, w) {
      return R(a$(d, w));
    }
    function b5(H, d, w, k) {
      var Y = w.value,
        F = [];
      while (w.value < Y + k - 1) {
        var U = b2(d, w),
          q = h(H, w),
          g = n(H, w);
        w.value += 3;
        var A = h(H, w),
          N = h(H, w);
        F.push({
          name: U,
          pixelType: q,
          pLinear: g,
          xSampling: A,
          ySampling: N,
        });
      }
      w.value += 1;
      return F;
    }
    function bj(H, w) {
      var k = O(H, w),
        Y = O(H, w),
        F = O(H, w),
        U = O(H, w),
        q = O(H, w),
        g = O(H, w),
        A = O(H, w),
        N = O(H, w);
      return {
        redX: k,
        redY: Y,
        greenX: F,
        greenY: U,
        blueX: q,
        blueY: g,
        whiteX: A,
        whiteY: N,
      };
    }
    function aE(H, w) {
      var k =
          "NO_COMPRESSION RLE_COMPRESSION ZIPS_COMPRESSION ZIP_COMPRESSION PIZ_COMPRESSION PXR24_COMPRESSION B44_COMPRESSION B44A_COMPRESSION DWAA_COMPRESSION DWAB_COMPRESSION".split(
            " "
          ),
        Y = n(H, w);
      return k[Y];
    }
    function ag(H, w) {
      var k = h(H, w),
        Y = h(H, w),
        F = h(H, w),
        U = h(H, w);
      return { xMin: k, yMin: Y, xMax: F, yMax: U };
    }
    function aa(H, w) {
      var k = ["INCREASING_Y", "DECREASING_Y", "RANDOM_Y"],
        Y = n(H, w);
      return k[Y];
    }
    function aW(H, w) {
      var k = ["ENVMAP_LATLONG", "ENVMAP_CUBE"],
        Y = n(H, w);
      return k[Y];
    }
    function a8(H, w) {
      var k = ["ONE_LEVEL", "MIPMAP_LEVELS", "RIPMAP_LEVELS"],
        Y = ["ROUND_DOWN", "ROUND_UP"],
        F = Z(H, w),
        U = Z(H, w),
        q = n(H, w);
      return {
        xSize: F,
        ySize: U,
        levelMode: k[q & 15],
        roundingMode: Y[q >> 4],
      };
    }
    function at(H, w) {
      var k = O(H, w),
        Y = O(H, w);
      return [k, Y];
    }
    function ba(H, w) {
      var k = O(H, w),
        Y = O(H, w),
        F = O(H, w);
      return [k, Y, F];
    }
    function al(H, d, w, k, Y) {
      if (k === "string" || k === "stringvector" || k === "iccProfile") {
        return aV(d, w, Y);
      } else if (k === "chlist") {
        return b5(H, d, w, Y);
      } else if (k === "chromaticities") {
        return bj(H, w);
      } else if (k === "compression") {
        return aE(H, w);
      } else if (k === "box2i") {
        return ag(H, w);
      } else if (k === "envmap") {
        return aW(H, w);
      } else if (k === "tiledesc") {
        return a8(H, w);
      } else if (k === "lineOrder") {
        return aa(H, w);
      } else if (k === "float") {
        return O(H, w);
      } else if (k === "v2f") {
        return at(H, w);
      } else if (k === "v3f") {
        return ba(H, w);
      } else if (k === "int") {
        return h(H, w);
      } else if (k === "rational") {
        return aP(H, w);
      } else if (k === "timecode") {
        return b9(H, w);
      } else if (k === "preview") {
        w.value += Y;
        return "skipped";
      } else {
        w.value += Y;
        return undefined;
      }
    }
    function aS(H, k) {
      var Y = Math.log2(H);
      return k == "ROUND_DOWN" ? Math.floor(Y) : Math.ceil(Y);
    }
    function as(H, k, Y) {
      var F = 0;
      switch (H.levelMode) {
        case "ONE_LEVEL":
          F = 1;
          break;
        case "MIPMAP_LEVELS":
          F = aS(Math.max(k, Y), H.roundingMode) + 1;
          break;
        case "RIPMAP_LEVELS":
          throw new Error(
            "EXRLoader: RIPMAP_LEVELS tiles currently unsupported."
          );
      }
      return F;
    }
    function b8(H, k, Y, F) {
      var U = new Array(H);
      for (var q = 0; q < H; q++) {
        var g = 1 << q,
          A = (k / g) | 0;
        if (F == "ROUND_UP" && A * g < k) A += 1;
        var N = Math.max(A, 1);
        U[q] = ((N + Y - 1) / Y) | 0;
      }
      return U;
    }
    function b0(M) {
      var w = M.offset,
        H = { value: 0 };
      for (var k = 0; k < M.tileCount; k++) {
        var Y = h(M.viewer, w),
          F = h(M.viewer, w);
        w.value += 8;
        M.size = Z(M.viewer, w);
        var U = Y * M.blockWidth,
          q = F * M.blockHeight;
        M.columns = U + M.blockWidth > M.width ? M.width - U : M.blockWidth;
        M.lines = q + M.blockHeight > M.height ? M.height - q : M.blockHeight;
        var g = M.columns * M.totalBytes,
          A = M.size < M.lines * g,
          N = A ? M.uncompress(M) : ak(M);
        w.value += M.size;
        for (var E = 0; E < M.lines; E++) {
          var m = E * M.columns * M.totalBytes;
          for (var z = 0; z < M.inputChannels.length; z++) {
            var s = $.channels[z].name,
              G = M.channelByteOffsets[s] * M.columns,
              c = M.decodeChannels[s];
            if (c === undefined) continue;
            H.value = m + G;
            var B = (M.height - (1 + q + E)) * M.outLineWidth;
            for (var i = 0; i < M.columns; i++) {
              var S = B + (i + U) * M.outputChannels + c;
              M.byteArray[S] = M.getter(N, H);
            }
          }
        }
      }
    }
    function bd(M) {
      var w = M.offset,
        H = { value: 0 };
      for (var k = 0; k < M.height / M.blockHeight; k++) {
        var Y = h(M.viewer, w) - $.dataWindow.yMin;
        M.size = Z(M.viewer, w);
        M.lines = Y + M.blockHeight > M.height ? M.height - Y : M.blockHeight;
        var F = M.columns * M.totalBytes,
          U = M.size < M.lines * F,
          q = U ? M.uncompress(M) : ak(M);
        w.value += M.size;
        for (var g = 0; g < M.blockHeight; g++) {
          var A = k * M.blockHeight,
            N = g + M.scanOrder(A);
          if (N >= M.height) continue;
          var E = g * F,
            m = (M.height - 1 - N) * M.outLineWidth;
          for (var z = 0; z < M.inputChannels.length; z++) {
            var s = $.channels[z].name,
              G = M.channelByteOffsets[s] * M.columns,
              c = M.decodeChannels[s];
            if (c === undefined) continue;
            H.value = E + G;
            for (var B = 0; B < M.columns; B++) {
              var i = m + B * M.outputChannels + c;
              M.byteArray[i] = M.getter(q, H);
            }
          }
        }
      }
    }
    function bm(H, d, w) {
      var $ = {},
        Y = !0;
      if (H.getUint32(0, !0) != 20000630) {
        throw new Error(
          "EXRLoader: Provided file doesn't appear to be in OpenEXR format."
        );
      }
      $.version = H.getUint8(4);
      var k = H.getUint8(5);
      $.spec = {
        singleTile: !!(k & 2),
        longName: !!(k & 4),
        deepFormat: !!(k & 8),
        multiPart: !!(k & 16),
      };
      w.value = 8;
      while (Y) {
        var F = b2(d, w);
        if (F == 0) {
          Y = !1;
        } else {
          var U = b2(d, w),
            q = Z(H, w),
            g = al(H, d, w, U, q);
          if (g === undefined) {
            console.warn(
              `EXRLoader: Skipped unknown header attribute type \'${U}\'.`
            );
          } else {
            $[F] = g;
          }
        }
      }
      if ((k & ~6) != 0) {
        console.error("EXRHeader:", $);
        throw new Error("EXRLoader: Provided file is currently unsupported.");
      }
      return $;
    }
    function b4($, H, P, w, k) {
      var M = {
          size: 0,
          viewer: H,
          array: P,
          offset: w,
          width: $.dataWindow.xMax - $.dataWindow.xMin + 1,
          height: $.dataWindow.yMax - $.dataWindow.yMin + 1,
          inputChannels: $.channels,
          channelByteOffsets: {},
          scanOrder: null,
          totalBytes: null,
          columns: null,
          lines: null,
          type: null,
          uncompress: null,
          getter: null,
          format: null,
          colorSpace: ae,
        },
        U = !1,
        g = 0;
      switch ($.compression) {
        case "NO_COMPRESSION":
          M.blockHeight = 1;
          M.uncompress = ak;
          break;
        case "RLE_COMPRESSION":
          M.blockHeight = 1;
          M.uncompress = aU;
          break;
        case "ZIPS_COMPRESSION":
          M.blockHeight = 1;
          M.uncompress = b6;
          break;
        case "ZIP_COMPRESSION":
          M.blockHeight = 16;
          M.uncompress = b6;
          break;
        case "PIZ_COMPRESSION":
          M.blockHeight = 32;
          M.uncompress = aR;
          break;
        case "PXR24_COMPRESSION":
          M.blockHeight = 16;
          M.uncompress = aw;
          break;
        case "DWAA_COMPRESSION":
          M.blockHeight = 32;
          M.uncompress = b7;
          break;
        case "DWAB_COMPRESSION":
          M.blockHeight = 256;
          M.uncompress = b7;
          break;
        default:
          throw new Error(
            "EXRLoader.parse: " + $.compression + " is unsupported"
          );
      }
      var Y = {};
      for (var F of $.channels) {
        switch (F.name) {
          case "Y":
          case "R":
          case "G":
          case "B":
          case "A":
            Y[F.name] = !0;
            M.type = F.pixelType;
        }
      }
      if (Y.R && Y.G && Y.B) {
        U = !Y.A;
        M.outputChannels = 4;
        M.decodeChannels = { R: 0, G: 1, B: 2, A: 3 };
      } else if (Y.Y) {
        M.outputChannels = 1;
        M.decodeChannels = { Y: 0 };
      } else {
        throw new Error(
          "EXRLoader.parse: file contains unsupported data channels."
        );
      }
      if (M.type == 1) {
        switch (k) {
          case a_:
            M.getter = bk;
            break;
          case ai:
            M.getter = a$;
            break;
        }
      } else if (M.type == 2) {
        switch (k) {
          case a_:
            M.getter = O;
            break;
          case ai:
            M.getter = aX;
        }
      } else {
        throw new Error(
          "EXRLoader.parse: unsupported pixelType " +
            M.type +
            " for " +
            $.compression +
            "."
        );
      }
      M.columns = M.width;
      var q = M.width * M.height * M.outputChannels;
      switch (k) {
        case a_:
          M.byteArray = new Float32Array(q);
          if (U) M.byteArray.fill(1, 0, q);
          break;
        case ai:
          M.byteArray = new Uint16Array(q);
          if (U) M.byteArray.fill(15360, 0, q);
          break;
        default:
          console.error("EXRLoader: unsupported type: ", k);
          break;
      }
      for (var F of $.channels) {
        if (M.decodeChannels[F.name] !== undefined) {
          M.channelByteOffsets[F.name] = g;
        }
        g += F.pixelType * 2;
      }
      M.totalBytes = g;
      M.outLineWidth = M.width * M.outputChannels;
      if ($.lineOrder === "INCREASING_Y") {
        M.scanOrder = (ac) => ac;
      } else {
        M.scanOrder = (ac) => M.height - 1 - ac;
      }
      if (M.outputChannels == 4) {
        M.format = ab;
        M.colorSpace = ae;
      } else {
        M.format = aK;
        M.colorSpace = ar;
      }
      if ($.spec.singleTile) {
        M.blockHeight = $.tiles.ySize;
        M.blockWidth = $.tiles.xSize;
        var A = as($.tiles, M.width, M.height),
          N = b8(A, M.width, $.tiles.xSize, $.tiles.roundingMode),
          E = b8(A, M.height, $.tiles.ySize, $.tiles.roundingMode);
        M.tileCount = N[0] * E[0];
        for (var m = 0; m < A; m++)
          for (var z = 0; z < E[m]; z++) for (var s = 0; s < N[m]; s++) t(H, w);
        M.decode = b0.bind(M);
      } else {
        M.blockWidth = M.width;
        var G = Math.ceil(M.height / M.blockHeight);
        for (var c = 0; c < G; c++) t(H, w);
        M.decode = bd.bind(M);
      }
      return M;
    }
    var w = { value: 0 },
      a3 = new DataView(d),
      P = new Uint8Array(d),
      $ = bm(a3, d, w),
      M = b4($, a3, P, w, type);
    M.decode(M);
    return {
      header: $,
      width: M.width,
      height: M.height,
      data: M.byteArray,
      format: M.format,
      colorSpace: M.colorSpace,
    };
  }
  EXRLoader.parse = aZ;
})();
